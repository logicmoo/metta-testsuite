{"uid":"35f54461031c4718","name":"IDIOMATIC-NEGATION-AND-SET-DIFFERENCE-HE-805.02","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#IDIOMATIC-NEGATION-AND-SET-DIFFERENCE-HE-805.02","time":{"start":1734823916000,"stop":1734823916014,"duration":14},"status":"failed","statusMessage":"Test failed: Expected '(mike)' but got '()'","statusTrace":"AssertionError: Test failed: Expected '(mike)' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/idiomatic_negation_and_set_difference_he_805.metta.5_failed.html#HYPERON-METTALOG-SANITY.IDIOMATIC-NEGATION-AND-SET-DIFFERENCE-HE-805.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (unify &test-space (friend bob $f) (unify &test-space (carpenter $f) (empty) $f) (empty)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (mike)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"806fd22105a85b78","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/806fd22105a85b78","status":"failed","statusDetails":"Test failed: Expected '(mike)' but got '()'","time":{"start":1734820363000,"stop":1734820363009,"duration":9}},{"uid":"36533c9bb25fd858","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/36533c9bb25fd858","status":"failed","statusDetails":"Test failed: Expected '(mike)' but got '()'","time":{"start":1734730384000,"stop":1734730384009,"duration":9}},{"uid":"1ec453ca892d9e7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/1ec453ca892d9e7","status":"failed","statusDetails":"Test failed: Expected '(mike)' but got '()'","time":{"start":1734671861000,"stop":1734671861009,"duration":9}},{"uid":"20805542fc85499a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/20805542fc85499a","status":"failed","statusDetails":"Test failed: Expected '(mike)' but got '()'","time":{"start":1734592657000,"stop":1734592657014,"duration":14}},{"uid":"916233dbfe148513","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/916233dbfe148513","status":"failed","statusDetails":"Test failed: Expected '(mike)' but got '()'","time":{"start":1734561748000,"stop":1734561748014,"duration":14}}]},"tags":[]},"source":"35f54461031c4718.json","parameterValues":[]}