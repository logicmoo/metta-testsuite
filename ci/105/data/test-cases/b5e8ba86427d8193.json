{"uid":"b5e8ba86427d8193","name":"RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01","time":{"start":1734827140000,"stop":1734827140103,"duration":103},"status":"failed","statusMessage":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","statusTrace":"AssertionError: Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/recursive_tuple_list_benchmark_he_394.metta.1_failed.html#HYPERON-METTALOG-SANITY.RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((extend-py! benchmark))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"8c28a88b6071dbe7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/8c28a88b6071dbe7","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734823916000,"stop":1734823916101,"duration":101}},{"uid":"87789647bb47c293","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/87789647bb47c293","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734820363000,"stop":1734820363105,"duration":105}},{"uid":"f045f8bff00d708b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/f045f8bff00d708b","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734730384000,"stop":1734730384099,"duration":99}},{"uid":"84832dc333f5ec69","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/84832dc333f5ec69","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734671861000,"stop":1734671861103,"duration":103}},{"uid":"3b2ffe2bca3e53c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/3b2ffe2bca3e53c","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734592657000,"stop":1734592657106,"duration":106}},{"uid":"a00107812e467c6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/a00107812e467c6","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734561748000,"stop":1734561748111,"duration":111}}]},"tags":[]},"source":"b5e8ba86427d8193.json","parameterValues":[]}