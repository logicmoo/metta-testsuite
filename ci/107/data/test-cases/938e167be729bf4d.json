{"uid":"938e167be729bf4d","name":"TYPE-FILTERING-TESTS.20","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#TYPE-FILTERING-TESTS.20","time":{"start":1734836453000,"stop":1734836453004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/type_filtering_tests.metta.0_failed.html#HYPERON-METTALOG-SANITY.TYPE-FILTERING-TESTS.20\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (MeTTa-Test \"Filter-Empty\" (Filter-Empty (some-value)) (empty (println! \"did it\") ()) $passes))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (() () () () () () () () () () () () ())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"e468971df2d7a75c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/e468971df2d7a75c","status":"passed","time":{"start":1734827140000,"stop":1734827140006,"duration":6}},{"uid":"7b36b0f5f2813aa5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/7b36b0f5f2813aa5","status":"passed","time":{"start":1734823916000,"stop":1734823916005,"duration":5}},{"uid":"30ded27294e8b3e6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/30ded27294e8b3e6","status":"passed","time":{"start":1734820363000,"stop":1734820363006,"duration":6}},{"uid":"b92673aa5247cb86","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/b92673aa5247cb86","status":"passed","time":{"start":1734730384000,"stop":1734730384004,"duration":4}},{"uid":"e394ac9c86345813","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/e394ac9c86345813","status":"passed","time":{"start":1734671861000,"stop":1734671861004,"duration":4}},{"uid":"58c3bea25a5d561b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/58c3bea25a5d561b","status":"passed","time":{"start":1734592657000,"stop":1734592657006,"duration":6}},{"uid":"84fd01aee3a1ab62","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/84fd01aee3a1ab62","status":"passed","time":{"start":1734561748000,"stop":1734561748006,"duration":6}}]},"tags":[]},"source":"938e167be729bf4d.json","parameterValues":[]}