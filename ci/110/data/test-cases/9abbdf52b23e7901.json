{"uid":"9abbdf52b23e7901","name":"B4-NONDETERM.08","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#B4-NONDETERM.08","time":{"start":1735039087000,"stop":1735039087003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/b4_nondeterm.metta.0_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.B4-NONDETERM.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (find-equal (color) (foo)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (red)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (red)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":10},"items":[{"uid":"eb98c33dd53e0824","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/eb98c33dd53e0824","status":"passed","time":{"start":1734851275000,"stop":1734851275001,"duration":1}},{"uid":"92016c1d1b462593","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/92016c1d1b462593","status":"passed","time":{"start":1734836251000,"stop":1734836251002,"duration":2}},{"uid":"3d0be1515ff32851","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/3d0be1515ff32851","status":"passed","time":{"start":1734826918000,"stop":1734826918001,"duration":1}},{"uid":"b4696b6bfaf1004","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/b4696b6bfaf1004","status":"passed","time":{"start":1734823728000,"stop":1734823728002,"duration":2}},{"uid":"23a531200e07a9a6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/23a531200e07a9a6","status":"failed","statusDetails":"Test failed: Expected '(red)' but got '((find-equal green red) (find-equal green boo) (find-equal yellow red) (find-equal yellow boo) red (find-equal red boo))'","time":{"start":1734820143000,"stop":1734820143196,"duration":196}},{"uid":"c22e5239a57b143","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/c22e5239a57b143","status":"failed","statusDetails":"Test failed: Expected '(red)' but got '((find-equal green red) (find-equal green boo) (find-equal yellow red) (find-equal yellow boo) red (find-equal red boo))'","time":{"start":1734730159000,"stop":1734730159180,"duration":180}},{"uid":"78ef82ec704f3e28","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/78ef82ec704f3e28","status":"failed","statusDetails":"Test failed: Expected '(red)' but got '((find-equal green red) (find-equal green boo) (find-equal yellow red) (find-equal yellow boo) red (find-equal red boo))'","time":{"start":1734671636000,"stop":1734671636188,"duration":188}},{"uid":"857577ea4720591c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/857577ea4720591c","status":"failed","statusDetails":"Test failed: Expected '(red)' but got '((find-equal green red) (find-equal green boo) (find-equal yellow red) (find-equal yellow boo) red (find-equal red boo))'","time":{"start":1734592433000,"stop":1734592433168,"duration":168}},{"uid":"fc66986df7eee1be","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/fc66986df7eee1be","status":"passed","time":{"start":1734561558000,"stop":1734561558001,"duration":1}}]},"tags":[]},"source":"9abbdf52b23e7901.json","parameterValues":[]}