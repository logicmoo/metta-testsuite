{"uid":"d2f2441df9429875","name":"MATH-HYPHEN-FUNCTIONS.15","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MATH-HYPHEN-FUNCTIONS.15","time":{"start":1735039352000,"stop":1735039352103,"duration":103},"status":"failed","statusMessage":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","statusTrace":"AssertionError: Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/math_hyphen_functions.metta.48_failed.html#HYPERON-METTALOG-SANITY.MATH-HYPHEN-FUNCTIONS.15\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (trunc-math A))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Error (trunc-math A) \"trunc-math expects one argument: input number\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((trunc-math A))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":10},"items":[{"uid":"e97edb3cc34c906f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/e97edb3cc34c906f","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734851467000,"stop":1734851467086,"duration":86}},{"uid":"2cc59a2402ea0e85","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/2cc59a2402ea0e85","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734836453000,"stop":1734836453087,"duration":87}},{"uid":"c4383bd8b56efadb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/c4383bd8b56efadb","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734827140000,"stop":1734827140080,"duration":80}},{"uid":"853d3e2e0dae5b94","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/853d3e2e0dae5b94","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734823916000,"stop":1734823916083,"duration":83}},{"uid":"a48a501a56f278da","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/a48a501a56f278da","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734820363000,"stop":1734820363086,"duration":86}},{"uid":"866fabd4468d178e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/866fabd4468d178e","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734730384000,"stop":1734730384088,"duration":88}},{"uid":"b36de7b98ffad76b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/b36de7b98ffad76b","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734671861000,"stop":1734671861095,"duration":95}},{"uid":"b8f112827fab52cb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/b8f112827fab52cb","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734592657000,"stop":1734592657077,"duration":77}},{"uid":"73418e0c0b13be78","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/73418e0c0b13be78","status":"failed","statusDetails":"Test failed: Expected '((Error (trunc-math A) \"trunc-math expects one argument: input number\"))' but got '((trunc-math A))'","time":{"start":1734561748000,"stop":1734561748103,"duration":103}}]},"tags":[]},"source":"d2f2441df9429875.json","parameterValues":[]}