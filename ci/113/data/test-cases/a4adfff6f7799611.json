{"uid":"a4adfff6f7799611","name":"OLD-VOID-OR-EMPTY.05","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#OLD-VOID-OR-EMPTY.05","time":{"start":1735237903000,"stop":1735237903002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/old_void_or_empty.metta.3_failed.html#HYPERON-METTALOG-SANITY.OLD-VOID-OR-EMPTY.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (case (match &self (foo-found $bar) (quote $bar)) (((quote $bar) (println! (quote (found $bar)))) ( \"Found Empty\"))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (() ())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (() ())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":12},"items":[{"uid":"510ff1e3183c6a1a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/510ff1e3183c6a1a","status":"passed","time":{"start":1735209066000,"stop":1735209066002,"duration":2}},{"uid":"7a13b400b13aa56","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/7a13b400b13aa56","status":"passed","time":{"start":1735039352000,"stop":1735039352004,"duration":4}},{"uid":"a81d98fecc132af4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/a81d98fecc132af4","status":"passed","time":{"start":1734851467000,"stop":1734851467003,"duration":3}},{"uid":"9491b417d87f79f2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/9491b417d87f79f2","status":"passed","time":{"start":1734836453000,"stop":1734836453002,"duration":2}},{"uid":"6b3f9318c79e2080","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/6b3f9318c79e2080","status":"passed","time":{"start":1734827140000,"stop":1734827140002,"duration":2}},{"uid":"793563daf238f212","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/793563daf238f212","status":"passed","time":{"start":1734823916000,"stop":1734823916002,"duration":2}},{"uid":"fbebb0a7ce018a22","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/fbebb0a7ce018a22","status":"passed","time":{"start":1734820363000,"stop":1734820363001,"duration":1}},{"uid":"e56e1d67f03d0ec7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/e56e1d67f03d0ec7","status":"passed","time":{"start":1734730384000,"stop":1734730384002,"duration":2}},{"uid":"5c60d712591d3e50","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/5c60d712591d3e50","status":"passed","time":{"start":1734671861000,"stop":1734671861002,"duration":2}},{"uid":"6585f4ecbdebde87","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/6585f4ecbdebde87","status":"passed","time":{"start":1734592657000,"stop":1734592657001,"duration":1}},{"uid":"71dc4e0c9e1ce844","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/71dc4e0c9e1ce844","status":"passed","time":{"start":1734561748000,"stop":1734561748002,"duration":2}}]},"tags":[]},"source":"a4adfff6f7799611.json","parameterValues":[]}