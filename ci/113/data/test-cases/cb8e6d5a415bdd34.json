{"uid":"cb8e6d5a415bdd34","name":"INDEX-MIN-FUNCTIONS-EXTRA-2.06","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#INDEX-MIN-FUNCTIONS-EXTRA-2.06","time":{"start":1735237903000,"stop":1735237903041,"duration":41},"status":"failed","statusMessage":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","statusTrace":"AssertionError: Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/index_min_functions_extra_2.metta.28_failed.html#HYPERON-METTALOG-SANITY.INDEX-MIN-FUNCTIONS-EXTRA-2.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (metta (id_a myAtom) %Undefined% &self))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Error myAtom \"BadType\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (myAtom)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":12},"items":[{"uid":"2f01c88c35225b1e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/2f01c88c35225b1e","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1735209066000,"stop":1735209066036,"duration":36}},{"uid":"f1dc177e6e26dcc3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/f1dc177e6e26dcc3","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1735039352000,"stop":1735039352046,"duration":46}},{"uid":"9dadbd88454cfa35","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/9dadbd88454cfa35","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734851467000,"stop":1734851467041,"duration":41}},{"uid":"d956e90a189035b2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/d956e90a189035b2","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734836453000,"stop":1734836453046,"duration":46}},{"uid":"79d247676b305f0c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/79d247676b305f0c","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734827140000,"stop":1734827140035,"duration":35}},{"uid":"cc93019298550dcd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/cc93019298550dcd","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734823916000,"stop":1734823916036,"duration":36}},{"uid":"d84183fa70e63bd8","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/d84183fa70e63bd8","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734820363000,"stop":1734820363037,"duration":37}},{"uid":"922809f77c30af5a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/922809f77c30af5a","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734730384000,"stop":1734730384038,"duration":38}},{"uid":"30d017dc68617de0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/30d017dc68617de0","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734671861000,"stop":1734671861042,"duration":42}},{"uid":"b485e94574dd9627","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/b485e94574dd9627","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734592657000,"stop":1734592657024,"duration":24}},{"uid":"353a4683f79c9f37","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/353a4683f79c9f37","status":"failed","statusDetails":"Test failed: Expected '((Error myAtom \"BadType\"))' but got '(myAtom)'","time":{"start":1734561748000,"stop":1734561748036,"duration":36}}]},"tags":[]},"source":"cb8e6d5a415bdd34.json","parameterValues":[]}