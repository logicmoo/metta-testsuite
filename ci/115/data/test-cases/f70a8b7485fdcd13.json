{"uid":"f70a8b7485fdcd13","name":"INTERSECTION-TESTS.29","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#INTERSECTION-TESTS.29","time":{"start":1735340888000,"stop":1735340888015,"duration":15},"status":"failed","statusMessage":"Test failed: Expected '($x (f $x))' but got '()'","statusTrace":"AssertionError: Test failed: Expected '($x (f $x))' but got '()'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/intersection_tests.metta.5_failed.html#HYPERON-METTALOG-SANITY.INTERSECTION-TESTS.29\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (intersection (superpose ($x (f $x))) (superpose ($a (f $a)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ($x (f $x))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"ab334149229b2c4b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/ab334149229b2c4b","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1735237903000,"stop":1735237903011,"duration":11}},{"uid":"7afc996d6f4e7a56","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/7afc996d6f4e7a56","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1735209066000,"stop":1735209066016,"duration":16}},{"uid":"b8ec874b69712b87","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/b8ec874b69712b87","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1735039352000,"stop":1735039352014,"duration":14}},{"uid":"8fc496e819611dea","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/8fc496e819611dea","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1734851467000,"stop":1734851467010,"duration":10}},{"uid":"8eeba6890ab441b6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/8eeba6890ab441b6","status":"failed","statusDetails":"Test failed: Expected '($_788550 (f $_788538))' but got '((f $_784406))'","time":{"start":1734836453000,"stop":1734836453074,"duration":74}},{"uid":"fe8e059582ef6662","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/fe8e059582ef6662","status":"failed","statusDetails":"Test failed: Expected '($10000 (f $10001))' but got '((f $10000))'","time":{"start":1734827140000,"stop":1734827140071,"duration":71}},{"uid":"afda96b9d6cb6d06","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/afda96b9d6cb6d06","status":"failed","statusDetails":"Test failed: Expected '($10000 (f $10001))' but got '((f $10000))'","time":{"start":1734823916000,"stop":1734823916071,"duration":71}},{"uid":"de61ffc1331e64c5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/de61ffc1331e64c5","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1734820363000,"stop":1734820363013,"duration":13}},{"uid":"d1944ca64fe014e6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/d1944ca64fe014e6","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1734730384000,"stop":1734730384015,"duration":15}},{"uid":"e38f042cefe7c102","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/e38f042cefe7c102","status":"failed","statusDetails":"Test failed: Expected '($x (f $x))' but got '()'","time":{"start":1734671861000,"stop":1734671861013,"duration":13}},{"uid":"3a15b0d6aaf40bc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/3a15b0d6aaf40bc","status":"failed","statusDetails":"Test failed: Expected '($10000 (f $10001))' but got '((f $10000))'","time":{"start":1734592657000,"stop":1734592657072,"duration":72}},{"uid":"54f6c12480dbe1ca","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/54f6c12480dbe1ca","status":"failed","statusDetails":"Test failed: Expected '($10000 (f $10001))' but got '((f $10000))'","time":{"start":1734561748000,"stop":1734561748084,"duration":84}}]},"tags":[]},"source":"f70a8b7485fdcd13.json","parameterValues":[]}