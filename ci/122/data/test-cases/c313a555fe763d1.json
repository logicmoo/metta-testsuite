{"uid":"c313a555fe763d1","name":"D4-TYPE-PROP.06","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D4-TYPE-PROP.06","time":{"start":1735375159000,"stop":1735375159002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.4_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D4-TYPE-PROP.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-type (= (Mortal Socrates)  \\n  (Mortal Plato))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Type)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Type)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":15},"items":[{"uid":"cbb009de28bb132b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/cbb009de28bb132b","status":"passed","time":{"start":1735343296000,"stop":1735343296002,"duration":2}},{"uid":"8bca5bdb6743dc5f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/8bca5bdb6743dc5f","status":"passed","time":{"start":1735340693000,"stop":1735340693003,"duration":3}},{"uid":"5f1950d398645036","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/5f1950d398645036","status":"passed","time":{"start":1735237640000,"stop":1735237640003,"duration":3}},{"uid":"689506211aa0a625","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/689506211aa0a625","status":"passed","time":{"start":1735208802000,"stop":1735208802002,"duration":2}},{"uid":"54305d43413462a6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/54305d43413462a6","status":"passed","time":{"start":1735039087000,"stop":1735039087002,"duration":2}},{"uid":"532ad10fae0797f9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/532ad10fae0797f9","status":"passed","time":{"start":1734851275000,"stop":1734851275002,"duration":2}},{"uid":"f8f63cb6e5c95294","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/f8f63cb6e5c95294","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734836251000,"stop":1734836251060,"duration":60}},{"uid":"6bc0a27009615dfe","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/6bc0a27009615dfe","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734826918000,"stop":1734826918063,"duration":63}},{"uid":"761d6926fa64d523","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/761d6926fa64d523","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734823728000,"stop":1734823728057,"duration":57}},{"uid":"8f777b1a197d31c9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/8f777b1a197d31c9","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734820143000,"stop":1734820143057,"duration":57}},{"uid":"ce0a39d212abc8ee","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/ce0a39d212abc8ee","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734730159000,"stop":1734730159059,"duration":59}},{"uid":"665abd0185c64ca5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/665abd0185c64ca5","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734671636000,"stop":1734671636058,"duration":58}},{"uid":"d0f5b034dac145ce","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/d0f5b034dac145ce","status":"failed","statusDetails":"Test failed: Expected '(Type)' but got '(Type Atom)'","time":{"start":1734592433000,"stop":1734592433066,"duration":66}},{"uid":"9eab43da6057aa2b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/9eab43da6057aa2b","status":"passed","time":{"start":1734561558000,"stop":1734561558002,"duration":2}}]},"tags":[]},"source":"c313a555fe763d1.json","parameterValues":[]}