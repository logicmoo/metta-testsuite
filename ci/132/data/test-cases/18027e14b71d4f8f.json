{"uid":"18027e14b71d4f8f","name":"00-LANG-CASE.18","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#00-LANG-CASE.18","time":{"start":1735591894000,"stop":1735591894002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta.0_failed.html#HYPERON-METTALOG-SANITY.00-LANG-CASE.18\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (case (match &self ($rel B $x) ($rel $x)) (((Rel-P $y) (P $y)) ((Rel-Q $y) (Q $y)) (%void% no-match))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (no-match)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (no-match)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":17},"items":[{"uid":"d73dcb1c88f02c96","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/d73dcb1c88f02c96","status":"passed","time":{"start":1735516541000,"stop":1735516541002,"duration":2}},{"uid":"82e93c042d87843f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/82e93c042d87843f","status":"passed","time":{"start":1735375357000,"stop":1735375357002,"duration":2}},{"uid":"4dd0eeb959ca7c86","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/4dd0eeb959ca7c86","status":"passed","time":{"start":1735343498000,"stop":1735343498003,"duration":3}},{"uid":"990a3f0ce86e55a0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/990a3f0ce86e55a0","status":"passed","time":{"start":1735340888000,"stop":1735340888002,"duration":2}},{"uid":"a72cc902a7bc8249","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/a72cc902a7bc8249","status":"passed","time":{"start":1735237903000,"stop":1735237903004,"duration":4}},{"uid":"fc94bee273c46142","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/fc94bee273c46142","status":"passed","time":{"start":1735209066000,"stop":1735209066002,"duration":2}},{"uid":"f7577e07d53f0aa9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/f7577e07d53f0aa9","status":"passed","time":{"start":1735039352000,"stop":1735039352003,"duration":3}},{"uid":"6415a5b55dc87c52","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/6415a5b55dc87c52","status":"failed","statusDetails":"Test failed: Expected '(no-match)' but got '()'","time":{"start":1734851467000,"stop":1734851467011,"duration":11}},{"uid":"941ebd1e986f632b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/941ebd1e986f632b","status":"passed","time":{"start":1734836453000,"stop":1734836453002,"duration":2}},{"uid":"a77047e3e216ef48","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/a77047e3e216ef48","status":"passed","time":{"start":1734827140000,"stop":1734827140002,"duration":2}},{"uid":"aaf437f7f28f7a36","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/aaf437f7f28f7a36","status":"passed","time":{"start":1734823916000,"stop":1734823916001,"duration":1}},{"uid":"3a437760916249d3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/3a437760916249d3","status":"passed","time":{"start":1734820363000,"stop":1734820363003,"duration":3}},{"uid":"aaca0a0dd4516f0f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/aaca0a0dd4516f0f","status":"passed","time":{"start":1734730384000,"stop":1734730384002,"duration":2}},{"uid":"f11e4fe8f85cbbaf","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/f11e4fe8f85cbbaf","status":"passed","time":{"start":1734671861000,"stop":1734671861001,"duration":1}},{"uid":"6729da0936abfa32","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/6729da0936abfa32","status":"passed","time":{"start":1734592657000,"stop":1734592657002,"duration":2}},{"uid":"f281f15499b80fcb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/f281f15499b80fcb","status":"passed","time":{"start":1734561748000,"stop":1734561748002,"duration":2}}]},"tags":[]},"source":"18027e14b71d4f8f.json","parameterValues":[]}