{"uid":"29a13ec637a13e37","name":"D5-AUTO-TYPES.03","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D5-AUTO-TYPES.03","time":{"start":1735591697000,"stop":1735591697025,"duration":25},"status":"failed","statusMessage":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","statusTrace":"AssertionError: Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d5_auto_types.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D5-AUTO-TYPES.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (== SocratesIsHuman SamIsMortal))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Error SamIsMortal BadType))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":17},"items":[{"uid":"5db0df825107e6ab","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/5db0df825107e6ab","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735516341000,"stop":1735516341043,"duration":43}},{"uid":"2862597cec6137d0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/2862597cec6137d0","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735375159000,"stop":1735375159034,"duration":34}},{"uid":"f31a8e66c8f5db93","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/f31a8e66c8f5db93","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735343296000,"stop":1735343296039,"duration":39}},{"uid":"b287b293a05a1685","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/b287b293a05a1685","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735340693000,"stop":1735340693035,"duration":35}},{"uid":"b363462f24826fc4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/b363462f24826fc4","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735237640000,"stop":1735237640027,"duration":27}},{"uid":"7843338978a7f4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/7843338978a7f4","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735208802000,"stop":1735208802029,"duration":29}},{"uid":"5d6340e4ade418c0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/5d6340e4ade418c0","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1735039087000,"stop":1735039087039,"duration":39}},{"uid":"2121e85cb8fd59de","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/2121e85cb8fd59de","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734851275000,"stop":1734851275026,"duration":26}},{"uid":"2f7315f876e2adf2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/2f7315f876e2adf2","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734836251000,"stop":1734836251025,"duration":25}},{"uid":"93c00237880c0225","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/93c00237880c0225","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734826918000,"stop":1734826918036,"duration":36}},{"uid":"669360e5e394d625","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/669360e5e394d625","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '()'","time":{"start":1734823728000,"stop":1734823728018,"duration":18}},{"uid":"d0740eb6658b14d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/d0740eb6658b14d","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734820143000,"stop":1734820143034,"duration":34}},{"uid":"bc2f79f48b9ac3b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/bc2f79f48b9ac3b","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734730159000,"stop":1734730159040,"duration":40}},{"uid":"5afc6f41f7b34b33","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/5afc6f41f7b34b33","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734671636000,"stop":1734671636036,"duration":36}},{"uid":"cfab02d05ead936","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/cfab02d05ead936","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1734592433000,"stop":1734592433024,"duration":24}},{"uid":"76ced1a711605693","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/76ced1a711605693","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '()'","time":{"start":1734561558000,"stop":1734561558015,"duration":15}}]},"tags":[]},"source":"29a13ec637a13e37.json","parameterValues":[]}