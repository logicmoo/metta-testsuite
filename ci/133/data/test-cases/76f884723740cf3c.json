{"uid":"76f884723740cf3c","name":"METHOD-SELECTION-TESTS.09","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#METHOD-SELECTION-TESTS.09","time":{"start":1735597484000,"stop":1735597484129,"duration":129},"status":"failed","statusMessage":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","statusTrace":"AssertionError: Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/method_selection_tests.metta.16_failed.html#HYPERON-METTALOG-SANITY.METHOD-SELECTION-TESTS.09\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (lessThan (S Z) (S (S (S Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (True)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"c5596ec76912b4c3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/c5596ec76912b4c3","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735591894000,"stop":1735591894143,"duration":143}},{"uid":"3ea1aa794fdbb3c8","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/3ea1aa794fdbb3c8","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735516541000,"stop":1735516541130,"duration":130}},{"uid":"702783e322b74b2d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/702783e322b74b2d","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735375357000,"stop":1735375357121,"duration":121}},{"uid":"82f7e72d7ce69b8f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/82f7e72d7ce69b8f","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735343498000,"stop":1735343498113,"duration":113}},{"uid":"42b9f7942c659e32","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/42b9f7942c659e32","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735340888000,"stop":1735340888128,"duration":128}},{"uid":"f848b2143c01b305","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/f848b2143c01b305","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735237903000,"stop":1735237903129,"duration":129}},{"uid":"d63f97ff26306626","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/d63f97ff26306626","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735209066000,"stop":1735209066125,"duration":125}},{"uid":"3ea4ef4ad259e633","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/3ea4ef4ad259e633","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1735039352000,"stop":1735039352138,"duration":138}},{"uid":"c1b2ef88f319f298","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/c1b2ef88f319f298","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734851467000,"stop":1734851467116,"duration":116}},{"uid":"ad9890ab6984f68d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/ad9890ab6984f68d","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734836453000,"stop":1734836453108,"duration":108}},{"uid":"9cf874731b77cff2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/9cf874731b77cff2","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734827140000,"stop":1734827140125,"duration":125}},{"uid":"bdbed3b1acc1668","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/bdbed3b1acc1668","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734823916000,"stop":1734823916122,"duration":122}},{"uid":"c88b21d90e1caa1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/c88b21d90e1caa1","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734820363000,"stop":1734820363112,"duration":112}},{"uid":"af04f89d1f3982d2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/af04f89d1f3982d2","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734730384000,"stop":1734730384125,"duration":125}},{"uid":"b6d5e833f6e97eaa","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/b6d5e833f6e97eaa","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734671861000,"stop":1734671861142,"duration":142}},{"uid":"ecae5f8823798f4c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/ecae5f8823798f4c","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734592657000,"stop":1734592657126,"duration":126}},{"uid":"1e826561831a9858","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/1e826561831a9858","status":"failed","statusDetails":"Test failed: Expected '(True)' but got '(True (< Z (S (S Z))) (< (S Z) (S (S (S Z)))))'","time":{"start":1734561748000,"stop":1734561748134,"duration":134}}]},"tags":[]},"source":"76f884723740cf3c.json","parameterValues":[]}