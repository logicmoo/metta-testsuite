{"uid":"37ae3a84355bb176","name":"MINIMAL-METTA-TESTS.13","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.13","time":{"start":1735765232000,"stop":1735765232021,"duration":21},"status":"failed","statusMessage":"Test failed: Expected '(1 ())' but got '(())'","statusTrace":"AssertionError: Test failed: Expected '(1 ())' but got '(())'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.20_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (eval (chain-to-empty-expression)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (1 ())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":21},"items":[{"uid":"e29ce3fdc077f55d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/e29ce3fdc077f55d","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735657826000,"stop":1735657826011,"duration":11}},{"uid":"e35865d9d61e30bc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/e35865d9d61e30bc","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735656711000,"stop":1735656711021,"duration":21}},{"uid":"ab4ba9696ba02b60","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/ab4ba9696ba02b60","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735597484000,"stop":1735597484016,"duration":16}},{"uid":"2b4893c96dccd8c4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/2b4893c96dccd8c4","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735591894000,"stop":1735591894011,"duration":11}},{"uid":"a986376970a76685","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/a986376970a76685","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735516541000,"stop":1735516541011,"duration":11}},{"uid":"5c1973ff460d099d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/5c1973ff460d099d","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735375357000,"stop":1735375357011,"duration":11}},{"uid":"786ba4008a0fe042","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/786ba4008a0fe042","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735343498000,"stop":1735343498018,"duration":18}},{"uid":"b40a5d69d907d7cb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/b40a5d69d907d7cb","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735340888000,"stop":1735340888016,"duration":16}},{"uid":"1593930a9d525cc4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/1593930a9d525cc4","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735237903000,"stop":1735237903018,"duration":18}},{"uid":"44f8910b15a45e9f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/44f8910b15a45e9f","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735209066000,"stop":1735209066014,"duration":14}},{"uid":"e326d05edefcd097","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/e326d05edefcd097","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1735039352000,"stop":1735039352018,"duration":18}},{"uid":"1b8efe03d42bf9af","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/1b8efe03d42bf9af","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734851467000,"stop":1734851467017,"duration":17}},{"uid":"c39efea6df3ae810","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/c39efea6df3ae810","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734836453000,"stop":1734836453018,"duration":18}},{"uid":"30b216b5c1fc29e6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/30b216b5c1fc29e6","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734827140000,"stop":1734827140015,"duration":15}},{"uid":"62daf018e1e04385","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/62daf018e1e04385","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734823916000,"stop":1734823916017,"duration":17}},{"uid":"48e9b7f5c0379d50","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/48e9b7f5c0379d50","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734820363000,"stop":1734820363017,"duration":17}},{"uid":"b822c14c6d6eb35f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/b822c14c6d6eb35f","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734730384000,"stop":1734730384016,"duration":16}},{"uid":"d0865e26e24959de","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/d0865e26e24959de","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734671861000,"stop":1734671861016,"duration":16}},{"uid":"e8c5bea5f25bf225","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/e8c5bea5f25bf225","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734592657000,"stop":1734592657017,"duration":17}},{"uid":"5830f19f7a6a5075","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/5830f19f7a6a5075","status":"failed","statusDetails":"Test failed: Expected '(1 ())' but got '(())'","time":{"start":1734561748000,"stop":1734561748016,"duration":16}}]},"tags":[]},"source":"37ae3a84355bb176.json","parameterValues":[]}