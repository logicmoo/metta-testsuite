{"uid":"62249ecc73697a3d","name":"TESTS0.02","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#TESTS0.02","time":{"start":1735766310000,"stop":1735766310004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/tests0.metta.0_failed.html#METTA-MORPH-TESTS.TESTS0.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (I- ((Garfield --> carnivore) (1.0 0.9)) (((Garfield --> cat) ==> (Garfield --> carnivore)) (1.0 0.9))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((Garfield --> cat) (1.0 0.44751381215469616)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"5696525b4100f708","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/5696525b4100f708","status":"passed","time":{"start":1735658890000,"stop":1735658890003,"duration":3}},{"uid":"4e968e672bc519fb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/4e968e672bc519fb","status":"passed","time":{"start":1735657784000,"stop":1735657784003,"duration":3}},{"uid":"2e234a22d6657f47","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/2e234a22d6657f47","status":"passed","time":{"start":1734837485000,"stop":1734837485002,"duration":2}},{"uid":"c15b390a0a75db1c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/c15b390a0a75db1c","status":"passed","time":{"start":1734829795000,"stop":1734829795002,"duration":2}},{"uid":"8cf5e404a5f93c20","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/8cf5e404a5f93c20","status":"passed","time":{"start":1734826539000,"stop":1734826539002,"duration":2}},{"uid":"9eab8924faaa4979","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/9eab8924faaa4979","status":"passed","time":{"start":1734593685000,"stop":1734593685002,"duration":2}},{"uid":"2fc9f6df96f0e317","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/89//#testresult/2fc9f6df96f0e317","status":"passed","time":{"start":1734564346000,"stop":1734564346002,"duration":2}}]},"tags":[]},"source":"62249ecc73697a3d.json","parameterValues":[]}