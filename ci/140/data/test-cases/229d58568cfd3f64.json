{"uid":"229d58568cfd3f64","name":"FIND-ALL-TESTS.03","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#FIND-ALL-TESTS.03","time":{"start":1735811106000,"stop":1735811106156,"duration":156},"status":"failed","statusMessage":"Test failed: Expected '((False True False True))' but got '(((== 1 0) (== 0 0) (== 1 0) (== 0 0)))'","statusTrace":"AssertionError: Test failed: Expected '((False True False True))' but got '(((== 1 0) (== 0 0) (== 1 0) (== 0 0)))'","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/find_all_tests_mw.metta.1_failed.html#HYPERON-METTALOG-SANITY.FIND-ALL-TESTS.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (findall! (is-even $X) (match &self (my-numbers $X) $X)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((False True False True))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((== 1 0) (== 0 0) (== 1 0) (== 0 0)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":22},"items":[{"uid":"6400e45a6886b509","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/6400e45a6886b509","status":"passed","time":{"start":1735765232000,"stop":1735765232002,"duration":2}},{"uid":"a5c0d47a93c3c36b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/a5c0d47a93c3c36b","status":"passed","time":{"start":1735657826000,"stop":1735657826002,"duration":2}},{"uid":"a467570c0e94da4e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/a467570c0e94da4e","status":"passed","time":{"start":1735656711000,"stop":1735656711002,"duration":2}},{"uid":"8adfad292d09c63b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/8adfad292d09c63b","status":"passed","time":{"start":1735597484000,"stop":1735597484002,"duration":2}},{"uid":"e3bf25d8e24f4b93","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/e3bf25d8e24f4b93","status":"passed","time":{"start":1735591894000,"stop":1735591894003,"duration":3}},{"uid":"54c87b70be9b398a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/54c87b70be9b398a","status":"passed","time":{"start":1735516541000,"stop":1735516541002,"duration":2}},{"uid":"6b6b873e08ec748a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/6b6b873e08ec748a","status":"passed","time":{"start":1735375357000,"stop":1735375357002,"duration":2}},{"uid":"ed7cbfc0a3b77ae5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/ed7cbfc0a3b77ae5","status":"passed","time":{"start":1735343498000,"stop":1735343498002,"duration":2}},{"uid":"65df2983d27b06d8","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/65df2983d27b06d8","status":"passed","time":{"start":1735340888000,"stop":1735340888003,"duration":3}},{"uid":"82499a91075efae0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/82499a91075efae0","status":"passed","time":{"start":1735237903000,"stop":1735237903002,"duration":2}},{"uid":"f03e53b4f704c61b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/f03e53b4f704c61b","status":"passed","time":{"start":1735209066000,"stop":1735209066002,"duration":2}},{"uid":"74e375f0326a9d4c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/74e375f0326a9d4c","status":"passed","time":{"start":1735039352000,"stop":1735039352002,"duration":2}},{"uid":"fe5fc11516d7eaa","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/fe5fc11516d7eaa","status":"passed","time":{"start":1734851467000,"stop":1734851467002,"duration":2}},{"uid":"22d137747cbab438","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/22d137747cbab438","status":"passed","time":{"start":1734836453000,"stop":1734836453002,"duration":2}},{"uid":"41d6dd8f8ef5ec58","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/41d6dd8f8ef5ec58","status":"passed","time":{"start":1734827140000,"stop":1734827140001,"duration":1}},{"uid":"9bae180dfa7a2fee","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/9bae180dfa7a2fee","status":"failed","statusDetails":"Test failed: Expected '((False True False True))' but got '()'","time":{"start":1734823916000,"stop":1734823916013,"duration":13}},{"uid":"7ada0dc31649c7ad","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/7ada0dc31649c7ad","status":"passed","time":{"start":1734820363000,"stop":1734820363001,"duration":1}},{"uid":"6fcbe8c732b41db2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/6fcbe8c732b41db2","status":"passed","time":{"start":1734730384000,"stop":1734730384002,"duration":2}},{"uid":"ce46f7f8db730469","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/ce46f7f8db730469","status":"passed","time":{"start":1734671861000,"stop":1734671861002,"duration":2}},{"uid":"7dea05519c8b3cfc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/7dea05519c8b3cfc","status":"passed","time":{"start":1734592657000,"stop":1734592657002,"duration":2}}]},"tags":[]},"source":"229d58568cfd3f64.json","parameterValues":[]}