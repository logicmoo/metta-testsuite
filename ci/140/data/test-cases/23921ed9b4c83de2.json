{"uid":"23921ed9b4c83de2","name":"FUNCTIONAL-PROGRAMMING-TESTS.01","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#FUNCTIONAL-PROGRAMMING-TESTS.01","time":{"start":1735811106000,"stop":1735811106139,"duration":139},"status":"failed","statusMessage":"Test failed: Expected '((False True False))' but got '(((== 1 0) (== 0 0) (== 1 0)))'","statusTrace":"AssertionError: Test failed: Expected '((False True False))' but got '(((== 1 0) (== 0 0) (== 1 0)))'","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/functional_programming_tests.metta.3_failed.html#HYPERON-METTALOG-SANITY.FUNCTIONAL-PROGRAMMING-TESTS.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (maplist! is-even (1 2 3)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((False True False))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((== 1 0) (== 0 0) (== 1 0)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":22},"items":[{"uid":"8a4748ddcbd3819f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/8a4748ddcbd3819f","status":"passed","time":{"start":1735765232000,"stop":1735765232003,"duration":3}},{"uid":"c5b60e7a0708ec91","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/c5b60e7a0708ec91","status":"passed","time":{"start":1735657826000,"stop":1735657826003,"duration":3}},{"uid":"94198cd1ff68a9d9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/94198cd1ff68a9d9","status":"passed","time":{"start":1735656711000,"stop":1735656711006,"duration":6}},{"uid":"65bb3214ec5f8f99","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/65bb3214ec5f8f99","status":"passed","time":{"start":1735597484000,"stop":1735597484005,"duration":5}},{"uid":"51aa51cc044093b1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/51aa51cc044093b1","status":"passed","time":{"start":1735591894000,"stop":1735591894004,"duration":4}},{"uid":"7ddf5e29391b902e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/7ddf5e29391b902e","status":"passed","time":{"start":1735516541000,"stop":1735516541003,"duration":3}},{"uid":"362f2ed248fcb36e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/362f2ed248fcb36e","status":"passed","time":{"start":1735375357000,"stop":1735375357003,"duration":3}},{"uid":"9501afff1145d612","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/9501afff1145d612","status":"passed","time":{"start":1735343498000,"stop":1735343498003,"duration":3}},{"uid":"9f8bfecbc4bbf409","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/9f8bfecbc4bbf409","status":"passed","time":{"start":1735340888000,"stop":1735340888005,"duration":5}},{"uid":"7a0ade5e65a5a886","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/7a0ade5e65a5a886","status":"passed","time":{"start":1735237903000,"stop":1735237903004,"duration":4}},{"uid":"9f82eb8bac795ed9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/9f82eb8bac795ed9","status":"passed","time":{"start":1735209066000,"stop":1735209066005,"duration":5}},{"uid":"6c889126cb328fe4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/6c889126cb328fe4","status":"passed","time":{"start":1735039352000,"stop":1735039352005,"duration":5}},{"uid":"c038bda7b22da8a8","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/c038bda7b22da8a8","status":"passed","time":{"start":1734851467000,"stop":1734851467003,"duration":3}},{"uid":"a12232616fe7ee8a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/a12232616fe7ee8a","status":"passed","time":{"start":1734836453000,"stop":1734836453003,"duration":3}},{"uid":"edfe71aca7774c0d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/edfe71aca7774c0d","status":"passed","time":{"start":1734827140000,"stop":1734827140003,"duration":3}},{"uid":"141371d205ba217d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/104//#testresult/141371d205ba217d","status":"failed","statusDetails":"Test failed: Expected '((False True False))' but got '()'","time":{"start":1734823916000,"stop":1734823916021,"duration":21}},{"uid":"bd2b347efef8323e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/101//#testresult/bd2b347efef8323e","status":"passed","time":{"start":1734820363000,"stop":1734820363004,"duration":4}},{"uid":"4ebfa5f8195e23f3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/96//#testresult/4ebfa5f8195e23f3","status":"passed","time":{"start":1734730384000,"stop":1734730384004,"duration":4}},{"uid":"7eec1bd2abcaf2c3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/93//#testresult/7eec1bd2abcaf2c3","status":"passed","time":{"start":1734671861000,"stop":1734671861004,"duration":4}},{"uid":"e83ab471ccefa404","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/90//#testresult/e83ab471ccefa404","status":"passed","time":{"start":1734592657000,"stop":1734592657004,"duration":4}}]},"tags":[]},"source":"23921ed9b4c83de2.json","parameterValues":[]}