{"uid":"d9d21d72ccc9ab0c","name":"AUTO-COERCE.36","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#AUTO-COERCE.36","time":{"start":1737700880000,"stop":1737700880042,"duration":42},"status":"failed","statusMessage":"Test failed: Expected '(Z)' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(Z)' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/auto_coerce_mw.metta.12_failed.html#HYPERON-METTALOG-SANITY.AUTO-COERCE.36\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (clamp (S Z) Z (S (S (S Z)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Z)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":25,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":27},"items":[{"uid":"9a0e553adfdf6670","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/192//#testresult/9a0e553adfdf6670","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1737565903000,"stop":1737565903026,"duration":26}},{"uid":"c6ed1dfcb64a9f2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/188//#testresult/c6ed1dfcb64a9f2","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1737506255000,"stop":1737506255036,"duration":36}},{"uid":"eab92fb02621686f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/187//#testresult/eab92fb02621686f","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1737493754000,"stop":1737493754052,"duration":52}},{"uid":"7c7e2fd80f4a9bf9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/7c7e2fd80f4a9bf9","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735815248000,"stop":1735815248037,"duration":37}},{"uid":"a47614be670c9330","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/a47614be670c9330","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735811106000,"stop":1735811106033,"duration":33}},{"uid":"259ba962592a4049","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/259ba962592a4049","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735765232000,"stop":1735765232046,"duration":46}},{"uid":"baf71fd83fc381a9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/baf71fd83fc381a9","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735657826000,"stop":1735657826026,"duration":26}},{"uid":"de0404878e0b189b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/de0404878e0b189b","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735656711000,"stop":1735656711040,"duration":40}},{"uid":"98ff52728ea4c2c0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/98ff52728ea4c2c0","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735597484000,"stop":1735597484040,"duration":40}},{"uid":"7b1d10ddbffcd079","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/7b1d10ddbffcd079","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735591894000,"stop":1735591894024,"duration":24}},{"uid":"fbe5903303561530","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/fbe5903303561530","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735516541000,"stop":1735516541036,"duration":36}},{"uid":"93a417f97518a612","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/93a417f97518a612","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735375357000,"stop":1735375357038,"duration":38}},{"uid":"e87a578470c2bc7e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/e87a578470c2bc7e","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735343498000,"stop":1735343498032,"duration":32}},{"uid":"8f4cbcfc59f07c5a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/8f4cbcfc59f07c5a","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735340888000,"stop":1735340888025,"duration":25}},{"uid":"7742bc977640e68a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/7742bc977640e68a","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735237903000,"stop":1735237903038,"duration":38}},{"uid":"9e66c5dd49b8a44b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/9e66c5dd49b8a44b","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735209066000,"stop":1735209066035,"duration":35}},{"uid":"59a758a19ce7ffc7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/59a758a19ce7ffc7","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1735039352000,"stop":1735039352037,"duration":37}},{"uid":"9b7cd8665764c932","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/9b7cd8665764c932","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1734851467000,"stop":1734851467039,"duration":39}},{"uid":"ab47b98fc971e504","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/107//#testresult/ab47b98fc971e504","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1734836453000,"stop":1734836453036,"duration":36}},{"uid":"5acbdecc3dedccb3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/105//#testresult/5acbdecc3dedccb3","status":"failed","statusDetails":"Test failed: Expected '((S Z))' but got '(Z)'","time":{"start":1734827140000,"stop":1734827140035,"duration":35}}]},"tags":[]},"source":"d9d21d72ccc9ab0c.json","parameterValues":[]}