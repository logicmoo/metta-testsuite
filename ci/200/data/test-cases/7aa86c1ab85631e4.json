{"uid":"7aa86c1ab85631e4","name":"RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01","time":{"start":1738403063000,"stop":1738403077505,"duration":14505},"status":"failed","statusMessage":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/recursive_tuple_list_benchmark_he_394.metta.1_failed.html#HYPERON-METTALOG-SANITY.RECURSIVE-TUPLE-LIST-BENCHMARK-HE-394.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"32477e7eb64636dc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/199//#testresult/32477e7eb64636dc","status":"failed","statusDetails":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))' but got 'strict_equals_allow_vn'","time":{"start":1738314289000,"stop":1738314303434,"duration":14434}},{"uid":"1266006e92fca038","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/194//#testresult/1266006e92fca038","status":"failed","statusDetails":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))' but got 'strict_equals_allow_vn'","time":{"start":1737700880000,"stop":1737700894626,"duration":14626}},{"uid":"402c26d403019d66","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/192//#testresult/402c26d403019d66","status":"failed","statusDetails":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time' , lambda: time.time())\\n    }\\n\"))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1737565903000,"stop":1737565903121,"duration":121}},{"uid":"7f21d4e53acbb580","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/188//#testresult/7f21d4e53acbb580","status":"failed","statusDetails":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time' , lambda: time.time())\\n    }\\n\"))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1737506255000,"stop":1737506255109,"duration":109}},{"uid":"b903cb50cba90f7b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/187//#testresult/b903cb50cba90f7b","status":"failed","statusDetails":"Test failed: Expected '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time' , lambda: time.time())\\n    }\\n\"))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1737493754000,"stop":1737493754137,"duration":137}},{"uid":"651e13c08d85d8c1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/651e13c08d85d8c1","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735815248000,"stop":1735815248110,"duration":110}},{"uid":"c0a999c5a463e268","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/c0a999c5a463e268","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735811106000,"stop":1735811106112,"duration":112}},{"uid":"e7e22609466fcb36","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/e7e22609466fcb36","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735765232000,"stop":1735765232123,"duration":123}},{"uid":"bb0e27b0a2d48d61","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/bb0e27b0a2d48d61","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735657826000,"stop":1735657826121,"duration":121}},{"uid":"a29aeaa98afc9514","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/a29aeaa98afc9514","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735656711000,"stop":1735656711142,"duration":142}},{"uid":"9915a2bea0783f4b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/9915a2bea0783f4b","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735597484000,"stop":1735597484114,"duration":114}},{"uid":"15faec5d6a79b14a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/15faec5d6a79b14a","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735591894000,"stop":1735591894114,"duration":114}},{"uid":"161be775d4f40210","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/161be775d4f40210","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735516541000,"stop":1735516541116,"duration":116}},{"uid":"a65d145d4877d5ea","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/a65d145d4877d5ea","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735375357000,"stop":1735375357126,"duration":126}},{"uid":"8ebdaf660a618e92","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/8ebdaf660a618e92","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735343498000,"stop":1735343498096,"duration":96}},{"uid":"78913654dc20b7c0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/78913654dc20b7c0","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735340888000,"stop":1735340888116,"duration":116}},{"uid":"5a239de825e0f0fb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/5a239de825e0f0fb","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735237903000,"stop":1735237903119,"duration":119}},{"uid":"19de99c2bba71685","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/19de99c2bba71685","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735209066000,"stop":1735209066122,"duration":122}},{"uid":"79fbdac51350b63a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/110//#testresult/79fbdac51350b63a","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1735039352000,"stop":1735039352106,"duration":106}},{"uid":"987697e1425572a9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/108//#testresult/987697e1425572a9","status":"failed","statusDetails":"Test failed: Expected '((extend-py! benchmark))' but got '((py-module benchmark \"import time\\nfrom hyperon.atoms import OperationAtom\\nfrom hyperon.ext import register_atoms\\n\\n@register_atoms\\ndef my_atoms():\\n    return {\\n        'current_time': OperationAtom('current_time', lambda: time.time())\\n    }\\n\"))'","time":{"start":1734851467000,"stop":1734851467109,"duration":109}}]},"tags":[]},"source":"7aa86c1ab85631e4.json","parameterValues":[]}