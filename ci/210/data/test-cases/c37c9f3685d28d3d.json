{"uid":"c37c9f3685d28d3d","name":"ARITY-TESTS.07","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#ARITY-TESTS.07","time":{"start":1738774923000,"stop":1738774923017,"duration":17},"status":"failed","statusMessage":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '()' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/arity_tests_mw.metta.12_failed.html#HYPERON-METTALOG-SANITY.ARITY-TESTS.07\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Assertion: (assertEqualToResult (match &test-space (size-atom (a b c) $size) $size))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":31},"items":[{"uid":"686a35f7bc07d191","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/201//#testresult/686a35f7bc07d191","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1738609630000,"stop":1738609630009,"duration":9}},{"uid":"f9a60a13bb6fc60d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/200//#testresult/f9a60a13bb6fc60d","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1738403063000,"stop":1738403063015,"duration":15}},{"uid":"ae44a2d94d7ec1bc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/199//#testresult/ae44a2d94d7ec1bc","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1738314289000,"stop":1738314289016,"duration":16}},{"uid":"c4cf9fb3c72c06bd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/194//#testresult/c4cf9fb3c72c06bd","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1737700880000,"stop":1737700880019,"duration":19}},{"uid":"52347bffe0f16c3e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/192//#testresult/52347bffe0f16c3e","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1737565903000,"stop":1737565903014,"duration":14}},{"uid":"209942dd36806d75","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/188//#testresult/209942dd36806d75","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1737506255000,"stop":1737506255017,"duration":17}},{"uid":"a81d7f2661de085d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/187//#testresult/a81d7f2661de085d","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1737493754000,"stop":1737493754016,"duration":16}},{"uid":"48837082858ee722","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/48837082858ee722","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735815248000,"stop":1735815248016,"duration":16}},{"uid":"659e15c26f4882d4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/659e15c26f4882d4","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735811106000,"stop":1735811106018,"duration":18}},{"uid":"9b1ee30f5d1a1e3f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/9b1ee30f5d1a1e3f","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735765232000,"stop":1735765232021,"duration":21}},{"uid":"911ddef582bb2ea0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/911ddef582bb2ea0","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735657826000,"stop":1735657826015,"duration":15}},{"uid":"99aec6e4050a2f73","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/99aec6e4050a2f73","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735656711000,"stop":1735656711017,"duration":17}},{"uid":"d208f690b83f267d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/d208f690b83f267d","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735597484000,"stop":1735597484010,"duration":10}},{"uid":"1389ac1a19a55d48","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/1389ac1a19a55d48","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735591894000,"stop":1735591894013,"duration":13}},{"uid":"6bfd2965d9960f61","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/6bfd2965d9960f61","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735516541000,"stop":1735516541010,"duration":10}},{"uid":"c94e85f35ac0d72","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/c94e85f35ac0d72","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735375357000,"stop":1735375357010,"duration":10}},{"uid":"c2a4d611b78d2153","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/c2a4d611b78d2153","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735343498000,"stop":1735343498015,"duration":15}},{"uid":"edcf3fc77900841","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/115//#testresult/edcf3fc77900841","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735340888000,"stop":1735340888015,"duration":15}},{"uid":"b028a8f05152ff77","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/113//#testresult/b028a8f05152ff77","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735237903000,"stop":1735237903016,"duration":16}},{"uid":"8062b99af9988b5d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/112//#testresult/8062b99af9988b5d","status":"failed","statusDetails":"Test failed: Expected '(3)' but got '()'","time":{"start":1735209066000,"stop":1735209066010,"duration":10}}]},"tags":[]},"source":"c37c9f3685d28d3d.json","parameterValues":[]}