{"uid":"b5a3ef68bc695cc4","name":"INDEX-MIN-FUNCTIONS-EXTRA-3.39","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#INDEX-MIN-FUNCTIONS-EXTRA-3.39","time":{"start":1738872368000,"stop":1738872368030,"duration":30},"status":"failed","statusMessage":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/index_min_functions_extra_3.metta.25_failed.html#HYPERON-METTALOG-SANITY.INDEX-MIN-FUNCTIONS-EXTRA-3.39\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (eval (foo)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (bar)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":31},"items":[{"uid":"c33ff46dadef8267","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/212//#testresult/c33ff46dadef8267","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738825550000,"stop":1738825550047,"duration":47}},{"uid":"8440e82c94f830c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/211//#testresult/8440e82c94f830c","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738787012000,"stop":1738787012031,"duration":31}},{"uid":"fa788cc2ede42b33","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/210//#testresult/fa788cc2ede42b33","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738774923000,"stop":1738774923033,"duration":33}},{"uid":"a1625dca069e0201","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/201//#testresult/a1625dca069e0201","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738609630000,"stop":1738609630033,"duration":33}},{"uid":"e2515f374adaa61d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/200//#testresult/e2515f374adaa61d","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738403063000,"stop":1738403063032,"duration":32}},{"uid":"e23652cfac9e37ce","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/199//#testresult/e23652cfac9e37ce","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1738314289000,"stop":1738314289042,"duration":42}},{"uid":"84a9e09f95d0e3f4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/194//#testresult/84a9e09f95d0e3f4","status":"failed","statusDetails":"Test failed: Expected '(bar)' but got 'strict_equals_allow_vn'","time":{"start":1737700880000,"stop":1737700880034,"duration":34}},{"uid":"4fd750cd46eb7574","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/192//#testresult/4fd750cd46eb7574","status":"passed","time":{"start":1737565903000,"stop":1737565903009,"duration":9}},{"uid":"dbf6c786e219f3da","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/188//#testresult/dbf6c786e219f3da","status":"passed","time":{"start":1737506255000,"stop":1737506255012,"duration":12}},{"uid":"a63b9bc4a0d96f39","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/187//#testresult/a63b9bc4a0d96f39","status":"passed","time":{"start":1737493754000,"stop":1737493754012,"duration":12}},{"uid":"9a39311dd259852f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/9a39311dd259852f","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735815248000,"stop":1735815248025,"duration":25}},{"uid":"2798d41c76009a2b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/2798d41c76009a2b","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735811106000,"stop":1735811106034,"duration":34}},{"uid":"acae2f44445e243a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/acae2f44445e243a","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735765232000,"stop":1735765232053,"duration":53}},{"uid":"39615212ec29999e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/39615212ec29999e","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735657826000,"stop":1735657826025,"duration":25}},{"uid":"faf252433dfae4fc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/faf252433dfae4fc","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735656711000,"stop":1735656711038,"duration":38}},{"uid":"683b3cbefd46e26f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/683b3cbefd46e26f","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735597484000,"stop":1735597484032,"duration":32}},{"uid":"3e4efa16a506092c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/3e4efa16a506092c","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735591894000,"stop":1735591894032,"duration":32}},{"uid":"1d831685a6766e18","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/1d831685a6766e18","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735516541000,"stop":1735516541036,"duration":36}},{"uid":"40b0d5d17cbd73cc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/40b0d5d17cbd73cc","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735375357000,"stop":1735375357032,"duration":32}},{"uid":"1de661be279cc55c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/117//#testresult/1de661be279cc55c","status":"failed","statusDetails":"Test failed: Expected '((baz))' but got '(bar)'","time":{"start":1735343498000,"stop":1735343498049,"duration":49}}]},"tags":[]},"source":"b5a3ef68bc695cc4.json","parameterValues":[]}