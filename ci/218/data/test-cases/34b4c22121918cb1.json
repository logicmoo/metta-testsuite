{"uid":"34b4c22121918cb1","name":"EVAL-FOR-TESTS.04","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#EVAL-FOR-TESTS.04","time":{"start":1738948702000,"stop":1738948702065,"duration":65},"status":"failed","statusMessage":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/eval_for_tests_mw.metta.8_failed.html#HYPERON-METTALOG-SANITY.EVAL-FOR-TESTS.04\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $result (eval-for $type (foo)) ($result $type)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1 $type) (\"a\" $type))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":35,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":35},"items":[{"uid":"d73182792d1e1591","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/216//#testresult/d73182792d1e1591","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738872368000,"stop":1738872368081,"duration":81}},{"uid":"8c5fdd0a96296ab3","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/212//#testresult/8c5fdd0a96296ab3","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738825550000,"stop":1738825550077,"duration":77}},{"uid":"d4bfe7996428aafa","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/211//#testresult/d4bfe7996428aafa","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738787012000,"stop":1738787012091,"duration":91}},{"uid":"7be34b2e73633e8c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/210//#testresult/7be34b2e73633e8c","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738774923000,"stop":1738774923086,"duration":86}},{"uid":"fff6c4e3927efdd1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/201//#testresult/fff6c4e3927efdd1","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738609630000,"stop":1738609630091,"duration":91}},{"uid":"23e723bcbbe5ebc1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/200//#testresult/23e723bcbbe5ebc1","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738403063000,"stop":1738403063066,"duration":66}},{"uid":"350358a626993b41","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/199//#testresult/350358a626993b41","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1738314289000,"stop":1738314289083,"duration":83}},{"uid":"75980d038d23164e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/194//#testresult/75980d038d23164e","status":"failed","statusDetails":"Test failed: Expected '((1 $type) (\"a\" $type))' but got 'strict_equals_allow_vn'","time":{"start":1737700880000,"stop":1737700880085,"duration":85}},{"uid":"680687de23f3e7cd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/192//#testresult/680687de23f3e7cd","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1737565903000,"stop":1737565903096,"duration":96}},{"uid":"3b3768b318fe3f7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/188//#testresult/3b3768b318fe3f7","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1737506255000,"stop":1737506255098,"duration":98}},{"uid":"66b58873f7402460","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/187//#testresult/66b58873f7402460","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1737493754000,"stop":1737493754131,"duration":131}},{"uid":"ab6103541cc53910","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/ab6103541cc53910","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735815248000,"stop":1735815248080,"duration":80}},{"uid":"35e8fb7dfe916bb4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/35e8fb7dfe916bb4","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735811106000,"stop":1735811106137,"duration":137}},{"uid":"6d801a349c27959b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/6d801a349c27959b","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735765232000,"stop":1735765232121,"duration":121}},{"uid":"9c44a553f2ddd072","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/9c44a553f2ddd072","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735657826000,"stop":1735657826104,"duration":104}},{"uid":"4b4f62656a7d08fe","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/4b4f62656a7d08fe","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735656711000,"stop":1735656711117,"duration":117}},{"uid":"24c7235e16d777a5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/24c7235e16d777a5","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735597484000,"stop":1735597484105,"duration":105}},{"uid":"a8c8d4cf1ada6626","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/a8c8d4cf1ada6626","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735591894000,"stop":1735591894097,"duration":97}},{"uid":"1ff122ae7836afff","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/130//#testresult/1ff122ae7836afff","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735516541000,"stop":1735516541101,"duration":101}},{"uid":"c658cf385c544b0a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/122//#testresult/c658cf385c544b0a","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $type) (\"a\" $type))'","time":{"start":1735375357000,"stop":1735375357098,"duration":98}}]},"tags":[]},"source":"34b4c22121918cb1.json","parameterValues":[]}