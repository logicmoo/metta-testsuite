{"uid":"63f8bccdb4dbb82d","name":"D4-TYPE-PROP-X2.06","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D4-TYPE-PROP-X2.06","time":{"start":1738952522000,"stop":1738952522007,"duration":7},"status":"failed","statusMessage":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop_x2.metta.4_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D4-TYPE-PROP-X2.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsMortal  \\n  (HumansAreMortal PlatoIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (() ())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":11},"items":[{"uid":"22645809f4900b9b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/217//#testresult/22645809f4900b9b","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738947946000,"stop":1738947946010,"duration":10}},{"uid":"7d4bf86fa37d55ca","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/218//#testresult/7d4bf86fa37d55ca","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738948010000,"stop":1738948010010,"duration":10}},{"uid":"3fb1ce1952c32c2f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/216//#testresult/3fb1ce1952c32c2f","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738871648000,"stop":1738871648010,"duration":10}},{"uid":"b931d96fdec258","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/212//#testresult/b931d96fdec258","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738824832000,"stop":1738824832010,"duration":10}},{"uid":"28edaee279f9817d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/211//#testresult/28edaee279f9817d","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738786307000,"stop":1738786307009,"duration":9}},{"uid":"b2b9c73c8b1809f5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/210//#testresult/b2b9c73c8b1809f5","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738774214000,"stop":1738774214007,"duration":7}},{"uid":"fee378db892fafb7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/201//#testresult/fee378db892fafb7","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738608910000,"stop":1738608910010,"duration":10}},{"uid":"71ba8400cc538d35","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/200//#testresult/71ba8400cc538d35","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738402344000,"stop":1738402344011,"duration":11}},{"uid":"b08b77d65046d4f1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/199//#testresult/b08b77d65046d4f1","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1738313531000,"stop":1738313531013,"duration":13}},{"uid":"5a48dd129d833a9e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/194//#testresult/5a48dd129d833a9e","status":"failed","statusDetails":"Test failed: Expected '(() ())' but got 'strict_equals_allow_vn'","time":{"start":1737700120000,"stop":1737700120012,"duration":12}}]},"tags":[]},"source":"63f8bccdb4dbb82d.json","parameterValues":[]}