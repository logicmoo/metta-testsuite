{"uid":"4166315ea369abf4","name":"D4-TYPE-PROP.09","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D4-TYPE-PROP.09","time":{"start":1744655699000,"stop":1744655699052,"duration":52},"status":"failed","statusMessage":"Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D4-TYPE-PROP.09\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (\"!sameTypes\" (get-type SocratesIsMortal) (get-type (HumansAreMortal PlatoIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":55,"unknown":0,"total":67},"items":[{"uid":"6e147f45a8707a0a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/6e147f45a8707a0a","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","time":{"start":1744584045000,"stop":1744584045050,"duration":50}},{"uid":"c9a3d131765e5492","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/c9a3d131765e5492","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","time":{"start":1744503067000,"stop":1744503067072,"duration":72}},{"uid":"8430b6f547e9623d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/8430b6f547e9623d","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","time":{"start":1743852270000,"stop":1743852270047,"duration":47}},{"uid":"a69f1b7d42794661","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/305//#testresult/a69f1b7d42794661","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Mortal Socrates) (Mortal Plato)))' but got 'strict_equals_allow_vn'","time":{"start":1743845581000,"stop":1743845581036,"duration":36}},{"uid":"4de9527eeeaa6aa","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/301//#testresult/4de9527eeeaa6aa","status":"passed","time":{"start":1743548627000,"stop":1743548627035,"duration":35}},{"uid":"66dd290b5049252e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/300//#testresult/66dd290b5049252e","status":"passed","time":{"start":1743349030000,"stop":1743349030047,"duration":47}},{"uid":"7a6136d969fc64fb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/278//#testresult/7a6136d969fc64fb","status":"passed","time":{"start":1741522621000,"stop":1741522621023,"duration":23}},{"uid":"2d24020f0905a09d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/276//#testresult/2d24020f0905a09d","status":"passed","time":{"start":1740886093000,"stop":1740886093022,"duration":22}},{"uid":"c60ee0640bb9ffac","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/275//#testresult/c60ee0640bb9ffac","status":"passed","time":{"start":1740868271000,"stop":1740868271026,"duration":26}},{"uid":"b9c6d0d73b0c5a8b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/273//#testresult/b9c6d0d73b0c5a8b","status":"passed","time":{"start":1740797865000,"stop":1740797865027,"duration":27}},{"uid":"e06e549b25979184","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/272//#testresult/e06e549b25979184","status":"passed","time":{"start":1740731963000,"stop":1740731963031,"duration":31}},{"uid":"6079bc522c7af7a9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/270//#testresult/6079bc522c7af7a9","status":"passed","time":{"start":1740449230000,"stop":1740449230022,"duration":22}},{"uid":"d033ee9ffd158b4c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/268//#testresult/d033ee9ffd158b4c","status":"passed","time":{"start":1740255863000,"stop":1740255863021,"duration":21}},{"uid":"90086cad8c65fef0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/266//#testresult/90086cad8c65fef0","status":"passed","time":{"start":1740026986000,"stop":1740026986022,"duration":22}},{"uid":"bb3e9f2a275839b0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/260//#testresult/bb3e9f2a275839b0","status":"passed","time":{"start":1739883263000,"stop":1739883263023,"duration":23}},{"uid":"cbfa619017b849da","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/254//#testresult/cbfa619017b849da","status":"passed","time":{"start":1739857359000,"stop":1739857359021,"duration":21}},{"uid":"d009ef51335801c9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/247//#testresult/d009ef51335801c9","status":"passed","time":{"start":1739703283000,"stop":1739703283022,"duration":22}},{"uid":"b91c4c5615fc5bbf","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/246//#testresult/b91c4c5615fc5bbf","status":"passed","time":{"start":1739644507000,"stop":1739644507027,"duration":27}},{"uid":"563097184f34a398","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/238//#testresult/563097184f34a398","status":"passed","time":{"start":1739505481000,"stop":1739505481023,"duration":23}},{"uid":"377dd3c2ef786495","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/235//#testresult/377dd3c2ef786495","status":"passed","time":{"start":1739374196000,"stop":1739374196026,"duration":26}}]},"tags":[]},"source":"4166315ea369abf4.json","parameterValues":[]}