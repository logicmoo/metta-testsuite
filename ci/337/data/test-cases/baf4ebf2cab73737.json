{"uid":"baf4ebf2cab73737","name":"D5-AUTO-TYPES-COMP.03","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP:HYPERON-EXPERIMENTAL-SCRIPTS-COMP#D5-AUTO-TYPES-COMP.03","time":{"start":1745315398000,"stop":1745315398072,"duration":72},"status":"failed","statusMessage":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d5_auto_types.metta.6_failed.html-COMP.html#HYPERON-EXPERIMENTAL-SCRIPTS-COMP.D5-AUTO-TYPES-COMP.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (== SocratesIsHuman SamIsMortal))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"8c38a11cd8e7676f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/8c38a11cd8e7676f","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1745314658000,"stop":1745314658072,"duration":72}},{"uid":"ba33694f49b6aee8","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/ba33694f49b6aee8","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744704340000,"stop":1744704340089,"duration":89}},{"uid":"e65b2316db256296","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/e65b2316db256296","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744655771000,"stop":1744655771061,"duration":61}},{"uid":"1325868060dcc23b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/1325868060dcc23b","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744584116000,"stop":1744584116060,"duration":60}},{"uid":"d1b90ec00505be4a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/d1b90ec00505be4a","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744503134000,"stop":1744503134058,"duration":58}},{"uid":"62dfd58c78b08349","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/62dfd58c78b08349","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1743852343000,"stop":1743852343061,"duration":61}}]},"tags":[]},"source":"baf4ebf2cab73737.json","parameterValues":[]}