{"uid":"355bdad50b807ed4","name":"D4-TYPE-PROP.05","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D4-TYPE-PROP.05","time":{"start":1745349361000,"stop":1745349361054,"duration":54},"status":"failed","statusMessage":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D4-TYPE-PROP.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (\"sameTypes\" (get-type SocratesIsMortal) (get-type (HumansAreMortal SocratesIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":67},"items":[{"uid":"b15cf9e9f6cf604a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/b15cf9e9f6cf604a","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1745315364000,"stop":1745315364057,"duration":57}},{"uid":"dcbe8b3e8b307b6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/dcbe8b3e8b307b6","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744704259000,"stop":1744704259062,"duration":62}},{"uid":"dcacda81f575e79b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/dcacda81f575e79b","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744655699000,"stop":1744655699038,"duration":38}},{"uid":"a2f2f75145460ac0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/a2f2f75145460ac0","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744584045000,"stop":1744584045053,"duration":53}},{"uid":"ced433474ae8c741","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/ced433474ae8c741","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744503067000,"stop":1744503067053,"duration":53}},{"uid":"4e25a99f9503b036","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/4e25a99f9503b036","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1743852270000,"stop":1743852270055,"duration":55}},{"uid":"cd834f5adb3471ce","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/305//#testresult/cd834f5adb3471ce","status":"failed","statusDetails":"Test failed: Expected '((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1743845581000,"stop":1743845581051,"duration":51}},{"uid":"61e98f9f3d8d5802","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/301//#testresult/61e98f9f3d8d5802","status":"passed","time":{"start":1743548627000,"stop":1743548627035,"duration":35}},{"uid":"37856987da12cd84","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/300//#testresult/37856987da12cd84","status":"passed","time":{"start":1743349030000,"stop":1743349030047,"duration":47}},{"uid":"dd389b5778013863","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/278//#testresult/dd389b5778013863","status":"passed","time":{"start":1741522621000,"stop":1741522621028,"duration":28}},{"uid":"702815ac497e753a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/276//#testresult/702815ac497e753a","status":"passed","time":{"start":1740886093000,"stop":1740886093026,"duration":26}},{"uid":"896b59b2e1bee32c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/275//#testresult/896b59b2e1bee32c","status":"passed","time":{"start":1740868271000,"stop":1740868271024,"duration":24}},{"uid":"7f4d1c0d95c3933b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/273//#testresult/7f4d1c0d95c3933b","status":"passed","time":{"start":1740797865000,"stop":1740797865028,"duration":28}},{"uid":"900534b49f33f87f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/272//#testresult/900534b49f33f87f","status":"passed","time":{"start":1740731963000,"stop":1740731963027,"duration":27}},{"uid":"6d18bbb7fe9de392","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/270//#testresult/6d18bbb7fe9de392","status":"passed","time":{"start":1740449230000,"stop":1740449230022,"duration":22}},{"uid":"a70453104de2604c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/268//#testresult/a70453104de2604c","status":"passed","time":{"start":1740255863000,"stop":1740255863022,"duration":22}},{"uid":"bccc1b1685eec121","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/266//#testresult/bccc1b1685eec121","status":"passed","time":{"start":1740026986000,"stop":1740026986021,"duration":21}},{"uid":"8fdad89ca4b1ee11","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/260//#testresult/8fdad89ca4b1ee11","status":"passed","time":{"start":1739883263000,"stop":1739883263024,"duration":24}},{"uid":"98ec0f5fccda31ca","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/254//#testresult/98ec0f5fccda31ca","status":"passed","time":{"start":1739857359000,"stop":1739857359020,"duration":20}},{"uid":"3981c28ed88f0c86","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/247//#testresult/3981c28ed88f0c86","status":"passed","time":{"start":1739703283000,"stop":1739703283023,"duration":23}}]},"tags":[]},"source":"355bdad50b807ed4.json","parameterValues":[]}