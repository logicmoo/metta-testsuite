{"uid":"cc5175daa5ab3da6","name":"D3-DEPTYPES-COMP.06","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP:HYPERON-EXPERIMENTAL-SCRIPTS-COMP#D3-DEPTYPES-COMP.06","time":{"start":1745349391000,"stop":1745349391105,"duration":105},"status":"failed","statusMessage":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d3_deptypes.metta.4_failed.html-COMP.html#HYPERON-EXPERIMENTAL-SCRIPTS-COMP.D3-DEPTYPES-COMP.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-type (dropN (ConsN \"1\" NilN))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((VecN String (- (+ 0 1) 1)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"fddb917bb3f29642","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/fddb917bb3f29642","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1745315398000,"stop":1745315398092,"duration":92}},{"uid":"89163c3670bdf8d6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/89163c3670bdf8d6","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1745314658000,"stop":1745314658114,"duration":114}},{"uid":"cb2130e5b39e8c6a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/cb2130e5b39e8c6a","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1744704340000,"stop":1744704340093,"duration":93}},{"uid":"f45e02573d3485de","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/f45e02573d3485de","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1744655771000,"stop":1744655771076,"duration":76}},{"uid":"1c8cb2cc3d9c6007","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/1c8cb2cc3d9c6007","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1744584116000,"stop":1744584116060,"duration":60}},{"uid":"6424df2111c5c2f2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/6424df2111c5c2f2","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1744503134000,"stop":1744503134081,"duration":81}},{"uid":"24abd0e826d5e242","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/24abd0e826d5e242","status":"failed","statusDetails":"Test failed: Expected '((VecN String (- (+ 0 1) 1)))' but got 'strict_equals_allow_vn'","time":{"start":1743852343000,"stop":1743852343076,"duration":76}}]},"tags":[]},"source":"cc5175daa5ab3da6.json","parameterValues":[]}