{"uid":"fda3d3236042ec0","name":"TESTS0-COMP.02","historyId":"METTA-MORPH-TESTS-COMP:METTA-MORPH-TESTS-COMP#TESTS0-COMP.02","time":{"start":1745349327000,"stop":1745349327028,"duration":28},"status":"failed","statusMessage":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '()' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/tests0.metta.5_failed.html-COMP.html#METTA-MORPH-TESTS-COMP.TESTS0-COMP.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (I- ((Garfield --> carnivore) (1.0 0.9)) (((Garfield --> cat) ==> (Garfield --> carnivore)) (1.0 0.9))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS-COMP"},{"name":"testClass","value":"METTA-MORPH-TESTS-COMP"},{"name":"package","value":"METTA-MORPH-TESTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"be7ec439a14e4457","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/be7ec439a14e4457","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1745315304000,"stop":1745315304037,"duration":37}},{"uid":"9135076bda50a6fb","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/9135076bda50a6fb","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1745314612000,"stop":1745314612051,"duration":51}},{"uid":"1c1b75e0731713ba","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/1c1b75e0731713ba","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1744704064000,"stop":1744704064030,"duration":30}},{"uid":"84a5f4f8ea7841bf","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/84a5f4f8ea7841bf","status":"failed","statusDetails":"Test failed: Expected '()' but got 'strict_equals_allow_vn'","time":{"start":1744655667000,"stop":1744655667033,"duration":33}}]},"tags":[]},"source":"fda3d3236042ec0.json","parameterValues":[]}