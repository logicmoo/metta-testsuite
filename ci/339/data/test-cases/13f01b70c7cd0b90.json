{"uid":"13f01b70c7cd0b90","name":"D4-TYPE-PROP.13","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D4-TYPE-PROP.13","time":{"start":1745514416000,"stop":1745514416047,"duration":47},"status":"failed","statusMessage":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D4-TYPE-PROP.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (\"!sameTypes\" (get-type SocratesIsHuman) (get-type SocratesIsMortal)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":37},"items":[{"uid":"db5c9cb39ad9b075","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/338//#testresult/db5c9cb39ad9b075","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1745349361000,"stop":1745349361050,"duration":50}},{"uid":"694a95c3df4f2ac5","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/694a95c3df4f2ac5","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1745315364000,"stop":1745315364053,"duration":53}},{"uid":"ad2eb437767c802d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/ad2eb437767c802d","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744704259000,"stop":1744704259046,"duration":46}},{"uid":"3c0de56efc720df1","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/3c0de56efc720df1","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744655699000,"stop":1744655699038,"duration":38}},{"uid":"4018fd0170cb94c4","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/4018fd0170cb94c4","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744584045000,"stop":1744584045039,"duration":39}},{"uid":"a01d08ba1d11d8c2","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/a01d08ba1d11d8c2","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1744503067000,"stop":1744503067040,"duration":40}},{"uid":"4508db8fffe3f5a6","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/4508db8fffe3f5a6","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1743852270000,"stop":1743852270027,"duration":27}},{"uid":"c2eb2968d18a5a61","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/305//#testresult/c2eb2968d18a5a61","status":"failed","statusDetails":"Test failed: Expected '((\"!sameTypes\" (Human Socrates) (Mortal Socrates)))' but got 'strict_equals_allow_vn'","time":{"start":1743845581000,"stop":1743845581038,"duration":38}},{"uid":"b5ad4b67be670c91","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/278//#testresult/b5ad4b67be670c91","status":"passed","time":{"start":1741522621000,"stop":1741522621025,"duration":25}},{"uid":"da69f397b18a5227","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/276//#testresult/da69f397b18a5227","status":"passed","time":{"start":1740886093000,"stop":1740886093025,"duration":25}},{"uid":"1c3f92aa2d7674df","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/275//#testresult/1c3f92aa2d7674df","status":"passed","time":{"start":1740868271000,"stop":1740868271019,"duration":19}},{"uid":"5f61402799ad5a43","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/273//#testresult/5f61402799ad5a43","status":"passed","time":{"start":1740797865000,"stop":1740797865019,"duration":19}},{"uid":"ea861fb376170d3d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/272//#testresult/ea861fb376170d3d","status":"passed","time":{"start":1740731963000,"stop":1740731963021,"duration":21}},{"uid":"8a3b5cf3acd759a0","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/142//#testresult/8a3b5cf3acd759a0","status":"passed","time":{"start":1735815050000,"stop":1735815050001,"duration":1}},{"uid":"20e87cd0beaf4256","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/140//#testresult/20e87cd0beaf4256","status":"passed","time":{"start":1735810909000,"stop":1735810909002,"duration":2}},{"uid":"65931032c44037f7","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/138//#testresult/65931032c44037f7","status":"passed","time":{"start":1735765030000,"stop":1735765030001,"duration":1}},{"uid":"9c547fb8f573dfba","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/136//#testresult/9c547fb8f573dfba","status":"passed","time":{"start":1735657629000,"stop":1735657629001,"duration":1}},{"uid":"6f2135397b5f3835","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/135//#testresult/6f2135397b5f3835","status":"passed","time":{"start":1735656513000,"stop":1735656513001,"duration":1}},{"uid":"61b6196e4db720dd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/133//#testresult/61b6196e4db720dd","status":"passed","time":{"start":1735597293000,"stop":1735597293001,"duration":1}},{"uid":"86f23b3e133a8a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/132//#testresult/86f23b3e133a8a","status":"passed","time":{"start":1735591697000,"stop":1735591697001,"duration":1}}]},"tags":[]},"source":"13f01b70c7cd0b90.json","parameterValues":[]}