{"uid":"2ed8b1fa55b0f2e7","name":"D4-TYPE-PROP-COMP.06","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP:HYPERON-EXPERIMENTAL-SCRIPTS-COMP#D4-TYPE-PROP-COMP.06","time":{"start":1745514491000,"stop":1745514491025,"duration":25},"status":"failed","statusMessage":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(())' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.4_failed.html-COMP.html#HYPERON-EXPERIMENTAL-SCRIPTS-COMP.D4-TYPE-PROP-COMP.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsMortal  \\n  (HumansAreMortal PlatoIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"189b537e3e42cc3a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/338//#testresult/189b537e3e42cc3a","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745349391000,"stop":1745349391018,"duration":18}},{"uid":"74ac5c7fbf9a1edc","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/74ac5c7fbf9a1edc","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745315398000,"stop":1745315398018,"duration":18}},{"uid":"4d5519bd6eb3f9dd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/4d5519bd6eb3f9dd","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745314658000,"stop":1745314658026,"duration":26}},{"uid":"fe4258e77c39ef9d","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/fe4258e77c39ef9d","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744704340000,"stop":1744704340026,"duration":26}},{"uid":"3a0b721ee66f51bd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/3a0b721ee66f51bd","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744655771000,"stop":1744655771019,"duration":19}},{"uid":"d41518ef1c58a272","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/d41518ef1c58a272","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744584116000,"stop":1744584116023,"duration":23}},{"uid":"1ade8381bf76bb5a","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/1ade8381bf76bb5a","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744503134000,"stop":1744503134019,"duration":19}},{"uid":"14b024e194733b68","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/14b024e194733b68","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1743852343000,"stop":1743852343022,"duration":22}}]},"tags":[]},"source":"2ed8b1fa55b0f2e7.json","parameterValues":[]}