{"uid":"6d674dd6ec7c7db1","name":"D4-TYPE-PROP-COMP.07","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP:HYPERON-EXPERIMENTAL-SCRIPTS-COMP#D4-TYPE-PROP-COMP.07","time":{"start":1745514491000,"stop":1745514491019,"duration":19},"status":"failed","statusMessage":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(())' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d4_type_prop.metta.4_failed.html-COMP.html#HYPERON-EXPERIMENTAL-SCRIPTS-COMP.D4-TYPE-PROP-COMP.07\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsHuman  PlatoIsHuman)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"256004da1e4cdc5c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/338//#testresult/256004da1e4cdc5c","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745349391000,"stop":1745349391025,"duration":25}},{"uid":"2b059abb68acee3e","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/2b059abb68acee3e","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745315398000,"stop":1745315398025,"duration":25}},{"uid":"c42c00df556bfba9","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/c42c00df556bfba9","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1745314658000,"stop":1745314658018,"duration":18}},{"uid":"e45b06c54c30cc16","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/e45b06c54c30cc16","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744704340000,"stop":1744704340018,"duration":18}},{"uid":"b1e4d4b5c93da17f","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/b1e4d4b5c93da17f","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744655771000,"stop":1744655771023,"duration":23}},{"uid":"4e40e2de1b3fe8cd","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/4e40e2de1b3fe8cd","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744584116000,"stop":1744584116021,"duration":21}},{"uid":"e93c69a74cbe4215","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/e93c69a74cbe4215","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1744503134000,"stop":1744503134016,"duration":16}},{"uid":"3ad2be6c85118d61","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/3ad2be6c85118d61","status":"failed","statusDetails":"Test failed: Expected '(())' but got 'strict_equals_allow_vn'","time":{"start":1743852343000,"stop":1743852343023,"duration":23}}]},"tags":[]},"source":"6d674dd6ec7c7db1.json","parameterValues":[]}