{"uid":"9a9ae4724f498c84","name":"D5-AUTO-TYPES-COMP.02","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP:HYPERON-EXPERIMENTAL-SCRIPTS-COMP#D5-AUTO-TYPES-COMP.02","time":{"start":1745514491000,"stop":1745514491072,"duration":72},"status":"failed","statusMessage":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","statusTrace":"AssertionError: Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://logicmoo.github.io/metta-testsuite/home/runner/work/metta-testsuite/metta-testsuite/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d5_auto_types.metta.6_failed.html-COMP.html#HYPERON-EXPERIMENTAL-SCRIPTS-COMP.D5-AUTO-TYPES-COMP.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (== 5 \"S\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: strict_equals_allow_vn","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS-COMP"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"19f1b40d887e2c1c","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/338//#testresult/19f1b40d887e2c1c","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1745349391000,"stop":1745349391066,"duration":66}},{"uid":"2b26f77927fc5121","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/337//#testresult/2b26f77927fc5121","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1745315398000,"stop":1745315398064,"duration":64}},{"uid":"657497ca89ddbd8b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/335//#testresult/657497ca89ddbd8b","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1745314658000,"stop":1745314658068,"duration":68}},{"uid":"66cbac2b034dd8ea","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/321//#testresult/66cbac2b034dd8ea","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744704340000,"stop":1744704340071,"duration":71}},{"uid":"2e09a89069f5da6b","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/318//#testresult/2e09a89069f5da6b","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744655771000,"stop":1744655771063,"duration":63}},{"uid":"5b2ee07f37822eca","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/314//#testresult/5b2ee07f37822eca","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744584116000,"stop":1744584116059,"duration":59}},{"uid":"5265b007ffc8a463","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/310//#testresult/5265b007ffc8a463","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1744503134000,"stop":1744503134059,"duration":59}},{"uid":"7aae97445f407b84","reportUrl":"https://logicmoo.github.io/metta-testsuite/ci/307//#testresult/7aae97445f407b84","status":"failed","statusDetails":"Test failed: Expected '(False)' but got 'strict_equals_allow_vn'","time":{"start":1743852343000,"stop":1743852343059,"duration":59}}]},"tags":[]},"source":"9a9ae4724f498c84.json","parameterValues":[]}