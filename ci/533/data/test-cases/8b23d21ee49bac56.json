{"uid":"8b23d21ee49bac56","name":"F1-IMPORTS.01","historyId":"MODULE-SYSTEM:MODULE-SYSTEM#F1-IMPORTS.01","time":{"start":1732247020000,"stop":1732247036990,"duration":16990},"status":"failed","statusMessage":"Test failed: Expected '((hyperon::space::DynSpace) (hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","statusTrace":"AssertionError: Test failed: Expected '((hyperon::space::DynSpace) (hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/module-system/f1_imports.metta.6_failed.html#MODULE-SYSTEM.F1-IMPORTS.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual ((let $x (get-atoms &self) (get-type $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((hyperon::space::DynSpace) (hyperon::space::DynSpace))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"MODULE-SYSTEM"},{"name":"testClass","value":"MODULE-SYSTEM"},{"name":"package","value":"MODULE-SYSTEM"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":60},"items":[{"uid":"c682ab398742022a","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/531//#testresult/c682ab398742022a","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace) (hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732236057000,"stop":1732236074165,"duration":17165}},{"uid":"a57c87e9798b74db","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/530//#testresult/a57c87e9798b74db","status":"passed","time":{"start":1732173204000,"stop":1732173204005,"duration":5}},{"uid":"ea59915dea15b7b8","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/529//#testresult/ea59915dea15b7b8","status":"passed","time":{"start":1732172547000,"stop":1732172547002,"duration":2}},{"uid":"70c2ba44a7aac19c","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/528//#testresult/70c2ba44a7aac19c","status":"passed","time":{"start":1732168637000,"stop":1732168637004,"duration":4}},{"uid":"fd2bd11059c245ba","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/527//#testresult/fd2bd11059c245ba","status":"passed","time":{"start":1732167986000,"stop":1732167986002,"duration":2}},{"uid":"148c06efc12e61db","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/525//#testresult/148c06efc12e61db","status":"passed","time":{"start":1732166988000,"stop":1732166988004,"duration":4}},{"uid":"b5359f1e7030e563","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/526//#testresult/b5359f1e7030e563","status":"passed","time":{"start":1732167314000,"stop":1732167314003,"duration":3}},{"uid":"f7797af960840244","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/524//#testresult/f7797af960840244","status":"passed","time":{"start":1732166833000,"stop":1732166833005,"duration":5}},{"uid":"beffe4b302562671","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/523//#testresult/beffe4b302562671","status":"passed","time":{"start":1732165516000,"stop":1732165516003,"duration":3}},{"uid":"14c5102e4769335c","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/522//#testresult/14c5102e4769335c","status":"passed","time":{"start":1732160906000,"stop":1732160906002,"duration":2}},{"uid":"c4dfea009370d63d","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/519//#testresult/c4dfea009370d63d","status":"passed","time":{"start":1732136823000,"stop":1732136823005,"duration":5}},{"uid":"ae6ef0ff09a2cfa5","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/518//#testresult/ae6ef0ff09a2cfa5","status":"passed","time":{"start":1732108945000,"stop":1732108945004,"duration":4}},{"uid":"256da992e1213758","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/517//#testresult/256da992e1213758","status":"passed","time":{"start":1732105760000,"stop":1732105760003,"duration":3}},{"uid":"543a4f804a031086","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/516//#testresult/543a4f804a031086","status":"passed","time":{"start":1732104872000,"stop":1732104872004,"duration":4}},{"uid":"e31ad872183aa129","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/515//#testresult/e31ad872183aa129","status":"passed","time":{"start":1732104492000,"stop":1732104492003,"duration":3}},{"uid":"fa364c87e1eab6f2","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/514//#testresult/fa364c87e1eab6f2","status":"passed","time":{"start":1732103714000,"stop":1732103714003,"duration":3}},{"uid":"9bf4c0240e5425fe","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/512//#testresult/9bf4c0240e5425fe","status":"passed","time":{"start":1732042301000,"stop":1732042301004,"duration":4}},{"uid":"3ed853f063930edb","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/510//#testresult/3ed853f063930edb","status":"passed","time":{"start":1731993881000,"stop":1731993881003,"duration":3}},{"uid":"158d626cf2a16c9b","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/511//#testresult/158d626cf2a16c9b","status":"passed","time":{"start":1731993899000,"stop":1731993899004,"duration":4}},{"uid":"8728071c16a55c5e","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/509//#testresult/8728071c16a55c5e","status":"passed","time":{"start":1731993779000,"stop":1731993779004,"duration":4}}]},"tags":[]},"source":"8b23d21ee49bac56.json","parameterValues":[]}