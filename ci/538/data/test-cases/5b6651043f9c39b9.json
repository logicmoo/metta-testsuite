{"uid":"5b6651043f9c39b9","name":"F1-IMPORTS.02","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#F1-IMPORTS.02","time":{"start":1732367786000,"stop":1732367803354,"duration":17354},"status":"failed","statusMessage":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","statusTrace":"AssertionError: Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/f1_imports.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.F1-IMPORTS.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual ((let $x (get-atoms &self) (get-type $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((hyperon::space::DynSpace))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":64},"items":[{"uid":"9a9b67cdfa691f73","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/536//#testresult/9a9b67cdfa691f73","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732307584000,"stop":1732307601113,"duration":17113}},{"uid":"6bcfa49deb2e684e","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/535//#testresult/6bcfa49deb2e684e","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732302220000,"stop":1732302237089,"duration":17089}},{"uid":"140b33dde70ae6bc","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/534//#testresult/140b33dde70ae6bc","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732287731000,"stop":1732287748092,"duration":17092}},{"uid":"761f191e77b7c83c","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/533//#testresult/761f191e77b7c83c","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732247512000,"stop":1732247530152,"duration":18152}},{"uid":"8f4da19bd81324df","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/531//#testresult/8f4da19bd81324df","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732236543000,"stop":1732236560778,"duration":17778}},{"uid":"7eb4e971219e7209","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/530//#testresult/7eb4e971219e7209","status":"passed","time":{"start":1732173521000,"stop":1732173521006,"duration":6}},{"uid":"304e80f67bf9c182","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/529//#testresult/304e80f67bf9c182","status":"passed","time":{"start":1732172868000,"stop":1732172868006,"duration":6}},{"uid":"7b318297dbd06aa","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/528//#testresult/7b318297dbd06aa","status":"passed","time":{"start":1732168952000,"stop":1732168952005,"duration":5}},{"uid":"726a89599231583e","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/527//#testresult/726a89599231583e","status":"passed","time":{"start":1732168301000,"stop":1732168301004,"duration":4}},{"uid":"23e0120672efb18a","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/525//#testresult/23e0120672efb18a","status":"passed","time":{"start":1732167310000,"stop":1732167310006,"duration":6}},{"uid":"9f814d4169bc8b3c","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/526//#testresult/9f814d4169bc8b3c","status":"passed","time":{"start":1732167619000,"stop":1732167619004,"duration":4}},{"uid":"dbc98c269b8db101","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/524//#testresult/dbc98c269b8db101","status":"passed","time":{"start":1732167154000,"stop":1732167154004,"duration":4}},{"uid":"d184cdbfdf684b6e","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/523//#testresult/d184cdbfdf684b6e","status":"passed","time":{"start":1732165825000,"stop":1732165825006,"duration":6}},{"uid":"84fb01b68577977f","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/522//#testresult/84fb01b68577977f","status":"passed","time":{"start":1732161221000,"stop":1732161221006,"duration":6}},{"uid":"ff9ead151271752d","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/519//#testresult/ff9ead151271752d","status":"passed","time":{"start":1732137135000,"stop":1732137135006,"duration":6}},{"uid":"c5846cb5db5a2a12","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/518//#testresult/c5846cb5db5a2a12","status":"passed","time":{"start":1732109263000,"stop":1732109263006,"duration":6}},{"uid":"4bcfa391c91daac0","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/517//#testresult/4bcfa391c91daac0","status":"passed","time":{"start":1732106071000,"stop":1732106071006,"duration":6}},{"uid":"518cf3dc365c95cc","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/516//#testresult/518cf3dc365c95cc","status":"passed","time":{"start":1732105178000,"stop":1732105178006,"duration":6}},{"uid":"12720f12d76883c0","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/515//#testresult/12720f12d76883c0","status":"passed","time":{"start":1732104811000,"stop":1732104811007,"duration":7}},{"uid":"5126603449e5c138","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/514//#testresult/5126603449e5c138","status":"passed","time":{"start":1732104027000,"stop":1732104027004,"duration":4}}]},"tags":[]},"source":"5b6651043f9c39b9.json","parameterValues":[]}