{"uid":"d210004f4f8e7687","name":"F1-IMPORTS.02","historyId":"QUICK:QUICK#F1-IMPORTS.02","time":{"start":1732406698000,"stop":1732406715145,"duration":17145},"status":"failed","statusMessage":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","statusTrace":"AssertionError: Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/f1_imports.metta.6_failed.html#QUICK.F1-IMPORTS.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual ((let $x (get-atoms &self) (get-type $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((hyperon::space::DynSpace))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":58,"unknown":0,"total":66},"items":[{"uid":"336a057dc60affda","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/539//#testresult/336a057dc60affda","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732371494000,"stop":1732371511117,"duration":17117}},{"uid":"25f506619762be47","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/538//#testresult/25f506619762be47","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732370879000,"stop":1732370896326,"duration":17326}},{"uid":"aad1e0993d8aad10","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/536//#testresult/aad1e0993d8aad10","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732310499000,"stop":1732310516199,"duration":17199}},{"uid":"293a1307f072af03","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/535//#testresult/293a1307f072af03","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732305031000,"stop":1732305048141,"duration":17141}},{"uid":"f85b2485af6e3b62","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/534//#testresult/f85b2485af6e3b62","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732290607000,"stop":1732290624157,"duration":17157}},{"uid":"2f00d219af561e3","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/533//#testresult/2f00d219af561e3","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732250352000,"stop":1732250369052,"duration":17052}},{"uid":"1442130a2fd8ebaf","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/531//#testresult/1442130a2fd8ebaf","status":"failed","statusDetails":"Test failed: Expected '((hyperon::space::DynSpace))' but got '((hyperon::space::DynSpace) (hyperon::space::DynSpace) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (DocInformal) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (DocInformal) (()) (()) (()) (()) (()) (DocInfor...(3332)'","time":{"start":1732239379000,"stop":1732239396208,"duration":17208}},{"uid":"7491106cc1098d7d","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/530//#testresult/7491106cc1098d7d","status":"passed","time":{"start":1732176174000,"stop":1732176174004,"duration":4}},{"uid":"208025a26ba7011e","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/529//#testresult/208025a26ba7011e","status":"passed","time":{"start":1732175566000,"stop":1732175566004,"duration":4}},{"uid":"54de0d72922cf6f8","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/528//#testresult/54de0d72922cf6f8","status":"passed","time":{"start":1732171472000,"stop":1732171472004,"duration":4}},{"uid":"e0bec094392ea91f","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/527//#testresult/e0bec094392ea91f","status":"passed","time":{"start":1732170805000,"stop":1732170805005,"duration":5}},{"uid":"29c26c4be8ab088c","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/525//#testresult/29c26c4be8ab088c","status":"passed","time":{"start":1732170474000,"stop":1732170474006,"duration":6}},{"uid":"38a9d58672eb188b","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/526//#testresult/38a9d58672eb188b","status":"passed","time":{"start":1732169993000,"stop":1732169993006,"duration":6}},{"uid":"171ac5100c5dbb3d","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/524//#testresult/171ac5100c5dbb3d","status":"passed","time":{"start":1732169685000,"stop":1732169685004,"duration":4}},{"uid":"b0f761fcf0ab30a8","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/523//#testresult/b0f761fcf0ab30a8","status":"passed","time":{"start":1732168206000,"stop":1732168206006,"duration":6}},{"uid":"a01195b2bff07bd8","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/522//#testresult/a01195b2bff07bd8","status":"passed","time":{"start":1732163638000,"stop":1732163638003,"duration":3}},{"uid":"eafa4d49d36fc9e6","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/519//#testresult/eafa4d49d36fc9e6","status":"passed","time":{"start":1732139631000,"stop":1732139631006,"duration":6}},{"uid":"8faff0c4f8199808","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/518//#testresult/8faff0c4f8199808","status":"passed","time":{"start":1732111777000,"stop":1732111777006,"duration":6}},{"uid":"de38c8ad58388283","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/517//#testresult/de38c8ad58388283","status":"passed","time":{"start":1732108494000,"stop":1732108494004,"duration":4}},{"uid":"a40a7ac649433a52","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/516//#testresult/a40a7ac649433a52","status":"passed","time":{"start":1732107567000,"stop":1732107567004,"duration":4}}]},"tags":[]},"source":"d210004f4f8e7687.json","parameterValues":[]}