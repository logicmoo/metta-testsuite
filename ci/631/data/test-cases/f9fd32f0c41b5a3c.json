{"uid":"f9fd32f0c41b5a3c","name":"MATCH-SUPERPOSED-SPACES.03","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-SUPERPOSED-SPACES.03","time":{"start":1733052057000,"stop":1733052188061,"duration":131061},"status":"failed","statusMessage":"Test failed: Expected '(1)' but got '(1 (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (:...(14307)'","statusTrace":"AssertionError: Test failed: Expected '(1)' but got '(1 (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (:...(14307)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_superposed_spaces.metta.1_failed.html#METTA-MORPH-TESTS.MATCH-SUPERPOSED-SPACES.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (match &attentional_focus $1 $1))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (1)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (1 (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (:...(14307)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f9fd32f0c41b5a3c.json","parameterValues":[]}