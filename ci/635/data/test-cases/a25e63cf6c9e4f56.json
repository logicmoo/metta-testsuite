{"uid":"a25e63cf6c9e4f56","name":"INDEX-MIN-FUNCTIONS-EXTRA-3.02","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#INDEX-MIN-FUNCTIONS-EXTRA-3.02","time":{"start":1733224503000,"stop":1733224634938,"duration":131938},"status":"failed","statusMessage":"Test failed: Expected '((mod-space! stdlib))' but got '((mod-space! stdlib) (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combinati...(14325)'","statusTrace":"AssertionError: Test failed: Expected '((mod-space! stdlib))' but got '((mod-space! stdlib) (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combinati...(14325)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/index_min_functions_extra_3.metta.1_failed.html#HYPERON-METTALOG-SANITY.INDEX-MIN-FUNCTIONS-EXTRA-3.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-atoms &new-space))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((mod-space! stdlib))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((mod-space! stdlib) (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combinati...(14325)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ef3cf9f0695a7dc6","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/631//#testresult/ef3cf9f0695a7dc6","status":"failed","statusDetails":"Test failed: Expected '((mod-space! stdlib))' but got '((mod-space! stdlib) (@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combinati...(14325)'","time":{"start":1733050797000,"stop":1733050929870,"duration":132870}}]},"tags":[]},"source":"a25e63cf6c9e4f56.json","parameterValues":[]}