{"uid":"d37ded6fe22b422d","name":"MATCH-VOID.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-VOID.01","time":{"start":1733225696000,"stop":1733225826267,"duration":130267},"status":"failed","statusMessage":"Test failed: Expected '()' but got '((@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (: E...(14305)'","statusTrace":"AssertionError: Test failed: Expected '()' but got '((@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (: E...(14305)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://trueagi-io.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_void.metta.1_failed.html#METTA-MORPH-TESTS.MATCH-VOID.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (match &belief_events $1 $1))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (: E...(14305)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"9844e22dbc4b9744","reportUrl":"https://trueagi-io.github.io/metta-wam/ci/631//#testresult/9844e22dbc4b9744","status":"failed","statusDetails":"Test failed: Expected '()' but got '((@doc Any (@desc \"The universal type; any value belongs to this type.\")) (: Any Type) (@doc Atom (@desc \"Type representing any atom.\")) (: Atom Type) (@doc LazyEvaluatable (@desc \"A type of Atom/Value that hyperon does not implicitly evaluate\")) (: LazyEvaluatable Type) (:> Atom LazyEvaluatable) (@doc Bool (@desc \"Boolean type of True or False.\")) (: Bool Type) (@doc LazyBool (@desc \"A LazyEvaluatable that when evaluated returns True or False.\")) (: LazyBool Type) (:> LazyBool LazyEvaluatable) (@doc Expression (@desc \"Type representing an S-Expression, which is a combination of atoms.\")) (: E...(14305)'","time":{"start":1733052057000,"stop":1733052186002,"duration":129002}}]},"tags":[]},"source":"d37ded6fe22b422d.json","parameterValues":[]}