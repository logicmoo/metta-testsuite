
!(import! &self json)
!(assertEqual (json-encode 5) \"5\")
!(assertEqual (json-encode (5 4 3)) \"[5, 4, 3]\")
!(assertEqual (let $encoded (json-encode (5 4 3)) (json-decode $encoded)) (5 4 3))
!(assertEqual (json-decode 5) (Error 5 BadType))
!(assertEqual (json-decode \"[5, 4, 3]\") (5 4 3))
!(bind! &dictspace (dict-space ((\"k1\" v1) (\"k2\" v2) (\"k3\" (4 \"a\" 5)))))
!(assertEqual (let $decoded (let $encoded (json-encode &dictspace) (json-decode $encoded)) (get-keys $decoded)) (superpose (\"k1\" \"k2\" \"k3\")))
!(assertEqual (json-encode True) \"true\")
!(assertEqual (let $encoded (json-encode False) (json-decode $encoded)) False)
!(assertEqual (json-decode \"null\") null)
!(assertEqual (let $encoded (json-encode null) (json-decode $encoded)) null)
!(assertEqual (json-encode symbol) \"\\\"sym!:symbol\\\"\")
!(assertEqual (let $encoded (json-encode symbol) (json-decode $encoded)) symbol)
!(assertEqual (let $emptyspace (new-space) (json-encode $emptyspace)) \"{}\")
