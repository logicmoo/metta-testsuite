( mettalog '' 'add_to_list "--stdin=tty" STDIO_OPTIONS' )
( mettalog '' 'add_to_list "--stdin=tty" STDIO_OPTIONS' )
( mettalog '' '' 'do_DEBUG "$@"' )
( mettalog '' '' 'do_DEBUG "$@"' )
( mettalog '' ' elif [ "$verbose" -gt 1 ]; then' )
( mettalog '' ' elif [ "$verbose" -gt 1 ]; then' )
( mettalog '' '' 'do_DEBUG "$@"' )
( mettalog '' '' 'do_DEBUG "$@"' )
( mettalog       'do_DEBUG "$@"' )
( mettalog       'do_DEBUG "$@"' )
( mettalog '' 'return $?' )
( mettalog '' 'return $?' )
( mettalog '' '#|| { DEBUG "${RED}Error executing command:${NC} $*"; return 1; }' )
( mettalog '' '#|| { DEBUG "${RED}Error executing command:${NC} $*"; return 1; }' )
( mettalog '' 'exec $METTALOG_DIR/scripts/send_keys_debug.sh $(quote_args_if_needed $@)' )
( mettalog '' 'exec $METTALOG_DIR/scripts/send_keys_debug.sh $(quote_args_if_needed $@)' )
( mettalog '' '' return )
( mettalog '' '' return )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' '    # Check if the option is already in $@' )
( mettalog '' '    # Check if the option is already in $@' )
( mettalog '' '    local skip=0' )
( mettalog '' '    local skip=0' )
( mettalog '' '    for arg in "$@"; do' )
( mettalog '' '    for arg in "$@"; do' )
( mettalog '' '' 'if [[ "$arg" == "$line" ]]; then' )
( mettalog '' '' 'if [[ "$arg" == "$line" ]]; then' )
( mettalog '' '' '    skip=1' )
( mettalog '' '' '    skip=1' )
( mettalog '' '' '    break' )
( mettalog '' '' '    break' )
( mettalog '' '' fi )
( mettalog '' '' fi )
( mettalog '' '    done' )
( mettalog '' '    done' )
( mettalog '' '    if [[ "$skip" -eq 1 ]]; then' )
( mettalog '' '    if [[ "$skip" -eq 1 ]]; then' )
( mettalog '' '' '[[ "$verbose" == "1" ]] && DEBUG "Skipping option already in \$@: $line"' )
( mettalog '' '' '[[ "$verbose" == "1" ]] && DEBUG "Skipping option already in \$@: $line"' )
( mettalog '' '' continue )
( mettalog '' '' continue )
( mettalog '' '    fi' )
( mettalog '' '    fi' )
( mettalog '' 'list_ref=("$item" "${list_ref[@]}")' )
( mettalog '' 'list_ref=("$item" "${list_ref[@]}")' )
( mettalog '' '' '' '      Dump link info in sh(1) format (and exit)' )
( mettalog '' '' '' '      Dump link info in sh(1) format (and exit)' )
( mettalog '' '' '' '      If no metta files are provided, this is the default behavior.' )
( mettalog '' '' '' '      If no metta files are provided, this is the default behavior.' )
( mettalog '' '' '' '      directory as the input file or directory.' )
( mettalog '' '' '' '      directory as the input file or directory.' )
( mettalog '' '' '' '      Defaults to true if exactly one metta file or directory argument was provided' )
( mettalog '' '' '' '      Defaults to true if exactly one metta file or directory argument was provided' )
( mettalog '' '     $METTA_CMD' )
( mettalog '' '     $METTA_CMD' )
( mettalog '' 'if [ -d "$METTALOG_DIR/src/$FIRST_LINE/" ]; then' )
( mettalog '' 'if [ -d "$METTALOG_DIR/src/$FIRST_LINE/" ]; then' )
( mettalog '' '    PYSWIP_VERSION="$FIRST_LINE"' )
( mettalog '' '    PYSWIP_VERSION="$FIRST_LINE"' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' '    NEXT_ARG_IS_RC_FILE=false' )
( mettalog '' '    NEXT_ARG_IS_RC_FILE=false' )
( mettalog '' '    use_rc_file=""' )
( mettalog '' '    use_rc_file=""' )
( mettalog '' 'arg_realpath="$arg"' )
( mettalog '' 'arg_realpath="$arg"' )
( mettalog '' 'if [ "$SWI_FLAG_WITH_ARG" = true ]; then' )
( mettalog '' 'if [ "$SWI_FLAG_WITH_ARG" = true ]; then' )
( mettalog '' '    add_to_list "$arg_realpath" SWI_OPTIONS' )
( mettalog '' '    add_to_list "$arg_realpath" SWI_OPTIONS' )
( mettalog '' '    SWI_FLAG_WITH_ARG=false  # Reset the flag' )
( mettalog '' '    SWI_FLAG_WITH_ARG=false  # Reset the flag' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' 'case "$arg" in' )
( mettalog '' 'case "$arg" in' )
( mettalog '' '    --stack-limit=*|--stack_limit=*|--table-space=*|--shared-table-space=*|--pce=*|--pldoc=*|--tty=*|--packs=*|--signals=*|--sigalert=*|--threads=*|--debug=*|--debug-on-interrupt=*|--quiet=*|--traditional|--home=*|--on-error=*|--on-warning=*)' )
( mettalog '' '    --stack-limit=*|--stack_limit=*|--table-space=*|--shared-table-space=*|--pce=*|--pldoc=*|--tty=*|--packs=*|--signals=*|--sigalert=*|--threads=*|--debug=*|--debug-on-interrupt=*|--quiet=*|--traditional|--home=*|--on-error=*|--on-warning=*)' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' #continue )
( mettalog '' '' #continue )
( mettalog '' '' ;; )
( mettalog '' '' ;; )
( mettalog '' '    -D*=*|-O)' )
( mettalog '' '    -D*=*|-O)' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' continue )
( mettalog '' '' continue )
( mettalog '' '' ;; )
( mettalog '' '' ;; )
( mettalog '' '    -x|-g|-t|-f|-F|-l|-s|-p|-D)  # For options that require an argument in the next round' )
( mettalog '' '    -x|-g|-t|-f|-F|-l|-s|-p|-D)  # For options that require an argument in the next round' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' 'add_to_list "$arg" SWI_OPTIONS' )
( mettalog '' '' SWI_FLAG_WITH_ARG=true )
( mettalog '' '' SWI_FLAG_WITH_ARG=true )
( mettalog '' '' continue )
( mettalog '' '' continue )
( mettalog '' '' ;; )
( mettalog '' '' ;; )
( mettalog '' esac )
( mettalog '' esac )
( mettalog '' '    METTALOG_OPTIONS+=("$arg")' )
( mettalog '' '    METTALOG_OPTIONS+=("$arg")' )
( mettalog '' 'if [[ "$arg" == "--compatio" ]]; then' )
( mettalog '' 'if [[ "$arg" == "--compatio" ]]; then' )
( mettalog '' '    #debug_this_script=false' )
( mettalog '' '    #debug_this_script=false' )
( mettalog '' '    compatio=true        ' )
( mettalog '' '    compatio=true        ' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' 'if [[ "$arg" == "--debug" ]]; then' )
( mettalog '' 'if [[ "$arg" == "--debug" ]]; then' )
( mettalog '' '    debug_this_script=true' )
( mettalog '' '    debug_this_script=true' )
( mettalog '' '    compatio=false' )
( mettalog '' '    compatio=false' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' 'if [[ "$arg" == "--docker=false" ]]; then' )
( mettalog '' 'if [[ "$arg" == "--docker=false" ]]; then' )
( mettalog '' '    use_docker=false' )
( mettalog '' '    use_docker=false' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' 'if [[ "$arg" == "--docker=true" ]]; then' )
( mettalog '' 'if [[ "$arg" == "--docker=true" ]]; then' )
( mettalog '' '    use_docker=true' )
( mettalog '' '    use_docker=true' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' 'if [[ "$arg" == "--docker" ]]; then' )
( mettalog '' 'if [[ "$arg" == "--docker" ]]; then' )
( mettalog '' '    use_docker=true' )
( mettalog '' '    use_docker=true' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' '# Check if the argument is a directory' )
( mettalog '' '# Check if the argument is a directory' )
( mettalog '' 'if [ -d "$arg" ]; then' )
( mettalog '' 'if [ -d "$arg" ]; then' )
( mettalog '' '    use_test_script=1' )
( mettalog '' '    use_test_script=1' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' '     use_test_script=0' )
( mettalog '' '     use_test_script=0' )
( mettalog '' '    #do_DEBUG "TIMEOUT=$TIMEOUT PARSED=$parsed"' )
( mettalog '' '    #do_DEBUG "TIMEOUT=$TIMEOUT PARSED=$parsed"' )
( mettalog '' '    TIMEOUT=$parsed' )
( mettalog '' '    TIMEOUT=$parsed' )
( mettalog '' '    export TIMEOUT' )
( mettalog '' '    export TIMEOUT' )
( mettalog '' '    #METTALOG_OPTIONS=("--timeout=$TIMEOUT" "${METTALOG_OPTIONS[@]}")' )
( mettalog '' '    #METTALOG_OPTIONS=("--timeout=$TIMEOUT" "${METTALOG_OPTIONS[@]}")' )
( mettalog '' '    #add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '    #add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' 'elif [[ "$arg" =~ ^--python=(enable|disable|false)$ ]]; then' )
( mettalog '' 'elif [[ "$arg" =~ ^--python=(enable|disable|false)$ ]]; then' )
( mettalog ''      continue )
( mettalog ''      continue )
( mettalog ''      continue )
( mettalog ''      continue )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '    continue' )
( mettalog '' '          add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '          add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '[[ "$METTA_FLAG_WITH_ARG" == true ]] && { METTALOG_OPTIONS+=("\"$arg\""); METTA_FLAG_WITH_ARG=false; continue; }' )
( mettalog '' '[[ "$METTA_FLAG_WITH_ARG" == true ]] && { METTALOG_OPTIONS+=("\"$arg\""); METTA_FLAG_WITH_ARG=false; continue; }' )
( mettalog '' '        add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '        add_to_list "$arg" METTALOG_OPTIONS' )
( mettalog '' '' 'if [[ "$arg" =~ ^--output=(.*)$ ]]; then' )
( mettalog '' '' 'if [[ "$arg" =~ ^--output=(.*)$ ]]; then' )
( mettalog '' '' '    OUTPUT_DIR="${BASH_REMATCH[1]}"' )
( mettalog '' '' '    OUTPUT_DIR="${BASH_REMATCH[1]}"' )
( mettalog '' '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' '' fi )
( mettalog '' '' fi )
( mettalog '' '        add_to_list "$arg" PRE_METTALOG_OPTIONS' )
( mettalog '' '        add_to_list "$arg" PRE_METTALOG_OPTIONS' )
( mettalog '' '        add_to_front "--html" PRE_METTALOG_OPTIONS' )
( mettalog '' '        add_to_front "--html" PRE_METTALOG_OPTIONS' )
( mettalog '' '        add_to_front "--debug" PRE_METTALOG_OPTIONS' )
( mettalog '' '        add_to_front "--debug" PRE_METTALOG_OPTIONS' )
( mettalog '' '' compatio=false )
( mettalog '' '' compatio=false )
( mettalog '' '' html_flag=enable )
( mettalog '' '' html_flag=enable )
( mettalog '' '        if [ -f "${DefaultSav}" ]; then' )
( mettalog '' '        if [ -f "${DefaultSav}" ]; then' )
( mettalog '' '' '    rm -f "${DefaultSav}"' )
( mettalog '' '' '    rm -f "${DefaultSav}"' )
( mettalog '' '' fi )
( mettalog '' '' fi )
( mettalog '' '' never_compile=1 )
( mettalog '' '' never_compile=1 )
( mettalog '' '' 'DASH2="${arg#-}"' )
( mettalog '' '' 'DASH2="${arg#-}"' )
( mettalog '' '' 'PRE_METTALOG_OPTIONS=("$DASH2" "${PRE_METTALOG_OPTIONS[@]}")' )
( mettalog '' '' 'PRE_METTALOG_OPTIONS=("$DASH2" "${PRE_METTALOG_OPTIONS[@]}")' )
( mettalog '' '' 'if [[ -f "$arg" || -d "$arg" ]]; then' )
( mettalog '' '' 'if [[ -f "$arg" || -d "$arg" ]]; then' )
( mettalog '' '' '    arg_realpath="$(realpath "$arg")"' )
( mettalog '' '' '    arg_realpath="$(realpath "$arg")"' )
( mettalog '' '' '    if [[ -f "$arg_realpath" || -d "$arg_realpath" ]]; then' )
( mettalog '' '' '    if [[ -f "$arg_realpath" || -d "$arg_realpath" ]]; then' )
( mettalog '' '' '        add_to_list "$arg_realpath" LIST_OF_FILE_ARGS' )
( mettalog '' '' '        add_to_list "$arg_realpath" LIST_OF_FILE_ARGS' )
( mettalog '' '' '    fi' )
( mettalog '' '' '    fi' )
( mettalog '' '' fi )
( mettalog '' '' fi )
( mettalog '' 'arg_realpath="$(realpath "$arg")"' )
( mettalog '' 'arg_realpath="$(realpath "$arg")"' )
( mettalog '' 'if [[ -f "$arg_realpath" || -d "$arg_realpath" ]]; then' )
( mettalog '' 'if [[ -f "$arg_realpath" || -d "$arg_realpath" ]]; then' )
( mettalog '' '    add_to_list "$arg_realpath" LIST_OF_FILE_ARGS' )
( mettalog '' '    add_to_list "$arg_realpath" LIST_OF_FILE_ARGS' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' '#WILL_CALL=" -y --report=n $(quote_args_if_needed ${PRE_METTALOG_OPTIONS[*]}) $(quote_args_if_needed ${METTALOG_OPTIONS[*]}) $(quote_args_if_needed ${METTALOG_OPTIONS_LAST[*]})"' )
( mettalog '' '#WILL_CALL=" -y --report=n $(quote_args_if_needed ${PRE_METTALOG_OPTIONS[*]}) $(quote_args_if_needed ${METTALOG_OPTIONS[*]}) $(quote_args_if_needed ${METTALOG_OPTIONS_LAST[*]})"' )
( mettalog '' 'WILL_CALL=" -y --report=n $(quote_args_if_needed ${RC_OPTIONS[*]}) $(quote_args_if_needed $@)"' )
( mettalog '' 'WILL_CALL=" -y --report=n $(quote_args_if_needed ${RC_OPTIONS[*]}) $(quote_args_if_needed $@)"' )
( mettalog '' 'echo -e "${GREEN}test_in_metta.sh $WILL_CALL${NC}\n"' )
( mettalog '' 'echo -e "${GREEN}test_in_metta.sh $WILL_CALL${NC}\n"' )
( mettalog '' 'exec $METTALOG_DIR/scripts/test_in_metta.sh $WILL_CALL' )
( mettalog '' 'exec $METTALOG_DIR/scripts/test_in_metta.sh $WILL_CALL' )
( mettalog '' 'DEBUG "Reference file $reference_file does not exist. Compiler will be called."' )
( mettalog '' 'DEBUG "Reference file $reference_file does not exist. Compiler will be called."' )
( mettalog '' should_compile=1 )
( mettalog '' should_compile=1 )
( mettalog '' '# Iterate over each .pl file to check if it's newer' )
( mettalog '' '# Iterate over each .pl file to check if it's newer' )
( mettalog '' 'for pl_file in "$INTERP_SRC_DIR"/*_*.pl; do' )
( mettalog '' 'for pl_file in "$INTERP_SRC_DIR"/*_*.pl; do' )
( mettalog '' '    if [[ ! -e "$pl_file" ]]; then' )
( mettalog '' '    if [[ ! -e "$pl_file" ]]; then' )
( mettalog '' '' 'DEBUG "No matching .pl files found in $INTERP_SRC_DIR."' )
( mettalog '' '' 'DEBUG "No matching .pl files found in $INTERP_SRC_DIR."' )
( mettalog '' '' '#exit 1' )
( mettalog '' '' '#exit 1' )
( mettalog '' '    fi' )
( mettalog '' '    fi' )
( mettalog '' '    # Check if this .pl file is newer than the reference file' )
( mettalog '' '    # Check if this .pl file is newer than the reference file' )
( mettalog '' '    if [[ "$pl_file" -nt "$reference_file" ]]; then' )
( mettalog '' '    if [[ "$pl_file" -nt "$reference_file" ]]; then' )
( mettalog '' '' 'DEBUG "$pl_file is newer than $reference_file."' )
( mettalog '' '' 'DEBUG "$pl_file is newer than $reference_file."' )
( mettalog '' '' should_compile=1 )
( mettalog '' '' should_compile=1 )
( mettalog '' '' 'break  # No need to check further, exit loop' )
( mettalog '' '' 'break  # No need to check further, exit loop' )
( mettalog '' '    fi' )
( mettalog '' '    fi' )
( mettalog '' done )
( mettalog '' done )
( mettalog     # 'swipl -x $reference_file -g qsave_program -g halt' )
( mettalog     # 'swipl -x $reference_file -g qsave_program -g halt' )
( mettalog '' '#DEBUG "Compiling $reference_file" ' )
( mettalog '' '#DEBUG "Compiling $reference_file" ' )
( mettalog '' '#swipl -l src/$PYSWIP_VERSION/metta_interp.pl -g qcompile_mettalog -- --exeout=$reference_file' )
( mettalog '' '#swipl -l src/$PYSWIP_VERSION/metta_interp.pl -g qcompile_mettalog -- --exeout=$reference_file' )
( mettalog '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' 'export HTML_FILE="${HTML_OUT}"' )
( mettalog '' 'export HTML_FILE="${HTML_OUT}"' )
( mettalog '' '[[ "$wants_print_help" == "1" ]] && { print_help; }' )
( mettalog '' '[[ "$wants_print_help" == "1" ]] && { print_help; }' )
( mettalog '' 'DEBUG ""' )
( mettalog '' 'DEBUG ""' )
( mettalog '' 'DEBUG "Afterwhich ansi2html -u < $TEE_FILE > '$HTML_OUT'"' )
( mettalog '' 'DEBUG "Afterwhich ansi2html -u < $TEE_FILE > '$HTML_OUT'"' )
( mettalog '' 'DEBUG ""' )
( mettalog '' 'DEBUG ""' )
( mettalog '' '[[ -n "${EXIT_SCRIPT+x}" ]] && { [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '[[ -n "${EXIT_SCRIPT+x}" ]] && { [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '' )
( mettalog '' '' )
( mettalog '' 'IF_REALLY_DO "touch '$TEE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "touch '$TEE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "chmod 777 '$TEE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "chmod 777 '$TEE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "cat /dev/null > '$TEE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "cat /dev/null > '$TEE_FILE'"' )
( mettalog '' 'if [[ "$contains_halt" == "true" ]]; then' )
( mettalog '' 'if [[ "$contains_halt" == "true" ]]; then' )
( mettalog '' '' 'do_DEBUG "METTA_CMD: $METTA_CMD"' )
( mettalog '' '' 'do_DEBUG "METTA_CMD: $METTA_CMD"' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' execute_with_pipes )
( mettalog '' execute_with_pipes )
( mettalog '' 'echo $? > "$TEMP_EXIT_CODE_FILE"' )
( mettalog '' 'echo $? > "$TEMP_EXIT_CODE_FILE"' )
( mettalog '' '[[ "$wants_print_help" == "1" ]] && { print_help; [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '[[ "$wants_print_help" == "1" ]] && { print_help; [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '[[ -n "${EXIT_SCRIPT+x}" ]] && { [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '[[ -n "${EXIT_SCRIPT+x}" ]] && { [[ "$IS_SOURCED" == "1" ]] && return "$EXIT_SCRIPT" || exit "$EXIT_SCRIPT"; }' )
( mettalog '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' '    export METTALOG_OUTPUT="${OUTPUT_DIR}"' )
( mettalog '' 'if [[ "$contains_halt" == "true" ]]; then' )
( mettalog '' 'if [[ "$contains_halt" == "true" ]]; then' )
( mettalog '' '' 'do_DEBUG "METTA_CMD: $METTA_CMD"' )
( mettalog '' '' 'do_DEBUG "METTA_CMD: $METTA_CMD"' )
( mettalog '' fi )
( mettalog '' fi )
( mettalog '' execute_with_pipes )
( mettalog '' execute_with_pipes )
( mettalog '' 'IF_REALLY_DO "echo $? > '$TEMP_EXIT_CODE_FILE'"' )
( mettalog '' 'IF_REALLY_DO "echo $? > '$TEMP_EXIT_CODE_FILE'"' )
