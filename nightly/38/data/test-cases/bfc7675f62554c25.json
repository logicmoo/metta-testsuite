{"uid":"bfc7675f62554c25","name":"SYNTHESIZE-VIA-UNIFY-TEST.04","historyId":"EXPERIMENTS:EXPERIMENTS#SYNTHESIZE-VIA-UNIFY-TEST.04","time":{"start":1725072174000,"stop":1725072174000,"duration":0},"status":"failed","statusMessage":"Test failed: Expected '((: (. g f) (-> Number Bool)))' but got '((â· synthesize ((: number->bool (-> Number Bool)) (S Z)) (synthesize (: number->bool (-> Number Bool)) (S Z))))'","statusTrace":"AssertionError: Test failed: Expected '((: (. g f) (-> Number Bool)))' but got '((â· synthesize ((: number->bool (-> Number Bool)) (S Z)) (synthesize (: number->bool (-> Number Bool)) (S Z))))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"<a href=\"https://logicmoo.org/public/metta/./reports/BY_DATE/2024-08-31T01:47:12/tests/extended_compat/hyperon-pln/metta/synthesis/experiments/synthesize-via-unify-test.metta.html#EXPERIMENTS.SYNTHESIZE-VIA-UNIFY-TEST.04\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Assertion: (assertEqualToResult (record synthesize ((: $term (-> Number Bool)) (S Z))))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Expected: ((: (. g f) (-> Number Bool)))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Actual: ((â· synthesize ((: number->bool (-> Number Bool)) (S Z)) (synthesize (: number->bool (-> Number Bool)) (S Z))))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"EXPERIMENTS"},{"name":"testClass","value":"EXPERIMENTS"},{"name":"package","value":"EXPERIMENTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bfc7675f62554c25.json","parameterValues":[]}