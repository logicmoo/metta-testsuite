{
  "name": "metta-lsp",
  "displayName": "metta-lsp",
  "description": "A language server for MeTTa",
  "author": "Roy Ward",
  "license": "LGPL-3.0",
  "publisher": "RoyWard",
  "version": "0.0.5",
  "categories": [
    "Other"
  ],
  "keywords": [
    "mettalog"
  ],
  "engines": {
    "vscode": "^1.54.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/royward/lsp_server_metta"
  },
  "activationEvents": [
    "onLanguage:metta"
  ],
  "main": "./extension",
  "contributes": {
    "languages": [
      {
        "id": "metta",
        "aliases": [
          "metta",
          "mettalog",
          "MeTTa",
          "MeTTaLog",
          "meTTa",
          "meTTaLog"
        ],
        "configuration": "./metta.config.json",
        "extensions": [
          ".pl",
          ".plt",
          ".meld",
          ".kif",
          ".krf",
          ".metta"
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "MeTTa LSP Configuration",
      "properties": {
        "metta-lsp.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 1000,
          "description": "Sets the maximum number of diagnostic issues that the language server can report. Increase for larger projects if needed."
        },
        "metta-lsp.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Defines the level of detail for tracing communications between VS Code and the language server. 'verbose' provides the most comprehensive information, useful for debugging."
        },
        "metta-lsp.debug.showIncompleteFeatures": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "Enables the display of experimental or incomplete features in the language server when set to true. Useful for previewing upcoming functionality."
        },
        "metta-lsp.debug.showPositionDebug": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, displays debugging information for the current cursor position and document range in the editor, useful for debugging text positions."
        },
        "metta-lsp.debug.useLanguageModels": {
          "scope": "window",
          "type": "boolean",
          "default": true,
          "description": "Enables integration with language models for enhanced code suggestions and diagnostics when set to true. Disable if language model support is not required."
        },
        "metta-lsp.chatgpt.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": true,
          "description": "Enables or disables ChatGPT integration globally within the MeTTa language server."
        },
        "metta-lsp.chatgpt.apiKey": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Your OpenAI API key for enabling ChatGPT integration. This key allows the language server to access GPT models for advanced code assistance features."
        },
        "metta-lsp.chatgpt.model": {
          "scope": "window",
          "type": "string",
          "enum": [
            "gpt-3.5-turbo",
            "gpt-4"
          ],
          "default": "gpt-3.5-turbo",
          "description": "Selects the OpenAI GPT model to use for code assistance features. 'gpt-4' may provide better results but can be more costly and may require special access."
        },
        "metta-lsp.chatgpt.maxTokens": {
          "scope": "window",
          "type": "number",
          "default": 500,
          "description": "Sets the maximum number of tokens for ChatGPT responses. Adjust to control the length of generated code or explanations."
        },
        "metta-lsp.chatgpt.temperature": {
          "scope": "window",
          "type": "number",
          "default": 0.7,
          "minimum": 0.0,
          "maximum": 1.0,
          "description": "Controls the randomness of ChatGPT responses. Lower values make outputs more deterministic; higher values increase creativity."
        },
        "metta-lsp.chatgpt.features": {
          "scope": "window",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "codeRefactoring",
              "codeCommenting",
              "errorExplanation",
              "codeExecution",
              "testRunning"
            ]
          },
          "default": [
            "codeRefactoring",
            "codeCommenting",
            "errorExplanation"
          ],
          "description": "Selects which ChatGPT features are enabled. Choose from code refactoring, code commenting, error explanations, code execution, and test running."
        }
      }
    },
    "grammars": [
      {
      "language": "metta",
      "scopeName": "source.metta",
      "path": "./syntaxes/mettalanguage.json"
      }
    ]
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1"
  },
  "devDependencies": {
    "vscode": "^1.1.6"
  }
}
