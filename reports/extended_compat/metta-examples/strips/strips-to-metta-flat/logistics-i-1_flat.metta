(domain logistics) 
(type object) 
(type truck) 
(isa truck vehicle)
(type airplane) 
(isa airplane vehicle)
(type package) 
(isa package physobj)
(type vehicle) 
(isa vehicle physobj)
(type airport) 
(isa airport place)
(type location) 
(isa location place)
(type city) 
(isa city object)
(type place) 
(isa place object)
(type physobj) 
(isa physobj object)
(predicate at) 
(arity at 2) 
(var at 1 physobj) 
(var at 2 place) 
(predicate in) 
(arity in 2) 
(var in 1 package) 
(var in 2 vehicle) 
(predicate in-city) 
(arity in-city 2) 
(var in-city 1 place) 
(var in-city 2 city) 
(action LOAD-AIRPLANE) 
(var LOAD-AIRPLANE pkg package) 
(var LOAD-AIRPLANE airplane airplane) 
(var LOAD-AIRPLANE loc place) 
(precondition LOAD-AIRPLANE (at pkg loc )) 
(precondition LOAD-AIRPLANE (at airplane loc )) 
(negative_effect LOAD-AIRPLANE (at pkg loc )) 
(pos_effect LOAD-AIRPLANE (in pkg airplane )) 
(action UNLOAD-TRUCK) 
(var UNLOAD-TRUCK pkg package) 
(var UNLOAD-TRUCK truck truck) 
(var UNLOAD-TRUCK loc place) 
(precondition UNLOAD-TRUCK (at truck loc )) 
(precondition UNLOAD-TRUCK (in pkg truck )) 
(negative_effect UNLOAD-TRUCK (in pkg truck )) 
(pos_effect UNLOAD-TRUCK (at pkg loc )) 
(action LOAD-TRUCK) 
(var LOAD-TRUCK pkg package) 
(var LOAD-TRUCK truck truck) 
(var LOAD-TRUCK loc place) 
(precondition LOAD-TRUCK (at truck loc )) 
(precondition LOAD-TRUCK (at pkg loc )) 
(negative_effect LOAD-TRUCK (at pkg loc )) 
(pos_effect LOAD-TRUCK (in pkg truck )) 
(action UNLOAD-AIRPLANE) 
(var UNLOAD-AIRPLANE pkg package) 
(var UNLOAD-AIRPLANE airplane airplane) 
(var UNLOAD-AIRPLANE loc place) 
(precondition UNLOAD-AIRPLANE (in pkg airplane )) 
(precondition UNLOAD-AIRPLANE (at airplane loc )) 
(negative_effect UNLOAD-AIRPLANE (in pkg airplane )) 
(pos_effect UNLOAD-AIRPLANE (at pkg loc )) 
(action FLY-AIRPLANE) 
(var FLY-AIRPLANE airplane airplane) 
(var FLY-AIRPLANE loc-from airport) 
(var FLY-AIRPLANE loc-to airport) 
(precondition FLY-AIRPLANE (at airplane loc-from )) 
(negative_effect FLY-AIRPLANE (at airplane loc-from )) 
(pos_effect FLY-AIRPLANE (at airplane loc-to )) 
(action DRIVE-TRUCK) 
(var DRIVE-TRUCK truck truck) 
(var DRIVE-TRUCK loc-from place) 
(var DRIVE-TRUCK loc-to place) 
(var DRIVE-TRUCK city city) 
(precondition DRIVE-TRUCK (at truck loc-from )) 
(precondition DRIVE-TRUCK (in-city loc-from city )) 
(precondition DRIVE-TRUCK (in-city loc-to city )) 
(negative_effect DRIVE-TRUCK (at truck loc-from )) 
(pos_effect DRIVE-TRUCK (at truck loc-to )) 

(problem logistics-4-0) 
(object cit1)
(isa cit1 city)
(object pos2)
(isa pos2 location)
(object tru1)
(isa tru1 truck)
(object pos1)
(isa pos1 location)
(object obj12)
(isa obj12 package)
(object obj11)
(isa obj11 package)
(object apt2)
(isa apt2 airport)
(object apt1)
(isa apt1 airport)
(object obj22)
(isa obj22 package)
(object obj21)
(isa obj21 package)
(object obj13)
(isa obj13 package)
(object cit2)
(isa cit2 city)
(object apn1)
(isa apn1 airplane)
(object obj23)
(isa obj23 package)
(object tru2)
(isa tru2 truck)
(holds init (at tru2 pos2)) 
(holds init (in-city pos1 cit1)) 
(holds init (at tru1 pos1)) 
(holds init (at obj23 pos2)) 
(holds init (in-city apt2 cit2)) 
(holds init (at obj22 pos2)) 
(holds init (in-city pos2 cit2)) 
(holds init (at obj13 pos1)) 
(holds init (at apn1 apt2)) 
(holds init (at obj21 pos2)) 
(holds init (at obj12 pos1)) 
(holds init (in-city apt1 cit1)) 
(holds init (at obj11 pos1)) 
(holds goal (at obj11 apt1 )) 
(holds goal (at obj23 pos1 )) 
(holds goal (at obj13 apt1 )) 
(holds goal (at obj21 pos1 )) 
