
<html> <head> 

<script> 
function open_div(xid){ document.getElementById(xid).style.display = 'block'; }
function close_div(xid){ document.getElementById(xid).style.display = 'none'; }

</script> 

</head> 

<style> 
.tag_searched { display: inline-block; font-size: 18pt; font-weight: bold; font-style: italic } 
.tag_rs { display: inline-block; font-size: 18pt; margin-left: 7px; } 
.leftpar_rs { color: #C64F00 ; font-weight: bold } 
.rightpar_rs { color: #C64F00 ; font-weight: bold } 
.tag_py { display: inline-block ; font-size: 18pt; margin-left: 7px;} 
.leftpar_py { color: #008600 ; font-weight: bold } 
.rightpar_py { color: #008600 ; font-weight: bold } 
.tag_pl { display: inline-block ; font-size: 18pt; margin-left: 7px;} 
.leftpar_pl { color: #C0C0C0 ;  } 
.rightpar_pl { color: #C0C0C0 ;  } 
.tag_metta { display: inline-block ; font-size: 18pt; margin-left: 7px; } 
.leftpar_metta { color: #E2E2E2 ;  } 
.rightpar_metta { color: #E2E2E2 ;  } 

</style> 

<body style="font-family: arial; font-size: 12pt; background-color: #E5E5E5"> 
 <H2> 
include_metta_files </H2> 
 <H2> 
display_per_tag </H2> 
 <H2> 
rust_leading </H2> 

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> %</i></b>  <a onclick="prompt('copy path','%');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1886 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">%</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 493 <br> 
'<div class="tag_searched">%</div>'<div class="tag_pl leftpar_pl">(</div>Dividend, Divisor, Remainder<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['mod',Dividend, Divisor], Remainder<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Exponentiation 
<br>
 'exp'<div class="tag_pl leftpar_pl">(</div>Base, Exponent, Result<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['exp', Base, Exponent], Result<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 16 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">%</div> 21 17<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> &self</i></b>  <a onclick="prompt('copy path','&self');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1859 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">&self</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { self_atom.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 493 <br> 
    let self_atom = Atom::gnd<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">&self</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { self_atom.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
 } 
<br>
  
<br>
 pub fn register_rust_stdlib_tokens<div class="tag_rs leftpar_rs">(</div>target: &mut Tokenizer<div class="tag_rs rightpar_rs">)</div> { </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1858 <br> 
        let self_atom = Atom::gnd<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">&self</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { self_atom.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  
<br>
     #[cfg<div class="tag_rs leftpar_rs">(</div>feature = "old_interpreter"<div class="tag_rs rightpar_rs">)</div>] </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div>r::self-from-self<div class="tag_metta rightpar_metta">)</div> ; content </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/sql_space/sql_space_test.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div>sql.save-query-result &sql_space <div class="tag_searched">&self</div> <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>musicbrainz.artist <div class="tag_metta leftpar_metta">(</div>id $id<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>name $name<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>musicbrainz.artist <div class="tag_metta leftpar_metta">(</div>id $id<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>begin_date_year 1977<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>limit 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 62 <br> 
; it doesn't mean that the equality itself is true <div class="tag_metta leftpar_metta">(</div>an inhabited type<div class="tag_metta rightpar_metta">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 51 <br> 
; within MeTTa <div class="tag_metta leftpar_metta">(</div>e.g. for self-reflective genetic programming<div class="tag_metta rightpar_metta">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/image-generation.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>add-reduct <div class="tag_searched">&self</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>image-generation<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>snet-service "naint" "image-generation" 
<br>
        ; Put your data here or use environment variables 
<br>
        ;<div class="tag_metta leftpar_metta">(</div>Kwargs </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/generative-lms.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>add-reduct <div class="tag_searched">&self</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>generative-lms<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>snet-service "naint" "generative-lms" 
<br>
        ; Put your data here or use environment variables 
<br>
        ;<div class="tag_metta leftpar_metta">(</div>Kwargs </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>add-reduct <div class="tag_searched">&self</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>text-generation<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>snet-service "naint" "text-generation" 
<br>
        ; Put your data here or use environment variables 
<br>
        ;<div class="tag_metta leftpar_metta">(</div>Kwargs </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/code-generation.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>add-reduct <div class="tag_searched">&self</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>code-generation<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>snet-service "naint" "code-generation" 
<br>
        ; Put your data here or use environment variables 
<br>
        ;<div class="tag_metta leftpar_metta">(</div>Kwargs </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/abstractive-summarisation.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>add-reduct <div class="tag_searched">&self</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>abstractive-summarisation<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>snet-service "naint" "abstractive-summarisation" 
<br>
        ; Put your data here or use environment variables 
<br>
        ;<div class="tag_metta leftpar_metta">(</div>Kwargs </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> *</i></b>  <a onclick="prompt('copy path','*');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1882 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">*</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { mul_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 516 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">*</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { mul_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let div_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>DivOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"/"<div class="tag_rs rightpar_rs">)</div>, move |_| { div_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let mod_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ModOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"%"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1882 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">*</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { mul_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let div_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>DivOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"/"<div class="tag_rs rightpar_rs">)</div>, move |_| { div_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let mod_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ModOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"%"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 488 <br> 
'<div class="tag_searched">*</div>'<div class="tag_pl leftpar_pl">(</div>A, B, Product<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>[*,A,B],Product<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Division 
<br>
 '/'<div class="tag_pl leftpar_pl">(</div>Dividend, Divisor, Quotient<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['/',Dividend, Divisor], Quotient<div class="tag_pl rightpar_pl">)</div>.   %{Dividend = Quotient * Divisor}. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 414 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">*</div>', [arithmetic, qhelp<div class="tag_pl leftpar_pl">(</div>"Multiplication."<div class="tag_pl rightpar_pl">)</div>, multiplication]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 24 <br> 
  <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>foo 2 3 <div class="tag_metta leftpar_metta">(</div>\\ <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">*</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 8 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>boo $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">*</div> $x 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 108 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>sqr $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">*</div> $x $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> +</i></b>  <a onclick="prompt('copy path','+');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1878 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">+</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { sum_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 511 <br> 
    let sum_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SumOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">+</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { sum_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let sub_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SubOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\-"<div class="tag_rs rightpar_rs">)</div>, move |_| { sub_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let mul_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>MulOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1877 <br> 
        let sum_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SumOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">+</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { sum_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let sub_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SubOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\-"<div class="tag_rs rightpar_rs">)</div>, move |_| { sub_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let mul_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>MulOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 484 <br> 
'<div class="tag_searched">+</div>'<div class="tag_pl leftpar_pl">(</div>A, B, Sum<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>[+,A,B],Sum<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Subtraction 
<br>
 '-'<div class="tag_pl leftpar_pl">(</div> A, B, Sum<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>[-,A,B],Sum<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 412 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">+</div>', [arithmetic, qhelp<div class="tag_pl leftpar_pl">(</div>"Addition."<div class="tag_pl rightpar_pl">)</div>, addition]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/02-curried-plus.metta - line: 3 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>plus $x<div class="tag_metta rightpar_metta">)</div> $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 23 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> &x &y<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 12 <br> 
        <div class="tag_metta leftpar_metta">(</div>foo 10 20 <div class="tag_metta leftpar_metta">(</div>\\ <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y $z <div class="tag_metta leftpar_metta">(</div>foo 10 20 <div class="tag_metta leftpar_metta">(</div>\\ <div class="tag_metta leftpar_metta">(</div>$k $v<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>+ $k $v<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>: goo <div class="tag_metta leftpar_metta">(</div>-> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>goo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>* $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>" </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 39 <br> 
         <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y $z 
<br>
             <div class="tag_metta leftpar_metta">(</div>foo-f 10 30 <div class="tag_metta leftpar_metta">(</div>\ <div class="tag_metta leftpar_metta">(</div>$k $v<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>+ $k $v<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 51 <br> 
  <div class="tag_metta leftpar_metta">(</div>foo-f-gnd 1 2 <div class="tag_metta leftpar_metta">(</div>\ <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 58 <br> 
     <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>doo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 6 <br> 
   <div class="tag_metta leftpar_metta">(</div>jetta <div class="tag_metta leftpar_metta">(</div>new-jetta-space<div class="tag_metta rightpar_metta">)</div> "<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 2<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 15 <br> 
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>foo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
 ; checking that the function can be evaluated multiple times, 
<br>
 ; and it doesn't block evaluation of other expressions 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>foo 11 2<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 25 <br> 
  <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 11 12<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 59 <br> 
;  "<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>goo $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 69 <br> 
        <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $x 1<div class="tag_metta rightpar_metta">)</div> 0 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 <div class="tag_metta leftpar_metta">(</div>log-int <div class="tag_metta leftpar_metta">(</div>- $x 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 84 <br> 
; ! <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>foo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 19 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>my-goo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 <div class="tag_metta leftpar_metta">(</div>- $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 106 <br> 
  <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>- 3 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleA.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 2<div class="tag_metta rightpar_metta">)</div> 3<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleA.metta - line: 14 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>dup $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $x 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 10<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>g $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleA.metta - line: 17 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>f $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>< $x 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>- 0 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>g <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 9 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 5 "S"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 66 <br> 
; <div class="tag_metta leftpar_metta">(</div>Error <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 5 "S"<div class="tag_metta rightpar_metta">)</div> BadType<div class="tag_metta rightpar_metta">)</div>. Uncomment when old_interpreter feature is removed </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 68 <br> 
;   <div class="tag_metta leftpar_metta">(</div>f <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 5 "S"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 69 <br> 
;   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Error <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 5 "S"<div class="tag_metta rightpar_metta">)</div> BadType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleB.metta - line: 7 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>dup $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $x 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>g $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 10<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleC.metta - line: 9 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>g $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x <div class="tag_metta leftpar_metta">(</div>__g<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 49 <br> 
<div class="tag_metta leftpar_metta">(</div>: ConsN <div class="tag_metta leftpar_metta">(</div>-> $t <div class="tag_metta leftpar_metta">(</div>VecN $t $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>VecN $t <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 8 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 2 <div class="tag_metta leftpar_metta">(</div>* 3 5.5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 20 <br> 
  <div class="tag_metta leftpar_metta">(</div>< 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 2 <div class="tag_metta leftpar_metta">(</div>* 3 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 35 <br> 
  <div class="tag_metta leftpar_metta">(</div>ln <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 2 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 45 <br> 
  <div class="tag_metta leftpar_metta">(</div>> 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 46 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>> 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; This will also remain unreduced unless </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 54 <br> 
  <div class="tag_metta leftpar_metta">(</div>> 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 55 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>> 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; `==` is now implemented to work with both grounded and </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 63 <br> 
  <div class="tag_metta leftpar_metta">(</div>== 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 2 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 81 <br> 
  <div class="tag_metta leftpar_metta">(</div>== 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 91 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 2 "String"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 99 <br> 
; <div class="tag_metta leftpar_metta">(</div>Error <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div> BadType<div class="tag_metta rightpar_metta">)</div>. Uncomment when old_interpreter feature is removed </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 101 <br> 
;  <div class="tag_metta leftpar_metta">(</div>== 4 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 102 <br> 
;  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Error <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> ln 2<div class="tag_metta rightpar_metta">)</div> BadType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; Custom functions over grounded functions behave ordinarily </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 125 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> 1 <div class="tag_metta leftpar_metta">(</div>bin<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 157 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> <div class="tag_metta leftpar_metta">(</div>* $x $b<div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta leftpar_metta">(</div>subsum $xs $bs<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Non-determinism "reasoning": 
<br>
 ; Among all 3-bit binary lists, return the one whose `subsum` </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 92 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>lambda <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">+</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>2 7<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> -</i></b>  <a onclick="prompt('copy path','-');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1880 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"\<div class="tag_searched">-</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { sub_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 413 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">-</div>', [arithmetic, qhelp<div class="tag_pl leftpar_pl">(</div>"Subtraction."<div class="tag_pl rightpar_pl">)</div>, subtraction]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 5 <br> 
<div class="tag_metta leftpar_metta">(</div>: List <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 7 <br> 
<div class="tag_metta leftpar_metta">(</div>: Cons <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 9 <br> 
;<div class="tag_metta leftpar_metta">(</div>: if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> bool Any Any<div class="tag_metta rightpar_metta">)</div> Any<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 13 <br> 
<div class="tag_metta leftpar_metta">(</div>: insert <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/02-curried-plus.metta - line: 2 <br> 
<div class="tag_metta leftpar_metta">(</div>: plus <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number <div class="tag_metta leftpar_metta">(</div>-> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/02-curried-plus.metta - line: 5 <br> 
<div class="tag_metta leftpar_metta">(</div>: inc <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>-> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 5 <br> 
<div class="tag_metta leftpar_metta">(</div>: if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Bool Atom Atom $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 9 <br> 
<div class="tag_metta leftpar_metta">(</div>: Error <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Atom Atom ErrorType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta.answers - line: 1 <br> 
[<div class="tag_answers leftpar_answers">(</div><div class="tag_searched">-</div>> $a#2 <div class="tag_answers leftpar_answers">(</div>List $a#2<div class="tag_answers rightpar_answers">)</div> <div class="tag_answers leftpar_answers">(</div>List $a#2<div class="tag_answers rightpar_answers">)</div><div class="tag_answers rightpar_answers">)</div>] </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 3 <br> 
<div class="tag_metta leftpar_metta">(</div>: list<div class="tag_searched">-</div>to-set <div class="tag_metta leftpar_metta">(</div>-> Expression Expression<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 12 <br> 
<div class="tag_metta leftpar_metta">(</div>: mprogn <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Atom Atom Atom <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 8 <br> 
   "<div class="tag_metta leftpar_metta">(</div>: foo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int <div class="tag_metta leftpar_metta">(</div>-> Int Int Int<div class="tag_metta rightpar_metta">)</div> Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 10 <br> 
    <div class="tag_metta leftpar_metta">(</div>: bar <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 33 <br> 
<div class="tag_metta leftpar_metta">(</div>: foo<div class="tag_searched">-</div>f <div class="tag_metta leftpar_metta">(</div>-> Int Int <div class="tag_metta leftpar_metta">(</div>-> Int Int Int<div class="tag_metta rightpar_metta">)</div> Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 35 <br> 
<div class="tag_metta leftpar_metta">(</div>: bar<div class="tag_searched">-</div>lamb <div class="tag_metta leftpar_metta">(</div>-> Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 57 <br> 
    "<div class="tag_metta leftpar_metta">(</div>: doo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 59 <br> 
     <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>doo $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div> $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>doo 1 2<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 14 <br> 
  "<div class="tag_metta leftpar_metta">(</div>: foo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 67 <br> 
    "<div class="tag_metta leftpar_metta">(</div>: log<div class="tag_searched">-</div>int <div class="tag_metta leftpar_metta">(</div>-> Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 77 <br> 
       <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $n 0<div class="tag_metta rightpar_metta">)</div> 1 <div class="tag_metta leftpar_metta">(</div>* $n <div class="tag_metta leftpar_metta">(</div>fact <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div> $n 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>fact 10<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
   3628800<div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 83 <br> 
; ! <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>: foo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 86 <br> 
;! <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>: foo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 ;    <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>foo 0 0<div class="tag_metta rightpar_metta">)</div> 0<div class="tag_metta rightpar_metta">)</div> 
<br>
 ;    <div class="tag_metta leftpar_metta">(</div>foo 0 0<div class="tag_metta rightpar_metta">)</div> 
<br>
 ;    "<div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 7 <br> 
<div class="tag_metta leftpar_metta">(</div>: boo <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 18 <br> 
<div class="tag_metta leftpar_metta">(</div>: my<div class="tag_searched">-</div>goo <div class="tag_metta leftpar_metta">(</div>-> Int Int Int<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 15 <br> 
!<div class="tag_metta leftpar_metta">(</div>torch:conj <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>1+1j -2+2j 3-3j<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 11 <br> 
<div class="tag_metta leftpar_metta">(</div>: Human <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Entity Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 12 <br> 
<div class="tag_metta leftpar_metta">(</div>: Mortal <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Entity Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 24 <br> 
<div class="tag_metta leftpar_metta">(</div>: HumansAreMortal <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>Human $t<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Mortal $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 83 <br> 
; <div class="tag_metta leftpar_metta">(</div>: Refl <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>: $x $T<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>= $x $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 86 <br> 
; Such syntax `<div class="tag_metta leftpar_metta">(</div>: <div class="tag_metta leftpar_metta">(</div>Refl $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Type <div class="tag_metta leftpar_metta">(</div>= $x $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>` also doesn't work now. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 161 <br> 
<div class="tag_metta leftpar_metta">(</div>: ift <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Type $t $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleA.metta - line: 16 <br> 
<div class="tag_metta leftpar_metta">(</div>: f <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/g1_docs.metta - line: 20 <br> 
<div class="tag_metta leftpar_metta">(</div>: some<div class="tag_searched">-</div>func <div class="tag_metta leftpar_metta">(</div>-> Arg1Type Arg2Type ReturnType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/g1_docs.metta - line: 27 <br> 
               <div class="tag_metta leftpar_metta">(</div>@type <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Arg1Type Arg2Type ReturnType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/g1_docs.metta - line: 83 <br> 
; Function some<div class="tag_searched">-</div>func: <div class="tag_metta leftpar_metta">(</div>-> Arg1Type Arg2Type ReturnType<div class="tag_metta rightpar_metta">)</div> Test function </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 18 <br> 
<div class="tag_metta leftpar_metta">(</div>: Human <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Entity Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 19 <br> 
<div class="tag_metta leftpar_metta">(</div>: Mortal <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Entity Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 20 <br> 
<div class="tag_metta leftpar_metta">(</div>: HumansAreMortal <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>Human $t<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Mortal $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 63 <br> 
<div class="tag_metta leftpar_metta">(</div>: f <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleC.metta - line: 5 <br> 
<div class="tag_metta leftpar_metta">(</div>: __g <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleC.metta - line: 8 <br> 
<div class="tag_metta leftpar_metta">(</div>: g <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 27 <br> 
<div class="tag_metta leftpar_metta">(</div>: contains <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Expression <div class="tag_metta leftpar_metta">(</div>-> Atom Bool<div class="tag_metta rightpar_metta">)</div> Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 35 <br> 
<div class="tag_metta leftpar_metta">(</div>: is<div class="tag_searched">-</div>space <div class="tag_metta leftpar_metta">(</div>-> Atom Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 77 <br> 
<div class="tag_metta leftpar_metta">(</div>: is<div class="tag_searched">-</div>m <div class="tag_metta leftpar_metta">(</div>-> Atom Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 94 <br> 
<div class="tag_metta leftpar_metta">(</div>: is<div class="tag_searched">-</div>corelib <div class="tag_metta leftpar_metta">(</div>-> Atom Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 9 <br> 
<div class="tag_metta leftpar_metta">(</div>: S <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Nat Nat<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 12 <br> 
<div class="tag_metta leftpar_metta">(</div>: Vec <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Nat Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 14 <br> 
<div class="tag_metta leftpar_metta">(</div>: Cons <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>Vec $t $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Vec $t <div class="tag_metta leftpar_metta">(</div>S $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 23 <br> 
<div class="tag_metta leftpar_metta">(</div>: drop <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>Vec $t <div class="tag_metta leftpar_metta">(</div>S $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Vec $t $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 48 <br> 
<div class="tag_metta leftpar_metta">(</div>: VecN <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Number Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 58 <br> 
<div class="tag_metta leftpar_metta">(</div>: dropN <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>VecN $t $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>VecN $t <div class="tag_metta leftpar_metta">(</div>- $x 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 22 <br> 
; Arrow <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>><div class="tag_metta rightpar_metta">)</div> is a built-in symbol of the type system </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 26 <br> 
<div class="tag_metta leftpar_metta">(</div>: S <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Nat Nat<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 27 <br> 
<div class="tag_metta leftpar_metta">(</div>: Add <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Nat Nat Nat<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 66 <br> 
<div class="tag_metta leftpar_metta">(</div>: List <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Type Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 77 <br> 
<div class="tag_metta leftpar_metta">(</div>: Cons <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>List $t<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>List $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 99 <br> 
<div class="tag_metta leftpar_metta">(</div>: eq <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t $t Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 128 <br> 
<div class="tag_metta leftpar_metta">(</div>: of<div class="tag_searched">-</div>same-type <div class="tag_metta leftpar_metta">(</div>-> $t $t Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 230 <br> 
<div class="tag_metta leftpar_metta">(</div>: eqa <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Atom Atom Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e1_kb_write.metta - line: 21 <br> 
<div class="tag_metta leftpar_metta">(</div>: ift <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Bool Atom Atom<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div> 8 <div class="tag_metta leftpar_metta">(</div>/ 4 6.4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 137 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>fact $n<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $n 0<div class="tag_metta rightpar_metta">)</div> 1 <div class="tag_metta leftpar_metta">(</div>* <div class="tag_metta leftpar_metta">(</div>fact <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div> $n 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $n<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 6 <br> 
<div class="tag_metta leftpar_metta">(</div>: curry <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>-> $a $b $c<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>-> $a <div class="tag_metta leftpar_metta">(</div>-> $b $c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 13 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number <div class="tag_metta leftpar_metta">(</div>-> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>curry +<div class="tag_metta rightpar_metta">)</div> 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>-> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 32 <br> 
<div class="tag_metta leftpar_metta">(</div>: curry<div class="tag_searched">-</div>a <div class="tag_metta leftpar_metta">(</div>-> <div class="tag_metta leftpar_metta">(</div>-> $a $b $c<div class="tag_metta rightpar_metta">)</div> $a <div class="tag_metta leftpar_metta">(</div>-> $b $c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 38 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   Number<div class="tag_metta rightpar_metta">)</div> 
<br>
 ; Badly typed </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 58 <br> 
<div class="tag_metta leftpar_metta">(</div>: is <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Entity Entity Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 83 <br> 
<div class="tag_metta leftpar_metta">(</div>: lambda <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Atom $t <div class="tag_metta leftpar_metta">(</div>-> $a $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 104 <br> 
; returns <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> %Undefined% Number<div class="tag_metta rightpar_metta">)</div>, because the type of `<div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div>` is not defined. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 112 <br> 
<div class="tag_metta leftpar_metta">(</div>: Maybe <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 113 <br> 
<div class="tag_metta leftpar_metta">(</div>: Nothing <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>Maybe $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 114 <br> 
<div class="tag_metta leftpar_metta">(</div>: Something <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>Maybe $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 116 <br> 
<div class="tag_metta leftpar_metta">(</div>: Either <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 117 <br> 
<div class="tag_metta leftpar_metta">(</div>: Left <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>Either $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 118 <br> 
<div class="tag_metta leftpar_metta">(</div>: Right <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>Either $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 126 <br> 
<div class="tag_metta leftpar_metta">(</div>: fmap <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> <div class="tag_metta leftpar_metta">(</div>-> $a $b<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$F $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$F $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 186 <br> 
<div class="tag_metta leftpar_metta">(</div>: fmap<div class="tag_searched">-</div>i <div class="tag_metta leftpar_metta">(</div>-> <div class="tag_metta leftpar_metta">(</div>-> $a $b<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$F $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$F $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 196 <br> 
<div class="tag_metta leftpar_metta">(</div>: List <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 198 <br> 
<div class="tag_metta leftpar_metta">(</div>: Cons <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 16 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number Number Number<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; If its argument is a badly typed expression, 
<br>
 ; `get-type` returns the empty set 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqualToResult </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 37 <br> 
<div class="tag_metta leftpar_metta">(</div>: Left <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> %Undefined% Either<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 38 <br> 
<div class="tag_metta leftpar_metta">(</div>: Right <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> %Undefined% Either<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 44 <br> 
<div class="tag_metta leftpar_metta">(</div>: isLeft <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Either Bool<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 61 <br> 
<div class="tag_metta leftpar_metta">(</div>: EitherP <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 62 <br> 
<div class="tag_metta leftpar_metta">(</div>: LeftP <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>EitherP $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 63 <br> 
<div class="tag_metta leftpar_metta">(</div>: RightP <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $t <div class="tag_metta leftpar_metta">(</div>EitherP $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 69 <br> 
<div class="tag_metta leftpar_metta">(</div>: Pair <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a $b Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 70 <br> 
<div class="tag_metta leftpar_metta">(</div>: pair <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a $b <div class="tag_metta leftpar_metta">(</div>Pair $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 80 <br> 
<div class="tag_metta leftpar_metta">(</div>: List <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a Type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 82 <br> 
<div class="tag_metta leftpar_metta">(</div>: Cons <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> $a <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>List $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 17 <br> 
<div class="tag_metta leftpar_metta">(</div>: start_text <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> String string<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 18 <br> 
<div class="tag_metta leftpar_metta">(</div>: run_name <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> String string<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 19 <br> 
<div class="tag_metta leftpar_metta">(</div>: temperature <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number float<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 20 <br> 
<div class="tag_metta leftpar_metta">(</div>: top_k <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number int32<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 21 <br> 
<div class="tag_metta leftpar_metta">(</div>: length <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> Number int32<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 23 <br> 
<div class="tag_metta leftpar_metta">(</div>: gen_gpt_2 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> String String Number Number Number String<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/code-generation.metta - line: 15 <br> 
<div class="tag_metta leftpar_metta">(</div>: generate <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">-</div>> String String<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> /</i></b>  <a onclick="prompt('copy path','/');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1884 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">/</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { div_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> <</i></b>  <a onclick="prompt('copy path','<');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1888 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched"><</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { lt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 521 <br> 
    let lt_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LessOp{}<div class="tag_rs rightpar_rs">)</div>; 
<div class="tag_searched"><</div>br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<"<div class="tag_rs rightpar_rs">)</div>, move |_| { lt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let gt_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GreaterOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r">"<div class="tag_rs rightpar_rs">)</div>, move |_| { gt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let le_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LessEqOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1887 <br> 
        let lt_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LessOp{}<div class="tag_rs rightpar_rs">)</div>; 
<div class="tag_searched"><</div>br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<"<div class="tag_rs rightpar_rs">)</div>, move |_| { lt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let gt_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GreaterOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r">"<div class="tag_rs rightpar_rs">)</div>, move |_| { gt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let le_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LessEqOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 416 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched"><</div>', [comparison, qhelp<div class="tag_pl leftpar_pl">(</div>"Less than."<div class="tag_pl rightpar_pl">)</div>, less_than]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 13 <br> 
   <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> $n 3<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>fib $n<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $i <div class="tag_metta leftpar_metta">(</div>- $n 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
              <div class="tag_metta leftpar_metta">(</div>+ $a $b<div class="tag_metta rightpar_metta">)</div> 
<br>
             <div class="tag_metta leftpar_metta">(</div>fib1 $b <div class="tag_metta leftpar_metta">(</div>+ $a $b<div class="tag_metta rightpar_metta">)</div> $n <div class="tag_metta leftpar_metta">(</div>+ $i 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 18 <br> 
       <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> $x $head<div class="tag_metta rightpar_metta">)</div> 
<br>
 	      <div class="tag_metta leftpar_metta">(</div>Cons $x <div class="tag_metta leftpar_metta">(</div>Cons $head $tail<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 	      <div class="tag_metta leftpar_metta">(</div>Cons $head <div class="tag_metta leftpar_metta">(</div>insert $x $tail<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>insert 2 <div class="tag_metta leftpar_metta">(</div>insert 1 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Cons 1 <div class="tag_metta leftpar_metta">(</div>Cons 2 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>> 5 3<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> 2 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 45 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> 0 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>py-dot 
<br>
        <div class="tag_metta leftpar_metta">(</div>case <div class="tag_metta leftpar_metta">(</div>jetta &jspace "<div class="tag_metta leftpar_metta">(</div>foof 11 4<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Error $1 <div class="tag_metta leftpar_metta">(</div>JettaCompileError $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
       "find"<div class="tag_metta rightpar_metta">)</div> "CannotResolveSymbol"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 30 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> 0 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>py-dot 
<br>
        <div class="tag_metta leftpar_metta">(</div>case <div class="tag_metta leftpar_metta">(</div>compile &jspace <div class="tag_metta leftpar_metta">(</div>ffff a b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Error $1 <div class="tag_metta leftpar_metta">(</div>JettaCompileError $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
       "find"<div class="tag_metta rightpar_metta">)</div> "function name"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 8 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>min $a $b<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> $a $b<div class="tag_metta rightpar_metta">)</div> $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 24 <br> 
  <div class="tag_metta leftpar_metta">(</div>and <div class="tag_metta leftpar_metta">(</div>> 4 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched"><</div> 4 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> <=</i></b>  <a onclick="prompt('copy path','<=');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1892 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched"><=</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { le_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 526 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched"><=</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { le_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let ge_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GreaterEqOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r">="<div class="tag_rs rightpar_rs">)</div>, move |_| { ge_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let eq_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::EqualOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"=="<div class="tag_rs rightpar_rs">)</div>, move |_| { eq_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1892 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched"><=</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { le_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let ge_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GreaterEqOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r">="<div class="tag_rs rightpar_rs">)</div>, move |_| { ge_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let eq_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>EqualOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"=="<div class="tag_rs rightpar_rs">)</div>, move |_| { eq_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 419 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched"><=</div>', [comparison, qhelp<div class="tag_pl leftpar_pl">(</div>"Less than or equal to."<div class="tag_pl rightpar_pl">)</div>, less_than_or_equal]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> ==</i></b>  <a onclick="prompt('copy path','==');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1896 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">==</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { eq_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 426 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">==</div>', [logic, qhelp<div class="tag_pl leftpar_pl">(</div>"Equality test."<div class="tag_pl rightpar_pl">)</div>, equality_test]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 6 <br> 
    <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> $n 0<div class="tag_metta rightpar_metta">)</div> 
<br>
         0 
<br>
         <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== $n 1<div class="tag_metta rightpar_metta">)</div> 
<br>
             1 
<br>
             <div class="tag_metta leftpar_metta">(</div>+ <div class="tag_metta leftpar_metta">(</div>fib <div class="tag_metta leftpar_metta">(</div>- $n 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>fib <div class="tag_metta leftpar_metta">(</div>- $n 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> 1 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>== 2 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 25 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> <div class="tag_metta leftpar_metta">(</div>np.add &y &x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>np.add &x &y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> ; True </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 26 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> &x &y<div class="tag_metta rightpar_metta">)</div> ; False </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 28 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> &x <div class="tag_metta leftpar_metta">(</div>np.vector 1 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> ; False </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 129 <br> 
      <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> $cause $type<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>empty<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>= $cause T<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>Mortal Plato<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> 
<br>
   T<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>: Sam Entity<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 12 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> 5 "S"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 26 <br> 
<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> Mortal Human<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 30 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> SocratesIsHuman SamIsMortal<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 29 <br> 
  <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> $list <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> False 
<br>
     <div class="tag_metta leftpar_metta">(</div>let $head <div class="tag_metta leftpar_metta">(</div>car-atom $list<div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>$condition $head<div class="tag_metta rightpar_metta">)</div> True 
<br>
         <div class="tag_metta leftpar_metta">(</div>let $tail <div class="tag_metta leftpar_metta">(</div>cdr-atom $list<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>contains $tail $condition<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 78 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>is-m $atom<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> $atom &m<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 95 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>is-corelib $atom<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> $atom &corelib<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 66 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> 2 3<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 69 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> <div class="tag_metta leftpar_metta">(</div>A B<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>A B<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 72 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">==</div> <div class="tag_metta leftpar_metta">(</div>A B<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>A <div class="tag_metta leftpar_metta">(</div>B C<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> ></i></b>  <a onclick="prompt('copy path','>');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1890 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">></div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { gt_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 421 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">></div>', [comparison, qhelp<div class="tag_pl leftpar_pl">(</div>"Greater than."<div class="tag_pl rightpar_pl">)</div>, greater_than]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 102 <br> 
  <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">></div> 1 2<div class="tag_metta rightpar_metta">)</div> 1 2<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 148 <br> 
   <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">></div> $n 0<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>:: <div class="tag_metta leftpar_metta">(</div>bin<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>gen <div class="tag_metta leftpar_metta">(</div>- $n 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 ; Note: `::` is just a custom symbol, used here as a constructor, 
<br>
 ; but any other symbol can be used for this. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> >=</i></b>  <a onclick="prompt('copy path','>=');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1894 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">>=</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { ge_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 417 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">>=</div>', [comparison, qhelp<div class="tag_pl leftpar_pl">(</div>"Greater than or equal to."<div class="tag_pl rightpar_pl">)</div>, greater_than_or_equal]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> add-atom</i></b>  <a onclick="prompt('copy path','add-atom');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1773 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">add-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { add_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 419 <br> 
    let add_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::AddAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">add-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { add_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let remove_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::RemoveAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"remove-atom"<div class="tag_rs rightpar_rs">)</div>, move |_| { remove_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let get_atoms_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::GetAtomsOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2010 <br> 
    fn add_atom_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>GroundingSpace::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let satom = Atom::gnd<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let res = AddAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![satom, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo" "bar"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![UNIT_ATOM<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 399 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">add-atom</div>', [manipulation, qhelp<div class="tag_pl leftpar_pl">(</div>"Replaces an atom within a structure."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &kb <div class="tag_metta leftpar_metta">(</div>SS-P_AS A_AS B_AS<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &kb <div class="tag_metta leftpar_metta">(</div>SS-Q_AS A_AS C_AS<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 17 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &das <div class="tag_metta leftpar_metta">(</div>Best <div class="tag_metta leftpar_metta">(</div>Test A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 18 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &das Test<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 38 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &das <div class="tag_metta leftpar_metta">(</div>Rest <div class="tag_metta leftpar_metta">(</div>Test B<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 39 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &das <div class="tag_metta leftpar_metta">(</div>Test <div class="tag_metta leftpar_metta">(</div>Test B<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/test_include.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &self <div class="tag_metta leftpar_metta">(</div>six notprime<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>William has 2 brothers<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Brothers names are Mike and Nick<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 10 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Nick is 3 years older than William<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Mike is 5 years younger than Nick<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 34 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>user<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e1_kb_write.metta - line: 28 <br> 
       <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">add-atom</div> &kb <div class="tag_metta leftpar_metta">(</div>Green $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Retrieve the inferred Green things: Fritz and Sam. 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqualToResult </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> and</i></b>  <a onclick="prompt('copy path','and');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1898 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">and</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { and_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1897 <br> 
        let <div class="tag_searched">and</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>AndOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"and"<div class="tag_rs rightpar_rs">)</div>, move |_| { and_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let or_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>OrOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"or"<div class="tag_rs rightpar_rs">)</div>, move |_| { or_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let not_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>NotOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1339 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">and</div>',X,Y],TF<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     as_tf<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div> <div class="tag_pl leftpar_pl">(</div>eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,X<div class="tag_pl rightpar_pl">)</div>, 
<br>
              eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Y<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, TF<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 429 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">and</div>', [logic, qhelp<div class="tag_pl leftpar_pl">(</div>"Logical AND."<div class="tag_pl rightpar_pl">)</div>, logical_and]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 10 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>not True<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> True False<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/test_gnd_conv.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/test_gnd_conv.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 41 <br> 
; Compositional <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div><div class="tag_metta rightpar_metta">)</div> query test </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 27 <br> 
; we could use `<div class="tag_metta leftpar_metta">(</div>.tv <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> $a $b<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>stv ...<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>` instead of this </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 28 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>TV <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>stv <div class="tag_metta leftpar_metta">(</div>min <div class="tag_metta leftpar_metta">(</div>s-tv <div class="tag_metta leftpar_metta">(</div>TV $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>s-tv <div class="tag_metta leftpar_metta">(</div>TV $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>min <div class="tag_metta leftpar_metta">(</div>c-tv <div class="tag_metta leftpar_metta">(</div>TV $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>c-tv <div class="tag_metta leftpar_metta">(</div>TV $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 66 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>TV <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>PA<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>PB<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>stv 0.3 0.8<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 76 <br> 
     <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>croaks $x<div class="tag_metta rightpar_metta">)</div> 
<br>
           <div class="tag_metta leftpar_metta">(</div>eat_flies $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>frog $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>stv 0.9 0.8<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 106 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> T T<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 108 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>make $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>ift <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>prevents <div class="tag_metta leftpar_metta">(</div>making $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>making $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
                        <div class="tag_metta leftpar_metta">(</div>makes $z $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>stop $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Add facts to knowledge base 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>prevents <div class="tag_metta leftpar_metta">(</div>making <div class="tag_metta leftpar_metta">(</div>air dry<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>making <div class="tag_metta leftpar_metta">(</div>air wet<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 34 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>philosopher $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>likes-to-wrestle $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>human $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Another implication rule </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 57 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>deduce <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>And <div class="tag_metta leftpar_metta">(</div>deduce $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>deduce $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; True & True = True 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>And T T<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 89 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>explain <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>And <div class="tag_metta leftpar_metta">(</div>explain $a<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>explain $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Example of explain why Plato is mortal 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 97 <br> 
      proven by <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>philosopher Plato<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>likes-to-wrestle Plato<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e1_kb_write.metta - line: 11 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>croaks $x<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>eat_flies $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>croaks Fritz<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>eat_flies Fritz<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>croaks Sam<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 188 <br> 
; possible <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> needed<div class="tag_metta rightpar_metta">)</div>: </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b3_direct.metta - line: 10 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> T T<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b3_direct.metta - line: 12 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">and</div> <div class="tag_metta leftpar_metta">(</div>croaks $x<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>eat_flies $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>green $x<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>frog $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> assertEqual</i></b>  <a onclick="prompt('copy path','assertEqual');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1825 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">assertEqual</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 448 <br> 
    let assert_equal_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div><div class="tag_searched">assertEqual</div>Op::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"assertEqual"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let assert_equal_to_result_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>AssertEqualToResultOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"assertEqualToResult"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_to_result_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let superpose_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SuperposeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1825 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">assertEqual</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let assert_equal_to_result_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>AssertEqualToResultOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"assertEqualToResult"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_to_result_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let collapse_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CollapseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"collapse"<div class="tag_rs rightpar_rs">)</div>, move |_| { collapse_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2128 <br> 
    fn assert_equal_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>bar<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2137 <br> 
        let assert_equal_op = <div class="tag_searched">assertEqual</div>Op::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>assert_equal_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"bar"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, unit_result<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         let actual = assert_equal_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"err"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2145 <br> 
        let actual = assert_equal_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"err"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let expected = Regex::new<div class="tag_rs leftpar_rs">(</div>"\nExpected: \\[\\<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div>|, |<div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div>\\<div class="tag_rs rightpar_rs">)</div>{3}\\]\nGot: \\[<div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div>\\]\nMissed result: <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_runtime_error<div class="tag_rs leftpar_rs">(</div>actual, expected<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 505 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,_RetType,Depth,Self,['<div class="tag_searched">assertEqual</div>',X,Y],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    loonit_assert_source_tf_empty<div class="tag_pl leftpar_pl">(</div> 
<br>
         ['assertEqual',X,Y],XX,YY, </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> assertEqualToResult</i></b>  <a onclick="prompt('copy path','assertEqualToResult');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1827 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">assertEqualToResult</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { assert_equal_to_result_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2151 <br> 
    fn assert_equal_to_result_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
         "<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2156 <br> 
        let assert_equal_to_result_op = <div class="tag_searched">assertEqualToResult</div>Op::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>assert_equal_to_result_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![ 
<br>
                 expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>"A" "B"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
                 unit_result<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 519 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,_RetType,Depth,Self,['<div class="tag_searched">assertEqualToResult</div>',X,Y],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    loonit_assert_source_tf_empty<div class="tag_pl leftpar_pl">(</div> 
<br>
         ['assertEqualToResult',X,Y],XX,YY, </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> bind!</i></b>  <a onclick="prompt('copy path','bind!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1769 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">bind!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { bind_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2074 <br> 
        let bind_op = BindOp::new<div class="tag_rs leftpar_rs">(</div>tokenizer.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>bind_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![sym!<div class="tag_rs leftpar_rs">(</div>"&my"<div class="tag_rs rightpar_rs">)</div>, sym!<div class="tag_rs leftpar_rs">(</div>"definition"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, unit_result<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let borrowed = tokenizer.borrow<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let constr = borrowed.find_token<div class="tag_rs leftpar_rs">(</div>"&my"<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1291 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,_Depth,_Slf,['<div class="tag_searched">bind!</div>',Other,['new-space']],RetVal<div class="tag_pl rightpar_pl">)</div>:- atom<div class="tag_pl leftpar_pl">(</div>Other<div class="tag_pl rightpar_pl">)</div>,!, 
<br>
   assert<div class="tag_pl leftpar_pl">(</div>was_asserted_space<div class="tag_pl leftpar_pl">(</div>Other<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, 
<br>
   make_nop<div class="tag_pl leftpar_pl">(</div>RetType,[],RetVal<div class="tag_pl rightpar_pl">)</div>, check_returnval<div class="tag_pl leftpar_pl">(</div>Eq,RetType,RetVal<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1294 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">bind!</div>',Other,Expr],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    must_det_ll<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div>into_name<div class="tag_pl leftpar_pl">(</div>Self,Other,Name<div class="tag_pl rightpar_pl">)</div>,!,eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Expr,Value<div class="tag_pl rightpar_pl">)</div>, 
<br>
     nb_bind<div class="tag_pl leftpar_pl">(</div>Name,Value<div class="tag_pl rightpar_pl">)</div>,  make_nop<div class="tag_pl leftpar_pl">(</div>RetType,Value,RetVal<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 601 <br> 
'<div class="tag_searched">bind!</div>'<div class="tag_pl leftpar_pl">(</div>Environment, Variable, Value<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['bind!', Environment, Variable], Value<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Let binding for single variable 
<br>
 'let'<div class="tag_pl leftpar_pl">(</div>Variable, Expression, Body, Result<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['let', Variable, Expression, Body], Result<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &kb <div class="tag_metta leftpar_metta">(</div>new-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &das <div class="tag_metta leftpar_metta">(</div>new-das<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 4 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &das <div class="tag_metta leftpar_metta">(</div>new-remote-das <div class="tag_metta leftpar_metta">(</div>Error "Put your IP here" <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 8081<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 3 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &das <div class="tag_metta leftpar_metta">(</div>new-das<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &das <div class="tag_metta leftpar_metta">(</div>new-remote-das <div class="tag_metta leftpar_metta">(</div>Error "Put your IP here" <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Error "Put port number here" <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &x <div class="tag_metta leftpar_metta">(</div>np.vector 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &y <div class="tag_metta leftpar_metta">(</div>np.array <div class="tag_metta leftpar_metta">(</div>3 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &m <div class="tag_metta leftpar_metta">(</div>np.array <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>6 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>7 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>8 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &mt <div class="tag_metta leftpar_metta">(</div>np.array <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 0 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>0 1 0<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> ChatOpenAI <div class="tag_metta leftpar_metta">(</div>py-atom langchain_openai.ChatOpenAI<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> ChatPromptTemplate <div class="tag_metta leftpar_metta">(</div>py-atom langchain_core.prompts.ChatPromptTemplate<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> StrOutputParser <div class="tag_metta leftpar_metta">(</div>py-atom langchain_core.output_parsers.StrOutputParser<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> model <div class="tag_metta leftpar_metta">(</div>ChatOpenAI <div class="tag_metta leftpar_metta">(</div>Kwargs <div class="tag_metta leftpar_metta">(</div>temperature 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>model "gpt-3.5-turbo"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> prompt <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot ChatPromptTemplate from_template<div class="tag_metta rightpar_metta">)</div> "tell me a joke about cat"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> chain1 <div class="tag_metta leftpar_metta">(</div>py-chain  <div class="tag_metta leftpar_metta">(</div>prompt model <div class="tag_metta leftpar_metta">(</div>StrOutputParser<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 13 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> prompt2 <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot ChatPromptTemplate from_messages <div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>py-tuple <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>"system" "You are very funny"<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>"user" "tell me joke about {foo}"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_03_langchain.metta - line: 15 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> chain2 <div class="tag_metta leftpar_metta">(</div>py-chain <div class="tag_metta leftpar_metta">(</div>prompt2 model <div class="tag_metta leftpar_metta">(</div>StrOutputParser<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_04_numpy_simple_import.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> linalg <div class="tag_metta leftpar_metta">(</div>py-atom numpy.linalg<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_04_numpy_simple_import.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> numpy <div class="tag_metta leftpar_metta">(</div>py-atom numpy<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_04_numpy_simple_import.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> m1 <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>py-dot numpy random.rand<div class="tag_metta rightpar_metta">)</div> 3 3 <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_04_numpy_simple_import.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> m1_inv <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot linalg inv<div class="tag_metta rightpar_metta">)</div> m1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_01.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> simple_fun <div class="tag_metta leftpar_metta">(</div>py-atom example_01.simple_fun<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_01.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> SimpleObject <div class="tag_metta leftpar_metta">(</div>py-atom example_01.SimpleObject<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_01.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> so <div class="tag_metta leftpar_metta">(</div>SimpleObject<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> np <div class="tag_metta leftpar_metta">(</div>py-atom numpy<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> a1 <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot np array<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>py-atom <div class="tag_metta leftpar_metta">(</div>py-tuple <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> a2 <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot a1 __mul__<div class="tag_metta rightpar_metta">)</div> 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> a3 <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot a1 __add__<div class="tag_metta rightpar_metta">)</div> a2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 12 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> m1 <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>py-dot np array<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>py-atom <div class="tag_metta leftpar_metta">(</div>py-list <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>py-list <div class="tag_metta leftpar_metta">(</div>4 4 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>py-tuple <div class="tag_metta leftpar_metta">(</div>6 7 8<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 13 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> linalg <div class="tag_metta leftpar_metta">(</div>py-atom numpy.linalg<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/simple_import/example_02_numpy.metta - line: 14 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> m1_inv <div class="tag_metta leftpar_metta">(</div> <div class="tag_metta leftpar_metta">(</div>py-dot linalg inv<div class="tag_metta rightpar_metta">)</div> m1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &v1 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &v2 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &v3 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &k1 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &k2 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &k3 <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> dict <div class="tag_metta leftpar_metta">(</div>bhv-majority <div class="tag_metta leftpar_metta">(</div>bhv-bind &v1 &k1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &v2 &k2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &v3 &k3<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 12 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> v1_retrived <div class="tag_metta leftpar_metta">(</div>bhv-bind &k1 dict<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/01_example_majority.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &a <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/01_example_majority.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &b <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/01_example_majority.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &c <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/01_example_majority.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &abc <div class="tag_metta leftpar_metta">(</div>bhv-majority &a &b &c <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/02_example_perm.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &a <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/02_example_perm.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &b <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/02_example_perm.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &perm1 <div class="tag_metta leftpar_metta">(</div>bhv-new-perm<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/02_example_perm.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> ab <div class="tag_metta leftpar_metta">(</div>bhv-majority &a &b <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &name <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &capital_city <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &money <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &united_states <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &washington_dc <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &dollar <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 9 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &mexico <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 10 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &mexico_city <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &peso <div class="tag_metta leftpar_metta">(</div>bhv-new<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 14 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> USA <div class="tag_metta leftpar_metta">(</div>bhv-majority <div class="tag_metta leftpar_metta">(</div>bhv-bind &name &united_states<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &capital_city &washington_dc<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &money &dollar<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 15 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> MEX <div class="tag_metta leftpar_metta">(</div>bhv-majority <div class="tag_metta leftpar_metta">(</div>bhv-bind &name &mexico<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &capital_city &mexico_city<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bhv-bind &money &peso<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 17 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> Pair <div class="tag_metta leftpar_metta">(</div>bhv-bind USA MEX<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 23 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> dollar_of_mexico <div class="tag_metta leftpar_metta">(</div>bhv-bind &dollar Pair<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &jspace <div class="tag_metta leftpar_metta">(</div>new-jetta-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 10 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &jspace <div class="tag_metta leftpar_metta">(</div>new-jetta-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &jspace <div class="tag_metta leftpar_metta">(</div>new-jetta-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/sql_space/sql_space_test.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &sql_space <div class="tag_metta leftpar_metta">(</div>new-sql-space musicbrainz_db localhost musicbrainz musicbrainz 5432<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &th <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div>3. 2. 3.<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 12 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &x <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div>3 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 13 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &m <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>6 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>7 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>8 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 17 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &a <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 1 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>0 0 0<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 18 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &b <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>-1 -1 -1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>1 1 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 29 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &q <div class="tag_metta leftpar_metta">(</div>torch:rand <div class="tag_metta leftpar_metta">(</div>3 4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 30 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &w <div class="tag_metta leftpar_metta">(</div>torch:rand <div class="tag_metta leftpar_metta">(</div>4 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 51 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &p <div class="tag_metta leftpar_metta">(</div>torch:rand <div class="tag_metta leftpar_metta">(</div>4 4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 54 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &k <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>0. 1.<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>1. 0.<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>2. 0.<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>2. 2.<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 56 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &c <div class="tag_metta leftpar_metta">(</div>torch:tensor <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 72 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &tm <div class="tag_metta leftpar_metta">(</div>torch:matmul <div class="tag_metta leftpar_metta">(</div>&q &w<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 75 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &mtm <div class="tag_metta leftpar_metta">(</div>torch:mean <div class="tag_metta leftpar_metta">(</div>&tm<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 83 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &foo_model <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module FooModel tm_test<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 94 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &kwargs_arange <div class="tag_metta leftpar_metta">(</div>kwargs <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>start 0<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>end 100<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>dtype torch.float<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>requires_grad True<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 97 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &kwargs_foo <div class="tag_metta leftpar_metta">(</div>kwargs <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>param1 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>param2 None<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>param3 foo<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 106 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &to_tensor_transform <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module ToTensor torchvision.transforms<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 109 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &train_data <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module FashionMNIST torchvision.datasets data True &to_tensor_transform None True<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 110 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &test_data <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module FashionMNIST torchvision.datasets data False &to_tensor_transform None True<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 113 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &train_dataloader <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module DataLoader torch.utils.data &train_data 64<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 114 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &test_dataloader <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module DataLoader torch.utils.data &test_data 64<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 118 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &model <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module NeuralNetwork tm_test<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 120 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &model_params <div class="tag_metta leftpar_metta">(</div>torch:get_model_params &model<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 123 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &optimizer <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module SGD torch.optim &model_params 0.001<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 126 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &loss_fn <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module CrossEntropyLoss torch.nn<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 130 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &trainer <div class="tag_metta leftpar_metta">(</div>torch:instantiate_module Trainer tm_test &train_dataloader &model &loss_fn &optimizer<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 42 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &state-active <div class="tag_metta leftpar_metta">(</div>new-state active<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e1_kb_write.metta - line: 7 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &kb <div class="tag_metta leftpar_metta">(</div>new-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">bind!</div> &state-token <div class="tag_metta leftpar_metta">(</div>new-state <div class="tag_metta leftpar_metta">(</div>A B<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> capture</i></b>  <a onclick="prompt('copy path','capture');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1821 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">capture</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { capture_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1820 <br> 
        let <div class="tag_searched">capture</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CaptureOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"capture"<div class="tag_rs rightpar_rs">)</div>, move |_| { capture_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let case_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CaseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"case"<div class="tag_rs rightpar_rs">)</div>, move |_| { case_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let assert_equal_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>AssertEqualOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> car-atom</i></b>  <a onclick="prompt('copy path','car-atom');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1779 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">car-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { car_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2047 <br> 
    fn car_atom_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let res = CarAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"A" "C"<div class="tag_rs rightpar_rs">)</div> "B"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" "C"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1018 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,_Dpth,_Slf,['<div class="tag_searched">car-atom</div>',Atom],CAR_Y<div class="tag_pl rightpar_pl">)</div>:- !, Atom=[CAR|_],!,do_expander<div class="tag_pl leftpar_pl">(</div>Eq,RetType,CAR,CAR_Y<div class="tag_pl rightpar_pl">)</div>. 
<br>
 eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,_Dpth,_Slf,['cdr-atom',Atom],CDR_Y<div class="tag_pl rightpar_pl">)</div>:- !, Atom=[_|CDR],!,do_expander<div class="tag_pl leftpar_pl">(</div>Eq,RetType,CDR,CDR_Y<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 505 <br> 
'<div class="tag_searched">car-atom</div>'<div class="tag_pl leftpar_pl">(</div>List, Head<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['car-atom', List], Head<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Retrieve Tail of the List 
<br>
 'cdr-atom'<div class="tag_pl leftpar_pl">(</div>List, Tail<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['cdr-atom', List], Tail<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 455 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">car-atom</div>', [list_operations, qhelp<div class="tag_pl leftpar_pl">(</div>"Retrieves the head of a list."<div class="tag_pl rightpar_pl">)</div>, head_retrieval]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> case</i></b>  <a onclick="prompt('copy path','case');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1823 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">case</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { case_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2084 <br> 
    fn <div class="tag_searched">case</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
         "<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2089 <br> 
        let <div class="tag_searched">case</div>_op = CaseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>case_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
                 expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>n "B"<div class="tag_rs rightpar_rs">)</div> n<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>"Empty" "D"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![Atom::sym<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2100 <br> 
    fn <div class="tag_searched">case</div>_op_external_vars_at_right_are_kept_untouched<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>GroundingSpace::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let case_op = CaseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>case_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>ext<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>t t<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2111 <br> 
    fn <div class="tag_searched">case</div>_op_internal_variables_has_priority_in_template<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>GroundingSpace::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let case_op = CaseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>case_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>x "A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>x x<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 748 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,_RetType,Depth,Self,['<div class="tag_searched">case</div>',A,[[Void,_]]],Res<div class="tag_pl rightpar_pl">)</div>:- 
<br>
    '%void%' == Void, 
<br>
    eval_args<div class="tag_pl leftpar_pl">(</div>Eq,_UnkRetType,Depth,Self,A,_<div class="tag_pl rightpar_pl">)</div>,!,Res =[]. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 753 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">case</div>',A,[]],NoResult<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
   %forall<div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>Eq,_RetType2,Depth,Self,Expr,_<div class="tag_pl rightpar_pl">)</div>,true<div class="tag_pl rightpar_pl">)</div>, 
<br>
   once<div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>Eq,_RetType2,Depth,Self,A,_<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 767 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">case</div>',A,CL|T],Res<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    must_det_ll<div class="tag_pl leftpar_pl">(</div>T==[]<div class="tag_pl rightpar_pl">)</div>, 
<br>
    into_case_list<div class="tag_pl leftpar_pl">(</div>CL,CASES<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 346 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">case</div>', [flow_control, qhelp<div class="tag_pl leftpar_pl">(</div>"Case selection."<div class="tag_pl rightpar_pl">)</div>, conditional_execution]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/01_lang_inc.metta - line: 4 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> $x 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Just $v<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Just <div class="tag_metta leftpar_metta">(</div>+ 1 $v<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 	<div class="tag_metta leftpar_metta">(</div>Nothing Nothing<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>maybe-inc Nothing<div class="tag_metta rightpar_metta">)</div> Nothing<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 20 <br> 
<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>+ 1 5<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>5 Error<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>6 OK<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>6 Error<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  OK<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 29 <br> 
 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>+ 1 5<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$x <div class="tag_metta leftpar_metta">(</div>+ 1 $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  7<div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 37 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> 5 
<br>
 	<div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>6 OK<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 44 <br> 
 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>3 OK-3<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>4 OK-4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>OK-3 OK-4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 52 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$x <div class="tag_metta leftpar_metta">(</div>+ 1 $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>3 4 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 101 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>$rel A $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-P $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>P $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-Q $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 109 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>$rel B $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-P $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>P $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-Q $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>%void% no-match </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 26 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>match  &kb  <div class="tag_metta leftpar_metta">(</div>$rel A_AS $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-P_AS $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>P_AS $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-Q_AS $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q_AS $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 36 <br> 
! <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>np.array <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>2 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>3 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>2 3<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>3 4<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>4 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$a $b $c<div class="tag_metta rightpar_metta">)</div> $b<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$x <div class="tag_metta leftpar_metta">(</div>$y1 $y2 $y3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>np.add $x $y2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 43 <br> 
! <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>np.vector 1 2 3<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>&x "X"<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 39 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>jetta "WRON SPACE" "<div class="tag_metta leftpar_metta">(</div>foo 11 4<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Error $1 <div class="tag_metta leftpar_metta">(</div>JettaCompileError $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>"Status code: 500"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; error: cannot resolve symbol </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 225 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">case</div> <div class="tag_metta leftpar_metta">(</div>< $x $head<div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>True  <div class="tag_metta leftpar_metta">(</div>Cons $x <div class="tag_metta leftpar_metta">(</div>Cons $head $tail<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>False <div class="tag_metta leftpar_metta">(</div>Cons $head <div class="tag_metta leftpar_metta">(</div>insert $x $tail<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Sort a list </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> cdr-atom</i></b>  <a onclick="prompt('copy path','cdr-atom');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1781 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">cdr-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { cdr_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1781 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">cdr-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { cdr_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let cons_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ConsAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"cons-atom"<div class="tag_rs rightpar_rs">)</div>, move |_| { cons_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let println_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>PrintlnOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"println!"<div class="tag_rs rightpar_rs">)</div>, move |_| { println_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2053 <br> 
    fn cdr_atom_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let res = CdrAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let res = CdrAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"A" "C"<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>"D" "E"<div class="tag_rs rightpar_rs">)</div> "B"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"D" "E"<div class="tag_rs rightpar_rs">)</div> "B"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 456 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">cdr-atom</div>', [list_operations, qhelp<div class="tag_pl leftpar_pl">(</div>"Retrieves the tail of a list."<div class="tag_pl rightpar_pl">)</div>, tail_retrieval]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 7 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">cdr-atom</div> $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>match_res_len $match_res<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div> == <div class="tag_metta leftpar_metta">(</div>cdr $match_res<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         1 </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> change-state!</i></b>  <a onclick="prompt('copy path','change-state!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1799 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">change-state!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { change_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1040 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">change-state!</div>',StateExpr, UpdatedValue], Ret<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
  call_in_shared_space<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,StateExpr,StateMonad<div class="tag_pl rightpar_pl">)</div>, 
<br>
   eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,UpdatedValue,Value<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 450 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">change-state!</div>', [state_management, qhelp<div class="tag_pl leftpar_pl">(</div>"Changes the state of a system component."<div class="tag_pl rightpar_pl">)</div>, system_integration]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 57 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">change-state!</div> &state-token 1<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> collapse</i></b>  <a onclick="prompt('copy path','collapse');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1829 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">collapse</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { collapse_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2164 <br> 
    fn <div class="tag_searched">collapse</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
         "<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2169 <br> 
        let <div class="tag_searched">collapse</div>_op = CollapseOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         let actual = collapse_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>actual.len<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 1<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div> </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 832 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">collapse</div>',List],Res<div class="tag_pl rightpar_pl">)</div>:-!, 
<br>
  findall_eval<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,List,Res<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 511 <br> 
'<div class="tag_searched">collapse</div>'<div class="tag_pl leftpar_pl">(</div>List, CollapsedList<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['collapse', List], CollapsedList<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Count Elements in List 
<br>
 %'CountElement'<div class="tag_pl leftpar_pl">(</div>List, Count<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['CountElement', List], Count<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 358 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">collapse</div>', [data_structures, qhelp<div class="tag_pl leftpar_pl">(</div>"Collapses a structure."<div class="tag_pl rightpar_pl">)</div>, manipulation]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
                            <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
                            <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
                            <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
                            <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 58 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 5 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div>superpose $list<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;; Test unique with simple duplicates 
<br>
 ;; This test verifies that `unique` removes all duplicates from <div class="tag_metta leftpar_metta">(</div>a b b c c c d<div class="tag_metta rightpar_metta">)</div>, resulting in [a, b, c, d]. 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 41 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> <div class="tag_metta leftpar_metta">(</div>+ 5 "S"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 26 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>shape<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 54 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">collapse</div> <div class="tag_metta leftpar_metta">(</div>shape<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> cons-atom</i></b>  <a onclick="prompt('copy path','cons-atom');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1783 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">cons-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { cons_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2063 <br> 
    fn cons_atom_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let res = ConsAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let res = ConsAtomOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" "F"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div> "D"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>res, vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"A" "F"<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div> "D"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> flip</i></b>  <a onclick="prompt('copy path','flip');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1907 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">flip</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { flip_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1907 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">flip</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { flip_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         target.move_front<div class="tag_rs leftpar_rs">(</div>&mut rust_tokens<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 625 <br> 
'<div class="tag_searched">flip</div>'<div class="tag_pl leftpar_pl">(</div>Bool<div class="tag_pl rightpar_pl">)</div> :- eval_H<div class="tag_pl leftpar_pl">(</div>['flip'], Bool<div class="tag_pl rightpar_pl">)</div>. % see `flip` in metta_eval.pl as `eval_20/6` 
<br>
  
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 477 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">flip</div>', [random, qhelp<div class="tag_pl leftpar_pl">(</div>"Return a random boolean."<div class="tag_pl rightpar_pl">)</div>, random_boolean]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> format-args</i></b>  <a onclick="prompt('copy path','format-args');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1787 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">format-args</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { format_args_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1786 <br> 
        let format_args_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>FormatArgsOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">format-args</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { format_args_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let trace_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>TraceOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"trace!"<div class="tag_rs rightpar_rs">)</div>, move |_| { trace_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let nop_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>NopOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1232 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">format-args</div>',Format,Args],Result<div class="tag_pl rightpar_pl">)</div>:- 
<br>
    eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Format,EFormat<div class="tag_pl rightpar_pl">)</div>, 
<br>
    eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Args,EArgs<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1237 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">format-args</div>',_Fmt,Args],_Result<div class="tag_pl rightpar_pl">)</div> :- 
<br>
    eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Args,EArgs<div class="tag_pl rightpar_pl">)</div>, 
<br>
    \+ is_list<div class="tag_pl leftpar_pl">(</div>EArgs<div class="tag_pl rightpar_pl">)</div>,!,throw_metta_return<div class="tag_pl leftpar_pl">(</div>['Error',Args,'BadType']<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 620 <br> 
'<div class="tag_searched">format-args</div>'<div class="tag_pl leftpar_pl">(</div>Format, Args, Result<div class="tag_pl rightpar_pl">)</div> :- eval_H<div class="tag_pl leftpar_pl">(</div>['format-args', Format, Args], Result<div class="tag_pl rightpar_pl">)</div>. 
<br>
  
<br>
 % ============================ </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 476 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">format-args</div>', [string_operations, qhelp<div class="tag_pl leftpar_pl">(</div>"Generate a formatted string using a format specifier."<div class="tag_pl rightpar_pl">)</div>, format_args]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 29 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "" <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> ""<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 31 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> " " <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> " "<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 33 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "{}" <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "1"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 35 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "{}}" <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "{}"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 37 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "xyz zy" <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "xyz zy"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 39 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "Indexed {1} {} {0} {}" <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "Indexed 2 1 1 2"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 41 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "Different types {} {} {} {} {} {}" <div class="tag_metta leftpar_metta">(</div>1 "2" 'c' -0.5 atom <div class="tag_metta leftpar_metta">(</div>1 2 c -0.5 atom<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "Different types 1 2 c -0.5 atom <div class="tag_metta leftpar_metta">(</div>1 2 c -0.5 atom<div class="tag_metta rightpar_metta">)</div>"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 43 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "Two digit index={11}" <div class="tag_metta leftpar_metta">(</div>0 1 2 3 4 5 6 7 8 9 10 "eleven"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "Two digit index=eleven"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 46 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "Bad args list {1} {} {0} {}" x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>format-args "Bad args list {1} {} {0} {}" x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 48 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">format-args</div> "Malformed format}{{}{{{}{} {4} { } {-1} {x} {{{{{{}}}}}}{{{{{}}}}}" <div class="tag_metta leftpar_metta">(</div>"success1" "success2"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> "Malformed format}{}{success1success2 {4} { } {-1} {x} {{{}}}{{{}}}"<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> get-atoms</i></b>  <a onclick="prompt('copy path','get-atoms');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1777 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-atoms</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_atoms_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 424 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-atoms</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_atoms_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let new_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::NewStateOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"new-state"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let change_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::ChangeStateOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"change-state!"<div class="tag_rs rightpar_rs">)</div>, move |_| { change_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1776 <br> 
        let get_atoms_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetAtomsOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-atoms</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_atoms_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let car_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CarAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"car-atom"<div class="tag_rs rightpar_rs">)</div>, move |_| { car_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let cdr_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CdrAtomOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2034 <br> 
    fn get_atoms_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>foo bar<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>bar foo<div class="tag_rs rightpar_rs">)</div> 
<br>
         "<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 396 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">get-atoms</div>', [data_retrieval, qhelp<div class="tag_pl leftpar_pl">(</div>"Retrieves atoms from a structure."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 71 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/sql_space/sql_space_test.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 6 <br> 
; Even at the very beginning of the script `<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div>` </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>let $x <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>get-type $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 46 <br> 
; !<div class="tag_metta leftpar_metta">(</div>let $x <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &m<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>car-atom $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 88 <br> 
;  <div class="tag_metta leftpar_metta">(</div>let $a <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>contains $a is-m<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 97 <br> 
  <div class="tag_metta leftpar_metta">(</div>let $a <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-atoms</div> &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>contains $a is-corelib<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> get-metatype</i></b>  <a onclick="prompt('copy path','get-metatype');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1803 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-metatype</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_meta_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 414 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-metatype</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_meta_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let is_equivalent = Atom::gnd<div class="tag_rs leftpar_rs">(</div>IfEqualOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"if-equal"<div class="tag_rs rightpar_rs">)</div>, move |_| { is_equivalent.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let new_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::NewSpaceOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"new-space"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1167 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>_Eq,_RetType,_Depth,_Self,['<div class="tag_searched">get-metatype</div>',Val],TypeO<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
   'get-metatype'<div class="tag_pl leftpar_pl">(</div>Val,TypeO<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-metatype</div> $atom<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $type 
<br>
     <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-equal $type Expression 
<br>
       <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-equal $atom <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div> $else $then<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
       $else <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 69 <br> 
  <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-metatype</div> $type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $meta 
<br>
     <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>switch <div class="tag_metta leftpar_metta">(</div>$type $meta<div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta leftpar_metta">(</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$_ Expression<div class="tag_metta rightpar_metta">)</div> 
<br>
           <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>car $type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $head </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> get-state</i></b>  <a onclick="prompt('copy path','get-state');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1801 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-state</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 429 <br> 
    let get_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::GetStateOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-state</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let nop_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::NopOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"nop"<div class="tag_rs rightpar_rs">)</div>, move |_| { nop_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let match_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::MatchOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1801 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-state</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let get_meta_type_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetMetaTypeOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"get-metatype"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_meta_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let mod_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ModSpaceOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"mod-space!"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 452 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">get-state</div>', [state_management, qhelp<div class="tag_pl leftpar_pl">(</div>"Gets the state of a component or system."<div class="tag_pl rightpar_pl">)</div>, data_retrieval]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 19 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-state</div> <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal lunch-order<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 35 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-state</div> <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal lunch-order<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 56 <br> 
  <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-state</div> <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal $goal<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
           active<div class="tag_metta rightpar_metta">)</div> 
<br>
       $goal 
<br>
       <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   lunch-order<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 18 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-state</div> <div class="tag_metta leftpar_metta">(</div>get-token<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 75 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-state</div> <div class="tag_metta leftpar_metta">(</div>get-token<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> get-type</i></b>  <a onclick="prompt('copy path','get-type');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1841 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-type</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 409 <br> 
    let get_type_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-type</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let get_type_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::GetTypeSpaceOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"get-type-space"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let get_meta_type_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::GetMetaTypeOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 556 <br> 
    fn get_type_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>: B Type<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: C Type<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: A B<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 564 <br> 
        let get_type_op = GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![sym!<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>{space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>}<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             vec![sym!<div class="tag_rs leftpar_rs">(</div>"B"<div class="tag_rs rightpar_rs">)</div>, sym!<div class="tag_rs leftpar_rs">(</div>"C"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 570 <br> 
    fn get_type_op_non_valid_atom<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>: f <div class="tag_rs leftpar_rs">(</div>-> Number String<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: 42 Number<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: \"test\" String<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 577 <br> 
        let get_type_op = GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"f" "42"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>{space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>}<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             vec![sym!<div class="tag_rs leftpar_rs">(</div>"String"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"f" "\"test\""<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>{space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>}<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             vec![EMPTY_SYMBOL]<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1840 <br> 
        let get_type_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-type</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let get_type_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetTypeSpaceOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"get-type-space"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let import_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ImportOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2342 <br> 
    fn get_type_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>: B Type<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: C Type<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: A B<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2350 <br> 
        let get_type_op = GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![sym!<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             vec![sym!<div class="tag_rs leftpar_rs">(</div>"B"<div class="tag_rs rightpar_rs">)</div>, sym!<div class="tag_rs leftpar_rs">(</div>"C"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2356 <br> 
    fn get_type_op_non_valid_atom<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>: f <div class="tag_rs leftpar_rs">(</div>-> Number String<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: 42 Number<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>: \"test\" String<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2363 <br> 
        let get_type_op = GetTypeOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"f" "42"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             vec![sym!<div class="tag_rs leftpar_rs">(</div>"String"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>get_type_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"f" "\"test\""<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 
<br>
             Vec::<Atom>::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1146 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">get-type</div>',Val,Self],Type<div class="tag_pl rightpar_pl">)</div>:- current_self<div class="tag_pl leftpar_pl">(</div>Self<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
     eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['get-type',Val],Type<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1150 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">get-type</div>',Val,Other],Type<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     into_space<div class="tag_pl leftpar_pl">(</div>Depth,Self,Other,Space<div class="tag_pl rightpar_pl">)</div>, 
<br>
     eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Space,['get-type',Val],Type<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1154 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>_Eq,_RetType,Depth,Self,['<div class="tag_searched">get-type</div>',Val],Type<div class="tag_pl rightpar_pl">)</div>:- is_list<div class="tag_pl leftpar_pl">(</div>Val<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
     catch_metta_return<div class="tag_pl leftpar_pl">(</div>get_type<div class="tag_pl leftpar_pl">(</div>Depth,Self,Val,Type<div class="tag_pl rightpar_pl">)</div>,TypeM<div class="tag_pl rightpar_pl">)</div>, 
<br>
     var<div class="tag_pl leftpar_pl">(</div>TypeM<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1158 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">get-type</div>',Val],TypeO<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     if_or_else<div class="tag_pl leftpar_pl">(</div>get_type<div class="tag_pl leftpar_pl">(</div>Depth,Self,Val,Type<div class="tag_pl rightpar_pl">)</div>,Type='%Undefined%'<div class="tag_pl rightpar_pl">)</div>, 
<br>
     %term_singletons<div class="tag_pl leftpar_pl">(</div>Type,[]<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 611 <br> 
'<div class="tag_searched">get-type</div>'<div class="tag_pl leftpar_pl">(</div>Value, Type<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['get-type', Value], Type<div class="tag_pl rightpar_pl">)</div>. 
<br>
  
<br>
  </div> <div style="color: #A7E3A7">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/test_examples.py - line: 370 <br> 
        self.assertEqualMettaRunnerResults<div class="tag_py leftpar_py">(</div>metta.run<div class="tag_py leftpar_py">(</div>'!<div class="tag_py leftpar_py">(</div><div class="tag_searched">get-type</div> "A"<div class="tag_py rightpar_py">)</div>'<div class="tag_py rightpar_py">)</div>, [[S<div class="tag_py leftpar_py">(</div>'String'<div class="tag_py rightpar_py">)</div>]]<div class="tag_py rightpar_py">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/03-soring-via-insert.metta - line: 14 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> insert<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 60 <br> 
  <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> $atom $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $actual-type 
<br>
     <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>switch <div class="tag_metta leftpar_metta">(</div>$actual-type $type<div class="tag_metta rightpar_metta">)</div> 
<br>
       <div class="tag_metta leftpar_metta">(</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>%Undefined% $_<div class="tag_metta rightpar_metta">)</div> $atom<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$_ %Undefined%<div class="tag_metta rightpar_metta">)</div> $atom<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 91 <br> 
    <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> $op $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $op-type 
<br>
       <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>is-function $op-type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $is-func 
<br>
         <div class="tag_metta leftpar_metta">(</div>match $is-func True 
<br>
           <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>interpret-func $atom $op-type $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $reduced-atom 
<br>
             <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>call $reduced-atom $type $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 18 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>Mortal Plato<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 40 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>HumansAreMortal SocratesIsHuman<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 44 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>HumansAreMortal <div class="tag_metta leftpar_metta">(</div>Human Socrates<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 58 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>= SocratesIsMortal <div class="tag_metta leftpar_metta">(</div>HumansAreMortal SocratesIsHuman<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 64 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>Mortal Socrates<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Mortal Plato<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 68 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>= SocratesIsMortal <div class="tag_metta leftpar_metta">(</div>HumansAreMortal PlatoIsHuman<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 72 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>= SocratesIsHuman PlatoIsHuman<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 75 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>= SocratesIsHuman SocratesIsMortal<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 19 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>Cons 0 <div class="tag_metta leftpar_metta">(</div>Cons 1 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 28 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>drop <div class="tag_metta leftpar_metta">(</div>Cons 1 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 37 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>drop Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 54 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>ConsN "1" <div class="tag_metta leftpar_metta">(</div>ConsN "2" NilN<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 62 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>dropN <div class="tag_metta leftpar_metta">(</div>ConsN "1" NilN<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d3_deptypes.metta - line: 68 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>dropN <div class="tag_metta leftpar_metta">(</div>dropN <div class="tag_metta leftpar_metta">(</div>ConsN "1" NilN<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 47 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> &state-token<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>curry +<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 37 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 44 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> "S"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 103 <br> 
;   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>lambda <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>+ $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 169 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>fmap <div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Left "5"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 175 <br> 
;  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>fmap <div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>UntypedC "5"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 178 <br> 
;  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>fmap <div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>UntypedC <div class="tag_metta leftpar_metta">(</div>Null<div class="tag_metta rightpar_metta">)</div> 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 7 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> 5<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 10 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>+ 5 7<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 15 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> +<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 21 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>+ 5 "4"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 24 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>+ -<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 30 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> Either<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 41 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>Left 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 49 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>isLeft <div class="tag_metta leftpar_metta">(</div>Right 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 54 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>isLeft 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 66 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>LeftP 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 73 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>pair <div class="tag_metta leftpar_metta">(</div>LeftP 5<div class="tag_metta rightpar_metta">)</div> "String"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 85 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>Cons 5 <div class="tag_metta leftpar_metta">(</div>Cons 6 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 88 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">get-type</div> <div class="tag_metta leftpar_metta">(</div>Cons 5 <div class="tag_metta leftpar_metta">(</div>Cons "6" Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> get-type-space</i></b>  <a onclick="prompt('copy path','get-type-space');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1843 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">get-type-space</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { get_type_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> git-module!</i></b>  <a onclick="prompt('copy path','git-module!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1033 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">git-module!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { git_module_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> import!</i></b>  <a onclick="prompt('copy path','import!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1845 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">import!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { import_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1845 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">import!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { import_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let include_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>IncludeOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"include"<div class="tag_rs rightpar_rs">)</div>, move |_| { include_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let pragma_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>PragmaOp::new<div class="tag_rs leftpar_rs">(</div>metta.settings<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"pragma!"<div class="tag_rs rightpar_rs">)</div>, move |_| { pragma_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1279 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">import!</div>',Other,File],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
      into_space<div class="tag_pl leftpar_pl">(</div>Depth,Self,Other,Space<div class="tag_pl rightpar_pl">)</div>, import_metta<div class="tag_pl leftpar_pl">(</div>Space,File<div class="tag_pl rightpar_pl">)</div>,!, 
<br>
      make_nr<div class="tag_pl leftpar_pl">(</div>Eq,RetType,RetVal<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 589 <br> 
'<div class="tag_searched">import!</div>'<div class="tag_pl leftpar_pl">(</div>Environment, Filename, Namespace<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['import!', Environment, Filename], Namespace<div class="tag_pl rightpar_pl">)</div>. 
<br>
 % Evaluate Expression with Pragma 
<br>
 'pragma!'<div class="tag_pl leftpar_pl">(</div>Environment, Expression, EvalValue<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['pragma!', Environment, Expression], EvalValue<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 382 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">import!</div>', [module_import, qhelp<div class="tag_pl leftpar_pl">(</div>"Imports an external module or file."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self das_gate<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self das_gate<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self resolve<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self r<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/numpy/nm_test.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self numme<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self neurospace<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 1 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 4 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet:naint:image-generation<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet:naint:code-generation<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 13 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet:naint:generative-lms<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 17 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet:naint:abstractive-summarisation<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/test_snet.metta - line: 21 <br> 
<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet:naint:text-generation<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/03_example_dict.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self bhv_binding<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/01_example_majority.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self bhv_binding<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/02_example_perm.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self bhv_binding<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/bhv_binding/04_example_dollar_of_mexico.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self bhv_binding<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_lambda.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self compile<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_basic_jetta.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self compile<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/jetta/test_expr_compile.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self compile<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/sql_space/sql_space_test.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self sql_space<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self torchme<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/ext_sub/module.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self self:ext_nested<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleA.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self f1_moduleC<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 6 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &kb c2_spaces_kb<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 51 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self c2_spaces_kb<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_moduleB.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self f1_moduleC<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 24 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &m f1_moduleA<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 64 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self f1_moduleA<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 93 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &corelib top:corelib<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 109 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self f1_moduleB<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 123 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self f1_moduleB<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/image-generation.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/generative-lms.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/text-generation.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/code-generation.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/snet/snet/naint/abstractive-summarisation.metta - line: 1 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">import!</div> &self snet_io<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> include</i></b>  <a onclick="prompt('copy path','include');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1847 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">include</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { include_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 473 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">include</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { include_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let bind_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::BindOp::new<div class="tag_rs leftpar_rs">(</div>tokenizer.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"bind!"<div class="tag_rs rightpar_rs">)</div>, move |_| { bind_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let trace_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::TraceOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"trace!"<div class="tag_rs rightpar_rs">)</div>, move |_| { trace_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1273 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,_Depth,Self,['<div class="tag_searched">include</div>',File],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
      include_metta<div class="tag_pl leftpar_pl">(</div>Self,File<div class="tag_pl rightpar_pl">)</div>,!, 
<br>
      make_nr<div class="tag_pl leftpar_pl">(</div>Eq,RetType,RetVal<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> intersection</i></b>  <a onclick="prompt('copy path','intersection');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1837 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">intersection</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { intersection_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2224 <br> 
    fn <div class="tag_searched">intersection</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> Z<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2248 <br> 
        let <div class="tag_searched">intersection</div>_op = IntersectionOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let actual = intersection_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"bar"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>actual, 
<br>
                    vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"Z"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1663 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">intersection</div>',Eval1,Eval2],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     lazy_intersection<div class="tag_pl leftpar_pl">(</div>RetVal1^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval1,RetVal1<div class="tag_pl rightpar_pl">)</div>, 
<br>
                   RetVal2^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval2,RetVal2<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 469 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">intersection</div>', [nondet_sets, qhelp<div class="tag_pl leftpar_pl">(</div>"It gives the intersection duplicates are not removed ."<div class="tag_pl rightpar_pl">)</div>, lazy_intersection]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> let</i></b>  <a onclick="prompt('copy path','let');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1793 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">let</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { let_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2387 <br> 
    fn <div class="tag_searched">let</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>a b<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"A" "B"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>b a<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>"B" "A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2393 <br> 
    fn <div class="tag_searched">let</div>_op_external_vars_at_right_are_kept_untouched<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>t<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>ext<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>t<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>ext<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>t<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>ext "A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>t<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>ext "A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2401 <br> 
    fn <div class="tag_searched">let</div>_op_internal_variables_has_priority_in_template<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>x<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>x "A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>x<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>x "A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2407 <br> 
    fn <div class="tag_searched">let</div>_op_keep_variables_equalities_issue290<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq_metta_results!<div class="tag_rs leftpar_rs">(</div>run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>let* <div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>$f f<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>$f $x<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> $x<div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>, Ok<div class="tag_rs leftpar_rs">(</div>vec![vec![expr!<div class="tag_rs leftpar_rs">(</div>"f"<div class="tag_rs rightpar_rs">)</div>]]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_metta_results!<div class="tag_rs leftpar_rs">(</div>run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>let* <div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>$f $x<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>$f f<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> $x<div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>, Ok<div class="tag_rs leftpar_rs">(</div>vec![vec![expr!<div class="tag_rs leftpar_rs">(</div>"f"<div class="tag_rs rightpar_rs">)</div>]]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_metta_results!<div class="tag_rs leftpar_rs">(</div>run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>let <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>$x $x<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>$z $y<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>let $y A <div class="tag_rs leftpar_rs">(</div>$z $y<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>, Ok<div class="tag_rs leftpar_rs">(</div>vec![vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" "A"<div class="tag_rs rightpar_rs">)</div>]]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_metta_results!<div class="tag_rs leftpar_rs">(</div>run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>let <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>$x $x<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>$z $y<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>let $z A <div class="tag_rs leftpar_rs">(</div>$z $y<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>, Ok<div class="tag_rs leftpar_rs">(</div>vec![vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" "A"<div class="tag_rs rightpar_rs">)</div>]]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2415 <br> 
    fn <div class="tag_searched">let</div>_op_variables_visibility_pr262<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let program = " 
<br>
             ;; Knowledge 
<br>
             <div class="tag_rs leftpar_rs">(</div>â P Q<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>â Q R<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 414 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let</div>',E,V,Body],OO<div class="tag_pl rightpar_pl">)</div>:- var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>, nonvar<div class="tag_pl leftpar_pl">(</div>E<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
       %<div class="tag_pl leftpar_pl">(</div>var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>->true;trace<div class="tag_pl rightpar_pl">)</div>, 
<br>
       possible_type<div class="tag_pl leftpar_pl">(</div>Self,V,RetTypeV<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 420 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let</div>',V,E,Body],OO<div class="tag_pl rightpar_pl">)</div>:- !, % var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>, nonvar<div class="tag_pl leftpar_pl">(</div>E<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
         %<div class="tag_pl leftpar_pl">(</div>var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>->true;trace<div class="tag_pl rightpar_pl">)</div>, 
<br>
         possible_type<div class="tag_pl leftpar_pl">(</div>Self,V,RetTypeV<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 427 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let</div>',V,E,Body],OO<div class="tag_pl rightpar_pl">)</div>:- nonvar<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>,nonvar<div class="tag_pl leftpar_pl">(</div>E<div class="tag_pl rightpar_pl">)</div>,!, 
<br>
     possible_type<div class="tag_pl leftpar_pl">(</div>Self,V,RetTypeV<div class="tag_pl rightpar_pl">)</div>, 
<br>
     possible_type<div class="tag_pl leftpar_pl">(</div>Self,E,RetTypeV<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 438 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let</div>',V,E,Body],OO<div class="tag_pl rightpar_pl">)</div>:- var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>, nonvar<div class="tag_pl leftpar_pl">(</div>E<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
         %<div class="tag_pl leftpar_pl">(</div>var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>->true;trace<div class="tag_pl rightpar_pl">)</div>, 
<br>
         possible_type<div class="tag_pl leftpar_pl">(</div>Self,V,RetTypeV<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 444 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let</div>',V,E,Body],OO<div class="tag_pl rightpar_pl">)</div>:- var<div class="tag_pl leftpar_pl">(</div>V<div class="tag_pl rightpar_pl">)</div>, var<div class="tag_pl leftpar_pl">(</div>E<div class="tag_pl rightpar_pl">)</div>, !, 
<br>
       V=E, eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Body,OO<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 347 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">let</div>', [variable_assignment, qhelp<div class="tag_pl leftpar_pl">(</div>"Variable assignment."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 13 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>mprogn $code1 $code2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $_ <div class="tag_metta leftpar_metta">(</div>eval $code1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>eval $code2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $space <div class="tag_metta leftpar_metta">(</div>new-neural-space<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>add-atom &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>add-atom <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>The user name is William<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>add-atom <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>William is 26 years old<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 29 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $space <div class="tag_metta leftpar_metta">(</div>new-intent-space<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>add-atom &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>add-atom <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>lunch-ordering<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>add-atom <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>hobby<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 61 <br> 
<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $x <div class="tag_metta leftpar_metta">(</div>+ 5 "S"<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 9 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $new-state <div class="tag_metta leftpar_metta">(</div>new-state $status<div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta leftpar_metta">(</div>add-atom &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal $goal<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $new-state<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 46 <br> 
; `<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $state-active <div class="tag_metta leftpar_metta">(</div>new-state active<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> ...<div class="tag_metta rightpar_metta">)</div> here. 
<br>
  
<br>
 ; In any case, direct matching against expressions with states work: 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal $goal<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> &state-active<div class="tag_metta rightpar_metta">)</div> $goal<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 37 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div>* <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$type <div class="tag_metta leftpar_metta">(</div>get-type $atom<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$space <div class="tag_metta leftpar_metta">(</div>get-type &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>== $type $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; It's first atom is a space 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>let $x <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div>get-atoms &m<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>contains $x is-space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 46 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $x <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div>color<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; In contrast to `match`, if the equality query returns an empty result </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 188 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $r <div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div> Z<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>eq $r <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   T<div class="tag_metta rightpar_metta">)</div> 
<br>
 ; but it will not work inside `match`: 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqualToResult </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 210 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> <div class="tag_metta leftpar_metta">(</div>S <div class="tag_metta leftpar_metta">(</div>S $r<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 219 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div>* <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$r1 <div class="tag_metta leftpar_metta">(</div>Add Z Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta leftpar_metta">(</div>$r2 <div class="tag_metta leftpar_metta">(</div>Add $r1 <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
          <div class="tag_metta leftpar_metta">(</div>$r3 <div class="tag_metta leftpar_metta">(</div>Add $r2 <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>eq <div class="tag_metta leftpar_metta">(</div>S <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $r3<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   T<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 249 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $z <div class="tag_metta leftpar_metta">(</div>Add Z Z<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>eqa Z $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    T<div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 129 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $x <div class="tag_metta leftpar_metta">(</div>+ 2 3<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>* $x $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>25<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 166 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $t <div class="tag_metta leftpar_metta">(</div>gen 3<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>== <div class="tag_metta leftpar_metta">(</div>subsum <div class="tag_metta leftpar_metta">(</div>:: 3 <div class="tag_metta leftpar_metta">(</div>:: 7 <div class="tag_metta leftpar_metta">(</div>:: 5 nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $t<div class="tag_metta rightpar_metta">)</div> 8<div class="tag_metta rightpar_metta">)</div> $t <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: 1 <div class="tag_metta leftpar_metta">(</div>:: 0 <div class="tag_metta leftpar_metta">(</div>:: 1 nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 43 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $v <div class="tag_metta leftpar_metta">(</div>new-state 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>get-type $v<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 84 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $x <div class="tag_metta leftpar_metta">(</div>new-state 1<div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>change-state! $x <div class="tag_metta leftpar_metta">(</div>+ <div class="tag_metta leftpar_metta">(</div>get-state $x<div class="tag_metta rightpar_metta">)</div> 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>new-state 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Checking that there is no conflict between variable names in </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 91 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $tnso <div class="tag_metta leftpar_metta">(</div>new-state 1<div class="tag_metta rightpar_metta">)</div> $tnso<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 85 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> $var $arg $body<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Tests 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>lambda $x <div class="tag_metta leftpar_metta">(</div>+ $x 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 2<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d1_gadt.metta - line: 96 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">let</div> <div class="tag_metta leftpar_metta">(</div>List $t<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div>Cons 5 <div class="tag_metta leftpar_metta">(</div>Cons 6 Nil<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        $t<div class="tag_metta rightpar_metta">)</div> 
<br>
   Number<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> let*</i></b>  <a onclick="prompt('copy path','let*');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1795 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"let\*"<div class="tag_rs rightpar_rs">)</div>, move |_| { let_var_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2442 <br> 
    fn let_var_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetVarOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, sym!<div class="tag_rs leftpar_rs">(</div>"B"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![sym!<div class="tag_rs leftpar_rs">(</div>"B"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>LetVarOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>a "A"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>a<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>{LetOp{}} a "A" a<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 449 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let*</div>',[],Body],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Body,RetVal<div class="tag_pl rightpar_pl">)</div>. 
<br>
 %eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['let*',[[Var,Val]|LetRest],Body],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
 %   eval_until_unify<div class="tag_pl leftpar_pl">(</div>Eq,_RetTypeV,Depth,Self,Val,Var<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 453 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">let*</div>',[[Var,Val]|LetRest],Body],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['let',Var,Val,['let*',LetRest,Body]],RetVal<div class="tag_pl rightpar_pl">)</div>. 
<br>
 */ </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 605 <br> 
'<div class="tag_searched">let*</div>'<div class="tag_pl leftpar_pl">(</div>Bindings, Body, Result<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['let*', Bindings, Body], Result<div class="tag_pl rightpar_pl">)</div>. 
<br>
  
<br>
 % ============================ </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 348 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">let*</div>', [variable_assignment, qhelp<div class="tag_pl leftpar_pl">(</div>"Sequential variable assignment."<div class="tag_pl rightpar_pl">)</div>, sequential]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> match</i></b>  <a onclick="prompt('copy path','match');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1767 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">match</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { match_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/old_interpreter.rs - line: 627 <br> 
    OperatorPlan::new<div class="tag_rs leftpar_rs">(</div>|_| <div class="tag_searched">match</div>_op<div class="tag_rs leftpar_rs">(</div>context, input<div class="tag_rs rightpar_rs">)</div>, descr<div class="tag_rs rightpar_rs">)</div> 
<br>
 } 
<br>
  
<br>
 fn match_op<'a, T: SpaceRef<'a>><div class="tag_rs leftpar_rs">(</div>context: InterpreterContextRef<'a, T>, input: InterpretedAtom<div class="tag_rs rightpar_rs">)</div> -> StepResult<'a, Results, InterpreterError> { 
<br>
     log::debug!<div class="tag_rs leftpar_rs">(</div>"match_op: {}", input<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 434 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">match</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { match_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let mod_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::ModSpaceOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"mod-space!"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let print_mods_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::PrintModsOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"print-mods!"<div class="tag_rs rightpar_rs">)</div>, move |_| { print_mods_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1766 <br> 
        let <div class="tag_searched">match</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>MatchOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"match"<div class="tag_rs rightpar_rs">)</div>, move |_| { match_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let bind_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>BindOp::new<div class="tag_rs leftpar_rs">(</div>tokenizer<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"bind!"<div class="tag_rs rightpar_rs">)</div>, move |_| { bind_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let new_space_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>NewSpaceOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1982 <br> 
    fn <div class="tag_searched">match</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>"<div class="tag_rs leftpar_rs">(</div>A B<div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let match_op = MatchOp{}; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>match_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>{space}<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"A" "B"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"B" "A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![expr!<div class="tag_rs leftpar_rs">(</div>"B" "A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1990 <br> 
    fn <div class="tag_searched">match</div>_op_issue_530<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>"<div class="tag_rs leftpar_rs">(</div>A $a $a<div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let match_op = MatchOp{}; 
<br>
         let result = match_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>{space}<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"A" x y<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"A" x y<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>result.len<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, 1<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 395 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">match</div>', [pattern_matching, qhelp<div class="tag_pl leftpar_pl">(</div>"Matches patterns within structures or data."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 20 <br> 
      <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> $list <div class="tag_metta leftpar_metta">(</div>$head $tail<div class="tag_metta rightpar_metta">)</div> $then $else<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div> 
<br>
     $else <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>if-empty $atom $then $else<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-equal $atom Empty $then $else<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 45 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> $atom $pattern $template <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>switch $atom $tail<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>subst $atom $var $templ<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>match $atom $var $templ 
<br>
     <div class="tag_metta leftpar_metta">(</div>Error <div class="tag_metta leftpar_metta">(</div>subst $atom $var $templ<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 74 <br> 
            <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> $head -> True False<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>$_ False<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>interpret $atom $type $space<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>get-metatype $atom<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $meta </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 112 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> $args <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match $arg-types <div class="tag_metta leftpar_metta">(</div>$ret<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Error $atom BadType<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-decons $args $head $tail 
<br>
       <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-decons $arg-types $head-type $tail-types 
<br>
         <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>interpret $head $head-type $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $reduced-head </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_ok_to_redefine.metta - line: 133 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> $atom <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     $atom 
<br>
     <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>if-decons $atom $head $tail 
<br>
       <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>interpret $head %Undefined% $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $rhead 
<br>
         <div class="tag_metta leftpar_metta">(</div>chain <div class="tag_metta leftpar_metta">(</div>eval <div class="tag_metta leftpar_metta">(</div>interpret-tuple $tail $space<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $rtail </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 69 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self $1 $1<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 74 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self $1 $1<div class="tag_metta rightpar_metta">)</div>  <div class="tag_metta leftpar_metta">(</div>get-atoms &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 80 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>$Rel A $X<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>$Rel A $X<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-P A B<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>Rel-Q A C<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 94 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>$rel A $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div>   &kb 
<br>
     <div class="tag_metta leftpar_metta">(</div>$SS A_AS $X<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>$SS A_AS $X<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-P_AS A_AS B_AS<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>SS-Q_AS A_AS C_AS<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 20 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div>  &kb  <div class="tag_metta leftpar_metta">(</div>$rel A_AS $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 33 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>case <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div>  &kb  <div class="tag_metta leftpar_metta">(</div>$rel B_AS $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$rel $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-P_AS $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>P_AS $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-Q_AS $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q_AS $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>%void% no-match 
<br>
      <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 12 <br> 
        <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div>_res_len <div class="tag_metta leftpar_metta">(</div>cdr $match_res<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;!<div class="tag_metta leftpar_metta">(</div>match_res_len<div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div>match &space <div class="tag_metta leftpar_metta">(</div>Test $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $x works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>add-atom &das <div class="tag_metta leftpar_metta">(</div>Test <div class="tag_metta leftpar_metta">(</div>Test A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 21 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>$v1 <div class="tag_metta leftpar_metta">(</div>Test A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v1 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 24 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>$v1 <div class="tag_metta leftpar_metta">(</div>Test A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v1 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 32 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>Test $v2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v2 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 35 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>Test $v2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v2 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 42 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>Best $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$v $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$v $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 43 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>$v1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Test $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$v1 Test $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 45 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>$v1 <div class="tag_metta leftpar_metta">(</div>$v2 A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v1 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 7 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>$t MYBPP<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$t MYBPP<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 8 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>$t MYBPP<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$t MYBPP<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 9 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>translation_of <div class="tag_metta leftpar_metta">(</div>protein "O43264"<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>transcript "ENST00000200135"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> OK<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 12 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>translation_of <div class="tag_metta leftpar_metta">(</div>protein O43264<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>transcript ENST00000200135<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> OK<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 15 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>translation_of <div class="tag_metta leftpar_metta">(</div>protein O43264<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>transcript ENST00000200135<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> OK<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 18 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>translation_of <div class="tag_metta leftpar_metta">(</div>protein $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>transcript ENST00000200135<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 21 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>translation_of <div class="tag_metta leftpar_metta">(</div>protein $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>transcript ENST00000200135<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 24 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>protein MYBPP<div class="tag_metta rightpar_metta">)</div> res<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 25 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das 
<br>
 ;            <div class="tag_metta leftpar_metta">(</div>, 
<br>
 ;                <div class="tag_metta leftpar_metta">(</div>gene $gene<div class="tag_metta rightpar_metta">)</div> 
<br>
 ;                <div class="tag_metta leftpar_metta">(</div>gene_type <div class="tag_metta leftpar_metta">(</div>gene $gene<div class="tag_metta rightpar_metta">)</div> protein_coding<div class="tag_metta rightpar_metta">)</div> 
<br>
 ;            <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_bio_das.metta - line: 32 <br> 
;!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &das <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>gene_name <div class="tag_metta leftpar_metta">(</div>gene $ens<div class="tag_metta rightpar_metta">)</div> IRX3<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>genes_pathways <div class="tag_metta leftpar_metta">(</div>gene $ens<div class="tag_metta rightpar_metta">)</div> $p<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $p<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>$x content<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> ; [] </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 15 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> r::&self <div class="tag_metta leftpar_metta">(</div>$x content<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/resolve/r.metta - line: 20 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> r::&self <div class="tag_metta leftpar_metta">(</div>$x r::content<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 14 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What is the user name $x<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 15 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>How old $x is William<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 16 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>How old <div class="tag_metta leftpar_metta">(</div>$x<div class="tag_metta rightpar_metta">)</div> is Mike<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 17 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What $x is father name<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 18 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What $x is Mike age<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 20 <br> 
; <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What are the names $x of William brothers?<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 22 <br> 
! <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What are the names $x of William brothers?<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>let $query <div class="tag_metta leftpar_metta">(</div>How old $z is $x ?<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match <div class="tag_metta leftpar_metta">(</div>my-nspace<div class="tag_metta rightpar_metta">)</div> $query <div class="tag_metta leftpar_metta">(</div>$x is $z years old<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; It is a sort of negative example: intents would better work as a function, </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 36 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>I like to play tennis<div class="tag_metta rightpar_metta">)</div> $topic<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 37 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>I am a little bit hungry<div class="tag_metta rightpar_metta">)</div> $topic<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 38 <br> 
; !<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>What is my name, $x?<div class="tag_metta rightpar_metta">)</div> $topic<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/neurospace/test_nspace.metta - line: 43 <br> 
   <div class="tag_metta leftpar_metta">(</div>let $space <div class="tag_metta leftpar_metta">(</div>space-by-intent <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> <div class="tag_metta leftpar_metta">(</div>my-ispace<div class="tag_metta rightpar_metta">)</div> $query $topic<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>match <div class="tag_metta leftpar_metta">(</div>$space<div class="tag_metta rightpar_metta">)</div> $query $v<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; A nested matching with choosing a "space" to use 
<br>
 ! <div class="tag_metta leftpar_metta">(</div>dispatch <div class="tag_metta leftpar_metta">(</div>What is my name, $x ?<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/sql_space/sql_space_test.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &sql_space <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>musicbrainz.artist <div class="tag_metta leftpar_metta">(</div>id $id<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>name $name<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>musicbrainz.artist <div class="tag_metta leftpar_metta">(</div>id $id<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>begin_date_year 1983<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>limit 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $name<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 111 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>: $x $type<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>Mortal Socrates<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> 
<br>
   T<div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d4_type_prop.metta - line: 123 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>: $impl <div class="tag_metta leftpar_metta">(</div>-> $cause $type<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
       ; This kind of rule interferes with common types like 
<br>
       ; `<div class="tag_metta leftpar_metta">(</div>: return <div class="tag_metta leftpar_metta">(</div>-> $t $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div>`. Presence of such type in a codebase triggers the 
<br>
       ; rule and as result goes into an infinite loop: 
<br>
       ; <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Mortal Plato<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> -> <div class="tag_metta leftpar_metta">(</div>: return <div class="tag_metta leftpar_metta">(</div>-> $t $t<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> -> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Mortal Plato<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 10 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &kb 
<br>
     <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>$obj is $prop<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>$prop is-a Color<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>$obj is-a Planet<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>Color of Planet $obj is $prop<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 19 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>$p is-a Color<div class="tag_metta rightpar_metta">)</div> $p<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 27 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &kb 
<br>
     <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>Venus orbit $x au<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>Mars orbit $y au<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>- $y $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   0.8<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 41 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &kb <div class="tag_metta leftpar_metta">(</div>$prop is-a Color<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>$obj is $prop<div class="tag_metta rightpar_metta">)</div> 
<br>
        $obj<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>Ball<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c2_spaces.metta - line: 53 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>$obj is $prop<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>$prop is-a Color<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>$obj is-a Planet<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>Color of Planet $obj is $prop<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 17 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$x leaf2<div class="tag_metta rightpar_metta">)</div> leaf3<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 30 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>$who is a $what<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$who the $what<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 44 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>Green $who<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$who is really green<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 47 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>$color $who<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$who is really $color<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 51 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>$color $who<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>It's $tv that $who is $color<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 57 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>Green Tom<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a1_symbols.metta - line: 68 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>isa $color color<div class="tag_metta rightpar_metta">)</div> $color<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a3_twoside.metta - line: 13 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>implies <div class="tag_metta leftpar_metta">(</div>Frog Sam<div class="tag_metta rightpar_metta">)</div> $what<div class="tag_metta rightpar_metta">)</div> 
<br>
     $what<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Green Sam<div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div>Eats-flies Sam<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a3_twoside.metta - line: 20 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>implies <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Green Sam<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>$x might be $P<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Sam might be Frog<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a3_twoside.metta - line: 36 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>Frog $x<div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>implies <div class="tag_metta leftpar_metta">(</div>Frog $x<div class="tag_metta rightpar_metta">)</div> $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     $y<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Green Sam<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a3_twoside.metta - line: 48 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>, <div class="tag_metta leftpar_metta">(</div>implies <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Green $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
        <div class="tag_metta leftpar_metta">(</div>implies <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Eats-flies $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>Then it is definitely $P<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Then it is definitely Frog<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 53 <br> 
<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>== SocratesIsHuman SamIsMortal<div class="tag_metta rightpar_metta">)</div> Really?<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 20 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
      <div class="tag_metta leftpar_metta">(</div>.tv $x $stv<div class="tag_metta rightpar_metta">)</div> 
<br>
      $stv 
<br>
    <div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c3_pln_stv.metta - line: 36 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
      <div class="tag_metta leftpar_metta">(</div>.tv <div class="tag_metta leftpar_metta">(</div>Implication $y $x<div class="tag_metta rightpar_metta">)</div> 
<br>
           <div class="tag_metta leftpar_metta">(</div>stv $s $c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>stv <div class="tag_metta leftpar_metta">(</div>* $s <div class="tag_metta leftpar_metta">(</div>s-tv <div class="tag_metta leftpar_metta">(</div>TV $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
           <div class="tag_metta leftpar_metta">(</div>* $c <div class="tag_metta leftpar_metta">(</div>c-tv <div class="tag_metta leftpar_metta">(</div>TV $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 58 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &m <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>f 2<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/a2_opencoggy.metta - line: 27 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>EvaluationLink 
<br>
       <div class="tag_metta leftpar_metta">(</div>PredicateNode "eats"<div class="tag_metta rightpar_metta">)</div> 
<br>
         <div class="tag_metta leftpar_metta">(</div>ListLink 
<br>
           $x </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 16 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>color<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 85 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>eq $x $y<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>find-equal <div class="tag_metta leftpar_metta">(</div>color<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>foo<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   red<div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 8 <br> 
<div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>frog $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>Frog $x<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 46 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Deduction case when the desired evaluation is the result 
<br>
 ; of an implication, which implies a recursion 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>deduce <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 51 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
      <div class="tag_metta leftpar_metta">(</div>Implication $a <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div>deduce $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Deduction case for generic "And" expressions; </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 79 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Definition of explain when the desired Evaluation is 
<br>
 ; the result of an implication 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>explain <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b2_backchain.metta - line: 84 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
      <div class="tag_metta leftpar_metta">(</div>Implication $a <div class="tag_metta leftpar_metta">(</div>Evaluation <div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
      <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>$P $x<div class="tag_metta rightpar_metta">)</div> proven by <div class="tag_metta leftpar_metta">(</div>explain $a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Definition of explain for And </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 169 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>Green $who<div class="tag_metta rightpar_metta">)</div> $who<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 179 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>Green $who<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Green $who<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b5_types_prelim.metta - line: 193 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>eq <div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div> Z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> $tv<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e1_kb_write.metta - line: 33 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &kb <div class="tag_metta leftpar_metta">(</div>Green $x<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b0_chaining_prelim.metta - line: 16 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>S K K x<div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> 
<br>
     $r<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>K x <div class="tag_metta leftpar_metta">(</div>K x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b0_chaining_prelim.metta - line: 24 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>K x <div class="tag_metta leftpar_metta">(</div>K x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> 
<br>
     $r<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b0_chaining_prelim.metta - line: 31 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>S K K x<div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>:= $r $r2<div class="tag_metta rightpar_metta">)</div> 
<br>
       $r2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b0_chaining_prelim.metta - line: 46 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> 
<br>
     $r<div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b0_chaining_prelim.metta - line: 53 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self 
<br>
     <div class="tag_metta leftpar_metta">(</div>:= <div class="tag_metta leftpar_metta">(</div>Add <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> 
<br>
     <div class="tag_metta leftpar_metta">(</div>match &self <div class="tag_metta leftpar_metta">(</div>:= $r $r2<div class="tag_metta rightpar_metta">)</div> 
<br>
       $r2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>S <div class="tag_metta leftpar_metta">(</div>S Z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b3_direct.metta - line: 49 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>$p Fritz<div class="tag_metta rightpar_metta">)</div> T<div class="tag_metta rightpar_metta">)</div> $p<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b1_equal_chain.metta - line: 7 <br> 
; <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">match</div> &self <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>expr<div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> $r<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> mod-space!</i></b>  <a onclick="prompt('copy path','mod-space!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1805 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">mod-space!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { mod_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1953 <br> 
fn mod_space_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
     let program = r#" 
<br>
         !<div class="tag_rs leftpar_rs">(</div>bind! &new_space <div class="tag_rs leftpar_rs">(</div>new-space<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
         !<div class="tag_rs leftpar_rs">(</div>add-atom &new_space <div class="tag_rs leftpar_rs">(</div><div class="tag_searched">mod-space!</div> stdlib<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
         !<div class="tag_rs leftpar_rs">(</div>get-atoms &new_space<div class="tag_rs rightpar_rs">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> new-space</i></b>  <a onclick="prompt('copy path','new-space');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1771 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">new-space</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1771 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">new-space</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_space_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let add_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>AddAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"add-atom"<div class="tag_rs rightpar_rs">)</div>, move |_| { add_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let remove_atom_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>RemoveAtomOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"remove-atom"<div class="tag_rs rightpar_rs">)</div>, move |_| { remove_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2001 <br> 
    fn new_space_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let res = NewSpaceOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![]<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"No result returned"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let space = res.get<div class="tag_rs leftpar_rs">(</div>0<div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"Result is empty"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let space = space.as_gnd::<DynSpace><div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.expect<div class="tag_rs leftpar_rs">(</div>"Result is not space"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let space_atoms: Vec<Atom> = space.borrow<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.as_space<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.atom_iter<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.cloned<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.collect<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 397 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">new-space</div>', [memory_allocation, qhelp<div class="tag_pl leftpar_pl">(</div>"Allocates new space or memory region."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> new-state</i></b>  <a onclick="prompt('copy path','new-state');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1797 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">new-state</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1796 <br> 
        let new_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>NewStateOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">new-state</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { new_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let change_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>ChangeStateOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"change-state!"<div class="tag_rs rightpar_rs">)</div>, move |_| { change_state_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let get_state_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GetStateOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1044 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">new-state</div>',UpdatedValue],StateMonad<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
   call_in_shared_space<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,UpdatedValue,Value<div class="tag_pl rightpar_pl">)</div>,  'new-state'<div class="tag_pl leftpar_pl">(</div>Depth,Self,Value,StateMonad<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>. 
<br>
 eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['get-state',StateExpr],Value<div class="tag_pl rightpar_pl">)</div>:- !, </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 44 <br> 
; We cannot put `<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> active<div class="tag_metta rightpar_metta">)</div>` inside `match`, because it doesn't </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 27 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> <div class="tag_metta leftpar_metta">(</div>A B<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; State atoms are of StateMonad type </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 35 <br> 
  <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> 2<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 38 <br> 
  <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div>change-state! <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> "S"<div class="tag_metta rightpar_metta">)</div> "V"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 62 <br> 
  <div class="tag_metta leftpar_metta">(</div>change-state! <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> 1<div class="tag_metta rightpar_metta">)</div> "S"<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 92 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">new-state</div> 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; FIXME: doesn't work as for 25 May 2023 
<br>
 ; !<div class="tag_metta leftpar_metta">(</div>get-state <div class="tag_metta leftpar_metta">(</div>let $x <div class="tag_metta leftpar_metta">(</div>new-state 1<div class="tag_metta rightpar_metta">)</div> $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> nop</i></b>  <a onclick="prompt('copy path','nop');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1791 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">nop</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { nop_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1791 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">nop</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { nop_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let let_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LetOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"let"<div class="tag_rs rightpar_rs">)</div>, move |_| { let_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let let_var_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>LetVarOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"let\*"<div class="tag_rs rightpar_rs">)</div>, move |_| { let_var_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2382 <br> 
    fn <div class="tag_searched">nop</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>NopOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![]<div class="tag_rs rightpar_rs">)</div>, unit_result<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  
<br>
     #[test] </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 894 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>_Eq,RetType,Depth,Self,['<div class="tag_searched">nop</div>',Expr], NoResult <div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    make_nop<div class="tag_pl leftpar_pl">(</div>RetType,[], NoResult<div class="tag_pl rightpar_pl">)</div>, 
<br>
   ignore<div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>'=',_RetType2,Depth,Self,Expr,_<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 595 <br> 
'<div class="tag_searched">nop</div>'<div class="tag_pl leftpar_pl">(</div>Expression, EvalResult<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['nop', Expression], EvalResult<div class="tag_pl rightpar_pl">)</div>. 
<br>
  
<br>
 % ============================ </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 373 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">nop</div>', [iteration_control, qhelp<div class="tag_pl leftpar_pl">(</div>"Suppresses iteration result."<div class="tag_pl rightpar_pl">)</div>, suppression]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 60 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_searched">nop</div> 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 62 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>collapse <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_searched">nop</div> 1<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta.answers - line: 11 <br> 
[<div class="tag_answers leftpar_answers">(</div>Error <div class="tag_answers leftpar_answers">(</div>assertEqualToResult <div class="tag_answers leftpar_answers">(</div>superpose <div class="tag_answers leftpar_answers">(</div><div class="tag_answers leftpar_answers">(</div><div class="tag_searched">nop</div> 1<div class="tag_answers rightpar_answers">)</div><div class="tag_answers rightpar_answers">)</div><div class="tag_answers rightpar_answers">)</div> <div class="tag_answers leftpar_answers">(</div><div class="tag_answers rightpar_answers">)</div><div class="tag_answers rightpar_answers">)</div>  
<br>
 Expected: [] 
<br>
 Got: [<div class="tag_answers leftpar_answers">(</div><div class="tag_answers rightpar_answers">)</div>] 
<br>
 Excessive result: <div class="tag_answers leftpar_answers">(</div><div class="tag_answers rightpar_answers">)</div><div class="tag_answers rightpar_answers">)</div>] 
<br>
 0.05user 0.00system 0:00.06elapsed 97%CPU <div class="tag_answers leftpar_answers">(</div>0avgtext+0avgdata 30948maxresident<div class="tag_answers rightpar_answers">)</div>k </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 27 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">nop</div> <div class="tag_metta leftpar_metta">(</div>change-state! <div class="tag_metta leftpar_metta">(</div>status <div class="tag_metta leftpar_metta">(</div>Goal lunch-order<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> active<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e3_match_states.metta - line: 43 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">nop</div> <div class="tag_metta leftpar_metta">(</div>change-state! &state-active inactive<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/e2_states.metta - line: 71 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">nop</div> <div class="tag_metta leftpar_metta">(</div>change-state! &state-token <div class="tag_metta leftpar_metta">(</div>C D<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> not</i></b>  <a onclick="prompt('copy path','not');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1902 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">not</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { not_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1902 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">not</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { not_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         // NOTE: xor and flip are absent in Python intentionally for conversion testing 
<br>
         let xor_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>XorOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"xor"<div class="tag_rs rightpar_rs">)</div>, move |_| { xor_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let flip_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>FlipOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1354 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">not</div>',X],TF<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    as_tf<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div> \+ eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,X<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, TF<div class="tag_pl rightpar_pl">)</div>. 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 430 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">not</div>', [logic, qhelp<div class="tag_pl leftpar_pl">(</div>"Logical NOT."<div class="tag_pl rightpar_pl">)</div>, logical_not]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 143 <br> 
;       is a `Symbol` <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">not</div> `Expression` or `Atom` in general<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 150 <br> 
  <div class="tag_metta leftpar_metta">(</div>fmap <div class="tag_metta leftpar_metta">(</div>curry-a + 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">not</div>hing<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d2_higherfunc.metta - line: 151 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">not</div>hing<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; Type inference works 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>get-type <div class="tag_metta leftpar_metta">(</div>fmap <div class="tag_metta leftpar_metta">(</div>curry-a + 1<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Left 5<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> or</i></b>  <a onclick="prompt('copy path','or');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1900 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">or</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { or_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1344 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">or</div>',X,Y],TF<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
   as_tf<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div> <div class="tag_pl leftpar_pl">(</div>eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,X<div class="tag_pl rightpar_pl">)</div>; 
<br>
            eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Y<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, TF<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 427 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&c<div class="tag_searched">or</div>elib','or', [logic, qhelp<div class="tag_pl leftpar_pl">(</div>"Logical OR."<div class="tag_pl rightpar_pl">)</div>, logical_or]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/pytorch/tm_test.metta - line: 81 <br> 
; Instantiate a pyt<div class="tag_searched">or</div>ch <div class="tag_metta leftpar_metta">(</div>or python<div class="tag_metta rightpar_metta">)</div> module </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> pragma!</i></b>  <a onclick="prompt('copy path','pragma!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1849 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">pragma!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { pragma_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 468 <br> 
    let pragma_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::PragmaOp::new<div class="tag_rs leftpar_rs">(</div>metta.settings<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">pragma!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { pragma_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let import_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::ImportOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"import!"<div class="tag_rs rightpar_rs">)</div>, move |_| { import_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let include_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::IncludeOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1298 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">pragma!</div>',Other,Expr],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    must_det_ll<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div>into_name<div class="tag_pl leftpar_pl">(</div>Self,Other,Name<div class="tag_pl rightpar_pl">)</div>,nd_ignore<div class="tag_pl leftpar_pl">(</div><div class="tag_pl leftpar_pl">(</div>eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Expr,Value<div class="tag_pl rightpar_pl">)</div>, 
<br>
    set_option_value_interp<div class="tag_pl leftpar_pl">(</div>Name,Value<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>,  make_nop<div class="tag_pl leftpar_pl">(</div>RetType,Value,RetVal<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 377 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">pragma!</div>', [compiler_directive, qhelp<div class="tag_pl leftpar_pl">(</div>"Compiler directive for optimizations/settings."<div class="tag_pl rightpar_pl">)</div>, optimization]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">pragma!</div> compile full<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/d5_auto_types.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">pragma!</div> type-check auto<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> print-mods!</i></b>  <a onclick="prompt('copy path','print-mods!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1807 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">print-mods!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { print_mods_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1806 <br> 
        let print_mods_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>PrintModsOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">print-mods!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { print_mods_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let sealed_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SealedOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"sealed"<div class="tag_rs rightpar_rs">)</div>, move |_| { sealed_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
  </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> println!</i></b>  <a onclick="prompt('copy path','println!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1785 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">println!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { println_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 478 <br> 
    let println_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::PrintlnOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">println!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { println_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let format_args_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::FormatArgsOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"format-args"<div class="tag_rs rightpar_rs">)</div>, move |_| { format_args_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let print_alternatives_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>PrintAlternativesOp{}<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2371 <br> 
    fn println_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>PrintlnOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![sym!<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, unit_result<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  
<br>
     #[test] </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 440 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">println!</div>', [output, qhelp<div class="tag_pl leftpar_pl">(</div>"Prints text with newline to output."<div class="tag_pl rightpar_pl">)</div>, text_printing]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 20 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> <div class="tag_metta leftpar_metta">(</div>fib 12<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 22 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> <div class="tag_metta leftpar_metta">(</div>fib1 0 1 100 0<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 24 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> <div class="tag_metta leftpar_metta">(</div>fib1 0 1 80 0<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/fibo_hang.metta - line: 26 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> <div class="tag_metta leftpar_metta">(</div>fib 80<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 16 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> "First"<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div>println! "Second"<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 17 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> "First"<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div>println! "Second"<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 18 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> "First"<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div>println! "Second"<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 19 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>xor <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">println!</div> "First"<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>mprogn <div class="tag_metta leftpar_metta">(</div>println! "Second"<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> register-module!</i></b>  <a onclick="prompt('copy path','register-module!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1031 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">register-module!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { register_module_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1030 <br> 
        let register_module_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>RegisterModuleOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">register-module!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { register_module_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let git_module_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>GitModuleOp::new<div class="tag_rs leftpar_rs">(</div>metta.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"git-module!"<div class="tag_rs rightpar_rs">)</div>, move |_| { git_module_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1256 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">register-module!</div>',Dir],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
      eval_20<div class="tag_pl leftpar_pl">(</div>Eq,'Directory',Depth,Self,Dir,Folder<div class="tag_pl rightpar_pl">)</div>, 
<br>
      register_module<div class="tag_pl leftpar_pl">(</div>Self,Folder<div class="tag_pl rightpar_pl">)</div>,!, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1261 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">register-module!</div>',Name,Dir],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
      eval_20<div class="tag_pl leftpar_pl">(</div>Eq,'Symbol',Depth,Self,Name,ModuleName<div class="tag_pl rightpar_pl">)</div>, 
<br>
      eval_20<div class="tag_pl leftpar_pl">(</div>Eq,'Directory',Depth,Self,Dir,Folder<div class="tag_pl rightpar_pl">)</div>, </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> remove-atom</i></b>  <a onclick="prompt('copy path','remove-atom');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1775 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">remove-atom</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { remove_atom_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2020 <br> 
    fn remove_atom_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>foo bar<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>bar foo<div class="tag_rs rightpar_rs">)</div> 
<br>
         "<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 398 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">remove-atom</div>', [manipulation, qhelp<div class="tag_pl leftpar_pl">(</div>"Removes an atom from a structure."<div class="tag_pl rightpar_pl">)</div>]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> sealed</i></b>  <a onclick="prompt('copy path','sealed');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1809 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">sealed</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { sealed_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 484 <br> 
    let <div class="tag_searched">sealed</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::SealedOp{}<div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"sealed"<div class="tag_rs rightpar_rs">)</div>, move |_| { sealed_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     // &self should be updated 
<br>
     // TODO: adding &self might be done not by stdlib, but by MeTTa itself. 
<br>
     // TODO: adding &self introduces self referencing and thus prevents space </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2526 <br> 
    fn <div class="tag_searched">sealed</div>_op_runner<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let nested = run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>sealed <div class="tag_rs leftpar_rs">(</div>$x<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>sealed <div class="tag_rs leftpar_rs">(</div>$a $b<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>$a $x $c<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>$b<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let simple_replace = run_program<div class="tag_rs leftpar_rs">(</div>"!<div class="tag_rs leftpar_rs">(</div>sealed <div class="tag_rs leftpar_rs">(</div>$x $y<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>quote <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>$y $z<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>"<div class="tag_rs rightpar_rs">)</div>; 
<br>
  
<br>
         assert!<div class="tag_rs leftpar_rs">(</div>crate::atom::matcher::atoms_are_equivalent<div class="tag_rs leftpar_rs">(</div>&nested.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>[0][0], &expr!<div class="tag_rs leftpar_rs">(</div>"quote" <div class="tag_rs leftpar_rs">(</div>"=" <div class="tag_rs leftpar_rs">(</div>a b c<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>z<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2535 <br> 
    fn <div class="tag_searched">sealed</div>_op_execute<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let val = SealedOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>x y<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"="<div class="tag_rs leftpar_rs">(</div>y z<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert!<div class="tag_rs leftpar_rs">(</div>crate::atom::matcher::atoms_are_equivalent<div class="tag_rs leftpar_rs">(</div>&val.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>[0], &expr!<div class="tag_rs leftpar_rs">(</div>"="<div class="tag_rs leftpar_rs">(</div>y z<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> subtraction</i></b>  <a onclick="prompt('copy path','subtraction');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1839 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">subtraction</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { subtraction_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 463 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">subtraction</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { subtraction_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let case_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CaseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"case"<div class="tag_rs rightpar_rs">)</div>, move |_| { case_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let capture_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CaptureOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"capture"<div class="tag_rs rightpar_rs">)</div>, move |_| { capture_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2258 <br> 
    fn <div class="tag_searched">subtraction</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> Z<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> S<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> S<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2279 <br> 
        let <div class="tag_searched">subtraction</div>_op = SubtractionOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let actual = subtraction_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"bar"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>actual, 
<br>
                    vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"P" "b"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1654 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">subtraction</div>',Eval1,Eval2],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     lazy_subtraction<div class="tag_pl leftpar_pl">(</div>RetVal1^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval1,RetVal1<div class="tag_pl rightpar_pl">)</div>, 
<br>
                   RetVal2^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval2,RetVal2<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 468 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">subtraction</div>', [nondet_sets, qhelp<div class="tag_pl leftpar_pl">(</div>"It subtracts elements generated by Call2 from those generated by Call1."<div class="tag_pl rightpar_pl">)</div>, lazy_subtraction]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> superpose</i></b>  <a onclick="prompt('copy path','superpose');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1831 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">superpose</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { superpose_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 453 <br> 
    tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">superpose</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { superpose_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let collapse_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>CollapseOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"collapse"<div class="tag_rs rightpar_rs">)</div>, move |_| { collapse_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let unique_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::UniqueOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"unique"<div class="tag_rs rightpar_rs">)</div>, move |_| { unique_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1830 <br> 
        let <div class="tag_searched">superpose</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SuperposeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"superpose"<div class="tag_rs rightpar_rs">)</div>, move |_| { superpose_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let unique_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>UniqueOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"unique"<div class="tag_rs rightpar_rs">)</div>, move |_| { unique_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let union_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>UnionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2179 <br> 
    fn <div class="tag_searched">superpose</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>GroundingSpace::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let superpose_op = SuperposeOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>superpose_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
             Ok<div class="tag_rs leftpar_rs">(</div>vec![sym!<div class="tag_rs leftpar_rs">(</div>"A"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2286 <br> 
    fn <div class="tag_searched">superpose</div>_op_type<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>GroundingSpace::new<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert!<div class="tag_rs leftpar_rs">(</div>validate_atom<div class="tag_rs leftpar_rs">(</div>space.borrow<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>.as_space<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>, &expr!<div class="tag_rs leftpar_rs">(</div>{SumOp{}} 
<br>
             <div class="tag_rs leftpar_rs">(</div>{SuperposeOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>} <div class="tag_rs leftpar_rs">(</div>{Number::Integer<div class="tag_rs leftpar_rs">(</div>1<div class="tag_rs rightpar_rs">)</div>} {Number::Integer<div class="tag_rs leftpar_rs">(</div>2<div class="tag_rs rightpar_rs">)</div>} {Number::Integer<div class="tag_rs leftpar_rs">(</div>3<div class="tag_rs rightpar_rs">)</div>}<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             {Number::Integer<div class="tag_rs leftpar_rs">(</div>1<div class="tag_rs rightpar_rs">)</div>}<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2294 <br> 
    fn <div class="tag_searched">superpose</div>_op_multiple_interpretations<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let metta = Metta::new<div class="tag_rs leftpar_rs">(</div>Some<div class="tag_rs leftpar_rs">(</div>EnvBuilder::test_env<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let parser = SExprParser::new<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>f<div class="tag_rs rightpar_rs">)</div> A<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>f<div class="tag_rs rightpar_rs">)</div> B<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2310 <br> 
    fn <div class="tag_searched">superpose</div>_op_superposed_with_collapse<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let metta = Metta::new<div class="tag_rs leftpar_rs">(</div>Some<div class="tag_rs leftpar_rs">(</div>EnvBuilder::test_env<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let parser = SExprParser::new<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>f<div class="tag_rs rightpar_rs">)</div> A<div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>f<div class="tag_rs rightpar_rs">)</div> B<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2324 <br> 
    fn <div class="tag_searched">superpose</div>_op_consumes_interpreter_errors<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let metta = Metta::new<div class="tag_rs leftpar_rs">(</div>Some<div class="tag_rs leftpar_rs">(</div>EnvBuilder::test_env<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         let parser = SExprParser::new<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>: f <div class="tag_rs leftpar_rs">(</div>-> A B<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>f $x<div class="tag_rs rightpar_rs">)</div> $x<div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 836 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">superpose</div>',List],Res<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
        member<div class="tag_pl leftpar_pl">(</div>E,List<div class="tag_pl rightpar_pl">)</div>, 
<br>
        eval_ret<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,E,Res<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_interp.pl - line: 521 <br> 
'<div class="tag_searched">superpose</div>'<div class="tag_pl leftpar_pl">(</div>List, SuperposedList<div class="tag_pl rightpar_pl">)</div>:- eval_H<div class="tag_pl leftpar_pl">(</div>['superpose', List], SuperposedList<div class="tag_pl rightpar_pl">)</div>. 
<br>
  
<br>
 % ============================ </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 360 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">superpose</div>', [data_structures, qhelp<div class="tag_pl leftpar_pl">(</div>"Superposes data structures."<div class="tag_pl rightpar_pl">)</div>, manipulation]<div class="tag_pl rightpar_pl">)</div>. </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test2.metta - line: 4 <br> 
; !<div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test2.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div> a <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/intersection_test.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>intersection <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>b c <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/string-tests.metta - line: 25 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div>stringToChars <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>"ab" "cd" "ef"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>'a' 'b'<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>'c' 'd'<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>'e' 'f'<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 6 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 7 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 8 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 9 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 10 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 11 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 12 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 13 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 14 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 15 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 16 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 17 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 18 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 19 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 20 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 21 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 22 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 23 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 24 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 25 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 26 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 27 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 28 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 29 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 30 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 31 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 32 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 33 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 34 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 35 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 36 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 37 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 38 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 39 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 40 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 41 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 42 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 43 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 44 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 45 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 46 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 47 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 48 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 49 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 50 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 51 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 52 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 53 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 54 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 55 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 56 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 57 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 58 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 59 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 60 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 61 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 62 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 63 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 64 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 65 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 66 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 67 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 68 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 69 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 70 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 71 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 72 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 73 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 74 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 75 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 76 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 77 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 78 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 79 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6 4 5 6<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/structure-tests.metta - line: 80 <br> 
                           <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9 7 8 9<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
  </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 4 <br> 
   <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 5 <br> 
   <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
    <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 10 <br> 
   <div class="tag_metta leftpar_metta">(</div>+ 1 <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
    <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
    <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>1 <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>+ 1 1<div class="tag_metta rightpar_metta">)</div> 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 88 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-P B<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Rel-Q C<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 95 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>Rel-P B<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Rel-Q C<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
  
<br>
 ; cases can be used for deconstruction 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/00_lang_case.metta - line: 100 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>P B<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q C<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 10 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b b c c c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 11 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 17 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 18 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 24 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 25 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 31 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 32 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 38 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a a a a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 39 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 45 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>1 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>3 4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 46 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>1 2<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>3 4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 52 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 "hello" 1 "world" "hello" 3.14 3.14<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 53 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 "hello" "world" 3.14<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 73 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>$x $y $x $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 74 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>$x $y $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 80 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 81 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $a $b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 87 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 88 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 94 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x "hello"<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $y $z<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x "hello"<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 95 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x "hello"<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $y $z<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 101 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x <div class="tag_metta leftpar_metta">(</div>:: a b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: $x <div class="tag_metta leftpar_metta">(</div>:: a b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: <div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: 2 $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: <div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: 2 $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/unique_test.metta - line: 102 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>:: $x <div class="tag_metta leftpar_metta">(</div>:: a b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: <div class="tag_metta leftpar_metta">(</div>:: 1 $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>:: 2 $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/union_test.metta - line: 4 <br> 
; !<div class="tag_metta leftpar_metta">(</div>union <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/union_test.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult <div class="tag_metta leftpar_metta">(</div>union <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div> a b c d <div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/06_match_in_space.metta - line: 21 <br> 
   <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>SS-P_AS B_AS<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>SS-Q_AS C_AS<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; cases can be used for deconstruction 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>P_AS B_AS<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>Q_AS C_AS<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 4 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 5 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 11 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 12 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 18 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>foo bar<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bar baz<div class="tag_metta rightpar_metta">)</div> qux<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>bar baz<div class="tag_metta rightpar_metta">)</div> qux<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 19 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>foo bar<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 25 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3 foo bar<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>2 foo<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 26 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 3 bar<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 32 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b b c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 33 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 39 <br> 
  <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 40 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 46 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>unique <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b c c d<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 47 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 53 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div>b<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 54 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>$x $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 60 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 61 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>a b c<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 67 <br> 
  <div class="tag_metta leftpar_metta">(</div>subtraction <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>foo $x<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>bar $y<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>bar $y<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>foo qux<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/subtraction_test.metta - line: 68 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>foo $x<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/integration/test_das.metta - line: 25 <br> 
    <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>This Test works<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This Best works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;!<div class="tag_metta leftpar_metta">(</div>assertEqualToResult 
<br>
 ;    <div class="tag_metta leftpar_metta">(</div>match &das <div class="tag_metta leftpar_metta">(</div>$v1 <div class="tag_metta leftpar_metta">(</div>Test A<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This $v1 works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 ;   <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>This Test works<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>This Best works<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/f1_imports.metta - line: 13 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>get-type &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>get-type &self<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ; stdlib is already loaded 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>if <div class="tag_metta leftpar_metta">(</div>> 1 2<div class="tag_metta rightpar_metta">)</div> 1 2<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 17 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>red yellow green<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; `collapse` converts a nondeterministic result into a tuple </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 37 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>red yellow green<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
<br>
 ; `superpose` reverts `collapse` </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 97 <br> 
  <div class="tag_metta leftpar_metta">(</div>rev A <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>B C D<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/b4_nondeterm.metta - line: 123 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>stop ventilation<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>start kettle<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>start humidifier<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqual 
<br>
   <div class="tag_metta leftpar_metta">(</div>is <div class="tag_metta leftpar_metta">(</div>air wet<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
   <div class="tag_metta leftpar_metta">(</div>superpose <div class="tag_metta leftpar_metta">(</div><div class="tag_metta leftpar_metta">(</div>stop kettle<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>stop humidifier<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>start ventilation<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 119 <br> 
  <div class="tag_metta leftpar_metta">(</div>+ <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>1 2 3<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 1<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/tests/scripts/c1_grounded_basic.metta - line: 120 <br> 
  <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">superpose</div> <div class="tag_metta leftpar_metta">(</div>2 3 4<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> 
<br>
  
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>bin<div class="tag_metta rightpar_metta">)</div> 0<div class="tag_metta rightpar_metta">)</div> 
<br>
 <div class="tag_metta leftpar_metta">(</div>= <div class="tag_metta leftpar_metta">(</div>bin<div class="tag_metta rightpar_metta">)</div> 1<div class="tag_metta rightpar_metta">)</div> 
<br>
 !<div class="tag_metta leftpar_metta">(</div>assertEqualToResult </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> trace!</i></b>  <a onclick="prompt('copy path','trace!');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1789 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">trace!</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { trace_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2376 <br> 
    fn trace_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         assert_eq!<div class="tag_rs leftpar_rs">(</div>TraceOp{}.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![sym!<div class="tag_rs leftpar_rs">(</div>"\"Here?\""<div class="tag_rs rightpar_rs">)</div>, sym!<div class="tag_rs leftpar_rs">(</div>"42"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>, 
<br>
                    Ok<div class="tag_rs leftpar_rs">(</div>vec![sym!<div class="tag_rs leftpar_rs">(</div>"42"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     } 
<br>
  </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 469 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">trace!</div>',A,B],C<div class="tag_pl rightpar_pl">)</div>:- !, % writeln<div class="tag_pl leftpar_pl">(</div>trace<div class="tag_pl leftpar_pl">(</div>A<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>, 
<br>
      stream_property<div class="tag_pl leftpar_pl">(</div>S,file_no<div class="tag_pl leftpar_pl">(</div>2<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>,!, 
<br>
      eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,B,C<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 437 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">trace!</div>', [debugging, qhelp<div class="tag_pl leftpar_pl">(</div>"Prints some debug information."<div class="tag_pl rightpar_pl">)</div>, information_printing]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> union</i></b>  <a onclick="prompt('copy path','union');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1835 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">union</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { union_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib_minimal.rs - line: 458 <br> 
    let <div class="tag_searched">union</div>_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::UnionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"union"<div class="tag_rs rightpar_rs">)</div>, move |_| { union_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let intersection_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::IntersectionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
     tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"intersection"<div class="tag_rs rightpar_rs">)</div>, move |_| { intersection_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
     let subtraction_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>stdlib::SubtractionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1835 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">union</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { union_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let intersection_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>IntersectionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"intersection"<div class="tag_rs rightpar_rs">)</div>, move |_| { intersection_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let subtraction_op = Atom::gnd<div class="tag_rs leftpar_rs">(</div>SubtractionOp::new<div class="tag_rs leftpar_rs">(</div>space.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"subtraction"<div class="tag_rs rightpar_rs">)</div>, move |_| { subtraction_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2203 <br> 
    fn <div class="tag_searched">union</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>f g<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2216 <br> 
        let <div class="tag_searched">union</div>_op = UnionOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let actual = union_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"bar"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>actual, 
<br>
                    vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"Z"<div class="tag_rs rightpar_rs">)</div>, 
<br>
                         expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"p"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"p"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"Q" "a"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1678 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">union</div>',Eval1,Eval2],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
     lazy_union<div class="tag_pl leftpar_pl">(</div>RetVal1^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval1,RetVal1<div class="tag_pl rightpar_pl">)</div>, 
<br>
                   RetVal2^eval_args<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Eval2,RetVal2<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 470 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">union</div>', [nondet_sets, qhelp<div class="tag_pl leftpar_pl">(</div>"It gives the union of 2 list ."<div class="tag_pl rightpar_pl">)</div>, lazy_union ]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> unique</i></b>  <a onclick="prompt('copy path','unique');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1833 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">unique</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { unique_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2187 <br> 
    fn <div class="tag_searched">unique</div>_op<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> { 
<br>
         let space = DynSpace::new<div class="tag_rs leftpar_rs">(</div>metta_space<div class="tag_rs leftpar_rs">(</div>" 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>A <div class="tag_rs leftpar_rs">(</div>B C<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> 
<br>
             <div class="tag_rs leftpar_rs">(</div>= <div class="tag_rs leftpar_rs">(</div>foo<div class="tag_rs rightpar_rs">)</div> <div class="tag_rs leftpar_rs">(</div>f g<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div> </div> <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 2196 <br> 
        let <div class="tag_searched">unique</div>_op = UniqueOp::new<div class="tag_rs leftpar_rs">(</div>space<div class="tag_rs rightpar_rs">)</div>; 
<br>
         let actual = unique_op.execute<div class="tag_rs leftpar_rs">(</div>&mut vec![expr!<div class="tag_rs leftpar_rs">(</div><div class="tag_rs leftpar_rs">(</div>"foo"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>.unwrap<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div>; 
<br>
         assert_eq_no_order!<div class="tag_rs leftpar_rs">(</div>actual, 
<br>
                    vec![expr!<div class="tag_rs leftpar_rs">(</div>"A" <div class="tag_rs leftpar_rs">(</div>"B" "C"<div class="tag_rs rightpar_rs">)</div><div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"f" "g"<div class="tag_rs rightpar_rs">)</div>, expr!<div class="tag_rs leftpar_rs">(</div>"Z"<div class="tag_rs rightpar_rs">)</div>]<div class="tag_rs rightpar_rs">)</div>; 
<br>
     } </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1648 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">unique</div>',Eval],RetVal<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
    term_variables<div class="tag_pl leftpar_pl">(</div>Eval+RetVal,Vars<div class="tag_pl rightpar_pl">)</div>, 
<br>
    no_repeats_var<div class="tag_pl leftpar_pl">(</div>YY<div class="tag_pl rightpar_pl">)</div>, </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 467 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">unique</div>', [nondet_sets, qhelp<div class="tag_pl leftpar_pl">(</div>"Makes nondet results unique."<div class="tag_pl rightpar_pl">)</div>, no_repeats_var]<div class="tag_pl rightpar_pl">)</div>. </div>
  </div>

<br> &nbsp <br> 

<br> &nbsp <br> 



*** <i><b> xor</i></b>  <a onclick="prompt('copy path','xor');" style="cursor: pointer"> Fullpath  </a> 

<br> <a onclick="open_div('')"  style="cursor:pointer">  Open </a>

 <a onclick="close_div('')" style="cursor:pointer">  Close </a>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >  
 <div style="color: #D89800">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs - line: 1905 <br> 
        tref.register_token<div class="tag_rs leftpar_rs">(</div>regex<div class="tag_rs leftpar_rs">(</div>r"<div class="tag_searched">xor</div>"<div class="tag_rs rightpar_rs">)</div>, move |_| { xor_op.clone<div class="tag_rs leftpar_rs">(</div><div class="tag_rs rightpar_rs">)</div> }<div class="tag_rs rightpar_rs">)</div>; </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_eval.pl - line: 1348 <br> 
eval_20<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,['<div class="tag_searched">xor</div>',X,Y],TF<div class="tag_pl rightpar_pl">)</div>:- !, 
<br>
   as_tf<div class="tag_pl leftpar_pl">(</div>  <div class="tag_pl leftpar_pl">(</div>eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,X<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>,  XTF<div class="tag_pl rightpar_pl">)</div>,  % evaluate X 
<br>
   as_tf<div class="tag_pl leftpar_pl">(</div>  <div class="tag_pl leftpar_pl">(</div>eval_args_true<div class="tag_pl leftpar_pl">(</div>Eq,RetType,Depth,Self,Y<div class="tag_pl rightpar_pl">)</div><div class="tag_pl rightpar_pl">)</div>,  YTF<div class="tag_pl rightpar_pl">)</div>,  % evaluate Y </div> <div style="color: #D3D4FF">  <hr> 
 &nbsp &nbsp ../canary/metta_ontology.pfc.pl - line: 428 <br> 
properties<div class="tag_pl leftpar_pl">(</div>'&corelib','<div class="tag_searched">xor</div>', [logic, qhelp<div class="tag_pl leftpar_pl">(</div>"Logical XOR."<div class="tag_pl rightpar_pl">)</div>, logical_xor]<div class="tag_pl rightpar_pl">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> True False<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 3 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> False True<div class="tag_metta rightpar_metta">)</div> True<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 4 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> True True<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../tests/baseline_compat/hyperon-mettalog_sanity/xor_test.metta - line: 5 <br> 
!<div class="tag_metta leftpar_metta">(</div>assertEqual <div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> False False<div class="tag_metta rightpar_metta">)</div> False<div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/test_gnd_conv.metta - line: 2 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div> <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div> <div style="color: #ECED99">  <hr> 
 &nbsp &nbsp ../../../hyperon-experimental/python/sandbox/test_gnd_conv.metta - line: 11 <br> 
!<div class="tag_metta leftpar_metta">(</div><div class="tag_searched">xor</div> True <div class="tag_metta leftpar_metta">(</div>flip<div class="tag_metta rightpar_metta">)</div><div class="tag_metta rightpar_metta">)</div> </div>
  </div>
 <h2> Tags identified </h2> <br>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >   register-module!  1031 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 git-module!  1033 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 match  1767 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 bind!  1769 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 new-space  1771 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 add-atom  1773 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 remove-atom  1775 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 get-atoms  1777 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 car-atom  1779 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 cdr-atom  1781 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 cons-atom  1783 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 println!  1785 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 format-args  1787 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 trace!  1789 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 nop  1791 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 let  1793 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 let*  1795 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 new-state  1797 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 change-state!  1799 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 get-state  1801 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 get-metatype  1803 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 mod-space!  1805 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 print-mods!  1807 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 sealed  1809 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 capture  1821 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 case  1823 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 assertEqual  1825 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 assertEqualToResult  1827 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 collapse  1829 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 superpose  1831 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 unique  1833 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 union  1835 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 intersection  1837 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 subtraction  1839 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 get-type  1841 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 get-type-space  1843 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 import!  1845 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 include  1847 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 pragma!  1849 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 &self  1859 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 +  1878 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 -  1880 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 *  1882 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 /  1884 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 %  1886 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 <  1888 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 >  1890 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 <=  1892 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 >=  1894 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 ==  1896 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 and  1898 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 or  1900 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 not  1902 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 xor  1905 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 
 flip  1907 ../../../hyperon-experimental/lib/src/metta/runner/stdlib.rs <br> 

  </div>
<h2> Secondary Tags identified </h2> <br>

<div id="" style="border: 1px solid black; border-radius : 9px; padding: 5px; margin-left: 40px; max-width: 90% ; background-color: #676767; color: #E7E7E7 " >   - register_module_op-   <br> 
 - git_module_op-   <br> 
 - match_op-   <br> 
 - bind_op-   <br> 
 - new_space_op-   <br> 
 - add_atom_op-   <br> 
 - remove_atom_op-   <br> 
 - get_atoms_op-   <br> 
 - car_atom_op-   <br> 
 - cdr_atom_op-   <br> 
 - cons_atom_op-   <br> 
 - println_op-   <br> 
 - format_args_op-   <br> 
 - trace_op-   <br> 
 - nop_op-   <br> 
 - let_op-   <br> 
 - let_var_op-   <br> 
 - new_state_op-   <br> 
 - change_state_op-   <br> 
 - get_state_op-   <br> 
 - get_meta_type_op-   <br> 
 - mod_space_op-   <br> 
 - print_mods_op-   <br> 
 - sealed_op-   <br> 
 - capture_op-   <br> 
 - case_op-   <br> 
 - assert_equal_op-   <br> 
 - assert_equal_to_result_op-   <br> 
 - collapse_op-   <br> 
 - superpose_op-   <br> 
 - unique_op-   <br> 
 - union_op-   <br> 
 - intersection_op-   <br> 
 - subtraction_op-   <br> 
 - get_type_op-   <br> 
 - get_type_space_op-   <br> 
 - import_op-   <br> 
 - include_op-   <br> 
 - pragma_op-   <br> 
 - self_atom-   <br> 
 - sum_op-   <br> 
 - sub_op-   <br> 
 - mul_op-   <br> 
 - div_op-   <br> 
 - mod_op-   <br> 
 - lt_op-   <br> 
 - gt_op-   <br> 
 - le_op-   <br> 
 - ge_op-   <br> 
 - eq_op-   <br> 
 - and_op-   <br> 
 - or_op-   <br> 
 - not_op-   <br> 
 - xor_op-   <br> 
 - flip_op-   <br> 

  </div>
Tags not found - uncovered <br>
<b>  git-module!</b> <br> 
<b>  get-type-space</b> <br> 
<b>  /</b> <br> 
