+ '[' 0 -eq 1 ']'
+ echo 'Doing: timeout --foreground --kill-after=5 --signal=SIGINT 61 time metta /opt/logicmoo_opencog/hyperon-wam/examples/baseline_compat/hyperon-pln_metta/dependent-types/DeductionDTLTest.metta'
Doing: timeout --foreground --kill-after=5 --signal=SIGINT 61 time metta /opt/logicmoo_opencog/hyperon-wam/examples/baseline_compat/hyperon-pln_metta/dependent-types/DeductionDTLTest.metta
+ eval 'timeout --foreground --kill-after=5 --signal=SIGINT 61 time metta /opt/logicmoo_opencog/hyperon-wam/examples/baseline_compat/hyperon-pln_metta/dependent-types/DeductionDTLTest.metta'
++ timeout --foreground --kill-after=5 --signal=SIGINT 61 time metta /opt/logicmoo_opencog/hyperon-wam/examples/baseline_compat/hyperon-pln_metta/dependent-types/DeductionDTLTest.metta
[()]
[()]
[()]
["===== Test synthesizer ===="]
[()]
[()]
[(let* (((: $proof4#3769 (≞ (→ P P) (STV $PQs#3775 $PQc#3781))) (synthesize (: $proof4#3769 (≞ (→ P P) (STV $PQs#3775 $PQc#3781))) kb rb Z)) ((: $proof5#3770 (≞ (→ P R) (STV $QRs#3777 $QRc#3782))) (synthesize (: $proof5#3770 (≞ (→ P R) (STV $QRs#3777 $QRc#3782))) kb rb Z))) (: (Deduction Pm Pm Rm $proof4#3769 $proof5#3770) (≞ (→ P R) (if (and (and (< 0 0.5) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.5 0.5) 1) 0.5)) 1 (/ (- (+ 0.5 0.5) 1) 0.5))) 0 (if (< 1 (/ (- (+ 0.5 0.5) 1) 0.5)) 1 (/ (- (+ 0.5 0.5) 1) 0.5))) $PQs#3775) (<= $PQs#3775 (if (> 0 (if (< 1 (/ 0.5 0.5)) 1 (/ 0.5 0.5))) 0 (if (< 1 (/ 0.5 0.5)) 1 (/ 0.5 0.5)))))) (and (< 0 0.5) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.5 0.7) 1) 0.5)) 1 (/ (- (+ 0.5 0.7) 1) 0.5))) 0 (if (< 1 (/ (- (+ 0.5 0.7) 1) 0.5)) 1 (/ (- (+ 0.5 0.7) 1) 0.5))) $QRs#3777) (<= $QRs#3777 (if (> 0 (if (< 1 (/ 0.7 0.5)) 1 (/ 0.7 0.5))) 0 (if (< 1 (/ 0.7 0.5)) 1 (/ 0.7 0.5))))))) (STV (if (< 0.9999 0.5) 0.7 (+ (* $PQs#3775 $QRs#3777) (/ (* (- 1 $PQs#3775) (- 0.7 (* 0.5 $QRs#3777))) (- 1 0.5)))) (min 0.1 (min 0.1 (min 0.3 (min $PQc#3781 $QRc#3782))))) (STV 1 0))))), (: (Deduction Pm Qm Rm PQm QRm) (≞ (→ P R) (STV 0.8 0.1))), (let* (((: $proof4#3769 (≞ (→ P R) (STV $PQs#3775 $PQc#3781))) (synthesize (: $proof4#3769 (≞ (→ P R) (STV $PQs#3775 $PQc#3781))) kb rb Z)) ((: $proof5#3770 (≞ (→ R R) (STV $QRs#3777 $QRc#3782))) (synthesize (: $proof5#3770 (≞ (→ R R) (STV $QRs#3777 $QRc#3782))) kb rb Z))) (: (Deduction Pm Rm Rm $proof4#3769 $proof5#3770) (≞ (→ P R) (if (and (and (< 0 0.5) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.5 0.7) 1) 0.5)) 1 (/ (- (+ 0.5 0.7) 1) 0.5))) 0 (if (< 1 (/ (- (+ 0.5 0.7) 1) 0.5)) 1 (/ (- (+ 0.5 0.7) 1) 0.5))) $PQs#3775) (<= $PQs#3775 (if (> 0 (if (< 1 (/ 0.7 0.5)) 1 (/ 0.7 0.5))) 0 (if (< 1 (/ 0.7 0.5)) 1 (/ 0.7 0.5)))))) (and (< 0 0.7) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.7 0.7) 1) 0.7)) 1 (/ (- (+ 0.7 0.7) 1) 0.7))) 0 (if (< 1 (/ (- (+ 0.7 0.7) 1) 0.7)) 1 (/ (- (+ 0.7 0.7) 1) 0.7))) $QRs#3777) (<= $QRs#3777 (if (> 0 (if (< 1 (/ 0.7 0.7)) 1 (/ 0.7 0.7))) 0 (if (< 1 (/ 0.7 0.7)) 1 (/ 0.7 0.7))))))) (STV (if (< 0.9999 0.7) 0.7 (+ (* $PQs#3775 $QRs#3777) (/ (* (- 1 $PQs#3775) (- 0.7 (* 0.7 $QRs#3777))) (- 1 0.7)))) (min 0.1 (min 0.3 (min 0.3 (min $PQc#3781 $QRc#3782))))) (STV 1 0))))), (let* (((: $proof4#3769 (≞ (→ P (→ P Q)) (STV $PQs#3775 $PQc#3781))) (synthesize (: $proof4#3769 (≞ (→ P (→ P Q)) (STV $PQs#3775 $PQc#3781))) kb rb Z)) ((: $proof5#3770 (≞ (→ (→ P Q) R) (STV $QRs#3777 $QRc#3782))) (synthesize (: $proof5#3770 (≞ (→ (→ P Q) R) (STV $QRs#3777 $QRc#3782))) kb rb Z))) (: (Deduction Pm PQm Rm $proof4#3769 $proof5#3770) (≞ (→ P R) (if (and (and (< 0 0.5) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.5 0.8) 1) 0.5)) 1 (/ (- (+ 0.5 0.8) 1) 0.5))) 0 (if (< 1 (/ (- (+ 0.5 0.8) 1) 0.5)) 1 (/ (- (+ 0.5 0.8) 1) 0.5))) $PQs#3775) (<= $PQs#3775 (if (> 0 (if (< 1 (/ 0.8 0.5)) 1 (/ 0.8 0.5))) 0 (if (< 1 (/ 0.8 0.5)) 1 (/ 0.8 0.5)))))) (and (< 0 0.8) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.8 0.7) 1) 0.8)) 1 (/ (- (+ 0.8 0.7) 1) 0.8))) 0 (if (< 1 (/ (- (+ 0.8 0.7) 1) 0.8)) 1 (/ (- (+ 0.8 0.7) 1) 0.8))) $QRs#3777) (<= $QRs#3777 (if (> 0 (if (< 1 (/ 0.7 0.8)) 1 (/ 0.7 0.8))) 0 (if (< 1 (/ 0.7 0.8)) 1 (/ 0.7 0.8))))))) (STV (if (< 0.9999 0.8) 0.7 (+ (* $PQs#3775 $QRs#3777) (/ (* (- 1 $PQs#3775) (- 0.7 (* 0.8 $QRs#3777))) (- 1 0.8)))) (min 0.1 (min 0.4 (min 0.3 (min $PQc#3781 $QRc#3782))))) (STV 1 0))))), (let* (((: $proof4#3769 (≞ (→ P (→ Q R)) (STV $PQs#3775 $PQc#3781))) (synthesize (: $proof4#3769 (≞ (→ P (→ Q R)) (STV $PQs#3775 $PQc#3781))) kb rb Z)) ((: $proof5#3770 (≞ (→ (→ Q R) R) (STV $QRs#3777 $QRc#3782))) (synthesize (: $proof5#3770 (≞ (→ (→ Q R) R) (STV $QRs#3777 $QRc#3782))) kb rb Z))) (: (Deduction Pm QRm Rm $proof4#3769 $proof5#3770) (≞ (→ P R) (if (and (and (< 0 0.5) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.5 0.9) 1) 0.5)) 1 (/ (- (+ 0.5 0.9) 1) 0.5))) 0 (if (< 1 (/ (- (+ 0.5 0.9) 1) 0.5)) 1 (/ (- (+ 0.5 0.9) 1) 0.5))) $PQs#3775) (<= $PQs#3775 (if (> 0 (if (< 1 (/ 0.9 0.5)) 1 (/ 0.9 0.5))) 0 (if (< 1 (/ 0.9 0.5)) 1 (/ 0.9 0.5)))))) (and (< 0 0.9) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.9 0.7) 1) 0.9)) 1 (/ (- (+ 0.9 0.7) 1) 0.9))) 0 (if (< 1 (/ (- (+ 0.9 0.7) 1) 0.9)) 1 (/ (- (+ 0.9 0.7) 1) 0.9))) $QRs#3777) (<= $QRs#3777 (if (> 0 (if (< 1 (/ 0.7 0.9)) 1 (/ 0.7 0.9))) 0 (if (< 1 (/ 0.7 0.9)) 1 (/ 0.7 0.9))))))) (STV (if (< 0.9999 0.9) 0.7 (+ (* $PQs#3775 $QRs#3777) (/ (* (- 1 $PQs#3775) (- 0.7 (* 0.9 $QRs#3777))) (- 1 0.9)))) (min 0.1 (min 0.5 (min 0.3 (min $PQc#3781 $QRc#3782))))) (STV 1 0)))))]
0.99user 0.00system 0:01.00elapsed 99%CPU (0avgtext+0avgdata 37612maxresident)k
0inputs+0outputs (0major+6160minor)pagefaults 0swaps
