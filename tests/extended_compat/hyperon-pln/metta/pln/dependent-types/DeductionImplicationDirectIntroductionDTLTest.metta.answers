Doing: timeout --foreground --kill-after=5 --signal=SIGINT 61 time metta /opt/logicmoo_workspace/packs_sys/logicmoo_opencog/MeTTa/hyperon-wam/reports/extended_compat/hyperon-pln/metta/pln/dependent-types/DeductionImplicationDirectIntroductionDTLTest.metta
[()]
[()]
[()]
[deduction_idi_prf]
[(≞ (→ P Q) $tv#1072)]
["===== Prove that P→Q based on one piece of evidence ====="]
[(let* (((: $proof2#6435 (⊷ Q (S (S Z)) True)) (synthesize (: $proof2#6435 (⊷ Q (S (S Z)) True)) kb rb Z)) ((: $proof3#6436 (≞ (→ P Q) (ETV (:: $h#6441 $t#6442) (STV $s#6443 $y#6444)))) (synthesize (: $proof3#6436 (≞ (→ P Q) (ETV (:: $h#6441 $t#6442) (STV $s#6443 $y#6444)))) kb rb Z)) ((: $proof4#6437 (⍃ $h#6441 (S (S Z)))) (synthesize (: $proof4#6437 (⍃ $h#6441 (S (S Z)))) kb rb Z))) (: (IDIRecursive P2 $proof2#6435 $proof3#6436 $proof4#6437) (≞ (→ P Q) (ETV (:: (S (S Z)) (:: $h#6441 $t#6442)) (STV (/ (+ (* $s#6443 (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444)))) 1) (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1) 1.0))))))), (let* (((: $proof3#6436 (≞ (→ P Q) (ETV (:: $h#6441 $t#6442) (STV $s#6443 $y#6444)))) (synthesize (: $proof3#6436 (≞ (→ P Q) (ETV (:: $h#6441 $t#6442) (STV $s#6443 $y#6444)))) kb rb Z)) ((: $proof4#6437 (⍃ $h#6441 (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#6437 (⍃ $h#6441 (S (S (S (S (S (S (S Z))))))))) kb rb Z))) (: (IDIRecursive P7 Q7 $proof3#6436 $proof4#6437) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: $h#6441 $t#6442)) (STV (/ (+ (* $s#6443 (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444)))) 1) (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#6444) 0) (* -1 (- 1.0 $y#6444)) (- 1.0 $y#6444)) 1e-09) (max-count) (/ (* $y#6444 (lookahead)) (- 1.0 $y#6444))) 1) 1.0))))))), (let* (((: $proof3#7166 (≞ (→ P Q) (ETV (:: $h#7171 $t#7172) (STV $s#7173 $PQc#7174)))) (synthesize (: $proof3#7166 (≞ (→ P Q) (ETV (:: $h#7171 $t#7172) (STV $s#7173 $PQc#7174)))) kb rb Z)) ((: $proof4#7167 (⍃ $h#7171 (S (S Z)))) (synthesize (: $proof4#7167 (⍃ $h#7171 (S (S Z)))) kb rb Z))) (: (IDIRecursive P2 Q2 $proof3#7166 $proof4#7167) (≞ (→ P Q) (ETV (:: (S (S Z)) (:: $h#7171 $t#7172)) (STV (/ (* $s#7173 (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174)))) (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1)) (/ (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1) (+ (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1) 1.0))))))), (let* (((: $proof2#7165 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#7165 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) kb rb Z)) ((: $proof3#7166 (≞ (→ P Q) (ETV (:: $h#7171 $t#7172) (STV $s#7173 $PQc#7174)))) (synthesize (: $proof3#7166 (≞ (→ P Q) (ETV (:: $h#7171 $t#7172) (STV $s#7173 $PQc#7174)))) kb rb Z)) ((: $proof4#7167 (⍃ $h#7171 (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#7167 (⍃ $h#7171 (S (S (S (S (S (S (S Z))))))))) kb rb Z))) (: (IDIRecursive P7 $proof2#7165 $proof3#7166 $proof4#7167) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: $h#7171 $t#7172)) (STV (/ (* $s#7173 (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174)))) (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1)) (/ (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1) (+ (+ (if (<= (if (< (- 1.0 $PQc#7174) 0) (* -1 (- 1.0 $PQc#7174)) (- 1.0 $PQc#7174)) 1e-09) (max-count) (/ (* $PQc#7174 (lookahead)) (- 1.0 $PQc#7174))) 1) 1.0))))))), (let* (((: $proof#7948 (≞ (→ P Q) (ETV $evidence#7858 $etv))) (synthesize (: $proof#7948 (≞ (→ P Q) (ETV $evidence#7858 $etv))) kb rb Z))) (: (EvidenceElimination $proof#7948) (≞ (→ P Q) $etv))), (let* (((: $proof4#8239 (≞ (→ P P) (STV $ABs#8245 $PQc#8251))) (synthesize (: $proof4#8239 (≞ (→ P P) (STV $ABs#8245 $PQc#8251))) kb rb Z)) ((: $proof5#8240 (≞ (→ P Q) (STV $QRs#8247 $QRc#8252))) (synthesize (: $proof5#8240 (≞ (→ P Q) (STV $QRs#8247 $QRc#8252))) kb rb Z))) (: (Deduction Pm Pm Qm $proof4#8239 $proof5#8240) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) $ABs#8245) (<= $ABs#8245 (if (> 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2))) 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2)))))) (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.3) 1) 0.2)) 1 (/ (- (+ 0.2 0.3) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.3) 1) 0.2)) 1 (/ (- (+ 0.2 0.3) 1) 0.2))) $QRs#8247) (<= $QRs#8247 (if (> 0 (if (< 1 (/ 0.3 0.2)) 1 (/ 0.3 0.2))) 0 (if (< 1 (/ 0.3 0.2)) 1 (/ 0.3 0.2))))))) (STV (if (< 0.9999 0.2) 0.3 (+ (* $ABs#8245 $QRs#8247) (/ (* (- 1 $ABs#8245) (- 0.3 (* 0.2 $QRs#8247))) (- 1 0.2)))) (min 0.3 (min 0.3 (min 0.2 (min $PQc#8251 $QRc#8252))))) (STV 1 0))))), (let* (((: $proof4#8239 (≞ (→ P Q) (STV $ABs#8245 $PQc#8251))) (synthesize (: $proof4#8239 (≞ (→ P Q) (STV $ABs#8245 $PQc#8251))) kb rb Z)) ((: $proof5#8240 (≞ (→ Q Q) (STV $QRs#8247 $QRc#8252))) (synthesize (: $proof5#8240 (≞ (→ Q Q) (STV $QRs#8247 $QRc#8252))) kb rb Z))) (: (Deduction Pm Qm Qm $proof4#8239 $proof5#8240) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.3) 1) 0.2)) 1 (/ (- (+ 0.2 0.3) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.3) 1) 0.2)) 1 (/ (- (+ 0.2 0.3) 1) 0.2))) $ABs#8245) (<= $ABs#8245 (if (> 0 (if (< 1 (/ 0.3 0.2)) 1 (/ 0.3 0.2))) 0 (if (< 1 (/ 0.3 0.2)) 1 (/ 0.3 0.2)))))) (and (< 0 0.3) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.3 0.3) 1) 0.3)) 1 (/ (- (+ 0.3 0.3) 1) 0.3))) 0 (if (< 1 (/ (- (+ 0.3 0.3) 1) 0.3)) 1 (/ (- (+ 0.3 0.3) 1) 0.3))) $QRs#8247) (<= $QRs#8247 (if (> 0 (if (< 1 (/ 0.3 0.3)) 1 (/ 0.3 0.3))) 0 (if (< 1 (/ 0.3 0.3)) 1 (/ 0.3 0.3))))))) (STV (if (< 0.9999 0.3) 0.3 (+ (* $ABs#8245 $QRs#8247) (/ (* (- 1 $ABs#8245) (- 0.3 (* 0.3 $QRs#8247))) (- 1 0.3)))) (min 0.3 (min 0.2 (min 0.2 (min $PQc#8251 $QRc#8252))))) (STV 1 0))))), (let* (((: $proof4#8239 (≞ (→ P R) (STV $ABs#8245 $PQc#8251))) (synthesize (: $proof4#8239 (≞ (→ P R) (STV $ABs#8245 $PQc#8251))) kb rb Z)) ((: $proof5#8240 (≞ (→ R Q) (STV $QRs#8247 $QRc#8252))) (synthesize (: $proof5#8240 (≞ (→ R Q) (STV $QRs#8247 $QRc#8252))) kb rb Z))) (: (Deduction Pm Rm Qm $proof4#8239 $proof5#8240) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) $ABs#8245) (<= $ABs#8245 (if (> 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))) 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2)))))) (and (< 0 0.4) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.4 0.3) 1) 0.4)) 1 (/ (- (+ 0.4 0.3) 1) 0.4))) 0 (if (< 1 (/ (- (+ 0.4 0.3) 1) 0.4)) 1 (/ (- (+ 0.4 0.3) 1) 0.4))) $QRs#8247) (<= $QRs#8247 (if (> 0 (if (< 1 (/ 0.3 0.4)) 1 (/ 0.3 0.4))) 0 (if (< 1 (/ 0.3 0.4)) 1 (/ 0.3 0.4))))))) (STV (if (< 0.9999 0.4) 0.3 (+ (* $ABs#8245 $QRs#8247) (/ (* (- 1 $ABs#8245) (- 0.3 (* 0.4 $QRs#8247))) (- 1 0.4)))) (min 0.3 (min 0.1 (min 0.2 (min $PQc#8251 $QRc#8252))))) (STV 1 0))))), (let* (((: $proof4#8239 (≞ (→ P (→ Q R)) (STV $ABs#8245 $PQc#8251))) (synthesize (: $proof4#8239 (≞ (→ P (→ Q R)) (STV $ABs#8245 $PQc#8251))) kb rb Z)) ((: $proof5#8240 (≞ (→ (→ Q R) Q) (STV $QRs#8247 $QRc#8252))) (synthesize (: $proof5#8240 (≞ (→ (→ Q R) Q) (STV $QRs#8247 $QRc#8252))) kb rb Z))) (: (Deduction Pm QRm Qm $proof4#8239 $proof5#8240) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) $ABs#8245) (<= $ABs#8245 (if (> 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2))) 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2)))))) (and (< 0 0.9) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.9 0.3) 1) 0.9)) 1 (/ (- (+ 0.9 0.3) 1) 0.9))) 0 (if (< 1 (/ (- (+ 0.9 0.3) 1) 0.9)) 1 (/ (- (+ 0.9 0.3) 1) 0.9))) $QRs#8247) (<= $QRs#8247 (if (> 0 (if (< 1 (/ 0.3 0.9)) 1 (/ 0.3 0.9))) 0 (if (< 1 (/ 0.3 0.9)) 1 (/ 0.3 0.9))))))) (STV (if (< 0.9999 0.9) 0.3 (+ (* $ABs#8245 $QRs#8247) (/ (* (- 1 $ABs#8245) (- 0.3 (* 0.9 $QRs#8247))) (- 1 0.9)))) (min 0.3 (min 0.7 (min 0.2 (min $PQc#8251 $QRc#8252))))) (STV 1 0))))), (let* (((: $proof2#9658 (⊷ Q (S (S Z)) True)) (synthesize (: $proof2#9658 (⊷ Q (S (S Z)) True)) kb rb Z))) (: (IDIBase P2 $proof2#9658) (≞ (→ P Q) (ETV (:: (S (S Z)) ∅) (STV 1 0.5))))), (: (IDIBase P7 Q7) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 1 0.5)))), (: (IDIBase P2 Q2) (≞ (→ P Q) (ETV (:: (S (S Z)) ∅) (STV 0 0.5)))), (let* (((: $proof2#10369 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#10369 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) kb rb Z))) (: (IDIBase P7 $proof2#10369) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 0 0.5)))))]
["===== Prove that P→Q based on two pieces of evidence ====="]
[(let* (((: $proof2#16368 (⊷ Q (S (S Z)) True)) (synthesize (: $proof2#16368 (⊷ Q (S (S Z)) True)) kb rb (S (S Z)))) ((: $proof3#16369 (≞ (→ P Q) (ETV (:: $h#16374 $t#16375) (STV $PQs#16376 $conf#16377)))) (synthesize (: $proof3#16369 (≞ (→ P Q) (ETV (:: $h#16374 $t#16375) (STV $PQs#16376 $conf#16377)))) kb rb (S (S Z)))) ((: $proof4#16370 (⍃ $h#16374 (S (S Z)))) (synthesize (: $proof4#16370 (⍃ $h#16374 (S (S Z)))) kb rb (S (S Z))))) (: (IDIRecursive P2 $proof2#16368 $proof3#16369 $proof4#16370) (≞ (→ P Q) (ETV (:: (S (S Z)) (:: $h#16374 $t#16375)) (STV (/ (+ (* $PQs#16376 (if (<= (if (< (- 1.0 $conf#16377) 0) (* -1 (- 1.0 $conf#16377)) (- 1.0 $conf#16377)) 1e-09) (max-count) (/ (* $conf#16377 (lookahead)) (- 1.0 $conf#16377)))) 1) (+ (if (<= (if (< (- 1.0 $conf#16377) 0) (* -1 (- 1.0 $conf#16377)) (- 1.0 $conf#16377)) 1e-09) (max-count) (/ (* $conf#16377 (lookahead)) (- 1.0 $conf#16377))) 1)) (/ (+ (if (<= (if (< (- 1.0 $conf#16377) 0) (* -1 (- 1.0 $conf#16377)) (- 1.0 $conf#16377)) 1e-09) (max-count) (/ (* $conf#16377 (lookahead)) (- 1.0 $conf#16377))) 1) (+ (+ (if (<= (if (< (- 1.0 $conf#16377) 0) (* -1 (- 1.0 $conf#16377)) (- 1.0 $conf#16377)) 1e-09) (max-count) (/ (* $conf#16377 (lookahead)) (- 1.0 $conf#16377))) 1) 1.0))))))), (let* (((: $proof4#16370 (⍃ (S (S (S (S (S (S (S Z))))))) (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#16370 (⍃ (S (S (S (S (S (S (S Z))))))) (S (S (S (S (S (S (S Z))))))))) kb rb (S (S Z))))) (: (IDIRecursive P7 Q7 (IDIBase P7 Q7) $proof4#16370) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: (S (S (S (S (S (S (S Z))))))) ∅)) (STV (/ (+ (* 1 (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5)))) 1) (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1)) (/ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) (+ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) 1.0))))))), (: (IDIRecursive P7 Q7 (IDIBase P2 Q2) (SuccMonotonicity (SuccMonotonicity ZeroLTSucc))) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: (S (S Z)) ∅)) (STV 0.5 0.6666666666666666)))), (let* (((: $proof4#52079 (⍃ (S (S (S (S (S (S (S Z))))))) (S (S Z)))) (synthesize (: $proof4#52079 (⍃ (S (S (S (S (S (S (S Z))))))) (S (S Z)))) kb rb (S (S Z))))) (: (IDIRecursive P2 Q2 (IDIBase P7 Q7) $proof4#52079) (≞ (→ P Q) (ETV (:: (S (S Z)) (:: (S (S (S (S (S (S (S Z))))))) ∅)) (STV (/ (* 1 (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5)))) (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1)) (/ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) (+ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) 1.0))))))), (let* (((: $proof4#52079 (⍃ (S (S Z)) (S (S Z)))) (synthesize (: $proof4#52079 (⍃ (S (S Z)) (S (S Z)))) kb rb (S (S Z))))) (: (IDIRecursive P2 Q2 (IDIBase P2 Q2) $proof4#52079) (≞ (→ P Q) (ETV (:: (S (S Z)) (:: (S (S Z)) ∅)) (STV (/ (* 0 (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5)))) (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1)) (/ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) (+ (+ (if (<= (if (< (- 1.0 0.5) 0) (* -1 (- 1.0 0.5)) (- 1.0 0.5)) 1e-09) (max-count) (/ (* 0.5 (lookahead)) (- 1.0 0.5))) 1) 1.0))))))), (let* (((: $proof2#52077 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#52077 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) kb rb (S (S Z)))) ((: $proof3#52078 (≞ (→ P Q) (ETV (:: $h#52083 $t#52084) (STV $PQs#52085 $y#52086)))) (synthesize (: $proof3#52078 (≞ (→ P Q) (ETV (:: $h#52083 $t#52084) (STV $PQs#52085 $y#52086)))) kb rb (S (S Z)))) ((: $proof4#52079 (⍃ $h#52083 (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#52079 (⍃ $h#52083 (S (S (S (S (S (S (S Z))))))))) kb rb (S (S Z))))) (: (IDIRecursive P7 $proof2#52077 $proof3#52078 $proof4#52079) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: $h#52083 $t#52084)) (STV (/ (* $PQs#52085 (if (<= (if (< (- 1.0 $y#52086) 0) (* -1 (- 1.0 $y#52086)) (- 1.0 $y#52086)) 1e-09) (max-count) (/ (* $y#52086 (lookahead)) (- 1.0 $y#52086)))) (+ (if (<= (if (< (- 1.0 $y#52086) 0) (* -1 (- 1.0 $y#52086)) (- 1.0 $y#52086)) 1e-09) (max-count) (/ (* $y#52086 (lookahead)) (- 1.0 $y#52086))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#52086) 0) (* -1 (- 1.0 $y#52086)) (- 1.0 $y#52086)) 1e-09) (max-count) (/ (* $y#52086 (lookahead)) (- 1.0 $y#52086))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#52086) 0) (* -1 (- 1.0 $y#52086)) (- 1.0 $y#52086)) 1e-09) (max-count) (/ (* $y#52086 (lookahead)) (- 1.0 $y#52086))) 1) 1.0))))))), (: (EvidenceElimination (IDIBase P7 Q7)) (≞ (→ P Q) (STV 1 0.5))), (: (EvidenceElimination (IDIBase P2 Q2)) (≞ (→ P Q) (STV 0 0.5))), (: (Deduction Pm Pm Qm (EvidenceElimination (IDIBase P2 P2)) (EvidenceElimination (IDIBase P7 Q7))) (≞ (→ P Q) (STV 1.0 0.2))), (: (Deduction Pm Pm Qm (EvidenceElimination (IDIBase P2 P2)) (EvidenceElimination (IDIBase P2 Q2))) (≞ (→ P Q) (STV 0.0 0.2))), (: (Deduction Pm Pm Qm (EvidenceElimination (IDIBase P7 P7)) (EvidenceElimination (IDIBase P7 Q7))) (≞ (→ P Q) (STV 1.0 0.2))), (: (Deduction Pm Pm Qm (EvidenceElimination (IDIBase P7 P7)) (EvidenceElimination (IDIBase P2 Q2))) (≞ (→ P Q) (STV 0.0 0.2))), (: (Deduction Pm Qm Qm (EvidenceElimination (IDIBase P7 Q7)) (EvidenceElimination (IDIBase Q7 Q7))) (≞ (→ P Q) (STV 1.0 0.2))), (: (Deduction Pm Qm Qm (EvidenceElimination (IDIBase P2 Q2)) (EvidenceElimination (IDIBase Q7 Q7))) (≞ (→ P Q) (STV 0.0 0.2))), (let* (((: $proof4#111863 (≞ (→ P R) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P R) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ R Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ R Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm Rm Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))) 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2)))))) (and (< 0 0.4) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.4 0.3) 1) 0.4)) 1 (/ (- (+ 0.4 0.3) 1) 0.4))) 0 (if (< 1 (/ (- (+ 0.4 0.3) 1) 0.4)) 1 (/ (- (+ 0.4 0.3) 1) 0.4))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 0.4)) 1 (/ 0.3 0.4))) 0 (if (< 1 (/ 0.3 0.4)) 1 (/ 0.3 0.4))))))) (STV (if (< 0.9999 0.4) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 0.4 $QRs#111871))) (- 1 0.4)))) (min 0.3 (min 0.1 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ Q R)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ Q R)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ Q R) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ Q R) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm QRm Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2))) 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2)))))) (and (< 0 0.9) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.9 0.3) 1) 0.9)) 1 (/ (- (+ 0.9 0.3) 1) 0.9))) 0 (if (< 1 (/ (- (+ 0.9 0.3) 1) 0.9)) 1 (/ (- (+ 0.9 0.3) 1) 0.9))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 0.9)) 1 (/ 0.3 0.9))) 0 (if (< 1 (/ 0.3 0.9)) 1 (/ 0.3 0.9))))))) (STV (if (< 0.9999 0.9) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 0.9 $QRs#111871))) (- 1 0.9)))) (min 0.3 (min 0.7 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ P P)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ P P)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ P P) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ P P) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P2 P2)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))) 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))))))) (STV (if (< 0.9999 1) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 1 $QRs#111871))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ P P)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ P P)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ P P) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ P P) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P7 P7)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))) 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))))))) (STV (if (< 0.9999 1) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 1 $QRs#111871))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ P Q)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ P Q)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ P Q) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ P Q) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P7 Q7)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))) 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))))))) (STV (if (< 0.9999 1) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 1 $QRs#111871))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ Q P)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ Q P)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ Q P) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ Q P) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase Q7 P7)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))) 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))))))) (STV (if (< 0.9999 1) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 1 $QRs#111871))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ Q Q)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ Q Q)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ Q Q) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ Q Q) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase Q7 Q7)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.3) 1) 1)) 1 (/ (- (+ 1 0.3) 1) 1))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))) 0 (if (< 1 (/ 0.3 1)) 1 (/ 0.3 1))))))) (STV (if (< 0.9999 1) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 1 $QRs#111871))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof4#111863 (≞ (→ P (→ P Q)) (STV $PQs#111869 $PQc#111875))) (synthesize (: $proof4#111863 (≞ (→ P (→ P Q)) (STV $PQs#111869 $PQc#111875))) kb rb (S (S Z)))) ((: $proof5#111864 (≞ (→ (→ P Q) Q) (STV $QRs#111871 $QRc#111876))) (synthesize (: $proof5#111864 (≞ (→ (→ P Q) Q) (STV $QRs#111871 $QRc#111876))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P2 Q2)) Qm $proof4#111863 $proof5#111864) (≞ (→ P Q) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0) 1) 0.2)) 1 (/ (- (+ 0.2 0) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0) 1) 0.2)) 1 (/ (- (+ 0.2 0) 1) 0.2))) $PQs#111869) (<= $PQs#111869 (if (> 0 (if (< 1 (/ 0 0.2)) 1 (/ 0 0.2))) 0 (if (< 1 (/ 0 0.2)) 1 (/ 0 0.2)))))) (and (< 0 0) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0 0.3) 1) 0)) 1 (/ (- (+ 0 0.3) 1) 0))) 0 (if (< 1 (/ (- (+ 0 0.3) 1) 0)) 1 (/ (- (+ 0 0.3) 1) 0))) $QRs#111871) (<= $QRs#111871 (if (> 0 (if (< 1 (/ 0.3 0)) 1 (/ 0.3 0))) 0 (if (< 1 (/ 0.3 0)) 1 (/ 0.3 0))))))) (STV (if (< 0.9999 0) 0.3 (+ (* $PQs#111869 $QRs#111871) (/ (* (- 1 $PQs#111869) (- 0.3 (* 0 $QRs#111871))) (- 1 0)))) (min 0.3 (min 0.5 (min 0.2 (min $PQc#111875 $QRc#111876))))) (STV 1 0))))), (let* (((: $proof2#166826 (⊷ Q (S (S Z)) True)) (synthesize (: $proof2#166826 (⊷ Q (S (S Z)) True)) kb rb (S (S Z))))) (: (IDIBase P2 $proof2#166826) (≞ (→ P Q) (ETV (:: (S (S Z)) ∅) (STV 1 0.5))))), (: (IDIBase P7 Q7) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 1 0.5)))), (: (IDIBase P2 Q2) (≞ (→ P Q) (ETV (:: (S (S Z)) ∅) (STV 0 0.5)))), (let* (((: $proof2#169875 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#169875 (⊷ Q (S (S (S (S (S (S (S Z))))))) False)) kb rb (S (S Z))))) (: (IDIBase P7 $proof2#169875) (≞ (→ P Q) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 0 0.5)))))]
["===== Prove that P→R based on one piece of evidence and deduction ====="]
[(let* (((: $proof2#178212 (⊷ R (S (S Z)) True)) (synthesize (: $proof2#178212 (⊷ R (S (S Z)) True)) kb rb (S (S Z)))) ((: $proof3#178213 (≞ (→ P R) (ETV (:: $h#178218 $t#178219) (STV $PQs#178220 $y#178221)))) (synthesize (: $proof3#178213 (≞ (→ P R) (ETV (:: $h#178218 $t#178219) (STV $PQs#178220 $y#178221)))) kb rb (S (S Z)))) ((: $proof4#178214 (⍃ $h#178218 (S (S Z)))) (synthesize (: $proof4#178214 (⍃ $h#178218 (S (S Z)))) kb rb (S (S Z))))) (: (IDIRecursive P2 $proof2#178212 $proof3#178213 $proof4#178214) (≞ (→ P R) (ETV (:: (S (S Z)) (:: $h#178218 $t#178219)) (STV (/ (+ (* $PQs#178220 (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221)))) 1) (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1) 1.0))))))), (let* (((: $proof2#178212 (⊷ R (S (S (S (S (S (S (S Z))))))) True)) (synthesize (: $proof2#178212 (⊷ R (S (S (S (S (S (S (S Z))))))) True)) kb rb (S (S Z)))) ((: $proof3#178213 (≞ (→ P R) (ETV (:: $h#178218 $t#178219) (STV $PQs#178220 $y#178221)))) (synthesize (: $proof3#178213 (≞ (→ P R) (ETV (:: $h#178218 $t#178219) (STV $PQs#178220 $y#178221)))) kb rb (S (S Z)))) ((: $proof4#178214 (⍃ $h#178218 (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#178214 (⍃ $h#178218 (S (S (S (S (S (S (S Z))))))))) kb rb (S (S Z))))) (: (IDIRecursive P7 $proof2#178212 $proof3#178213 $proof4#178214) (≞ (→ P R) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: $h#178218 $t#178219)) (STV (/ (+ (* $PQs#178220 (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221)))) 1) (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#178221) 0) (* -1 (- 1.0 $y#178221)) (- 1.0 $y#178221)) 1e-09) (max-count) (/ (* $y#178221 (lookahead)) (- 1.0 $y#178221))) 1) 1.0))))))), (let* (((: $proof2#181052 (⊷ R (S (S Z)) False)) (synthesize (: $proof2#181052 (⊷ R (S (S Z)) False)) kb rb (S (S Z)))) ((: $proof3#181053 (≞ (→ P R) (ETV (:: $h#181058 $t#181059) (STV $PQs#181060 $y#181061)))) (synthesize (: $proof3#181053 (≞ (→ P R) (ETV (:: $h#181058 $t#181059) (STV $PQs#181060 $y#181061)))) kb rb (S (S Z)))) ((: $proof4#181054 (⍃ $h#181058 (S (S Z)))) (synthesize (: $proof4#181054 (⍃ $h#181058 (S (S Z)))) kb rb (S (S Z))))) (: (IDIRecursive P2 $proof2#181052 $proof3#181053 $proof4#181054) (≞ (→ P R) (ETV (:: (S (S Z)) (:: $h#181058 $t#181059)) (STV (/ (* $PQs#181060 (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061)))) (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1) 1.0))))))), (let* (((: $proof2#181052 (⊷ R (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#181052 (⊷ R (S (S (S (S (S (S (S Z))))))) False)) kb rb (S (S Z)))) ((: $proof3#181053 (≞ (→ P R) (ETV (:: $h#181058 $t#181059) (STV $PQs#181060 $y#181061)))) (synthesize (: $proof3#181053 (≞ (→ P R) (ETV (:: $h#181058 $t#181059) (STV $PQs#181060 $y#181061)))) kb rb (S (S Z)))) ((: $proof4#181054 (⍃ $h#181058 (S (S (S (S (S (S (S Z))))))))) (synthesize (: $proof4#181054 (⍃ $h#181058 (S (S (S (S (S (S (S Z))))))))) kb rb (S (S Z))))) (: (IDIRecursive P7 $proof2#181052 $proof3#181053 $proof4#181054) (≞ (→ P R) (ETV (:: (S (S (S (S (S (S (S Z))))))) (:: $h#181058 $t#181059)) (STV (/ (* $PQs#181060 (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061)))) (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1)) (/ (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1) (+ (+ (if (<= (if (< (- 1.0 $y#181061) 0) (* -1 (- 1.0 $y#181061)) (- 1.0 $y#181061)) 1e-09) (max-count) (/ (* $y#181061 (lookahead)) (- 1.0 $y#181061))) 1) 1.0))))))), (let* (((: $proof5#196218 (≞ (→ P R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ P R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm Pm Rm (EvidenceElimination (IDIBase P2 P2)) $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) 1) (<= 1 (if (> 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2))) 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2)))))) (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))) 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))))))) (STV (if (< 0.9999 0.2) 0.4 (+ (* 1 $QRs#196225) (/ (* (- 1 1) (- 0.4 (* 0.2 $QRs#196225))) (- 1 0.2)))) (min 0.3 (min 0.3 (min 0.1 (min 0.5 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof5#196218 (≞ (→ P R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ P R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm Pm Rm (EvidenceElimination (IDIBase P7 P7)) $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.2) 1) 0.2)) 1 (/ (- (+ 0.2 0.2) 1) 0.2))) 1) (<= 1 (if (> 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2))) 0 (if (< 1 (/ 0.2 0.2)) 1 (/ 0.2 0.2)))))) (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))) 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))))))) (STV (if (< 0.9999 0.2) 0.4 (+ (* 1 $QRs#196225) (/ (* (- 1 1) (- 0.4 (* 0.2 $QRs#196225))) (- 1 0.2)))) (min 0.3 (min 0.3 (min 0.1 (min 0.5 $QRc#196230))))) (STV 1 0))))), (: (Deduction Pm Qm Rm (EvidenceElimination (IDIBase P7 Q7)) QRm) (≞ (→ P R) (STV 0.9 0.1))), (: (Deduction Pm Qm Rm (EvidenceElimination (IDIBase P2 Q2)) QRm) (≞ (→ P R) (STV 0.18571428571428572 0.1))), (let* (((: $proof4#196217 (≞ (→ P R) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P R) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ R R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ R R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm Rm Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.4) 1) 0.2)) 1 (/ (- (+ 0.2 0.4) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2))) 0 (if (< 1 (/ 0.4 0.2)) 1 (/ 0.4 0.2)))))) (and (< 0 0.4) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.4 0.4) 1) 0.4)) 1 (/ (- (+ 0.4 0.4) 1) 0.4))) 0 (if (< 1 (/ (- (+ 0.4 0.4) 1) 0.4)) 1 (/ (- (+ 0.4 0.4) 1) 0.4))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 0.4)) 1 (/ 0.4 0.4))) 0 (if (< 1 (/ 0.4 0.4)) 1 (/ 0.4 0.4))))))) (STV (if (< 0.9999 0.4) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 0.4 $QRs#196225))) (- 1 0.4)))) (min 0.3 (min 0.1 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ Q R)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ Q R)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ Q R) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ Q R) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm QRm Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0.9) 1) 0.2)) 1 (/ (- (+ 0.2 0.9) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2))) 0 (if (< 1 (/ 0.9 0.2)) 1 (/ 0.9 0.2)))))) (and (< 0 0.9) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.9 0.4) 1) 0.9)) 1 (/ (- (+ 0.9 0.4) 1) 0.9))) 0 (if (< 1 (/ (- (+ 0.9 0.4) 1) 0.9)) 1 (/ (- (+ 0.9 0.4) 1) 0.9))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 0.9)) 1 (/ 0.4 0.9))) 0 (if (< 1 (/ 0.4 0.9)) 1 (/ 0.4 0.9))))))) (STV (if (< 0.9999 0.9) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 0.9 $QRs#196225))) (- 1 0.9)))) (min 0.3 (min 0.7 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ P P)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ P P)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ P P) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ P P) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P2 P2)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))) 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))))))) (STV (if (< 0.9999 1) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 1 $QRs#196225))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ P P)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ P P)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ P P) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ P P) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P7 P7)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))) 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))))))) (STV (if (< 0.9999 1) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 1 $QRs#196225))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ P Q)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ P Q)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ P Q) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ P Q) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P7 Q7)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))) 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))))))) (STV (if (< 0.9999 1) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 1 $QRs#196225))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ Q P)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ Q P)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ Q P) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ Q P) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase Q7 P7)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))) 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))))))) (STV (if (< 0.9999 1) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 1 $QRs#196225))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ Q Q)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ Q Q)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ Q Q) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ Q Q) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase Q7 Q7)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 1) 1) 0.2)) 1 (/ (- (+ 0.2 1) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2))) 0 (if (< 1 (/ 1 0.2)) 1 (/ 1 0.2)))))) (and (< 0 1) (and (<= (if (> 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) 0 (if (< 1 (/ (- (+ 1 0.4) 1) 1)) 1 (/ (- (+ 1 0.4) 1) 1))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))) 0 (if (< 1 (/ 0.4 1)) 1 (/ 0.4 1))))))) (STV (if (< 0.9999 1) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 1 $QRs#196225))) (- 1 1)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof4#196217 (≞ (→ P (→ P Q)) (STV $ABs#196223 $PQc#196229))) (synthesize (: $proof4#196217 (≞ (→ P (→ P Q)) (STV $ABs#196223 $PQc#196229))) kb rb (S (S Z)))) ((: $proof5#196218 (≞ (→ (→ P Q) R) (STV $QRs#196225 $QRc#196230))) (synthesize (: $proof5#196218 (≞ (→ (→ P Q) R) (STV $QRs#196225 $QRc#196230))) kb rb (S (S Z))))) (: (Deduction Pm (EvidenceElimination (IDIBase P2 Q2)) Rm $proof4#196217 $proof5#196218) (≞ (→ P R) (if (and (and (< 0 0.2) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0.2 0) 1) 0.2)) 1 (/ (- (+ 0.2 0) 1) 0.2))) 0 (if (< 1 (/ (- (+ 0.2 0) 1) 0.2)) 1 (/ (- (+ 0.2 0) 1) 0.2))) $ABs#196223) (<= $ABs#196223 (if (> 0 (if (< 1 (/ 0 0.2)) 1 (/ 0 0.2))) 0 (if (< 1 (/ 0 0.2)) 1 (/ 0 0.2)))))) (and (< 0 0) (and (<= (if (> 0 (if (< 1 (/ (- (+ 0 0.4) 1) 0)) 1 (/ (- (+ 0 0.4) 1) 0))) 0 (if (< 1 (/ (- (+ 0 0.4) 1) 0)) 1 (/ (- (+ 0 0.4) 1) 0))) $QRs#196225) (<= $QRs#196225 (if (> 0 (if (< 1 (/ 0.4 0)) 1 (/ 0.4 0))) 0 (if (< 1 (/ 0.4 0)) 1 (/ 0.4 0))))))) (STV (if (< 0.9999 0) 0.4 (+ (* $ABs#196223 $QRs#196225) (/ (* (- 1 $ABs#196223) (- 0.4 (* 0 $QRs#196225))) (- 1 0)))) (min 0.3 (min 0.5 (min 0.1 (min $PQc#196229 $QRc#196230))))) (STV 1 0))))), (let* (((: $proof2#248446 (⊷ R (S (S Z)) True)) (synthesize (: $proof2#248446 (⊷ R (S (S Z)) True)) kb rb (S (S Z))))) (: (IDIBase P2 $proof2#248446) (≞ (→ P R) (ETV (:: (S (S Z)) ∅) (STV 1 0.5))))), (let* (((: $proof2#248446 (⊷ R (S (S (S (S (S (S (S Z))))))) True)) (synthesize (: $proof2#248446 (⊷ R (S (S (S (S (S (S (S Z))))))) True)) kb rb (S (S Z))))) (: (IDIBase P7 $proof2#248446) (≞ (→ P R) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 1 0.5))))), (let* (((: $proof2#251276 (⊷ R (S (S Z)) False)) (synthesize (: $proof2#251276 (⊷ R (S (S Z)) False)) kb rb (S (S Z))))) (: (IDIBase P2 $proof2#251276) (≞ (→ P R) (ETV (:: (S (S Z)) ∅) (STV 0 0.5))))), (let* (((: $proof2#251276 (⊷ R (S (S (S (S (S (S (S Z))))))) False)) (synthesize (: $proof2#251276 (⊷ R (S (S (S (S (S (S (S Z))))))) False)) kb rb (S (S Z))))) (: (IDIBase P7 $proof2#251276) (≞ (→ P R) (ETV (:: (S (S (S (S (S (S (S Z))))))) ∅) (STV 0 0.5)))))]
