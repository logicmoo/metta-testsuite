/* PLEASE RUN THE COMMAND IN SEQUENCE AND PLEASE IGNORE THE COMMENTS WHILE COPYING THE COMMANDS TO THE COMMAND PROMPT */
/******** NORMALIZATION COMMANDS WHICH GENERATES NORMALIZED FILE FOR DA.txt to DA_Normalized.txt ********/

/* REMOVING THE UNWANTED CHARACTERS */

sed "s/[()]//g" DA_Corpus.txt > DA_New.txt
sed -i 's/\,//g' DA_New.txt     
sed -i 's/|//g' DA_New.txt 
sed -i "s/\.\.\.//g" DA_New.txt

/* HANDLING SPECIAL CASES WHERE WORDS HAVE BEEN SPELLED WRONGLY */

sed -i 's/m@ch@/mache/g' DA_New.txt
sed -i 's/gr@ce/grace/g' DA_New.txt
sed -i 's/I@/I /g' DA_New.txt
sed -i 's/M\*A\*S\*H/Mash/g' DA_New.txt

/* COMMANDS FOR REPLACING ' WITH IT PROPER MEANING */

sed -i "s/'' / /g" DA_New.txt  
sed -i "s/'em/ them/g" DA_New.txt
sed -i "s/'cos/because/g" DA_New.txt
sed -i "s/Vl'hurg/Vlhurg/g" DA_New.txt
sed -i "s/M'lud/My lord /g" DA_New.txt
sed -i "s/m'lud/my lord /g" DA_New.txt
sed -i "s/o'clock/ o clock /g" DA_New.txt
sed -i 's/-/ /g' DA_New.txt
sed -i 's/%/percentage/g' DA_New.txt
sed -i "s/'ll/ will /g" DA_New.txt
sed -i "s/'m/ am /g" DA_New.txt
sed -i "s/'re/ are /g" DA_New.txt
sed -i "s/'ve/ have /g" DA_New.txt
sed -i "s/ain't /are not /g" DA_New.txt             
sed -i "s/n't/ not /g" DA_New.txt


/* REPLACING 'S WITH THE PROPER WORD FROM THE ASSOCIATED WORD. ALSO TAKING CARE OF SOME SPECIAL CASE, LIKE WHERE TO REPLACE THIS WITH HAS AND WHERE TO REPLACE WITH IS OR US */

sed -i "s/Let's/Let us /g" DA_New.txt
sed -i "s/let's/let us /g" DA_New.txt
sed -i "/[[:alpha:]]*'s [[:alpha:]]*ed /s/'s / has /g" DA_New.txt
sed -i "/[[:alpha:]]*'s been /s/'s/ has/g" DA_New.txt
sed -i "s/It's/It is /g" DA_New.txt
sed -i "s/it's/it is /g" DA_New.txt
sed -i "s/That's/That is /g" DA_New.txt
sed -i "s/that's/that is /g" DA_New.txt
sed -i "s/What's/What is /g" DA_New.txt
sed -i "s/what's/what is /g" DA_New.txt
sed -i "s/He's/He is /g" DA_New.txt
sed -i "s/he's/he is /g" DA_New.txt
sed -i "s/She's/She is /g" DA_New.txt
sed -i "s/she's/she is /g" DA_New.txt
sed -i "s/Where's/Where is /g" DA_New.txt
sed -i "s/where's/where is /g" DA_New.txt
sed -i "s/Here's/Here is /g" DA_New.txt
sed -i "s/here's/here is /g" DA_New.txt
sed -i "s/Why's/Why is /g" DA_New.txt
sed -i "s/why's/why is /g" DA_New.txt
sed -i "s/Who's/Who is /g" DA_New.txt
sed -i "s/who's/who is /g" DA_New.txt
sed -i "s/When's/When is /g" DA_New.txt
sed -i "s/when's/when is /g" DA_New.txt
sed -i "s/There's/There is /g" DA_New.txt
sed -i "s/there's/there is /g" DA_New.txt
sed -i "s/Someone's/Someone is/g" DA_New.txt
sed -i "s/someone's/someone is/g" DA_New.txt
sed -i "s/Nothing's/Nothing is/g" DA_New.txt
sed -i "s/nothing's/nothing is/g" DA_New.txt
sed -i "s/Everything's/Everything is/g" DA_New.txt
sed -i "s/everything's/everything is/g" DA_New.txt
sed -i "s/Sugar's/Sugar is/g" DA_New.txt
sed -i "s/one's/one is/g" DA_New.txt
sed -i "s/Life's/Life is/g" DA_New.txt
sed -i "s/life's/life is/g" DA_New.txt
sed -i "s/time's/time is/g" DA_New.txt
sed -i "s/Computer's/Computer is/g" DA_New.txt
sed -i "s/computer's/computer is/g" DA_New.txt
sed -i "s/ground's/ground is/g" DA_New.txt
sed -i "s/cat's/cat is/g" DA_New.txt
sed -i "s/Down's/Down is/g" DA_New.txt
sed -i "s/building's/building is/g" DA_New.txt
sed -i "s/Flying's/Flying is/g" DA_New.txt
sed -i "s/Algol's/Algol is/g" DA_New.txt
sed -i "s/Aldebaran's/Aldebaran is/g" DA_New.txt
sed -i "s/'s/ s /g" DA_New.txt


/* REPLACING 'D WITH THE PROPER WORD */

sed -i "/[[:alpha:]]*'d been /s/'d/ had/g" DA_New.txt
sed -i "s/'d/ would/g" DA_New.txt


/* REMOVING SOME UNWANTED CHARACTERS */

sed -i "s/'/ /g"  DA_New.txt
sed -i 's/\*//g' DA_New.txt 


/* COMMANDS FOR BOUNDARY CASE */
 
sed -i "s/\?/\ . /g" DA_New.txt
sed -i "s/\!/\ . /g" DA_New.txt    
sed -i "s/\;/\ . /g" DA_New.txt      
sed -i "s/\:/\ . /g" DA_New.txt      
sed -i 's/\"/\ . /g' DA_New.txt        
sed -i 's/ \+/ /g' DA_New.txt


/* REMOVING REPITITION OF . */

tr '\n' ' ' < DA_New.txt > DA_Normalized.txt
sed -i "s/\.\.*/\./g" DA_Normalized.txt
sed -i "s/\.\( \+\.\)\+/\./g" DA_Normalized.txt




#################################################################################
##### NOW USEING THE NORMALIZED DA_Normalized.txt TO GENERATE TAG FILE TDA.txt ########

## COMMAND USED TO GENERATE THE TAGS USING Standford Parser (IT REQUIRES DA_Normalized.txt)

## Download the Standford parser from https://nlp.stanford.edu/software/stanford-postagger-2018-02-27.zip

java -cp "*" edu.stanford.nlp.tagger.maxent.MaxentTagger -model models/english-left3words-distsim.tagger -textFile DA_Normalized.txt -tokenize true -outputFormat tsv -outputFile TDA.txt


###################################################################################
######## NOW GENERATE PROLOGO READABLE TAGS, SIGMAS, and TAGS_COUNT FILE ##########

## COMMAND TO REMOVE . BY @ BOUNDARY CHARACTER FOR VITERBI PROGRAM

sed 's/^\./@/g;s/\.$/@/g' TDA.txt > TDA_New.txt


## COMMAND TO GENERATE THE COUNTS FOR tags_count, taus and sigmas

egrep -o '[A-Z]+\$?$|\@$' TDA_New.txt | sort | uniq -c | sort -n -r > tags_count.pl
egrep '^[[:alpha:]]+|^\@' TDA_New.txt | sort | uniq -c | sort -n -r > taus.pl


## CALCULATE sigmas

egrep -o '[A-Z]+\$?$|\@$' TDA_New.txt > unig1.txt
tail -n+2 unig1.txt > unig2.txt
paste unig1.txt unig2.txt > pairs.txt
sort < pairs.txt | uniq -c | sort -n -r > sigmas.pl


## COMMAND TO GENERATE PROLOG READABLE tag_count

sed -i "s/^ */tag_count(/g" tags_count.pl
sed -i "s/ /,'/g" tags_count.pl
sed -i 's/$/'\'')\./g' tags_count.pl


## COMMAND TO GENERATE PROLOG READABLE taus

sed -i "s/^ */tau(/g" taus.pl
sed -i "s/ /,'/g" taus.pl
sed -i "s/\t/','/g" taus.pl
sed -i 's/$/'\'')\./g' taus.pl


## COMMAND TO GENERATE PROLOG READABLE SIGMAS 

sed -i "s/^ */sigma(/g" sigmas.pl
sed -i "s/ /,'/" sigmas.pl
sed -i "s/\t/','/g" sigmas.pl
sed -i 's/$/'\'')\./g' sigmas.pl
sed -i "/sigma(1,'@','')./d" sigmas.pl


