:-encoding(iso_latin_1).
:- dynamic pllm:training/3.
:- multifile pllm:training/3.
:- module_transparent pllm:training/3.

pllm:training(100000000001, string, "Hey.").
pllm:training(100000000001, text_to_tree, ['NP', ['NNP', 'Hey'], ['.', '.']]).
pllm:training(100000000001, unphrasify, ['NP', ['NNP', 'Hey'], ['.', '.']]).
pllm:training(100000000001, tree_to_toks, ['Hey-.']).
pllm:training(100010000002, string, "Hi.").
pllm:training(100010000002, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(100010000002, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(100010000002, tree_to_toks, ['Hi', '.']).
pllm:training(100020000003, string, "Are you a fan of the Star Wars series?").
pllm:training(100020000003,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Are'],
                  ['NP', ['PRP', you]],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', fan]],
                    [ 'PP',
                      ['IN', of],
                      ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', series]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(100020000003,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Are'],
                ['NP', ['PRP', you]],
                ['NP', ['DT', a], ['NN', fan]],
                ['IN', of],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', series]],
                ['.', ?]
              ]).
pllm:training(100020000003,
              tree_to_toks,
              ['Are', you, 'a-fan', of, 'the-Star-Wars-series', ?]).
pllm:training(100030000004, string, "Yeah love them.").
pllm:training(100030000004,
              text_to_tree,
              ['S', ['NP', ['UH', 'Yeah']], ['VP', ['VB', love], ['NP', ['PRP', them]]], ['.', '.']]).
pllm:training(100030000004,
              unphrasify,
              [mark('S'), ['NP', ['UH', 'Yeah']], ['VB', love], ['NP', ['PRP', them]], ['.', '.']]).
pllm:training(100030000004, tree_to_toks, ['Yeah', love, them, '.']).
pllm:training(100040000005, string, "Me too.").
pllm:training(100040000005,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(100040000005,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(100040000005, tree_to_toks, ['Me', too, '.']).
pllm:training(100050000006, string, "Cool.").
pllm:training(100050000006, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Cool'], ['.', '.']]]).
pllm:training(100050000006, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Cool'], ['.', '.']]]).
pllm:training(100050000006, tree_to_toks, ['Cool', '.']).
pllm:training(100060000007, string, "Who is your least favorite character?").
pllm:training(100060000007,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(100060000007,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(100060000007,
              tree_to_toks,
              ['Who', is, 'your-least-favorite-character', ?]).
pllm:training(100070000008, string, "Without a doubt Jar Jar Binks.").
pllm:training(100070000008,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['PP', ['IN', 'Without'], ['NP', ['DT', a], ['NN', doubt]]],
                  ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                  ['.', '.']
                ]
              ]).
pllm:training(100070000008,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['IN', 'Without'],
                ['NP', ['DT', a], ['NN', doubt]],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['.', '.']
              ]).
pllm:training(100070000008, tree_to_toks, ['Without', 'a-doubt', 'Jar-Jar-Binks', '.']).
pllm:training(100080000009, string, "Oh man, same here.").
pllm:training(100080000009,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh'], ['UH', man]],
                [',', ','],
                ['NP', ['NP', ['JJ', same]], ['ADVP', ['RB', here]]],
                ['.', '.']
              ]).
pllm:training(100080000009,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh'], ['UH', man]],
                [',', ','],
                ['NP', ['JJ', same]],
                ['ADVP', ['RB', here]],
                ['.', '.']
              ]).
pllm:training(100080000009, tree_to_toks, ['Oh', man, ',', same, here, '.']).
pllm:training(100090000010, string, "Absolutely hate him.").
pllm:training(100090000010,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['ADVP', ['RB', 'Absolutely']], ['VP', ['VB', hate], ['NP', ['PRP', him]]], ['.', '.']]
              ]).
pllm:training(100090000010,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Absolutely']],
                ['VB', hate],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(100090000010, tree_to_toks, ['Absolutely', hate, him, '.']).
pllm:training(200010000012, string, "Who's you favorite Star Wars character?").
pllm:training(200010000012,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    ['NP', ['PRP', you]],
                    [ 'NP',
                      ['NP', ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NN', character]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(200010000012,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP', you]],
                ['NP', ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NN', character],
                ['.', ?]
              ]).
pllm:training(200010000012,
              tree_to_toks,
              ['Who', '\'s', you, 'favorite-Star-Wars', character, ?]).
pllm:training(200020000013, string, "Yoda, it is.").
pllm:training(200020000013,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['NNP', 'Yoda']], [',', ','], ['NP', ['PRP', it]], ['VP', ['VBZ', is]], ['.', '.']]
              ]).
pllm:training(200020000013,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(200020000013, tree_to_toks, ['Yoda', ',', it, is, '.']).
pllm:training(200030000014, string, "Don't you wish he was in the new movies?").
pllm:training(200030000014,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VB', 'Do'], ['RB', 'n\'t']]],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', new], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(200030000014,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VB', 'Do'],
                ['RB', 'n\'t'],
                ['NP', ['PRP', you]],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', new], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(200030000014,
              tree_to_toks,
              ['Do', 'n\'t', you, wish, he, was, in, 'the-new-movies', ?]).
pllm:training(200040000015, string, "Dead he is.").
pllm:training(200040000015,
              text_to_tree,
              ['CORENLP', ['S', ['ADVP', ['RB', 'Dead']], ['NP', ['PRP', he]], ['VP', ['VBZ', is]], ['.', '.']]]).
pllm:training(200040000015,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Dead']],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(200040000015, tree_to_toks, ['Dead', he, is, '.']).
pllm:training(200050000016, string, "Well, it's a movie. He could show up.").
pllm:training(200050000016,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['NN', movie]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['VP', ['MD', could], ['VP', ['VB', show], ['PRT', ['RP', up]]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(200050000016,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', movie]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['MD', could],
                ['VB', show],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(200050000016,
              tree_to_toks,
              ['Well', ',', it, '\'s', 'a-movie', '.', 'He', could, show, up, '.']).
pllm:training(200060000017, string, "Improbable that would be.").
pllm:training(200060000017,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADJP', ['JJ', 'Improbable']],
                  ['SBAR', ['NP', ['WDT', that]], ['S', ['VP', ['MD', would], ['VP', ['VB', be]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(200060000017,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADJP', ['JJ', 'Improbable']],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', would],
                ['VB', be],
                ['.', '.']
              ]).
pllm:training(200060000017, tree_to_toks, ['Improbable', that, would, be, '.']).
pllm:training(200070000018, string, "But Obi Wan was a ghost.").
pllm:training(200070000018,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['NNP', 'Obi'], ['NNP', 'Wan']],
                  ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', ghost]]],
                  ['.', '.']
                ]
              ]).
pllm:training(200070000018,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'Obi'], ['NNP', 'Wan']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', ghost]],
                ['.', '.']
              ]).
pllm:training(200070000018, tree_to_toks, ['But', 'Obi-Wan', was, 'a-ghost', '.']).
pllm:training(200080000019, string, "True that is.").
pllm:training(200080000019,
              text_to_tree,
              ['S', ['ADJP', ['JJ', 'True']], ['NP', ['DT', that]], ['VP', ['AUX', is]], ['.', '.']]).
pllm:training(200080000019,
              unphrasify,
              [mark('S'), ['ADJP', ['JJ', 'True']], ['NP', ['DT', that]], ['AUX', is], ['.', '.']]).
pllm:training(200080000019, tree_to_toks, ['True', that, is, '.']).
pllm:training(200090000020,
              string,
              "What about young Yoda? Like when he was in training?").
pllm:training(200090000020,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['NP', ['WP', 'What']],
                    ['PP', ['IN', about], ['NP', ['JJ', young], ['NNP', 'Yoda']]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'Like']],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['VBD', was], ['PP', ['IN', in], ['NP', ['NN', training]]]]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(200090000020,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['JJ', young], ['NNP', 'Yoda']],
                ['.', ?],
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Like']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['IN', in],
                ['NP', ['NN', training]],
                ['.', ?]
              ]).
pllm:training(200090000020,
              tree_to_toks,
              ['What', about, 'young-Yoda', ?, 'Like', when, he, was, in, training, ?]).
pllm:training(200100000021, string, "Yes, interesting that would be.").
pllm:training(200100000021,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'NP',
                    ['NP', ['JJ', interesting]],
                    ['SBAR', ['NP', ['WDT', that]], ['S', ['VP', ['MD', would], ['VP', ['VB', be]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(200100000021,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['JJ', interesting]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', would],
                ['VB', be],
                ['.', '.']
              ]).
pllm:training(200100000021, tree_to_toks, ['Yes', ',', interesting, that, would, be, '.']).
pllm:training(300010000023,
              string,
              "Okay, so what do you think was the worst part about the Phantom Menace?").
pllm:training(300010000023,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['INTJ', ['UH', 'Okay']],
                  [',', ','],
                  ['ADVP', ['RB', so]],
                  ['NP', ['WP', what]],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJS', worst], ['NN', part]],
                              [ 'PP',
                                ['IN', about],
                                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(300010000023,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['WP', what]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', the], ['JJS', worst], ['NN', part]],
                ['IN', about],
                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['.', ?]
              ]).
pllm:training(300010000023,
              tree_to_toks,
              [ 'Okay',
                (','),
                so,
                what,
                do,
                you,
                think,
                was,
                'the-worst-part',
                about,
                'the-Phantom-Menace',
                (?)
              ]).
pllm:training(300020000024,
              string,
              "Oh, man, just ONE worst part?  It's so hard to choose.. there's so many.").
pllm:training(300020000024,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['INTJ', ['UH', man]],
                    [',', ','],
                    ['PP', ['RB', just], ['NP', ['ADJP', ['CD', 'ONE'], ['JJS', worst]], ['NN', part]]],
                    ['.', ?]
                  ]
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['AUX', '\'s'],
                      [ 'ADJP',
                        ['RB', so],
                        ['JJ', hard],
                        ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', choose]]]]]
                      ]
                    ],
                    ['.', '.']
                  ],
                  [ 'SEQBAR',
                    ['CORENLP', ['FRAG', ['.', '.']]],
                    [ 'CORENLP',
                      [ 'S',
                        ['NP', ['EX', there]],
                        ['VP', ['VBZ', '\'s'], ['ADJP', ['RB', so], ['JJ', many]]],
                        ['.', '.']
                      ]
                    ]
                  ]
                ]
              ]).
pllm:training(300020000024,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['RB', just],
                ['NP', ['ADJP', ['CD', 'ONE'], ['JJS', worst]], ['NN', part]],
                ['.', ?],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', '\'s'],
                [ 'ADJP',
                  ['RB', so],
                  ['JJ', hard],
                  ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', choose]]]]]
                ],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', so], ['JJ', many]],
                ['.', '.']
              ]).
pllm:training(300020000024,
              tree_to_toks,
              [ 'Oh',
                (','),
                man,
                (','),
                just,
                'ONE-worst-part',
                (?),
                'It',
                '\'s',
                so,
                hard,
                to,
                choose,
                ('.'),
                ('.'),
                there,
                '\'s',
                so,
                many,
                ('.')
              ]).
pllm:training(300030000025,
              string,
              "I know, I know, but for me, it had to be the  Midi-chlorians.").
pllm:training(300030000025,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                  ['PRN', [',', ','], ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]], [',', ',']],
                  ['CC', but],
                  [ 'S',
                    ['PP', ['IN', for], ['NP', ['PRP', me]]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'NP',
                              ['NP', ['DT', the], ['NNP', 'Midi']],
                              ['PP', ['HYPH', -], ['NP', ['NNS', chlorians]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300030000025,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['IN', for],
                ['NP', ['PRP', me]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', the], ['NNP', 'Midi']],
                ['HYPH', -],
                ['NP', ['NNS', chlorians]],
                ['.', '.']
              ]).
pllm:training(300030000025,
              tree_to_toks,
              [ 'I',
                know,
                'PRN',
                (','),
                'I',
                know,
                (','),
                but,
                for,
                me,
                (','),
                it,
                had,
                to,
                be,
                'the-Midi',
                (-),
                chlorians,
                ('.')
              ]).
pllm:training(300040000026, string, "Oh, God, don't remind me of those.").
pllm:training(300040000026,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh']],
                  [',', ','],
                  ['INTJ', ['NNP', 'God']],
                  [',', ','],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', remind],
                      ['NP', ['PRP', me]],
                      ['PP', ['IN', of], ['NP', ['DT', those]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300040000026,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['NNP', 'God']],
                [',', ','],
                ['VB', do],
                ['RB', not],
                ['VB', remind],
                ['NP', ['PRP', me]],
                ['IN', of],
                ['NP', ['DT', those]],
                ['.', '.']
              ]).
pllm:training(300040000026,
              tree_to_toks,
              ['Oh', ',', 'God', ',', do, not, remind, me, of, those, '.']).
pllm:training(300050000027,
              string,
              "Yeah, i mean, first film it establishes the Force as some kind of a mystical life force like \"chi\" or something that binds the universe and then.").
pllm:training(300050000027,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', mean],
                    [',', ','],
                    [ 'S',
                      ['NP', ['JJ', first], ['NN', film]],
                      [ 'UCP',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', establishes],
                            [ 'NP',
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', 'Force']],
                                [ 'PP',
                                  ['IN', as],
                                  [ 'NP',
                                    ['NP', ['DT', some], ['NN', kind]],
                                    [ 'PP',
                                      ['IN', of],
                                      [ 'NP',
                                        [ 'NP',
                                          ['DT', a],
                                          ['JJ', mystical],
                                          ['NN', life],
                                          ['NN', force]
                                        ],
                                        [ 'PP',
                                          ['IN', like],
                                          [ 'NP',
                                            ['``', '"'],
                                            ['NN', chi],
                                            ['\'\'', '"'],
                                            ['CC', or],
                                            ['NN', something]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  ['VP', ['VBZ', binds], ['NP', ['DT', the], ['NN', universe]]]
                                ]
                              ]
                            ]
                          ]
                        ],
                        ['CC', and],
                        ['ADVP', ['RB', then]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300050000027,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', mean],
                [',', ','],
                mark('S'),
                ['NP', ['JJ', first], ['NN', film]],
                'UCP',
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', establishes],
                ['NP', ['DT', the], ['NN', 'Force']],
                ['IN', as],
                ['NP', ['DT', some], ['NN', kind]],
                ['IN', of],
                ['NP', ['DT', a], ['JJ', mystical], ['NN', life], ['NN', force]],
                ['IN', like],
                ['NP', ['``', '"'], ['NN', chi], ['\'\'', '"'], ['CC', or], ['NN', something]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', binds],
                ['NP', ['DT', the], ['NN', universe]],
                ['CC', and],
                ['ADVP', ['RB', then]],
                ['.', '.']
              ]).
pllm:training(300050000027,
              tree_to_toks,
              [ 'Yeah',
                (','),
                i,
                mean,
                (','),
                'first-film',
                'UCP',
                it,
                establishes,
                'the-Force',
                (as),
                'some-kind',
                of,
                'a-mystical-life-force',
                like,
                '"-chi-"-or-something',
                that,
                binds,
                'the-universe',
                and,
                then,
                ('.')
              ]).
pllm:training(300060000028,
              string,
              "And then it's all, \"No, it's actually just a bunch of microscopic bugs.\"").
pllm:training(300060000028,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['CC', 'And'],
                  ['ADVP', ['RB', then]],
                  ['NP', ['PRP', it]],
                  ['VP', ['AUX', '\'s'], ['NP', ['DT', all]]]
                ],
                [',', ','],
                [ 'S',
                  ['``', '``'],
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['ADVP', ['RB', actually]],
                    [ 'NP',
                      ['NP', ['RB', just], ['DT', a], ['NN', bunch]],
                      ['PP', ['IN', of], ['NP', ['JJ', microscopic], ['NNS', bugs]]]
                    ]
                  ],
                  ['.', '.'],
                  ['\'\'', '\'\'']
                ],
                ['.', '.']
              ]).
pllm:training(300060000028,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['NP', ['DT', all]],
                [',', ','],
                mark('S'),
                ['``', '``'],
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['ADVP', ['RB', actually]],
                ['NP', ['RB', just], ['DT', a], ['NN', bunch]],
                ['IN', of],
                ['NP', ['JJ', microscopic], ['NNS', bugs]],
                ['.', '.'],
                ['\'\'', '\'\''],
                ['.', '.']
              ]).
pllm:training(300060000028,
              tree_to_toks,
              [ 'And',
                then,
                it,
                '\'s',
                all,
                (','),
                '``',
                'No',
                (','),
                it,
                '\'s',
                actually,
                'just-a-bunch',
                of,
                'microscopic-bugs',
                ('.'),
                '\'\'',
                ('.')
              ]).
pllm:training(300070000029,
              string,
              "Exactly! I really don't know what Lucas was thinking on that.").
pllm:training(300070000029,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['NP', ['WP', what]],
                          [ 'S',
                            ['NP', ['NNP', 'Lucas']],
                            [ 'VP',
                              ['VBD', was],
                              ['VP', ['VBG', thinking], ['PP', ['IN', on], ['NP', ['DT', that]]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(300070000029,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBD', was],
                ['VBG', thinking],
                ['IN', on],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(300070000029,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'I',
                really,
                do,
                not,
                know,
                what,
                'Lucas',
                was,
                thinking,
                on,
                that,
                ('.')
              ]).
pllm:training(300080000030, string, "I hate to say it buuut...").
pllm:training(300080000030,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', hate],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', say], ['S', ['NP', ['PRP', it]], ['VP', ['VB', 'buuut.']], [',', ',']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', [',', ',']], ['.', '.']],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(300080000030,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hate],
                mark('S'),
                ['TO', to],
                ['VB', say],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VB', 'buuut.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(300080000030,
              tree_to_toks,
              ['I', hate, to, say, it, 'buuut.', ',', '.', ',', '.', 'FRAG', '.']).
pllm:training(300090000031, string, "Oh, go ahead.").
pllm:training(300090000031,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['INTJ', ['UH', 'Oh']], [',', ','], ['VP', ['VB', go], ['ADVP', ['RB', ahead]]], ['.', '.']]
              ]).
pllm:training(300090000031,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['VB', go],
                ['ADVP', ['RB', ahead]],
                ['.', '.']
              ]).
pllm:training(300090000031, tree_to_toks, ['Oh', ',', go, ahead, '.']).
pllm:training(300100000032,
              string,
              "I think he was just giving a giant middle finger to the audience.").
pllm:training(300100000032,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADVP', ['RB', just]],
                          [ 'VP',
                            ['VBG', giving],
                            ['NP', ['DT', a], ['JJ', giant], ['JJ', middle], ['NN', finger]],
                            ['PP', ['IN', to], ['NP', ['DT', the], ['NN', audience]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300100000032,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                ['VBG', giving],
                ['NP', ['DT', a], ['JJ', giant], ['JJ', middle], ['NN', finger]],
                ['IN', to],
                ['NP', ['DT', the], ['NN', audience]],
                ['.', '.']
              ]).
pllm:training(300100000032,
              tree_to_toks,
              [ 'I',
                think,
                he,
                was,
                just,
                giving,
                'a-giant-middle-finger',
                to,
                'the-audience',
                ('.')
              ]).
pllm:training(400010000034, string, "who's your favorite star wars villain?").
pllm:training(400010000034,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', who]],
                [ 'S',
                  ['AUX', '\'s'],
                  ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                  ['VP', ['VBG', villain]]
                ],
                ['.', ?]
              ]).
pllm:training(400010000034,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['VBG', villain],
                ['.', ?]
              ]).
pllm:training(400010000034,
              tree_to_toks,
              [who, '\'s', 'your-favorite-star-wars', villain, ?]).
pllm:training(400020000035, string, "wow! tough choice").
pllm:training(400020000035,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', wow], ['.', '.']]],
                ['CORENLP', ['NP', ['JJ', tough], ['NN', choice], ['.', '.']]]
              ]).
pllm:training(400020000035,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', wow], ['.', '.']],
                mark('CORENLP'),
                ['NP', ['JJ', tough], ['NN', choice], ['.', '.']]
              ]).
pllm:training(400020000035, tree_to_toks, [wow, '.', 'tough-choice-.']).
pllm:training(400030000036, string, "you better not pick kylo").
pllm:training(400030000036,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RBR', better], ['RB', not]],
                  ['VP', ['VB', pick], ['NP', ['NN', kylo]]],
                  ['.', '.']
                ]
              ]).
pllm:training(400030000036,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RBR', better], ['RB', not]],
                ['VB', pick],
                ['NP', ['NN', kylo]],
                ['.', '.']
              ]).
pllm:training(400030000036, tree_to_toks, [you, better, not, pick, kylo, '.']).
pllm:training(400040000037, string, "who would pick kylo? definitely not me").
pllm:training(400040000037,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', who]],
                    ['S', ['VP', ['MD', would], ['VP', ['VB', pick], ['NP', ['NN', kylo]]]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  ['FRAG', ['ADVP', ['RB', definitely], ['RB', not]], ['NP', ['PRP', me]], ['.', '.']]
                ]
              ]).
pllm:training(400040000037,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['MD', would],
                ['VB', pick],
                ['NP', ['NN', kylo]],
                ['.', ?],
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', definitely], ['RB', not]],
                ['NP', ['PRP', me]],
                ['.', '.']
              ]).
pllm:training(400040000037,
              tree_to_toks,
              [who, would, pick, kylo, ?, definitely, not, me, '.']).
pllm:training(400050000038,
              string,
              "good. i knew there was a reason i keep you around").
pllm:training(400050000038,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['ADJP', ['JJ', good], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VBD', knew],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', reason]],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', i]],
                                  [ 'VP',
                                    ['VB', keep],
                                    ['NP', ['PRP', you]],
                                    ['ADVP', ['RB', around]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(400050000038,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['ADJP', ['JJ', good], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VBD', knew],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', reason]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', keep],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', around]],
                ['.', '.']
              ]).
pllm:training(400050000038,
              tree_to_toks,
              [good, '.', i, knew, there, was, 'a-reason', i, keep, you, around, '.']).
pllm:training(400060000039, string, "because you have good taste?").
pllm:training(400060000039,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['IN', because],
                  ['S', ['NP', ['PRP', you]], ['VP', ['AUX', have], ['NP', ['JJ', good], ['NN', taste]]]]
                ],
                ['.', ?]
              ]).
pllm:training(400060000039,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', you]],
                ['AUX', have],
                ['NP', ['JJ', good], ['NN', taste]],
                ['.', ?]
              ]).
pllm:training(400060000039, tree_to_toks, [because, you, have, 'good-taste', ?]).
pllm:training(400070000040, string, "let's get back to your taste.").
pllm:training(400070000040,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VB', let],
                    [ 'S',
                      ['NP', ['PRP', '\'s']],
                      [ 'VP',
                        ['VB', get],
                        ['ADVP', ['RB', back]],
                        ['PP', ['IN', to], ['NP', ['PRP$', your], ['NN', taste]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(400070000040,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', let],
                mark('S'),
                ['NP', ['PRP', '\'s']],
                ['VB', get],
                ['ADVP', ['RB', back]],
                ['IN', to],
                ['NP', ['PRP$', your], ['NN', taste]],
                ['.', '.']
              ]).
pllm:training(400070000040, tree_to_toks, [let, '\'s', get, back, to, 'your-taste', '.']).
pllm:training(400080000041, string, "okay okay. i guess my favorite is darth").
pllm:training(400080000041,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['INTJ', ['UH', okay]], ['INTJ', ['UH', okay]], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP$', my], ['NN', favorite]],
                        ['VP', ['AUX', is], ['NP', ['NNP', darth]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(400080000041,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', okay]],
                ['INTJ', ['UH', okay]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['AUX', is],
                ['NP', ['NNP', darth]],
                ['.', '.']
              ]).
pllm:training(400080000041,
              tree_to_toks,
              [okay, okay, '.', i, guess, 'my-favorite', is, darth, '.']).
pllm:training(400090000042, string, "cliche, but a good enough choice").
pllm:training(400090000042,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NN', cliche]],
                  [',', ','],
                  ['CC', but],
                  ['NP', ['DT', a], ['ADJP', ['JJ', good], ['JJ', enough]], ['NN', choice]],
                  ['.', '.']
                ]
              ]).
pllm:training(400090000042,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NN', cliche]],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', a], ['ADJP', ['JJ', good], ['JJ', enough]], ['NN', choice]],
                ['.', '.']
              ]).
pllm:training(400090000042, tree_to_toks, [cliche, ',', but, 'a-good-enough-choice', '.']).
pllm:training(400100000043, string, "he's classic!").
pllm:training(400100000043,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', classic]]], ['.', '.']]
              ]).
pllm:training(400100000043,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', classic]],
                ['.', '.']
              ]).
pllm:training(400100000043, tree_to_toks, [he, '\'s', classic, '.']).
pllm:training(500010000045, string, "Who is your favorite evil guy in Star Wars?").
pllm:training(500010000045,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', evil], ['NN', guy]],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(500010000045,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', evil], ['NN', guy]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(500010000045,
              tree_to_toks,
              ['Who', is, 'your-favorite-evil-guy', in, 'Star-Wars', ?]).
pllm:training(500020000046,
              string,
              "Obviously Darth Vader is the best and the original bad guy of Star Wars.").
pllm:training(500020000046,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Obviously']],
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJS', best]],
                      ['CC', and],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', original], ['JJ', bad], ['NN', guy]],
                        ['PP', ['IN', of], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500020000046,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Obviously']],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBZ', is],
                ['NP', ['DT', the], ['JJS', best]],
                ['CC', and],
                ['NP', ['DT', the], ['JJ', original], ['JJ', bad], ['NN', guy]],
                ['IN', of],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.']
              ]).
pllm:training(500020000046,
              tree_to_toks,
              [ 'Obviously',
                'Darth-Vader',
                (is),
                'the-best',
                and,
                'the-original-bad-guy',
                of,
                'Star-Wars',
                ('.')
              ]).
pllm:training(500030000047,
              string,
              "Yeah but did you know that he was supposed to be killed off in the first movie?").
pllm:training(500030000047,
              text_to_tree,
              [ 'SBAR',
                ['INTJ', ['INTJ', ['UH', 'Yeah']], ['CC', but]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['AUX', was],
                          [ 'VP',
                            ['VBN', supposed],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['AUX', be],
                                  [ 'VP',
                                    ['VBN', killed],
                                    ['PRT', ['RP', off]],
                                    [ 'PP',
                                      ['IN', in],
                                      ['NP', ['DT', the], ['JJ', first], ['NN', movie]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(500030000047,
              unphrasify,
              [ mark('SBAR'),
                ['INTJ', ['INTJ', ['UH', 'Yeah']], ['CC', but]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['VBN', supposed],
                mark('S'),
                ['TO', to],
                ['AUX', be],
                ['VBN', killed],
                ['PRT', ['RP', off]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(500030000047,
              tree_to_toks,
              [ 'Yeah',
                but,
                did,
                you,
                know,
                that,
                he,
                was,
                supposed,
                to,
                be,
                killed,
                off,
                in,
                'the-first-movie',
                (?)
              ]).
pllm:training(500040000048,
              string,
              "I can't imagine the movies without him. His voice and costume is so iconic.").
pllm:training(500040000048,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', can],
                      ['RB', not],
                      [ 'VP',
                        ['VB', imagine],
                        ['NP', ['DT', the], ['NNS', movies]],
                        ['PP', ['IN', without], ['NP', ['PRP', him]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', voice], ['CC', and], ['NN', costume]],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', so], ['JJ', iconic]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500040000048,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', imagine],
                ['NP', ['DT', the], ['NNS', movies]],
                ['IN', without],
                ['NP', ['PRP', him]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', voice], ['CC', and], ['NN', costume]],
                ['VBZ', is],
                ['ADJP', ['RB', so], ['JJ', iconic]],
                ['.', '.']
              ]).
pllm:training(500040000048,
              tree_to_toks,
              [ 'I',
                can,
                not,
                imagine,
                'the-movies',
                without,
                him,
                ('.'),
                'His-voice-and-costume',
                (is),
                so,
                iconic,
                ('.')
              ]).
pllm:training(500050000049,
              string,
              "Yeah but he is only on screen for like 12 minutes in the first movie, even though he is pretty much a main character.").
pllm:training(500050000049,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['CC', but],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', only]],
                    [ 'PP',
                      ['IN', on],
                      [ 'NP',
                        ['NP', ['NN', screen]],
                        [ 'PP',
                          ['IN', for],
                          ['INTJ', ['UH', like]],
                          [ 'NP',
                            ['NP', ['CD', '12'], ['NNS', minutes]],
                            ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['NN', movie]]]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'SBAR',
                      ['RB', even],
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBZ', is],
                          ['ADVP', ['RB', pretty], ['RB', much]],
                          ['NP', ['DT', a], ['JJ', main], ['NN', character]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500050000049,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['CC', but],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADVP', ['RB', only]],
                ['IN', on],
                ['NP', ['NN', screen]],
                ['IN', for],
                ['INTJ', ['UH', like]],
                ['NP', ['CD', '12'], ['NNS', minutes]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                [',', ','],
                mark('SBAR'),
                ['RB', even],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADVP', ['RB', pretty], ['RB', much]],
                ['NP', ['DT', a], ['JJ', main], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(500050000049,
              tree_to_toks,
              [ 'Yeah',
                but,
                he,
                (is),
                only,
                on,
                screen,
                for,
                like,
                '12-minutes',
                in,
                'the-first-movie',
                (','),
                even,
                though,
                he,
                (is),
                pretty,
                much,
                'a-main-character',
                ('.')
              ]).
pllm:training(500060000050,
              string,
              "I just learned that they guy doing the voice isn't the same guy that is actually doing the acting.").
pllm:training(500060000050,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VBD', learned],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        [ 'NP',
                          ['NP', ['NP', ['PRP', they]], ['RB', guy]],
                          ['VP', ['VBG', doing], ['NP', ['DT', the], ['NN', voice]]]
                        ],
                        [ 'VP',
                          ['VBZ', is],
                          ['RB', not],
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', same], ['NN', guy]],
                            [ 'SBAR',
                              ['NP', ['WDT', that]],
                              [ 'S',
                                [ 'VP',
                                  ['VBZ', is],
                                  ['ADVP', ['RB', actually]],
                                  ['VP', ['VBG', doing], ['NP', ['DT', the], ['NN', acting]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500060000050,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', learned],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['RB', guy],
                ['VBG', doing],
                ['NP', ['DT', the], ['NN', voice]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', the], ['JJ', same], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', is],
                ['ADVP', ['RB', actually]],
                ['VBG', doing],
                ['NP', ['DT', the], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(500060000050,
              tree_to_toks,
              [ 'I',
                just,
                learned,
                that,
                they,
                guy,
                doing,
                'the-voice',
                (is),
                not,
                'the-same-guy',
                that,
                (is),
                actually,
                doing,
                'the-acting',
                ('.')
              ]).
pllm:training(500070000051,
              string,
              "James Earl Jones does the voice, even though he isn't listed in the credits. David Prowse did the acting.").
pllm:training(500070000051,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                    [ 'VP',
                      ['VBZ', does],
                      ['NP', ['DT', the], ['NN', voice]],
                      [',', ','],
                      [ 'SBAR',
                        ['RB', even],
                        ['IN', though],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', is],
                            ['RB', not],
                            [ 'VP',
                              ['VBN', listed],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', credits]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                    ['VP', ['VBD', did], ['NP', ['DT', the], ['NN', acting]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500070000051,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                ['VBZ', does],
                ['NP', ['DT', the], ['NN', voice]],
                [',', ','],
                mark('SBAR'),
                ['RB', even],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['VBN', listed],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', credits]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                ['VBD', did],
                ['NP', ['DT', the], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(500070000051,
              tree_to_toks,
              [ 'James-Earl-Jones',
                does,
                'the-voice',
                (','),
                even,
                though,
                he,
                (is),
                not,
                listed,
                in,
                'the-credits',
                ('.'),
                'David-Prowse',
                did,
                'the-acting',
                ('.')
              ]).
pllm:training(500080000052,
              string,
              "His voice was perfect for that role!  He also did Mufasa in the Lion King.").
pllm:training(500080000052,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', voice]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'ADJP',
                        ['JJ', perfect],
                        ['PP', ['IN', for], ['NP', ['DT', that], ['NN', role]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['ADVP', ['RB', also]],
                    [ 'VP',
                      ['VBD', did],
                      ['NP', ['NNP', 'Mufasa']],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NNP', 'Lion'], ['NNP', 'King']]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500080000052,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', voice]],
                ['VBD', was],
                'ADJP',
                ['JJ', perfect],
                ['IN', for],
                ['NP', ['DT', that], ['NN', role]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', also]],
                ['VBD', did],
                ['NP', ['NNP', 'Mufasa']],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Lion'], ['NNP', 'King']],
                ['.', '.']
              ]).
pllm:training(500080000052,
              tree_to_toks,
              [ 'His-voice',
                was,
                'ADJP',
                perfect,
                for,
                'that-role',
                ('.'),
                'He',
                also,
                did,
                'Mufasa',
                in,
                'the-Lion-King',
                ('.')
              ]).
pllm:training(500090000053,
              string,
              "Even though they played the same character, David and Earl never actually met eachother.").
pllm:training(500090000053,
              text_to_tree,
              [ 'S',
                [ 'SBAR',
                  ['RB', 'Even'],
                  ['IN', though],
                  [ 'S',
                    ['NP', ['PRP', they]],
                    ['VP', ['VBD', played], ['NP', ['DT', the], ['JJ', same], ['NN', character]]]
                  ]
                ],
                [',', ','],
                ['NP', ['NNP', 'David'], ['CC', and], ['NNP', 'Earl']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', actually]],
                ['VP', ['VBD', met], ['NP', ['NN', eachother]]],
                ['.', '.']
              ]).
pllm:training(500090000053,
              unphrasify,
              [ mark('S'),
                mark('SBAR'),
                ['RB', 'Even'],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', played],
                ['NP', ['DT', the], ['JJ', same], ['NN', character]],
                [',', ','],
                ['NP', ['NNP', 'David'], ['CC', and], ['NNP', 'Earl']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', actually]],
                ['VBD', met],
                ['NP', ['NN', eachother]],
                ['.', '.']
              ]).
pllm:training(500090000053,
              tree_to_toks,
              [ 'Even',
                though,
                they,
                played,
                'the-same-character',
                (','),
                'David-and-Earl',
                never,
                actually,
                met,
                eachother,
                ('.')
              ]).
pllm:training(500100000054,
              string,
              "That would be so weird to be playing the same person but never meet the other half.").
pllm:training(500100000054,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      [ 'ADJP',
                        ['RB', so],
                        ['JJ', weird],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              [ 'VP',
                                ['VB', be],
                                [ 'VP',
                                  ['VBG', playing],
                                  ['NP', ['DT', the], ['JJ', same], ['NN', person]]
                                ]
                              ],
                              ['CC', but],
                              ['ADVP', ['RB', never]],
                              [ 'VP',
                                ['VB', meet],
                                ['NP', ['DT', the], ['JJ', other], ['NN', half]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500100000054,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', be],
                'ADJP',
                ['RB', so],
                ['JJ', weird],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['VBG', playing],
                ['NP', ['DT', the], ['JJ', same], ['NN', person]],
                ['CC', but],
                ['ADVP', ['RB', never]],
                ['VB', meet],
                ['NP', ['DT', the], ['JJ', other], ['NN', half]],
                ['.', '.']
              ]).
pllm:training(500100000054,
              tree_to_toks,
              [ 'That',
                would,
                be,
                'ADJP',
                so,
                weird,
                to,
                be,
                playing,
                'the-same-person',
                but,
                never,
                meet,
                'the-other-half',
                ('.')
              ]).
pllm:training(600010000056, string, "So, I watched the Force Awakens, I am lost.").
pllm:training(600010000056,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [ 'PRN',
                    [',', ','],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', watched],
                        ['NP', ['DT', the], ['NNP', 'Force'], ['NNP', 'Awakens']]
                      ]
                    ],
                    [',', ',']
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['VP', ['VBN', lost]]],
                  ['.', '.']
                ]
              ]).
pllm:training(600010000056,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NNP', 'Awakens']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['VBN', lost],
                ['.', '.']
              ]).
pllm:training(600010000056,
              tree_to_toks,
              ['So', 'PRN', ',', 'I', watched, 'the-Force-Awakens', ',', 'I', am, lost, '.']).
pllm:training(600020000057, string, "By what? Good film.").
pllm:training(600020000057,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['WHPP', ['IN', 'By'], ['NP', ['WP', what]]], ['.', ?]]],
                ['CORENLP', ['NP', ['JJ', 'Good'], ['NN', film], ['.', '.']]]
              ]).
pllm:training(600020000057,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                'WHPP',
                ['IN', 'By'],
                ['NP', ['WP', what]],
                ['.', ?],
                mark('CORENLP'),
                ['NP', ['JJ', 'Good'], ['NN', film], ['.', '.']]
              ]).
pllm:training(600020000057, tree_to_toks, ['WHPP', 'By', what, ?, 'Good-film-.']).
pllm:training(600030000058,
              string,
              "I liked it, but was the force sleeping before?").
pllm:training(600030000058,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]],
                    [',', ','],
                    ['CC', but],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', force]],
                        ['VP', ['VBG', sleeping], ['PP', ['IN', before]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(600030000058,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                [',', ','],
                ['CC', but],
                ['VBD', was],
                ['NP', ['DT', the], ['NN', force]],
                ['VBG', sleeping],
                ['IN', before],
                ['.', ?]
              ]).
pllm:training(600030000058,
              tree_to_toks,
              ['I', liked, it, ',', but, was, 'the-force', sleeping, before, ?]).
pllm:training(600040000059,
              string,
              "No, it just means that a new Jedi had emerged.").
pllm:training(600040000059,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VBZ', means],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['DT', a], ['JJ', new], ['NNP', 'Jedi']],
                        ['VP', ['VBD', had], ['VP', ['VBN', emerged]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600040000059,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', just]],
                ['VBZ', means],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', a], ['JJ', new], ['NNP', 'Jedi']],
                ['VBD', had],
                ['VBN', emerged],
                ['.', '.']
              ]).
pllm:training(600040000059,
              tree_to_toks,
              ['No', ',', it, just, means, that, 'a-new-Jedi', had, emerged, '.']).
pllm:training(600050000060,
              string,
              "Well, if it is Rey, then why did it not wake when Klyo came into power.").
pllm:training(600050000060,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                [ 'SBAR',
                  ['IN', if],
                  [ 'S',
                    ['S', ['NP', ['PRP', it]], ['VP', ['AUX', is], ['NP', ['NNP', 'Rey']]]],
                    [',', ','],
                    ['RB', then],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', why]],
                      [ 'S',
                        ['AUX', did],
                        ['NP', ['PRP', it]],
                        ['RB', not],
                        [ 'VP',
                          ['VB', wake],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', when]],
                            [ 'S',
                              ['NP', ['NNP', 'Klyo']],
                              ['VP', ['VBD', came], ['PP', ['IN', into], ['NP', ['NN', power]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(600050000060,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', is],
                ['NP', ['NNP', 'Rey']],
                [',', ','],
                ['RB', then],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', it]],
                ['RB', not],
                ['VB', wake],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Klyo']],
                ['VBD', came],
                ['IN', into],
                ['NP', ['NN', power]],
                ['.', '.']
              ]).
pllm:training(600050000060,
              tree_to_toks,
              [ 'Well',
                (','),
                if,
                it,
                (is),
                'Rey',
                (','),
                then,
                why,
                did,
                it,
                not,
                wake,
                when,
                'Klyo',
                came,
                into,
                power,
                ('.')
              ]).
pllm:training(600060000061,
              string,
              "Klyo went to the dark side, he is not a Jedi.").
pllm:training(600060000061,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['NNP', 'Klyo']],
                    [ 'VP',
                      ['VBD', went],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', is], ['RB', not], ['NP', ['DT', a], ['NNP', 'Jedi']]],
                  ['.', '.']
                ]
              ]).
pllm:training(600060000061,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Klyo']],
                ['VBD', went],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(600060000061,
              tree_to_toks,
              ['Klyo', went, to, 'the-dark-side', ',', he, is, not, 'a-Jedi', '.']).
pllm:training(600070000062,
              string,
              "If he is not a Jedi, why was he at Jedi school.").
pllm:training(600070000062,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'SBAR',
                    ['IN', 'If'],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBZ', is], ['RB', not], ['NP', ['DT', a], ['NNP', 'Jedi']]]
                    ]
                  ],
                  [',', ','],
                  ['WHADVP', ['WRB', why]],
                  [ 'S',
                    ['VBD', was],
                    ['NP', ['PRP', he]],
                    ['PP', ['IN', at], ['NP', ['NNP', 'Jedi'], ['NN', school]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600070000062,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                [',', ','],
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP', he]],
                ['IN', at],
                ['NP', ['NNP', 'Jedi'], ['NN', school]],
                ['.', '.']
              ]).
pllm:training(600070000062,
              tree_to_toks,
              ['If', he, is, not, 'a-Jedi', ',', why, was, he, at, 'Jedi-school', '.']).
pllm:training(600080000063,
              string,
              "He was Luke's Padwan, but he turned. It has not been shown why. He is no longer Jedi, he is sith now.").
pllm:training(600080000063,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'He']],
                      [ 'VP',
                        ['VBD', was],
                        ['NP', ['NP', ['NNP', 'Luke'], ['POS', '\'s']], ['NNP', 'Padwan']]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    ['S', ['NP', ['PRP', he]], ['VP', ['VBD', turned]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['AUX', has],
                      ['RB', not],
                      [ 'VP',
                        ['AUX', been],
                        ['VP', ['VBN', shown], ['FRAG', ['WHADVP', ['WRB', why]]]]
                      ]
                    ],
                    ['.', '.']
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'S',
                        ['NP', ['PRP', 'He']],
                        [ 'VP',
                          ['VBZ', is],
                          ['ADVP', ['RB', no], ['RBR', longer]],
                          ['NP', ['NNP', 'Jedi']]
                        ]
                      ],
                      [',', ','],
                      ['NP', ['PRP', he]],
                      ['VP', ['VBZ', is], ['ADJP', ['JJ', sith]], ['ADVP', ['RB', now]]],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(600080000063,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['NP', ['NNP', 'Luke'], ['POS', '\'s']],
                ['NNP', 'Padwan'],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', turned],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', has],
                ['RB', not],
                ['AUX', been],
                ['VBN', shown],
                mark('FRAG'),
                ['WHADVP', ['WRB', why]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['ADVP', ['RB', no], ['RBR', longer]],
                ['NP', ['NNP', 'Jedi']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADJP', ['JJ', sith]],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(600080000063,
              tree_to_toks,
              [ 'He',
                was,
                'Luke-\'s',
                'Padwan',
                (','),
                but,
                he,
                turned,
                ('.'),
                'It',
                has,
                not,
                been,
                shown,
                why,
                ('.'),
                'He',
                (is),
                no,
                longer,
                'Jedi',
                (','),
                he,
                (is),
                sith,
                now,
                ('.')
              ]).
pllm:training(600090000064, string, "Wait, I thought sith was a race.").
pllm:training(600090000064,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VB', 'Wait']]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['S', ['NP', ['NN', sith]], ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', race]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600090000064,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VB', 'Wait'],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NN', sith]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', race]],
                ['.', '.']
              ]).
pllm:training(600090000064, tree_to_toks, ['Wait', ',', 'I', thought, sith, was, 'a-race', '.']).
pllm:training(600100000065,
              string,
              "No, Vader was human, well pretty much, but went from Jedi to Sith. Like Yoda is whatever he is, but is also a Jedi.").
pllm:training(600100000065,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['NNP', 'Vader']],
                    [ 'VP',
                      [ 'VP',
                        ['VBD', was],
                        [ 'ADJP',
                          ['ADJP', ['JJ', human]],
                          [',', ','],
                          ['RB', well],
                          ['ADJP', ['RB', pretty], ['RB', much]]
                        ]
                      ],
                      [',', ','],
                      ['CC', but],
                      [ 'VP',
                        ['VBD', went],
                        ['PP', ['IN', from], ['NP', ['NNP', 'Jedi']]],
                        ['PP', ['IN', to], ['NP', ['NNP', 'Sith']]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['PP', ['IN', 'Like'], ['NP', ['NNP', 'Yoda']]],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'SBAR',
                        ['NP', ['WDT', whatever]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VP', ['VBZ', is]],
                            [',', ','],
                            ['CC', but],
                            [ 'VP',
                              ['VBZ', is],
                              ['ADVP', ['RB', also]],
                              ['NP', ['DT', a], ['NNP', 'Jedi']]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(600100000065,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['NNP', 'Vader']],
                ['VBD', was],
                [ 'ADJP',
                  ['ADJP', ['JJ', human]],
                  [',', ','],
                  ['RB', well],
                  ['ADJP', ['RB', pretty], ['RB', much]]
                ],
                [',', ','],
                ['CC', but],
                ['VBD', went],
                ['IN', from],
                ['NP', ['NNP', 'Jedi']],
                ['IN', to],
                ['NP', ['NNP', 'Sith']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['IN', 'Like'],
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', is],
                mark('SBAR'),
                ['NP', ['WDT', whatever]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                [',', ','],
                ['CC', but],
                ['VBZ', is],
                ['ADVP', ['RB', also]],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(600100000065,
              tree_to_toks,
              [ 'No',
                (','),
                'Vader',
                was,
                human,
                (','),
                well,
                pretty,
                much,
                (','),
                but,
                went,
                from,
                'Jedi',
                to,
                'Sith',
                ('.'),
                'Like',
                'Yoda',
                (is),
                whatever,
                he,
                (is),
                (','),
                but,
                (is),
                also,
                'a-Jedi',
                ('.')
              ]).
pllm:training(700010000067, string, "What is your favorite star wars movie?").
pllm:training(700010000067,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                      ['NP', ['NN', movie]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(700010000067,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['NP', ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(700010000067,
              tree_to_toks,
              ['What', is, 'your-favorite-star-wars', movie, ?]).
pllm:training(700020000068, string, "Star Wars: The Force Awakens").
pllm:training(700020000068,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  [:, :],
                  ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                  ['.', '.']
                ]
              ]).
pllm:training(700020000068,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [:, :],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.']
              ]).
pllm:training(700020000068, tree_to_toks, ['Star-Wars', :, 'The-Force-Awakens', '.']).
pllm:training(700030000069, string, "Why do you like this one the most?").
pllm:training(700030000069,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'Why']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', like],
                    ['NP', ['DT', this], ['NN', one]],
                    ['NP', ['DT', the], ['JJS', most]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(700030000069,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', this], ['NN', one]],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(700030000069, tree_to_toks, ['Why', do, you, like, 'this-one', 'the-most', ?]).
pllm:training(700040000070, string, "This movie had the most action.").
pllm:training(700040000070,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'This'], ['NN', movie]],
                  [ 'VP',
                    ['VBD', had],
                    ['NP', ['NP', ['DT', the], ['RBS', most]], ['NP', ['NN', action]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700040000070,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'This'], ['NN', movie]],
                ['VBD', had],
                ['NP', ['DT', the], ['RBS', most]],
                ['NP', ['NN', action]],
                ['.', '.']
              ]).
pllm:training(700040000070, tree_to_toks, ['This-movie', had, 'the-most', action, '.']).
pllm:training(700050000071, string, "Yes, this one was great.").
pllm:training(700050000071,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['DT', this], ['NN', one]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', great]]],
                  ['.', '.']
                ]
              ]).
pllm:training(700050000071,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['DT', this], ['NN', one]],
                ['VBD', was],
                ['ADJP', ['JJ', great]],
                ['.', '.']
              ]).
pllm:training(700050000071, tree_to_toks, ['Yes', ',', 'this-one', was, great, '.']).
pllm:training(700060000072, string, "What about you?").
pllm:training(700060000072,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', you]]], ['.', ?]]
              ]).
pllm:training(700060000072,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(700060000072, tree_to_toks, ['What', about, you, ?]).
pllm:training(700070000073,
              string,
              "I really liked the last star wars movie. It started slow but I really liked it.").
pllm:training(700070000073,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VBD', liked],
                      [ 'NP',
                        ['DT', the],
                        ['JJ', last],
                        ['NML', ['NN', star], ['NNS', wars]],
                        ['NN', movie]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'It']], ['VP', ['VBD', started], ['ADJP', ['JJ', slow]]]],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', really]],
                      ['VP', ['VBD', liked], ['NP', ['PRP', it]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(700070000073,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', last], ['NML', ['NN', star], ['NNS', wars]], ['NN', movie]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', started],
                ['ADJP', ['JJ', slow]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700070000073,
              tree_to_toks,
              [ 'I',
                really,
                liked,
                'the-last-star-wars-movie',
                ('.'),
                'It',
                started,
                slow,
                but,
                'I',
                really,
                liked,
                it,
                ('.')
              ]).
pllm:training(700080000074,
              string,
              "I haven't seen that one yet, what did you like about it.").
pllm:training(700080000074,
              text_to_tree,
              [ 'SBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', have],
                    ['RB', 'n\'t'],
                    ['VP', ['VBN', seen], ['NP', ['DT', that], ['CD', one]], ['ADVP', ['RB', yet]]]
                  ]
                ],
                [',', ','],
                ['NP', ['WP', what]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                ],
                ['.', '.']
              ]).
pllm:training(700080000074,
              unphrasify,
              [ mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', have],
                ['RB', 'n\'t'],
                ['VBN', seen],
                ['NP', ['DT', that], ['CD', one]],
                ['ADVP', ['RB', yet]],
                [',', ','],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700080000074,
              tree_to_toks,
              ['I', have, 'n\'t', seen, 'that-one', yet, ',', what, did, you, like, about, it, '.']).
pllm:training(700090000075,
              string,
              "I like how they tied all the loose ends together from the previous movie.").
pllm:training(700090000075,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', tied],
                          ['NP', ['PDT', all], ['DT', the], ['JJ', loose], ['NNS', ends]],
                          ['ADVP', ['RB', together]],
                          [ 'PP',
                            ['IN', from],
                            ['NP', ['DT', the], ['JJ', previous], ['NN', movie]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700090000075,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', tied],
                ['NP', ['PDT', all], ['DT', the], ['JJ', loose], ['NNS', ends]],
                ['ADVP', ['RB', together]],
                ['IN', from],
                ['NP', ['DT', the], ['JJ', previous], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(700090000075,
              tree_to_toks,
              [ 'I',
                like,
                how,
                they,
                tied,
                'all-the-loose-ends',
                together,
                from,
                'the-previous-movie',
                ('.')
              ]).
pllm:training(700100000076, string, "Sounds great, I can't wait until I see it.").
pllm:training(700100000076,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VBZ', 'Sounds'], ['ADJP', ['JJ', great]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    ['RB', not],
                    [ 'VP',
                      ['VB', wait],
                      [ 'SBAR',
                        ['IN', until],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', see], ['NP', ['PRP', it]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700100000076,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Sounds'],
                ['ADJP', ['JJ', great]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', wait],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', see],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700100000076,
              tree_to_toks,
              ['Sounds', great, ',', 'I', can, not, wait, until, 'I', see, it, '.']).
pllm:training(800010000078, string, "How come you never see Leia use the force?").
pllm:training(800010000078,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'How']],
                [ 'S',
                  ['VP', ['VB', come]],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', never]],
                  [ 'VP',
                    ['VB', see],
                    ['S', ['NP', ['NNP', 'Leia']], ['VP', ['VB', use], ['NP', ['DT', the], ['NN', force]]]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(800010000078,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', come],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', never]],
                ['VB', see],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['.', ?]
              ]).
pllm:training(800010000078,
              tree_to_toks,
              ['How', come, you, never, see, 'Leia', use, 'the-force', ?]).
pllm:training(800020000079,
              string,
              "Yeah, i've always wondered that. I mean her brother and father were both powerful force users, and yet she never uses it.").
pllm:training(800020000079,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VB', '\'ve'],
                      ['ADVP', ['RB', always]],
                      ['VP', ['VBN', wondered], ['NP', ['DT', that]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', mean],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP$', her], ['NN', brother], ['CC', and], ['NN', father]],
                            [ 'VP',
                              ['VBD', were],
                              ['RB', both],
                              ['NP', ['JJ', powerful], ['NN', force], ['NNS', users]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['ADVP', ['RB', yet]],
                      ['NP', ['PRP', she]],
                      ['ADVP', ['RB', never]],
                      ['VP', ['VBZ', uses], ['NP', ['PRP', it]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800020000079,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', '\'ve'],
                ['ADVP', ['RB', always]],
                ['VBN', wondered],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', her], ['NN', brother], ['CC', and], ['NN', father]],
                ['VBD', were],
                ['RB', both],
                ['NP', ['JJ', powerful], ['NN', force], ['NNS', users]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['ADVP', ['RB', yet]],
                ['NP', ['PRP', she]],
                ['ADVP', ['RB', never]],
                ['VBZ', uses],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(800020000079,
              tree_to_toks,
              [ 'Yeah',
                (','),
                i,
                '\'ve',
                always,
                wondered,
                that,
                ('.'),
                'I',
                mean,
                'her-brother-and-father',
                were,
                both,
                'powerful-force-users',
                (','),
                and,
                yet,
                she,
                never,
                uses,
                it,
                ('.')
              ]).
pllm:training(800030000080,
              string,
              "I thought I read that she has the power to use the force but just chooses not to.").
pllm:training(800030000080,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', thought],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', read],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              [ 'VP',
                                ['AUX', has],
                                [ 'NP',
                                  ['DT', the],
                                  ['NN', power],
                                  [ 'S',
                                    [ 'VP',
                                      ['TO', to],
                                      ['VP', ['VB', use], ['NP', ['DT', the], ['NN', force]]]
                                    ]
                                  ]
                                ]
                              ],
                              ['CC', but],
                              ['ADVP', ['RB', just]],
                              ['VP', ['VBZ', chooses], ['S', ['RB', not], ['VP', ['TO', to]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(800030000080,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', read],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', has],
                ['DT', the],
                ['NN', power],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['CC', but],
                ['ADVP', ['RB', just]],
                ['VBZ', chooses],
                mark('S'),
                ['RB', not],
                ['TO', to],
                ['.', '.']
              ]).
pllm:training(800030000080,
              tree_to_toks,
              [ 'I',
                thought,
                'I',
                read,
                that,
                she,
                has,
                the,
                power,
                to,
                use,
                'the-force',
                but,
                just,
                chooses,
                not,
                to,
                ('.')
              ]).
pllm:training(800040000081,
              string,
              "Hmm, that makes sense, but still I don't fully understand why she doesn't. It probably could have helped in the war against the Empire.").
pllm:training(800040000081,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'S',
                    ['NP', ['NNP', 'Hmm']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    ['VP', ['VBZ', makes], ['NP', ['NN', sense]]]
                  ],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['ADVP', ['RB', still]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['AUX', do],
                      ['RB', not],
                      [ 'VP',
                        ['ADVP', ['RB', fully]],
                        ['VB', understand],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', why]],
                          ['S', ['NP', ['PRP', she]], ['VP', ['AUX', does], ['RB', not]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    ['ADVP', ['RB', probably]],
                    [ 'VP',
                      ['MD', could],
                      [ 'VP',
                        ['VB', have],
                        [ 'VP',
                          ['VBN', helped],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NP', ['DT', the], ['NN', war]],
                              ['PP', ['IN', against], ['NP', ['DT', the], ['NN', 'Empire']]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800040000081,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Hmm']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', makes],
                ['NP', ['NN', sense]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['ADVP', ['RB', still]],
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['ADVP', ['RB', fully]],
                ['VB', understand],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', does],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', probably]],
                ['MD', could],
                ['VB', have],
                ['VBN', helped],
                ['IN', in],
                ['NP', ['DT', the], ['NN', war]],
                ['IN', against],
                ['NP', ['DT', the], ['NN', 'Empire']],
                ['.', '.']
              ]).
pllm:training(800040000081,
              tree_to_toks,
              [ 'Hmm',
                (','),
                that,
                makes,
                sense,
                (','),
                but,
                still,
                'I',
                do,
                not,
                fully,
                understand,
                why,
                she,
                does,
                not,
                ('.'),
                'It',
                probably,
                could,
                have,
                helped,
                in,
                'the-war',
                against,
                'the-Empire',
                ('.')
              ]).
pllm:training(800050000082,
              string,
              "Yeah, I had hoped for some dialogue related to her reluctance to use the force in the last movie, \"Force Awakens\", but no, nothing.").
pllm:training(800050000082,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', had],
                    [ 'VP',
                      ['VBN', hoped],
                      [ 'PP',
                        ['IN', for],
                        [ 'NP',
                          ['NP', ['DT', some], ['NN', dialogue]],
                          [ 'VP',
                            ['VBN', related],
                            [ 'PP',
                              ['IN', to],
                              [ 'NP',
                                ['PRP$', her],
                                ['NN', reluctance],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', use],
                                      [ 'NP',
                                        [ 'NP',
                                          ['NP', ['DT', the], ['NN', force]],
                                          [ 'PP',
                                            ['IN', in],
                                            [ 'NP',
                                              [ 'NP',
                                                ['DT', the],
                                                ['JJ', last],
                                                ['NN', movie]
                                              ],
                                              [',', ','],
                                              [ 'NP',
                                                ['\'\'', '"'],
                                                ['NNP', 'Force'],
                                                ['NNP', 'Awakens'],
                                                ['\'\'', '"']
                                              ]
                                            ]
                                          ]
                                        ],
                                        [',', ','],
                                        ['CC', but],
                                        [ 'NP',
                                          ['NP', ['DT', no]],
                                          [',', ','],
                                          ['NP', ['NN', nothing]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800050000082,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', had],
                ['VBN', hoped],
                ['IN', for],
                ['NP', ['DT', some], ['NN', dialogue]],
                ['VBN', related],
                ['IN', to],
                ['PRP$', her],
                ['NN', reluctance],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', last], ['NN', movie]],
                [',', ','],
                ['NP', ['\'\'', '"'], ['NNP', 'Force'], ['NNP', 'Awakens'], ['\'\'', '"']],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', no]],
                [',', ','],
                ['NP', ['NN', nothing]],
                ['.', '.']
              ]).
pllm:training(800050000082,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                had,
                hoped,
                for,
                'some-dialogue',
                related,
                to,
                her,
                reluctance,
                to,
                use,
                'the-force',
                in,
                'the-last-movie',
                (','),
                'Force-Awakens',
                (','),
                but,
                no,
                (','),
                nothing,
                ('.')
              ]).
pllm:training(800060000083,
              string,
              "She was called a general in that movie though, so she was still very much in the war efforts, just not as a Jedi.").
pllm:training(800060000083,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'She']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBN', called],
                      [ 'NP',
                        ['NP', ['DT', a], ['JJ', general]],
                        ['PP', ['IN', in], ['NP', ['DT', that], ['NN', movie]]]
                      ],
                      ['ADVP', ['RB', though]],
                      [',', ','],
                      [ 'SBAR',
                        ['IN', so],
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['VBD', was],
                            ['ADVP', ['RB', still]],
                            [ 'ADJP',
                              ['RB', very],
                              ['JJ', much],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NN', war], ['NNS', efforts]],
                                  [',', ','],
                                  ['CONJP', ['RB', just], ['RB', not], ['IN', as]],
                                  ['NP', ['DT', a], ['NNP', 'Jedi']]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800060000083,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBD', was],
                ['VBN', called],
                ['NP', ['DT', a], ['JJ', general]],
                ['IN', in],
                ['NP', ['DT', that], ['NN', movie]],
                ['ADVP', ['RB', though]],
                [',', ','],
                mark('SBAR'),
                ['IN', so],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', was],
                ['ADVP', ['RB', still]],
                'ADJP',
                ['RB', very],
                ['JJ', much],
                ['IN', in],
                ['NP', ['DT', the], ['NN', war], ['NNS', efforts]],
                [',', ','],
                ['CONJP', ['RB', just], ['RB', not], ['IN', as]],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(800060000083,
              tree_to_toks,
              [ 'She',
                was,
                called,
                'a-general',
                in,
                'that-movie',
                though,
                (','),
                so,
                she,
                was,
                still,
                'ADJP',
                very,
                much,
                in,
                'the-war-efforts',
                (','),
                just,
                not,
                (as),
                'a-Jedi',
                ('.')
              ]).
pllm:training(800070000084,
              string,
              "And then her son, Ben, turns all Sith and joins the dark side. That had to have factored into her reasons to stay away from the call of the force, don't you think?").
pllm:training(800070000084,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['ADVP', ['RB', then]],
                    ['NP', ['NP', ['PRP$', her], ['NN', son]], [',', ','], ['NP', ['NNP', 'Ben']], [',', ',']],
                    [ 'VP',
                      ['VP', ['VBZ', turns], ['NP', ['DT', all], ['NNP', 'Sith']]],
                      ['CC', and],
                      ['VP', ['VBZ', joins], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'PRN',
                      [ 'S',
                        ['NP', ['DT', 'That']],
                        [ 'VP',
                          ['VBD', had],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              [ 'VP',
                                ['VB', have],
                                [ 'VP',
                                  ['VBN', factored],
                                  ['PP', ['IN', into], ['NP', ['PRP$', her], ['NNS', reasons]]],
                                  [ 'S',
                                    [ 'VP',
                                      ['TO', to],
                                      [ 'VP',
                                        ['VB', stay],
                                        ['ADVP', ['RB', away]],
                                        [ 'PP',
                                          ['IN', from],
                                          [ 'NP',
                                            ['NP', ['DT', the], ['NN', call]],
                                            [ 'PP',
                                              ['IN', of],
                                              ['NP', ['DT', the], ['NN', force]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['VB', do],
                    ['RB', not],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', think]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(800070000084,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP$', her], ['NN', son]],
                [',', ','],
                ['NP', ['NNP', 'Ben']],
                [',', ','],
                ['VBZ', turns],
                ['NP', ['DT', all], ['NNP', 'Sith']],
                ['CC', and],
                ['VBZ', joins],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                'PRN',
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', have],
                ['VBN', factored],
                ['IN', into],
                ['NP', ['PRP$', her], ['NNS', reasons]],
                mark('S'),
                ['TO', to],
                ['VB', stay],
                ['ADVP', ['RB', away]],
                ['IN', from],
                ['NP', ['DT', the], ['NN', call]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', force]],
                [',', ','],
                ['VB', do],
                ['RB', not],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['.', ?]
              ]).
pllm:training(800070000084,
              tree_to_toks,
              [ 'And',
                then,
                'her-son',
                (','),
                'Ben',
                (','),
                turns,
                'all-Sith',
                and,
                joins,
                'the-dark-side',
                ('.'),
                'PRN',
                'That',
                had,
                to,
                have,
                factored,
                into,
                'her-reasons',
                to,
                stay,
                away,
                from,
                'the-call',
                of,
                'the-force',
                (','),
                do,
                not,
                you,
                think,
                (?)
              ]).
pllm:training(800080000085,
              string,
              "Yeah, I would think so. I mean, her dad is dead, her brother ran away and her son is evil. I can see why she doesn't want anything to do with the force now, but still doesn't explain the past.").
pllm:training(800080000085,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['MD', would], ['VP', ['VB', think], ['ADVP', ['RB', so]]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', dad]],
                        ['VP', ['VBZ', is], ['ADJP', ['JJ', dead]]]
                      ],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', brother]],
                        ['VP', ['VBD', ran], ['ADVP', ['RB', away]]]
                      ],
                      ['CC', and],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', son]],
                        ['VP', ['VBZ', is], ['ADJP', ['JJ', evil]]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', can],
                      [ 'VP',
                        ['VB', see],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', why]],
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              [ 'VP',
                                ['AUX', does],
                                ['RB', not],
                                [ 'VP',
                                  ['VB', want],
                                  [ 'NP',
                                    ['NP', ['NN', anything]],
                                    [ 'SBAR',
                                      [ 'S',
                                        [ 'VP',
                                          ['TO', to],
                                          [ 'VP',
                                            ['AUX', do],
                                            [ 'PP',
                                              ['IN', with],
                                              ['NP', ['DT', the], ['NN', force]]
                                            ],
                                            ['ADVP', ['RB', now]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [',', ','],
                              ['CC', but],
                              ['ADVP', ['RB', still]],
                              [ 'VP',
                                ['AUX', does],
                                ['RB', not],
                                ['VP', ['VB', explain], ['NP', ['DT', the], ['NN', past]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800080000085,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', think],
                ['ADVP', ['RB', so]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', dad]],
                ['VBZ', is],
                ['ADJP', ['JJ', dead]],
                [',', ','],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', brother]],
                ['VBD', ran],
                ['ADVP', ['RB', away]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', son]],
                ['VBZ', is],
                ['ADJP', ['JJ', evil]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', see],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', does],
                ['RB', not],
                ['VB', want],
                ['NP', ['NN', anything]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['AUX', do],
                ['IN', with],
                ['NP', ['DT', the], ['NN', force]],
                ['ADVP', ['RB', now]],
                [',', ','],
                ['CC', but],
                ['ADVP', ['RB', still]],
                ['AUX', does],
                ['RB', not],
                ['VB', explain],
                ['NP', ['DT', the], ['NN', past]],
                ['.', '.']
              ]).
pllm:training(800080000085,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                would,
                think,
                so,
                ('.'),
                'I',
                mean,
                (','),
                'her-dad',
                (is),
                dead,
                (','),
                'her-brother',
                ran,
                away,
                and,
                'her-son',
                (is),
                evil,
                ('.'),
                'I',
                can,
                see,
                why,
                she,
                does,
                not,
                want,
                anything,
                to,
                do,
                with,
                'the-force',
                now,
                (','),
                but,
                still,
                does,
                not,
                explain,
                'the-past',
                ('.')
              ]).
pllm:training(800090000086,
              string,
              "Guess we'll never know. I'm sure she had her reasons though.").
pllm:training(800090000086,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Guess'],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', we]],
                        ['VP', ['MD', '\'ll'], ['ADVP', ['RB', never]], ['VP', ['VB', know]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      [ 'ADJP',
                        ['JJ', sure],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              ['VBD', had],
                              ['NP', ['PRP$', her], ['NNS', reasons]],
                              ['ADVP', ['RB', though]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800090000086,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['VB', 'Guess'],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['MD', '\'ll'],
                ['ADVP', ['RB', never]],
                ['VB', know],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                'ADJP',
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', had],
                ['NP', ['PRP$', her], ['NNS', reasons]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(800090000086,
              tree_to_toks,
              [ 'Guess',
                we,
                '\'ll',
                never,
                know,
                ('.'),
                'I',
                '\'m',
                'ADJP',
                sure,
                she,
                had,
                'her-reasons',
                though,
                ('.')
              ]).
pllm:training(800100000087,
              string,
              "I wonder if there's any fan fiction about that topic? I should look that up when I get home.").
pllm:training(800100000087,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', wonder],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'NP',
                              ['NP', ['DT', any], ['NN', fan], ['NN', fiction]],
                              ['PP', ['IN', about], ['NP', ['DT', that], ['NN', topic]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', should],
                    [ 'VP',
                      ['VB', look],
                      ['NP', ['DT', that]],
                      ['PRT', ['RP', up]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', get], ['ADVP', ['RB', home]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800100000087,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['NP', ['DT', any], ['NN', fan], ['NN', fiction]],
                ['IN', about],
                ['NP', ['DT', that], ['NN', topic]],
                ['.', ?],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', should],
                ['VB', look],
                ['NP', ['DT', that]],
                ['PRT', ['RP', up]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', get],
                ['ADVP', ['RB', home]],
                ['.', '.']
              ]).
pllm:training(800100000087,
              tree_to_toks,
              [ 'I',
                wonder,
                if,
                there,
                '\'s',
                'any-fan-fiction',
                about,
                'that-topic',
                (?),
                'I',
                should,
                look,
                that,
                up,
                when,
                'I',
                get,
                home,
                ('.')
              ]).
pllm:training(900010000089, string, "Hello.").
pllm:training(900010000089, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hello'], ['.', '.']]]).
pllm:training(900010000089, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hello'], ['.', '.']]]).
pllm:training(900010000089, tree_to_toks, ['Hello', '.']).
pllm:training(900020000090, string, "Hi.").
pllm:training(900020000090, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(900020000090, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(900020000090, tree_to_toks, ['Hi', '.']).
pllm:training(900030000091, string, "Have you seen all the star wars films?").
pllm:training(900030000091,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'S',
                      [ 'NP',
                        ['PDT', all],
                        ['DT', the],
                        ['NML', ['NN', star], ['NNS', wars]],
                        ['NNS', films]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(900030000091,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('S'),
                ['NP', ['PDT', all], ['DT', the], ['NML', ['NN', star], ['NNS', wars]], ['NNS', films]],
                ['.', ?]
              ]).
pllm:training(900030000091,
              tree_to_toks,
              ['Have', you, seen, 'all-the-star-wars-films', ?]).
pllm:training(900040000092, string, "Yes as a matter of fact I have.").
pllm:training(900040000092,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [ 'PP',
                    ['IN', as],
                    ['NP', ['NP', ['DT', a], ['NN', matter]], ['PP', ['IN', of], ['NP', ['NN', fact]]]]
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have]],
                  ['.', '.']
                ]
              ]).
pllm:training(900040000092,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['IN', as],
                ['NP', ['DT', a], ['NN', matter]],
                ['IN', of],
                ['NP', ['NN', fact]],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['.', '.']
              ]).
pllm:training(900040000092, tree_to_toks, ['Yes', as, 'a-matter', of, fact, 'I', have, '.']).
pllm:training(900050000093, string, "Cool me too.").
pllm:training(900050000093,
              text_to_tree,
              ['S', ['VP', ['VB', 'Cool'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']]).
pllm:training(900050000093,
              unphrasify,
              [mark('S'), ['VB', 'Cool'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(900050000093, tree_to_toks, ['Cool', me, too, '.']).
pllm:training(900060000094, string, "Nice.").
pllm:training(900060000094, text_to_tree, ['CORENLP', ['NP', ['NNP', 'Nice'], ['.', '.']]]).
pllm:training(900060000094, unphrasify, [mark('CORENLP'), ['NP', ['NNP', 'Nice'], ['.', '.']]]).
pllm:training(900060000094, tree_to_toks, ['Nice-.']).
pllm:training(900070000095,
              string,
              "Out of all of those do you have a least favorite?").
pllm:training(900070000095,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'WHPP',
                    ['IN', 'Out'],
                    [ 'PP',
                      ['IN', of],
                      ['NP', ['NP', ['DT', all]], ['PP', ['IN', of], ['NP', ['DT', those]]]]
                    ]
                  ],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', have],
                      ['NP', ['DT', a], ['ADJP', ['JJS', least], ['JJ', favorite]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(900070000095,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                'WHPP',
                ['IN', 'Out'],
                ['IN', of],
                ['NP', ['DT', all]],
                ['IN', of],
                ['NP', ['DT', those]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', have],
                ['NP', ['DT', a], ['ADJP', ['JJS', least], ['JJ', favorite]]],
                ['.', ?]
              ]).
pllm:training(900070000095,
              tree_to_toks,
              ['WHPP', 'Out', of, all, of, those, do, you, have, 'a-least-favorite', ?]).
pllm:training(900080000096, string, "Definitely one from the prequels.").
pllm:training(900080000096,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  ['NP', ['CD', one]],
                  ['PP', ['IN', from], ['NP', ['DT', the], ['NNS', prequels]]],
                  ['.', '.']
                ]
              ]).
pllm:training(900080000096,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['CD', one]],
                ['IN', from],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(900080000096, tree_to_toks, ['Definitely', one, from, 'the-prequels', '.']).
pllm:training(900090000097, string, "Which one?").
pllm:training(900090000097,
              text_to_tree,
              ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]]).
pllm:training(900090000097,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]).
pllm:training(900090000097, tree_to_toks, ['Which-one', ?]).
pllm:training(900100000098, string, "Probably Clone Wars.").
pllm:training(900100000098,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['ADVP', ['RB', 'Probably']], ['NP', ['NN', 'Clone'], ['NNS', 'Wars']], ['.', '.']]
              ]).
pllm:training(900100000098,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Probably']],
                ['NP', ['NN', 'Clone'], ['NNS', 'Wars']],
                ['.', '.']
              ]).
pllm:training(900100000098, tree_to_toks, ['Probably', 'Clone-Wars', '.']).
pllm:training(1000010000100,
              string,
              "Do you like the older Star Wars movies or the newer movies?").
pllm:training(1000010000100,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    [ 'NP',
                      ['DT', the],
                      ['JJR', older],
                      ['NNP', 'Star'],
                      ['NNP', 'Wars'],
                      ['NNS', movies]
                    ],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJR', newer], ['NNS', movies]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000010000100,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJR', older], ['NNP', 'Star'], ['NNP', 'Wars'], ['NNS', movies]],
                ['CC', or],
                ['NP', ['DT', the], ['JJR', newer], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(1000010000100,
              tree_to_toks,
              ['Do', you, like, 'the-older-Star-Wars-movies', or, 'the-newer-movies', ?]).
pllm:training(1000020000101,
              string,
              "I prefer the older movies.  I'm older and they were really big when I was younger.").
pllm:training(1000020000101,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', prefer], ['NP', ['DT', the], ['JJR', older], ['NNS', movies]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', '\'m'], ['ADJP', ['JJR', older]]]],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', were],
                        ['ADJP', ['RB', really], ['JJ', big]],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', when]],
                          ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', was], ['ADJP', ['JJR', younger]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000020000101,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJR', older], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADJP', ['JJR', older]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['ADJP', ['RB', really], ['JJ', big]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADJP', ['JJR', younger]],
                ['.', '.']
              ]).
pllm:training(1000020000101,
              tree_to_toks,
              [ 'I',
                prefer,
                'the-older-movies',
                ('.'),
                'I',
                '\'m',
                older,
                and,
                they,
                were,
                really,
                big,
                when,
                'I',
                was,
                younger,
                ('.')
              ]).
pllm:training(1000030000102, string, "Who's your favorite character?").
pllm:training(1000030000102,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  ['VP', ['AUX', '\'s'], ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]]]
                ],
                ['.', ?]
              ]).
pllm:training(1000030000102,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1000030000102, tree_to_toks, ['Who', '\'s', 'your-favorite-character', ?]).
pllm:training(1000040000103,
              string,
              "I really like Chewy.  He doesn't say much but gets the job done.").
pllm:training(1000040000103,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VB', like], ['NP', ['NNP', 'Chewy']]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', say], ['ADJP', ['JJ', much]]]],
                      ['CC', but],
                      [ 'VP',
                        ['VBZ', gets],
                        ['NP', ['NP', ['DT', the], ['NN', job]], ['VP', ['VBN', done]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000040000103,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['NP', ['NNP', 'Chewy']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', does],
                ['RB', not],
                ['VB', say],
                ['ADJP', ['JJ', much]],
                ['CC', but],
                ['VBZ', gets],
                ['NP', ['DT', the], ['NN', job]],
                ['VBN', done],
                ['.', '.']
              ]).
pllm:training(1000040000103,
              tree_to_toks,
              [ 'I',
                really,
                like,
                'Chewy',
                ('.'),
                'He',
                does,
                not,
                say,
                much,
                but,
                gets,
                'the-job',
                done,
                ('.')
              ]).
pllm:training(1000050000104, string, "He and Han are great together.").
pllm:training(1000050000104,
              text_to_tree,
              [ 'S',
                ['NP', ['NP', ['PRP', 'He']], ['CC', and], ['NP', ['NNP', 'Han']]],
                ['VP', ['AUX', are], ['ADJP', ['JJ', great]], ['ADVP', ['RB', together]]],
                ['.', '.']
              ]).
pllm:training(1000050000104,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'He']],
                ['CC', and],
                ['NP', ['NNP', 'Han']],
                ['AUX', are],
                ['ADJP', ['JJ', great]],
                ['ADVP', ['RB', together]],
                ['.', '.']
              ]).
pllm:training(1000050000104, tree_to_toks, ['He', and, 'Han', are, great, together, '.']).
pllm:training(1000060000105,
              string,
              "It's almost as if they can read each other's minds.").
pllm:training(1000060000105,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['ADVP', ['RB', almost]],
                    [ 'SBAR',
                      ['IN', as],
                      ['IN', if],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['MD', can],
                          [ 'VP',
                            ['VB', read],
                            [ 'NP',
                              ['NP', ['DT', each], ['JJ', other], ['POS', '\'s']],
                              ['NNS', minds]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1000060000105,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', almost]],
                mark('SBAR'),
                ['IN', as],
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['MD', can],
                ['VB', read],
                ['NP', ['DT', each], ['JJ', other], ['POS', '\'s']],
                ['NNS', minds],
                ['.', '.']
              ]).
pllm:training(1000060000105,
              tree_to_toks,
              ['It', '\'s', almost, as, if, they, can, read, 'each-other-\'s', minds, '.']).
pllm:training(1000070000106,
              string,
              "What is your favorite scene in the three older movies?").
pllm:training(1000070000106,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', scene]],
                      [ 'PP',
                        ['IN', in],
                        ['NP', ['DT', the], ['CD', three], ['JJR', older], ['NNS', movies]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000070000106,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', scene]],
                ['IN', in],
                ['NP', ['DT', the], ['CD', three], ['JJR', older], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(1000070000106,
              tree_to_toks,
              ['What', is, 'your-favorite-scene', in, 'the-three-older-movies', ?]).
pllm:training(1000080000107,
              string,
              "When Luke finds out that Vader is his father.").
pllm:training(1000080000107,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'When']],
                  [ 'S',
                    ['NP', ['NNP', 'Luke']],
                    [ 'VP',
                      ['VBZ', finds],
                      ['PRT', ['RP', out]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Vader']],
                          ['VP', ['AUX', is], ['NP', ['PRP$', his], ['NN', father]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1000080000107,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'When']],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', finds],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Vader']],
                ['AUX', is],
                ['NP', ['PRP$', his], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(1000080000107,
              tree_to_toks,
              ['When', 'Luke', finds, out, that, 'Vader', is, 'his-father', '.']).
pllm:training(1000090000108, string, "What is your least favorite character ?").
pllm:training(1000090000108,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000090000108,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1000090000108,
              tree_to_toks,
              ['What', is, 'your-least-favorite-character', ?]).
pllm:training(1000100000109,
              string,
              "I really don't like the Sand People.  I find them really creepy.").
pllm:training(1000100000109,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    ['VP', ['VB', like], ['NP', ['DT', the], ['NNP', 'Sand'], ['NNPS', 'People']]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', find],
                      ['S', ['NP', ['PRP', them]], ['ADJP', ['RB', really], ['JJ', creepy]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000100000109,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['AUX', do],
                ['RB', not],
                ['VB', like],
                ['NP', ['DT', the], ['NNP', 'Sand'], ['NNPS', 'People']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', find],
                mark('S'),
                ['NP', ['PRP', them]],
                ['ADJP', ['RB', really], ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(1000100000109,
              tree_to_toks,
              [ 'I',
                really,
                do,
                not,
                like,
                'the-Sand-People',
                ('.'),
                'I',
                find,
                them,
                really,
                creepy,
                ('.')
              ]).
pllm:training(1100010000111, string, "Have you seen the force awakens").
pllm:training(1100010000111,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    ['SBAR', ['S', ['NP', ['DT', the], ['NN', force]], ['VP', ['VBZ', awakens]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100010000111,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', force]],
                ['VBZ', awakens],
                ['.', '.']
              ]).
pllm:training(1100010000111, tree_to_toks, ['Have', you, seen, 'the-force', awakens, '.']).
pllm:training(1100020000112, string, "Yes").
pllm:training(1100020000112, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]]).
pllm:training(1100020000112, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Yes'], ['.', '.']]]).
pllm:training(1100020000112, tree_to_toks, ['Yes', '.']).
pllm:training(1100030000113, string, "Its my favorite star wars movie").
pllm:training(1100030000113,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['PRP$', 'Its']],
                  [ 'NP',
                    ['NP', ['PRP$', my], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                    ['NP', ['NN', movie]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100030000113,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['PRP$', 'Its']],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['NP', ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(1100030000113, tree_to_toks, ['Its', 'my-favorite-star-wars', movie, '.']).
pllm:training(1100040000114, string, "Thats one of mine too").
pllm:training(1100040000114,
              text_to_tree,
              [ 'S',
                [ 'VP',
                  ['VBZ', 'Thats'],
                  ['NP', ['NP', ['CD', one]], ['PP', ['IN', of], ['NP', ['NN', mine]]]],
                  ['ADVP', ['RB', too]]
                ],
                ['.', '.']
              ]).
pllm:training(1100040000114,
              unphrasify,
              [ mark('S'),
                ['VBZ', 'Thats'],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['NN', mine]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(1100040000114, tree_to_toks, ['Thats', one, of, mine, too, '.']).
pllm:training(1100050000115, string, "I love harrison ford in it").
pllm:training(1100050000115,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', love],
                    [ 'NP',
                      ['NP', ['NN', harrison], ['NN', ford]],
                      ['PP', ['IN', in], ['NP', ['PRP', it]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100050000115,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['NN', harrison], ['NN', ford]],
                ['IN', in],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(1100050000115, tree_to_toks, ['I', love, 'harrison-ford', in, it, '.']).
pllm:training(1100060000116, string, "Hes makes a great hans solo").
pllm:training(1100060000116,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNS', 'Hes']],
                  ['VP', ['VBZ', makes], ['NP', ['DT', a], ['JJ', great], ['NNS', hans], ['NN', solo]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1100060000116,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNS', 'Hes']],
                ['VBZ', makes],
                ['NP', ['DT', a], ['JJ', great], ['NNS', hans], ['NN', solo]],
                ['.', '.']
              ]).
pllm:training(1100060000116, tree_to_toks, ['Hes', makes, 'a-great-hans-solo', '.']).
pllm:training(1100070000117, string, "He really does").
pllm:training(1100070000117,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['ADVP', ['RB', really]], ['VP', ['VBZ', does]], ['.', '.']]
              ]).
pllm:training(1100070000117,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', really]],
                ['VBZ', does],
                ['.', '.']
              ]).
pllm:training(1100070000117, tree_to_toks, ['He', really, does, '.']).
pllm:training(1100080000118, string, "He is a great actor").
pllm:training(1100080000118,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  ['VP', ['VBZ', is], ['NP', ['DT', a], ['JJ', great], ['NN', actor]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1100080000118,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', great], ['NN', actor]],
                ['.', '.']
              ]).
pllm:training(1100080000118, tree_to_toks, ['He', is, 'a-great-actor', '.']).
pllm:training(1100090000119, string, "Yes im glad he was in the movies").
pllm:training(1100090000119,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Yes']],
                [ 'VP',
                  ['VBZ', im],
                  [ 'ADJP',
                    ['JJ', glad],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', was], ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', movies]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1100090000119,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Yes']],
                ['VBZ', im],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(1100090000119,
              tree_to_toks,
              ['Yes', im, 'ADJP', glad, he, was, in, 'the-movies', '.']).
pllm:training(1100100000120, string, "Me too").
pllm:training(1100100000120,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(1100100000120,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(1100100000120, tree_to_toks, ['Me', too, '.']).
pllm:training(1200010000122,
              string,
              "So midichorians are basically mitochondria, right?").
pllm:training(1200010000122,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'So']],
                    ['NP', ['NNS', midichorians]],
                    [ 'VP',
                      ['VB', are],
                      ['ADVP', ['RB', basically]],
                      ['NP', ['NNS', mitochondria]]
                    ]
                  ],
                  [',', ','],
                  ['S', ['ADJP', ['JJ', right]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1200010000122,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['NNS', midichorians]],
                ['VB', are],
                ['ADVP', ['RB', basically]],
                ['NP', ['NNS', mitochondria]],
                [',', ','],
                mark('S'),
                ['ADJP', ['JJ', right]],
                ['.', ?]
              ]).
pllm:training(1200010000122,
              tree_to_toks,
              ['So', midichorians, are, basically, mitochondria, ',', right, ?]).
pllm:training(1200020000123,
              string,
              "Yeah, ugh. I guess that's not... too well-hidden.").
pllm:training(1200020000123,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['INTJ', ['UH', 'Yeah']], [',', ','], ['NP', ['NN', ugh]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        ['S', ['NP', ['DT', that]], ['VP', ['VBZ', '\'s'], ['NP', ['NN', 'not.']]], [',', ',']]
                      ]
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'FRAG',
                    ['ADJP', ['RB', too], ['ADJP', ['RB', well], ['HYPH', -], ['VBN', hidden]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200020000123,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NN', ugh]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['NN', 'not.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('FRAG'),
                ['ADJP', ['RB', too], ['ADJP', ['RB', well], ['HYPH', -], ['VBN', hidden]]],
                ['.', '.']
              ]).
pllm:training(1200020000123,
              tree_to_toks,
              ['Yeah', ',', ugh, '.', 'I', guess, that, '\'s', 'not.', ',', '.', ',', '.', too, well, -, hidden, '.']).
pllm:training(1200030000124,
              string,
              "What's the theory there? Mitochondria produce all the energy for cells, right?").
pllm:training(1200030000124,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VP', ['AUX', '\'s'], ['NP', ['DT', the], ['NN', theory]], ['ADVP', ['RB', there]]]
                  ],
                  ['.', ?]
                ],
                [ 'S',
                  ['NP', ['NNP', 'Mitochondria']],
                  [ 'VP',
                    ['VB', produce],
                    [ 'NP',
                      ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                      ['PP', ['IN', for], ['NP', ['NNS', cells]]]
                    ],
                    [',', ','],
                    ['ADVP', ['RB', right]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1200030000124,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['DT', the], ['NN', theory]],
                ['ADVP', ['RB', there]],
                ['.', ?],
                mark('S'),
                ['NP', ['NNP', 'Mitochondria']],
                ['VB', produce],
                ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                ['IN', for],
                ['NP', ['NNS', cells]],
                [',', ','],
                ['ADVP', ['RB', right]],
                ['.', ?]
              ]).
pllm:training(1200030000124,
              tree_to_toks,
              [ 'What',
                '\'s',
                'the-theory',
                there,
                (?),
                'Mitochondria',
                produce,
                'all-the-energy',
                for,
                cells,
                (','),
                right,
                (?)
              ]).
pllm:training(1200040000125,
              string,
              "Yeah, but... I don't know that this bears much scrutiny.").
pllm:training(1200040000125,
              text_to_tree,
              [ 'CORENLP',
                ['NP', ['NP', ['UH', 'Yeah']], [',', ','], ['NP', ['NML', ['NN', 'but.']], [',', ',']], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['DT', this]],
                          ['VP', ['VBZ', bears], ['NP', ['JJ', much], ['NN', scrutiny]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1200040000125,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NML', ['NN', 'but.']], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', this]],
                ['VBZ', bears],
                ['NP', ['JJ', much], ['NN', scrutiny]],
                ['.', '.']
              ]).
pllm:training(1200040000125,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'but.-',
                ('.'),
                (','),
                ('.'),
                'I',
                do,
                not,
                know,
                that,
                this,
                bears,
                'much-scrutiny',
                ('.')
              ]).
pllm:training(1200050000126,
              string,
              "Bear with me, though. So the midichlorians produce an energy that's present in everyone, but Jedi are busting with the things.").
pllm:training(1200050000126,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Bear'],
                    ['PP', ['IN', with], ['NP', ['PRP', me]]],
                    [',', ','],
                    ['ADVP', ['RB', though]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      ['NP', ['DT', the], ['NNS', midichlorians]],
                      [ 'VP',
                        ['VB', produce],
                        [ 'NP',
                          ['NP', ['DT', an], ['NN', energy]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              [ 'VP',
                                ['VBZ', '\'s'],
                                [ 'ADJP',
                                  ['JJ', present],
                                  ['PP', ['IN', in], ['NP', ['NN', everyone]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['NNP', 'Jedi']],
                      [ 'VP',
                        ['VB', are],
                        [ 'VP',
                          ['VBG', busting],
                          ['PP', ['IN', with], ['NP', ['DT', the], ['NNS', things]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200050000126,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['VB', 'Bear'],
                ['IN', with],
                ['NP', ['PRP', me]],
                [',', ','],
                ['ADVP', ['RB', though]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['DT', the], ['NNS', midichlorians]],
                ['VB', produce],
                ['NP', ['DT', an], ['NN', energy]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', '\'s'],
                'ADJP',
                ['JJ', present],
                ['IN', in],
                ['NP', ['NN', everyone]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['VBG', busting],
                ['IN', with],
                ['NP', ['DT', the], ['NNS', things]],
                ['.', '.']
              ]).
pllm:training(1200050000126,
              tree_to_toks,
              [ 'Bear',
                with,
                me,
                (','),
                though,
                ('.'),
                'So',
                'the-midichlorians',
                produce,
                'an-energy',
                that,
                '\'s',
                'ADJP',
                present,
                in,
                everyone,
                (','),
                but,
                'Jedi',
                are,
                busting,
                with,
                'the-things',
                ('.')
              ]).
pllm:training(1200060000127,
              string,
              "Okay, so... this is sounding a little like Parasite Eve now.").
pllm:training(1200060000127,
              text_to_tree,
              [ 'CORENLP',
                ['NP', ['NP', ['UH', 'Okay']], [',', ','], ['NP', ['NML', ['NN', 'so.']], [',', ',']], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['DT', this]],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'VP',
                      ['VBG', sounding],
                      ['NP', ['DT', a], ['JJ', little], ['JJ', like], ['NN', 'Parasite']],
                      ['S', ['NP', ['NNP', 'Eve']]],
                      ['ADVP', ['RB', now]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1200060000127,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['NML', ['NN', 'so.']], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['DT', this]],
                ['VBZ', is],
                ['VBG', sounding],
                ['NP', ['DT', a], ['JJ', little], ['JJ', like], ['NN', 'Parasite']],
                mark('S'),
                ['NP', ['NNP', 'Eve']],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(1200060000127,
              tree_to_toks,
              [ 'Okay',
                (','),
                'so.-',
                ('.'),
                (','),
                ('.'),
                this,
                (is),
                sounding,
                'a-little-like-Parasite',
                'Eve',
                now,
                ('.')
              ]).
pllm:training(1200070000128,
              string,
              "I guess, but -- no. I'm saying that Jedi are just pumping out this heavy aura of energy on a cellular level that, if trained, can do all kinds of wacky stuff.").
pllm:training(1200070000128,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VP', ['VB', guess]],
                      [',', ','],
                      ['CC', but],
                      ['VP', ['HYPH', -], [:, -], ['FRAG', ['UH', no]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      [ 'VP',
                        ['VBG', saying],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', 'Jedi']],
                            [ 'VP',
                              ['VB', are],
                              ['ADVP', ['RB', just]],
                              [ 'VP',
                                ['VBG', pumping],
                                ['PRT', ['RP', out]],
                                [ 'NP',
                                  ['NP', ['DT', this], ['JJ', heavy], ['NN', aura]],
                                  ['PP', ['IN', of], ['NP', ['NN', energy]]]
                                ],
                                [ 'PP',
                                  ['IN', on],
                                  [ 'NP',
                                    ['NP', ['DT', a], ['JJ', cellular], ['NN', level]],
                                    [ 'SBAR',
                                      ['NP', ['WDT', that]],
                                      [ 'S',
                                        [',', ','],
                                        ['SBAR', ['IN', if], ['S', ['VP', ['VBN', trained]]]],
                                        [',', ','],
                                        [ 'VP',
                                          ['MD', can],
                                          [ 'VP',
                                            ['VB', do],
                                            [ 'NP',
                                              ['NP', ['DT', all], ['NNS', kinds]],
                                              [ 'PP',
                                                ['IN', of],
                                                ['NP', ['JJ', wacky], ['NN', stuff]]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200070000128,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                [',', ','],
                ['CC', but],
                ['HYPH', -],
                [:, -],
                'FRAG',
                ['UH', no],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['VBG', saying],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['ADVP', ['RB', just]],
                ['VBG', pumping],
                ['PRT', ['RP', out]],
                ['NP', ['DT', this], ['JJ', heavy], ['NN', aura]],
                ['IN', of],
                ['NP', ['NN', energy]],
                ['IN', on],
                ['NP', ['DT', a], ['JJ', cellular], ['NN', level]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['VBN', trained],
                [',', ','],
                ['MD', can],
                ['VB', do],
                ['NP', ['DT', all], ['NNS', kinds]],
                ['IN', of],
                ['NP', ['JJ', wacky], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(1200070000128,
              tree_to_toks,
              [ 'I',
                guess,
                (','),
                but,
                (-),
                (-),
                no,
                ('.'),
                'I',
                '\'m',
                saying,
                that,
                'Jedi',
                are,
                just,
                pumping,
                out,
                'this-heavy-aura',
                of,
                energy,
                on,
                'a-cellular-level',
                that,
                (','),
                if,
                trained,
                (','),
                can,
                do,
                'all-kinds',
                of,
                'wacky-stuff',
                ('.')
              ]).
pllm:training(1200080000129,
              string,
              "Okay. So... I guess that's kind of reconciling the Episode One business with the original explanation then?").
pllm:training(1200080000129,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Okay'], ['.', '.']]],
                [ 'CORENLP',
                  ['FRAG', ['NP', ['NNP', 'So.'], [',', ',']], ['.', '.']],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'NP',
                              ['NP', ['NN', kind]],
                              [ 'PP',
                                ['IN', of],
                                [ 'S',
                                  [ 'VP',
                                    ['VBG', reconciling],
                                    [ 'NP',
                                      [ 'NP',
                                        ['DT', the],
                                        ['NNP', 'Episode'],
                                        ['CD', 'One'],
                                        ['NN', business]
                                      ],
                                      [ 'PP',
                                        ['IN', with],
                                        [ 'NP',
                                          ['DT', the],
                                          ['JJ', original],
                                          ['NN', explanation]
                                        ]
                                      ]
                                    ],
                                    ['ADVP', ['RB', then]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1200080000129,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Okay'], ['.', '.']],
                mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['NNP', 'So.'], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['NN', kind]],
                ['IN', of],
                mark('S'),
                ['VBG', reconciling],
                ['NP', ['DT', the], ['NNP', 'Episode'], ['CD', 'One'], ['NN', business]],
                ['IN', with],
                ['NP', ['DT', the], ['JJ', original], ['NN', explanation]],
                ['ADVP', ['RB', then]],
                ['.', ?]
              ]).
pllm:training(1200080000129,
              tree_to_toks,
              [ 'Okay',
                ('.'),
                'So.-',
                ('.'),
                (','),
                ('.'),
                'I',
                guess,
                that,
                '\'s',
                kind,
                of,
                reconciling,
                'the-Episode-One-business',
                with,
                'the-original-explanation',
                then,
                (?)
              ]).
pllm:training(1200090000130,
              string,
              "Yes, exactly! I mean, sort of. Everyone embodies the Force, and theoretically could learn to control it -- but Jedi are sort of freaks who produce way more of the Force, so when they're trained it's way more effective.").
pllm:training(1200090000130,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['FRAG', ['INTJ', ['UH', 'Yes']], [',', ','], ['ADVP', ['RB', exactly]], ['.', '.']]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['VP', ['VB', mean], [',', ','], ['ADVP', ['RB', sort], ['RB', of]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'S',
                        ['NP', ['NN', everyone]],
                        [ 'VP',
                          ['VP', ['VBZ', embodies], ['NP', ['DT', the], ['NN', 'Force']]],
                          [',', ','],
                          ['CC', and],
                          ['ADVP', ['RB', theoretically]],
                          [ 'VP',
                            ['MD', could],
                            [ 'VP',
                              ['VB', learn],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  ['VP', ['VB', control], ['NP', ['PRP', it]], [:, -]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['HYPH', -],
                      [ 'S',
                        ['CC', but],
                        ['NP', ['NNP', 'Jedi']],
                        [ 'VP',
                          ['VB', are],
                          ['ADVP', ['RB', sort], ['RB', of]],
                          [ 'NP',
                            ['NP', ['NNS', freaks]],
                            [ 'SBAR',
                              ['NP', ['WP', who]],
                              [ 'S',
                                [ 'VP',
                                  ['VB', produce],
                                  [ 'NP',
                                    ['NP', ['NP', ['NN', way]], ['JJR', more]],
                                    ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Force']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [',', ','],
                      [ 'S',
                        ['ADVP', ['RB', so]],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', when]],
                          ['S', ['NP', ['PRP', they]], ['VP', ['VB', '\'re'], ['VP', ['VBN', trained]]]]
                        ],
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['ADJP', ['ADVP', ['RB', way], ['RBR', more]], ['JJ', effective]]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(1200090000130,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['ADVP', ['RB', exactly]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                ['ADVP', ['RB', sort], ['RB', of]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NN', everyone]],
                ['VBZ', embodies],
                ['NP', ['DT', the], ['NN', 'Force']],
                [',', ','],
                ['CC', and],
                ['ADVP', ['RB', theoretically]],
                ['MD', could],
                ['VB', learn],
                mark('S'),
                ['TO', to],
                ['VB', control],
                ['NP', ['PRP', it]],
                [:, -],
                ['HYPH', -],
                mark('S'),
                ['CC', but],
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['ADVP', ['RB', sort], ['RB', of]],
                ['NP', ['NNS', freaks]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VB', produce],
                ['NP', ['NN', way]],
                ['JJR', more],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Force']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', so]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['VBN', trained],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['ADVP', ['RB', way], ['RBR', more]], ['JJ', effective]],
                ['.', '.']
              ]).
pllm:training(1200090000130,
              tree_to_toks,
              [ 'Yes',
                (','),
                exactly,
                ('.'),
                'I',
                mean,
                (','),
                sort,
                of,
                ('.'),
                everyone,
                embodies,
                'the-Force',
                (','),
                and,
                theoretically,
                could,
                learn,
                to,
                control,
                it,
                (-),
                (-),
                but,
                'Jedi',
                are,
                sort,
                of,
                freaks,
                who,
                produce,
                way,
                more,
                of,
                'the-Force',
                (','),
                so,
                when,
                they,
                '\'re',
                trained,
                it,
                '\'s',
                way,
                more,
                effective,
                ('.')
              ]).
pllm:training(1200100000131,
              string,
              "There's a weird class issue here, or maybe even a eugenic model, that disturbs me on a pretty deep level.").
pllm:training(1200100000131,
              text_to_tree,
              [ 'S',
                ['NP', ['EX', 'There']],
                [ 'VP',
                  ['AUX', '\'s'],
                  ['NP', ['DT', a], ['JJ', weird], ['NN', class], ['NN', issue]],
                  ['ADVP', ['RB', here]],
                  [',', ','],
                  [ 'FRAG',
                    ['CC', or],
                    ['ADVP', ['RB', maybe]],
                    [ 'NP',
                      ['NP', ['RB', even], ['DT', a], ['JJ', eugenic], ['NN', model]],
                      [',', ','],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          [ 'VP',
                            ['VBZ', disturbs],
                            ['NP', ['PRP', me]],
                            [ 'PP',
                              ['IN', on],
                              [ 'NP',
                                ['DT', a],
                                ['ADJP', ['RB', pretty], ['JJ', deep]],
                                ['NN', level]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1200100000131,
              unphrasify,
              [ mark('S'),
                ['NP', ['EX', 'There']],
                ['AUX', '\'s'],
                ['NP', ['DT', a], ['JJ', weird], ['NN', class], ['NN', issue]],
                ['ADVP', ['RB', here]],
                [',', ','],
                mark('FRAG'),
                ['CC', or],
                ['ADVP', ['RB', maybe]],
                ['NP', ['RB', even], ['DT', a], ['JJ', eugenic], ['NN', model]],
                [',', ','],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', disturbs],
                ['NP', ['PRP', me]],
                ['IN', on],
                ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', deep]], ['NN', level]],
                ['.', '.']
              ]).
pllm:training(1200100000131,
              tree_to_toks,
              [ 'There',
                '\'s',
                'a-weird-class-issue',
                here,
                (','),
                or,
                maybe,
                'even-a-eugenic-model',
                (','),
                that,
                disturbs,
                me,
                on,
                'a-pretty-deep-level',
                ('.')
              ]).
pllm:training(1300010000133,
              string,
              "Imagine what it would like in the Star Wars universe. What if you're a regular guy who just finds a light saber on the ground.").
pllm:training(1300010000133,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', 'Imagine'],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', like],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['DT', the],
                                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                                  ['NN', universe]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'SBAR',
                    ['IN', if],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['AUX', '\'re'],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', regular], ['NN', guy]],
                          [ 'SBAR',
                            ['NP', ['WP', who]],
                            [ 'S',
                              [ 'VP',
                                ['ADVP', ['RB', just]],
                                ['VBZ', finds],
                                [ 'NP',
                                  ['NP', ['DT', a], ['JJ', light], ['NN', saber]],
                                  ['PP', ['IN', on], ['NP', ['DT', the], ['NN', ground]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300010000133,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Imagine'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['VB', like],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', universe]],
                ['.', '.'],
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['AUX', '\'re'],
                ['NP', ['DT', a], ['JJ', regular], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['ADVP', ['RB', just]],
                ['VBZ', finds],
                ['NP', ['DT', a], ['JJ', light], ['NN', saber]],
                ['IN', on],
                ['NP', ['DT', the], ['NN', ground]],
                ['.', '.']
              ]).
pllm:training(1300010000133,
              tree_to_toks,
              [ 'Imagine',
                what,
                it,
                would,
                like,
                in,
                'the-Star-Wars-universe',
                ('.'),
                'What',
                if,
                you,
                '\'re',
                'a-regular-guy',
                who,
                just,
                finds,
                'a-light-saber',
                on,
                'the-ground',
                ('.')
              ]).
pllm:training(1300020000134,
              string,
              "With how often the Jedi lose them, it probably happens a lot.").
pllm:training(1300020000134,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['IN', 'With'],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how], ['RB', often]],
                      [ 'S',
                        ['NP', ['DT', the], ['NNP', 'Jedi']],
                        ['VP', ['VB', lose], ['NP', ['PRP', them]]]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  ['ADVP', ['RB', probably]],
                  ['VP', ['VBZ', happens], ['NP', ['DT', a], ['NN', lot]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1300020000134,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'With'],
                mark('SBAR'),
                ['WHADVP', ['WRB', how], ['RB', often]],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['VB', lose],
                ['NP', ['PRP', them]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', probably]],
                ['VBZ', happens],
                ['NP', ['DT', a], ['NN', lot]],
                ['.', '.']
              ]).
pllm:training(1300020000134,
              tree_to_toks,
              [ 'With',
                how,
                often,
                'the-Jedi',
                lose,
                them,
                (','),
                it,
                probably,
                happens,
                'a-lot',
                ('.')
              ]).
pllm:training(1300030000135,
              string,
              "The guy probably hang it on his wall at home.").
pllm:training(1300030000135,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['NN', guy]],
                  ['ADVP', ['RB', probably]],
                  [ 'VP',
                    ['VB', hang],
                    ['NP', ['PRP', it]],
                    [ 'PP',
                      ['IN', on],
                      [ 'NP',
                        ['NP', ['PRP$', his], ['NN', wall]],
                        ['PP', ['IN', at], ['NP', ['NN', home]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300030000135,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', guy]],
                ['ADVP', ['RB', probably]],
                ['VB', hang],
                ['NP', ['PRP', it]],
                ['IN', on],
                ['NP', ['PRP$', his], ['NN', wall]],
                ['IN', at],
                ['NP', ['NN', home]],
                ['.', '.']
              ]).
pllm:training(1300030000135,
              tree_to_toks,
              ['The-guy', probably, hang, it, on, 'his-wall', at, home, '.']).
pllm:training(1300040000136,
              string,
              "He tells the girls he brings home, \"Yeah. i killed a jedi and took his saber.\"").
pllm:training(1300040000136,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', tells],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', girls]],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', brings], ['ADVP', ['RB', home]]]]
                      ]
                    ],
                    [',', ','],
                    ['INTJ', ['``', '"'], ['UH', 'Yeah']]
                  ],
                  ['.', '.']
                ],
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VP', ['VBD', killed], ['NP', ['DT', a], ['NN', jedi]]],
                    ['CC', and],
                    ['VP', ['VBD', took], ['NP', ['PRP$', his], ['NN', saber]]]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', ['``', '"']], ['.', '.']]
              ]).
pllm:training(1300040000136,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', tells],
                ['NP', ['DT', the], ['NNS', girls]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', brings],
                ['ADVP', ['RB', home]],
                [',', ','],
                ['INTJ', ['``', '"'], ['UH', 'Yeah']],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VBD', killed],
                ['NP', ['DT', a], ['NN', jedi]],
                ['CC', and],
                ['VBD', took],
                ['NP', ['PRP$', his], ['NN', saber]],
                ['.', '.'],
                mark('S'),
                ['``', '"'],
                ['.', '.']
              ]).
pllm:training(1300040000136,
              tree_to_toks,
              [ 'He',
                tells,
                'the-girls',
                he,
                brings,
                home,
                (','),
                '"',
                'Yeah',
                ('.'),
                i,
                killed,
                'a-jedi',
                and,
                took,
                'his-saber',
                ('.'),
                '"',
                ('.')
              ]).
pllm:training(1300050000137,
              string,
              "He'd probably end up lopping off an arm at some point.").
pllm:training(1300050000137,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', '\'d'],
                    ['ADVP', ['RB', probably]],
                    [ 'VP',
                      ['VB', end],
                      ['PRT', ['RP', up]],
                      [ 'S',
                        [ 'VP',
                          ['VBG', lopping],
                          ['PRT', ['RP', off]],
                          ['NP', ['DT', an], ['NN', arm]],
                          ['PP', ['IN', at], ['NP', ['DT', some], ['NN', point]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300050000137,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', '\'d'],
                ['ADVP', ['RB', probably]],
                ['VB', end],
                ['PRT', ['RP', up]],
                mark('S'),
                ['VBG', lopping],
                ['PRT', ['RP', off]],
                ['NP', ['DT', an], ['NN', arm]],
                ['IN', at],
                ['NP', ['DT', some], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(1300050000137,
              tree_to_toks,
              ['He', '\'d', probably, end, up, lopping, off, 'an-arm', at, 'some-point', '.']).
pllm:training(1300060000138, string, "His? Or someone else's?").
pllm:training(1300060000138,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP$', 'His']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NP', ['CC', 'Or']], ['NP', ['NN', someone], ['RB', else], ['POS', '\'s']]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1300060000138,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['CC', 'Or']],
                ['NP', ['NN', someone], ['RB', else], ['POS', '\'s']],
                ['.', ?]
              ]).
pllm:training(1300060000138, tree_to_toks, ['His', ?, 'Or', 'someone-else-\'s', ?]).
pllm:training(1300070000139, string, "Depends on how drunk he is, I'd imagine.").
pllm:training(1300070000139,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    [ 'VP',
                      ['VBZ', 'Depends'],
                      [ 'PP',
                        ['IN', on],
                        [ 'SBAR',
                          ['WHADJP', ['WRB', how], ['ADJP', ['JJ', drunk]]],
                          ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', is]]]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['MD', '\'d'], ['VP', ['VB', imagine]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1300070000139,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Depends'],
                ['IN', on],
                mark('SBAR'),
                ['WHADJP', ['WRB', how], ['ADJP', ['JJ', drunk]]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', imagine],
                ['.', '.']
              ]).
pllm:training(1300070000139,
              tree_to_toks,
              ['Depends', on, how, drunk, he, is, ',', 'I', '\'d', imagine, '.']).
pllm:training(1300080000140, string, "How do you explain that to the doctor?").
pllm:training(1300080000140,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', explain],
                      ['NP', ['DT', that]],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['NN', doctor]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1300080000140,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['NP', ['DT', that]],
                ['IN', to],
                ['NP', ['DT', the], ['NN', doctor]],
                ['.', ?]
              ]).
pllm:training(1300080000140,
              tree_to_toks,
              ['How', do, you, explain, that, to, 'the-doctor', ?]).
pllm:training(1300090000141,
              string,
              "\"Dang jedi just walked up and took my arm off!\"").
pllm:training(1300090000141,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['``', '"'],
                  ['NP', ['NNP', 'Dang'], ['NNP', jedi]],
                  [ 'VP',
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBD', walked], ['PRT', ['RP', up]]],
                    ['CC', and],
                    ['VP', ['VBD', took], ['NP', ['PRP$', my], ['NN', arm]], ['PRT', ['RP', off]]]
                  ],
                  ['.', '.'],
                  ['\'\'', '"']
                ],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(1300090000141,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['``', '"'],
                ['NP', ['NNP', 'Dang'], ['NNP', jedi]],
                ['ADVP', ['RB', just]],
                ['VBD', walked],
                ['PRT', ['RP', up]],
                ['CC', and],
                ['VBD', took],
                ['NP', ['PRP$', my], ['NN', arm]],
                ['PRT', ['RP', off]],
                ['.', '.'],
                ['\'\'', '"'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(1300090000141,
              tree_to_toks,
              ['"', 'Dang-jedi', just, walked, up, and, took, 'my-arm', off, '.', '"', 'FRAG', '.']).
pllm:training(1300100000142,
              string,
              "They're all robot doctors. I don't know if they'd buy that.").
pllm:training(1300100000142,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['VP', ['VB', '\'re'], ['NP', ['DT', all], ['NN', robot], ['NNS', doctors]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['IN', if],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['VP', ['VBD', '\'d'], ['VP', ['VB', buy], ['NP', ['DT', that]]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1300100000142,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VB', '\'re'],
                ['NP', ['DT', all], ['NN', robot], ['NNS', doctors]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', '\'d'],
                ['VB', buy],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(1300100000142,
              tree_to_toks,
              [ 'They',
                '\'re',
                'all-robot-doctors',
                ('.'),
                'I',
                do,
                not,
                know,
                if,
                they,
                '\'d',
                buy,
                that,
                ('.')
              ]).
pllm:training(1400010000144,
              string,
              "What Star Wars character do you dislike the most?").
pllm:training(1400010000144,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['NP', ['WP', 'What']], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', character]],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', dislike], ['NP', ['DT', the], ['JJS', most]]]
                ],
                ['.', ?]
              ]).
pllm:training(1400010000144,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NN', character],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', dislike],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(1400010000144,
              tree_to_toks,
              ['What', 'Star-Wars', character, do, you, dislike, 'the-most', ?]).
pllm:training(1400020000145, string, "I really don't like Jar Jar Binks!").
pllm:training(1400020000145,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                [ 'VP',
                  ['AUX', do],
                  ['RB', not],
                  ['VP', ['VB', like], ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']]]
                ],
                ['.', '.']
              ]).
pllm:training(1400020000145,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['AUX', do],
                ['RB', not],
                ['VB', like],
                ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                ['.', '.']
              ]).
pllm:training(1400020000145,
              tree_to_toks,
              ['I', really, do, not, like, 'Jar-Jar-Binks', '.']).
pllm:training(1400030000146, string, "Why don't you like that character?").
pllm:training(1400030000146,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'Why']],
                [ 'S',
                  ['AUX', do],
                  ['RB', not],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['NP', ['DT', that], ['NN', character]]]
                ],
                ['.', ?]
              ]).
pllm:training(1400030000146,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['RB', not],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', that], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1400030000146,
              tree_to_toks,
              ['Why', do, not, you, like, 'that-character', ?]).
pllm:training(1400040000147, string, "Jar Jar Binks is just really annoying!").
pllm:training(1400040000147,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', just]],
                    ['ADJP', ['RB', really], ['JJ', annoying]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400040000147,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                ['VBZ', is],
                ['ADVP', ['RB', just]],
                ['ADJP', ['RB', really], ['JJ', annoying]],
                ['.', '.']
              ]).
pllm:training(1400040000147,
              tree_to_toks,
              ['Jar-Jar-Binks', is, just, really, annoying, '.']).
pllm:training(1400050000148,
              string,
              "I also find Jar Jar Binks extremely annoying.").
pllm:training(1400050000148,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', also]],
                  [ 'VP',
                    ['VB', find],
                    [ 'NP',
                      ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                      ['ADJP', ['RB', extremely], ['JJ', annoying]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400050000148,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', also]],
                ['VB', find],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['ADJP', ['RB', extremely], ['JJ', annoying]],
                ['.', '.']
              ]).
pllm:training(1400050000148,
              tree_to_toks,
              ['I', also, find, 'Jar-Jar-Binks', extremely, annoying, '.']).
pllm:training(1400060000149,
              string,
              "I think they just added Jar Jar Binks as a comic relief character.").
pllm:training(1400060000149,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        ['ADVP', ['RB', just]],
                        [ 'VP',
                          ['VBD', added],
                          [ 'NP',
                            ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                            [ 'PP',
                              ['IN', as],
                              [ 'NP',
                                ['DT', a],
                                ['JJ', comic],
                                ['NN', relief],
                                ['NN', character]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400060000149,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', just]],
                ['VBD', added],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', comic], ['NN', relief], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(1400060000149,
              tree_to_toks,
              [ 'I',
                think,
                they,
                just,
                added,
                'Jar-Jar-Binks',
                (as),
                'a-comic-relief-character',
                ('.')
              ]).
pllm:training(1400070000150, string, "Yes I totally agree with you!").
pllm:training(1400070000150,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', totally]],
                  ['VP', ['VB', agree], ['PP', ['IN', with], ['NP', ['PRP', you]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1400070000150,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', totally]],
                ['VB', agree],
                ['IN', with],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(1400070000150, tree_to_toks, ['Yes', 'I', totally, agree, with, you, '.']).
pllm:training(1400080000151,
              string,
              "There are moments I found funny when I saw Jar Jar Binks on screen.").
pllm:training(1400080000151,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  [ 'VP',
                    ['VB', are],
                    [ 'NP',
                      ['NP', ['NNS', moments]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VBD', found],
                            ['ADJP', ['JJ', funny]],
                            [ 'SBAR',
                              ['WHADVP', ['WRB', when]],
                              [ 'S',
                                ['NP', ['PRP', 'I']],
                                [ 'VP',
                                  ['VBD', saw],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                                    ['PP', ['IN', on], ['NP', ['NN', screen]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400080000151,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VB', are],
                ['NP', ['NNS', moments]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', found],
                ['ADJP', ['JJ', funny]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['IN', on],
                ['NP', ['NN', screen]],
                ['.', '.']
              ]).
pllm:training(1400080000151,
              tree_to_toks,
              [ 'There',
                are,
                moments,
                'I',
                found,
                funny,
                when,
                'I',
                saw,
                'Jar-Jar-Binks',
                on,
                screen,
                ('.')
              ]).
pllm:training(1400090000152,
              string,
              "The way Jar Jar Binks says \"me\" as \"meesa\" makes me laugh.").
pllm:training(1400090000152,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['NN', way]],
                    ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']]
                  ],
                  [ 'VP',
                    ['VBZ', says],
                    ['``', '"'],
                    ['NP', ['PRP', me]],
                    ['\'\'', '"'],
                    [ 'SBAR',
                      ['IN', as],
                      [ 'S',
                        ['NP', ['``', '"'], ['NN', meesa], ['\'\'', '"']],
                        ['VP', ['VBZ', makes], ['S', ['NP', ['PRP', me]], ['VP', ['VB', laugh]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400090000152,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', way]],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['VBZ', says],
                ['``', '"'],
                ['NP', ['PRP', me]],
                ['\'\'', '"'],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['``', '"'], ['NN', meesa], ['\'\'', '"']],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', laugh],
                ['.', '.']
              ]).
pllm:training(1400090000152,
              tree_to_toks,
              ['The-way', 'Jar-Jar-Binks', says, '"', me, '"', as, meesa, makes, me, laugh, '.']).
pllm:training(1400100000153, string, "It also makes me laugh!").
pllm:training(1400100000153,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['ADVP', ['RB', also]],
                  ['VP', ['VBZ', makes], ['S', ['NP', ['PRP', me]], ['VP', ['VB', laugh]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1400100000153,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', also]],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', laugh],
                ['.', '.']
              ]).
pllm:training(1400100000153, tree_to_toks, ['It', also, makes, me, laugh, '.']).
pllm:training(1500010000155,
              string,
              "What do you think about the Mandela Effect  concerning Star Wars?").
pllm:training(1500010000155,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'PP',
                      ['IN', about],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Mandela'], ['NN', 'Effect']],
                        ['VP', ['VBG', concerning], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1500010000155,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', about],
                ['NP', ['DT', the], ['NNP', 'Mandela'], ['NN', 'Effect']],
                ['VBG', concerning],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(1500010000155,
              tree_to_toks,
              [ 'What',
                do,
                you,
                think,
                about,
                'the-Mandela-Effect',
                concerning,
                'Star-Wars',
                (?)
              ]).
pllm:training(1500020000156,
              string,
              "I am not sure I know what you are talking about.").
pllm:training(1500020000156,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    ['RB', not],
                    [ 'ADJP',
                      ['JJ', sure],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VB', know],
                            [ 'SBAR',
                              ['NP', ['WP', what]],
                              [ 'S',
                                ['NP', ['PRP', you]],
                                [ 'VP',
                                  ['VB', are],
                                  ['VP', ['VBG', talking], ['PP', ['IN', about]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1500020000156,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['RB', not],
                'ADJP',
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', are],
                ['VBG', talking],
                ['IN', about],
                ['.', '.']
              ]).
pllm:training(1500020000156,
              tree_to_toks,
              ['I', am, not, 'ADJP', sure, 'I', know, what, you, are, talking, about, '.']).
pllm:training(1500030000157,
              string,
              "Empire Strikes Back the scene where Luke finds out Darth Vader is his dad. What is the line that Darth says?").
pllm:training(1500030000157,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['NNP', 'Empire']],
                  [ 'VP',
                    ['VBZ', 'Strikes'],
                    ['PRT', ['RP', 'Back']],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', scene]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', where]],
                        [ 'S',
                          ['NP', ['NNP', 'Luke']],
                          [ 'VP',
                            ['VBZ', finds],
                            ['PRT', ['RP', out]],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                                ['VP', ['AUX', is], ['NP', ['PRP$', his], ['NN', dad]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    [ 'VP',
                      ['AUX', is],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', line]],
                        [ 'SBAR',
                          ['NP', ['WDT', that]],
                          ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VBZ', says]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1500030000157,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['PRT', ['RP', 'Back']],
                ['NP', ['DT', the], ['NN', scene]],
                mark('SBAR'),
                ['WHADVP', ['WRB', where]],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', finds],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['AUX', is],
                ['NP', ['PRP$', his], ['NN', dad]],
                ['.', '.'],
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['NN', line]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VBZ', says],
                ['.', ?]
              ]).
pllm:training(1500030000157,
              tree_to_toks,
              [ 'Empire',
                'Strikes',
                'Back',
                'the-scene',
                where,
                'Luke',
                finds,
                out,
                'Darth-Vader',
                (is),
                'his-dad',
                ('.'),
                'What',
                (is),
                'the-line',
                that,
                'Darth',
                says,
                (?)
              ]).
pllm:training(1500040000158, string, "Luke I am your Father.").
pllm:training(1500040000158,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Luke']],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['NP', ['PRP$', your], ['NNP', 'Father']]],
                  ['.', '.']
                ]
              ]).
pllm:training(1500040000158,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NNP', 'Father']],
                ['.', '.']
              ]).
pllm:training(1500040000158, tree_to_toks, ['Luke', 'I', am, 'your-Father', '.']).
pllm:training(1500050000159,
              string,
              "Yes that's what I remember and a lot of other people as well.").
pllm:training(1500050000159,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['DT', that]],
                [ 'VP',
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['SBAR', ['NP', ['WP', what]], ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', remember]]]]
                  ],
                  ['CC', and],
                  [ 'VP',
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', lot]],
                      ['PP', ['IN', of], ['NP', ['JJ', other], ['NNS', people]]]
                    ],
                    ['ADVP', ['RB', as], ['RB', well]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1500050000159,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['CC', and],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['JJ', other], ['NNS', people]],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', '.']
              ]).
pllm:training(1500050000159,
              tree_to_toks,
              [ 'Yes',
                that,
                '\'s',
                what,
                'I',
                remember,
                and,
                'a-lot',
                of,
                'other-people',
                (as),
                well,
                ('.')
              ]).
pllm:training(1500060000160, string, "So what are you saying? That it's wrong?").
pllm:training(1500060000160,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['RB', 'So'],
                    ['NP', ['WP', what]],
                    ['S', ['VB', are], ['NP', ['PRP', you]], ['VP', ['VBG', saying]]],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['NP', ['DT', 'That']],
                  ['NP', ['PRP', it]],
                  ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', wrong]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1500060000160,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['RB', 'So'],
                ['NP', ['WP', what]],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                ['VBG', saying],
                ['.', ?],
                mark('S'),
                ['NP', ['DT', 'That']],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', wrong]],
                ['.', ?]
              ]).
pllm:training(1500060000160,
              tree_to_toks,
              ['So', what, are, you, saying, ?, 'That', it, '\'s', wrong, ?]).
pllm:training(1500070000161,
              string,
              "According to some fans they insist he \"No, I am your father\" not Luke I am your father.").
pllm:training(1500070000161,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['VBG', 'According'],
                    [ 'PP',
                      ['IN', to],
                      [ 'NP',
                        ['NP', ['DT', some], ['NNS', fans]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VB', insist],
                              ['NP', ['PRP', he]],
                              ['``', '"'],
                              [ 'S',
                                ['INTJ', ['UH', 'No']],
                                [',', ','],
                                ['NP', ['PRP', 'I']],
                                [ 'VP',
                                  ['VB', am],
                                  [ 'NP',
                                    ['NP', ['PRP$', your], ['NN', father]],
                                    ['\'\'', '"'],
                                    ['PP', ['RB', not], ['NP', ['NNP', 'Luke']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['NP', ['PRP$', your], ['NN', father]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1500070000161,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBG', 'According'],
                ['IN', to],
                ['NP', ['DT', some], ['NNS', fans]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', insist],
                ['NP', ['PRP', he]],
                ['``', '"'],
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NN', father]],
                ['\'\'', '"'],
                ['RB', not],
                ['NP', ['NNP', 'Luke']],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(1500070000161,
              tree_to_toks,
              [ 'According',
                to,
                'some-fans',
                they,
                insist,
                he,
                '"',
                'No',
                (','),
                'I',
                am,
                'your-father',
                '"',
                not,
                'Luke',
                'I',
                am,
                'your-father',
                ('.')
              ]).
pllm:training(1500080000162,
              string,
              "What? I may not be as big of a nerd about Star Wars as you are but i know Luke is right.").
pllm:training(1500080000162,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WP', 'What']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', may],
                        ['RB', not],
                        [ 'VP',
                          ['VB', be],
                          [ 'ADJP',
                            ['RB', as],
                            ['JJ', big],
                            [ 'PP',
                              ['IN', of],
                              [ 'NP',
                                ['NP', ['DT', a], ['NN', nerd]],
                                ['PP', ['IN', about], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                              ]
                            ]
                          ],
                          ['SBAR', ['IN', as], ['S', ['NP', ['PRP', you]], ['VP', ['VB', are]]]]
                        ]
                      ]
                    ],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', i]],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['S', ['NP', ['NNP', 'Luke']], ['VP', ['VBZ', is], ['ADJP', ['JJ', right]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1500080000162,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', may],
                ['RB', not],
                ['VB', be],
                'ADJP',
                ['RB', as],
                ['JJ', big],
                ['IN', of],
                ['NP', ['DT', a], ['NN', nerd]],
                ['IN', about],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', are],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', is],
                ['ADJP', ['JJ', right]],
                ['.', '.']
              ]).
pllm:training(1500080000162,
              tree_to_toks,
              [ 'What',
                (?),
                'I',
                may,
                not,
                be,
                'ADJP',
                (as),
                big,
                of,
                'a-nerd',
                about,
                'Star-Wars',
                (as),
                you,
                are,
                but,
                i,
                know,
                'Luke',
                (is),
                right,
                ('.')
              ]).
pllm:training(1500090000163,
              string,
              "Yes there are interviews of James Earl Jones back in the day and when asked to quote that scene he says Luke.").
pllm:training(1500090000163,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['EX', there]],
                  [ 'VP',
                    ['VB', are],
                    [ 'UCP',
                      [ 'NP',
                        ['NP', ['NNS', interviews]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                            [ 'ADVP',
                              ['RB', back],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NN', day]]]
                            ]
                          ]
                        ]
                      ],
                      ['CC', and],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          [ 'VP',
                            ['VBN', asked],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['VB', quote],
                                  [ 'NP',
                                    ['NP', ['DT', that], ['NN', scene]],
                                    [ 'SBAR',
                                      [ 'S',
                                        ['NP', ['PRP', he]],
                                        ['VP', ['VBZ', says], ['NP', ['NNP', 'Luke']]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1500090000163,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['EX', there]],
                ['VB', are],
                'UCP',
                ['NP', ['NNS', interviews]],
                ['IN', of],
                ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                'ADVP',
                ['RB', back],
                ['IN', in],
                ['NP', ['DT', the], ['NN', day]],
                ['CC', and],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['VBN', asked],
                mark('S'),
                ['TO', to],
                ['VB', quote],
                ['NP', ['DT', that], ['NN', scene]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', says],
                ['NP', ['NNP', 'Luke']],
                ['.', '.']
              ]).
pllm:training(1500090000163,
              tree_to_toks,
              [ 'Yes',
                there,
                are,
                'UCP',
                interviews,
                of,
                'James-Earl-Jones',
                'ADVP',
                back,
                in,
                'the-day',
                and,
                when,
                asked,
                to,
                quote,
                'that-scene',
                he,
                says,
                'Luke',
                ('.')
              ]).
pllm:training(1500100000164,
              string,
              "Who would know better than him? That's really weird.").
pllm:training(1500100000164,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'Who']],
                    [ 'S',
                      [ 'VP',
                        ['MD', would],
                        [ 'VP',
                          ['VB', know],
                          ['NP', ['JJR', better]],
                          ['PP', ['IN', than], ['NP', ['PRP', him]]]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['RB', really], ['JJ', weird]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1500100000164,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['MD', would],
                ['VB', know],
                ['NP', ['JJR', better]],
                ['IN', than],
                ['NP', ['PRP', him]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', really], ['JJ', weird]],
                ['.', '.']
              ]).
pllm:training(1500100000164,
              tree_to_toks,
              ['Who', would, know, better, than, him, ?, 'That', '\'s', really, weird, '.']).
pllm:training(1600010000166,
              string,
              "Did you actually watch the original Star Wars when it was originally released?").
pllm:training(1600010000166,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', actually]],
                  [ 'VP',
                    ['VB', watch],
                    ['NP', ['DT', the], ['JJ', original], ['NNP', 'Star'], ['NNPS', 'Wars']],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADVP', ['RB', originally]],
                          ['VP', ['VBN', released]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600010000166,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', actually]],
                ['VB', watch],
                ['NP', ['DT', the], ['JJ', original], ['NNP', 'Star'], ['NNPS', 'Wars']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', originally]],
                ['VBN', released],
                ['.', ?]
              ]).
pllm:training(1600010000166,
              tree_to_toks,
              [ 'Did',
                you,
                actually,
                watch,
                'the-original-Star-Wars',
                when,
                it,
                was,
                originally,
                released,
                (?)
              ]).
pllm:training(1600020000167, string, "Yes I was seven years old in 1977.").
pllm:training(1600020000167,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADJP', ['NP', ['CD', seven], ['NNS', years]], ['JJ', old]],
                    ['PP', ['IN', in], ['NP', ['CD', '1977']]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600020000167,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['NP', ['CD', seven], ['NNS', years]],
                ['JJ', old],
                ['IN', in],
                ['NP', ['CD', '1977']],
                ['.', '.']
              ]).
pllm:training(1600020000167,
              tree_to_toks,
              ['Yes', 'I', was, 'ADJP', 'seven-years', old, in, '1977', '.']).
pllm:training(1600030000168, string, "Did you go by yourself?").
pllm:training(1600030000168,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', go], ['PP', ['IN', by], ['NP', ['PRP', yourself]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1600030000168,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', go],
                ['IN', by],
                ['NP', ['PRP', yourself]],
                ['.', ?]
              ]).
pllm:training(1600030000168, tree_to_toks, ['Did', you, go, by, yourself, ?]).
pllm:training(1600040000169,
              string,
              "No I went with one of my older sisters and my twin sister.").
pllm:training(1600040000169,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', went],
                    [ 'PP',
                      ['IN', with],
                      [ 'NP',
                        ['NP', ['CD', one]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['PRP$', my], ['JJR', older], ['NNS', sisters]],
                            ['CC', and],
                            ['NP', ['PRP$', my], ['JJ', twin], ['NN', sister]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600040000169,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                ['NP', ['PRP', 'I']],
                ['VBD', went],
                ['IN', with],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['PRP$', my], ['JJR', older], ['NNS', sisters]],
                ['CC', and],
                ['NP', ['PRP$', my], ['JJ', twin], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(1600040000169,
              tree_to_toks,
              ['No', 'I', went, with, one, of, 'my-older-sisters', and, 'my-twin-sister', '.']).
pllm:training(1600050000170, string, "Do you really remember the whole movie?").
pllm:training(1600050000170,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['ADVP', ['RB', really]],
                    ['VB', remember],
                    ['NP', ['DT', the], ['JJ', whole], ['NN', movie]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600050000170,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', really]],
                ['VB', remember],
                ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(1600050000170,
              tree_to_toks,
              ['Do', you, really, remember, 'the-whole-movie', ?]).
pllm:training(1600060000171,
              string,
              "Well first of all we got there a little late; but the first thing I remember seeing was Darth Vader on a ship walking among dead bodies.").
pllm:training(1600060000171,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Well'], ['RB', first], ['PP', ['IN', of], ['NP', ['DT', all]]]],
                ['NP', ['PRP', we]],
                [ 'VP',
                  ['VBD', got],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['EX', there]],
                      ['ADJP', ['DT', a], ['RB', little], ['JJ', late]],
                      [ 'S',
                        ['CC', but],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', first], ['NN', thing]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', 'I']],
                              ['VP', ['VB', remember], ['VP', ['VBG', seeing]]]
                            ]
                          ]
                        ],
                        [ 'VP',
                          ['AUX', was],
                          ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                          [ 'PP',
                            ['IN', on],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', ship]],
                              [ 'VP',
                                ['VBG', walking],
                                ['PP', ['IN', among], ['NP', ['JJ', dead], ['NNS', bodies]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1600060000171,
              unphrasify,
              [ mark('S'),
                'ADVP',
                ['RB', 'Well'],
                ['RB', first],
                ['IN', of],
                ['NP', ['DT', all]],
                ['NP', ['PRP', we]],
                ['VBD', got],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['ADJP', ['DT', a], ['RB', little], ['JJ', late]],
                mark('S'),
                ['CC', but],
                ['NP', ['DT', the], ['JJ', first], ['NN', thing]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['VBG', seeing],
                ['AUX', was],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['IN', on],
                ['NP', ['DT', a], ['NN', ship]],
                ['VBG', walking],
                ['IN', among],
                ['NP', ['JJ', dead], ['NNS', bodies]],
                ['.', '.']
              ]).
pllm:training(1600060000171,
              tree_to_toks,
              [ 'ADVP',
                'Well',
                first,
                of,
                all,
                we,
                got,
                there,
                a,
                little,
                late,
                but,
                'the-first-thing',
                'I',
                remember,
                seeing,
                was,
                'Darth-Vader',
                on,
                'a-ship',
                walking,
                among,
                'dead-bodies',
                ('.')
              ]).
pllm:training(1600070000172,
              string,
              "I would say you missed about the first ten minutes of the movie then.").
pllm:training(1600070000172,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['VB', say],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', you]],
                        [ 'VP',
                          ['VBD', missed],
                          [ 'PP',
                            ['IN', about],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJ', first], ['CD', ten], ['NNS', minutes]],
                              ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                            ]
                          ],
                          ['ADVP', ['RB', then]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1600070000172,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', say],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', missed],
                ['IN', about],
                ['NP', ['DT', the], ['JJ', first], ['CD', ten], ['NNS', minutes]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['ADVP', ['RB', then]],
                ['.', '.']
              ]).
pllm:training(1600070000172,
              tree_to_toks,
              [ 'I',
                would,
                say,
                you,
                missed,
                about,
                'the-first-ten-minutes',
                of,
                'the-movie',
                then,
                ('.')
              ]).
pllm:training(1600080000173,
              string,
              "The other scene I remember is the one when Han Solo comes back after everyone believes he's gone.").
pllm:training(1600080000173,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['JJ', other], ['NN', scene]],
                    ['SBAR', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', remember]]]]
                  ],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['DT', the], ['CD', one]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                          [ 'VP',
                            ['VBZ', comes],
                            [ 'SBAR',
                              ['ADVP', ['RB', back]],
                              ['IN', after],
                              [ 'S',
                                ['NP', ['NN', everyone]],
                                [ 'VP',
                                  ['VBZ', believes],
                                  [ 'SBAR',
                                    [ 'S',
                                      ['NP', ['PRP', he]],
                                      ['VP', ['VBZ', '\'s'], ['VP', ['VBN', gone]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600080000173,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', other], ['NN', scene]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['VBZ', is],
                ['NP', ['DT', the], ['CD', one]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['VBZ', comes],
                mark('SBAR'),
                ['ADVP', ['RB', back]],
                ['IN', after],
                mark('S'),
                ['NP', ['NN', everyone]],
                ['VBZ', believes],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['VBN', gone],
                ['.', '.']
              ]).
pllm:training(1600080000173,
              tree_to_toks,
              [ 'The-other-scene',
                'I',
                remember,
                (is),
                'the-one',
                when,
                'Han-Solo',
                comes,
                back,
                after,
                everyone,
                believes,
                he,
                '\'s',
                gone,
                ('.')
              ]).
pllm:training(1600090000174, string, "Is that a the end of the movie?").
pllm:training(1600090000174,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBZ', 'Is'],
                  ['NP', ['DT', that]],
                  [ 'NP',
                    ['NP', ['DT', a], ['DT', the], ['NN', end]],
                    ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600090000174,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['NP', ['DT', a], ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(1600090000174, tree_to_toks, ['Is', that, 'a-the-end', of, 'the-movie', ?]).
pllm:training(1600100000175,
              string,
              "Almost at the end of the movie, Darth Vader is about to shoot Luke's ship but Han saves him by shooting Darth's ship.").
pllm:training(1600100000175,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    [ 'ADVP',
                      ['RB', 'Almost'],
                      [ 'PP',
                        ['IN', at],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', end]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'ADJP',
                        ['RB', about],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', shoot],
                              ['NP', ['NP', ['NNP', 'Luke'], ['POS', '\'s']], ['NN', ship]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['NNP', 'Han']],
                    [ 'VP',
                      ['VBZ', saves],
                      ['NP', ['PRP', him]],
                      [ 'PP',
                        ['IN', by],
                        [ 'S',
                          [ 'VP',
                            ['VBG', shooting],
                            ['NP', ['NP', ['NNP', 'Darth'], ['POS', '\'s']], ['NN', ship]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600100000175,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                'ADVP',
                ['RB', 'Almost'],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                [',', ','],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBZ', is],
                'ADJP',
                ['RB', about],
                mark('S'),
                ['TO', to],
                ['VB', shoot],
                ['NP', ['NNP', 'Luke'], ['POS', '\'s']],
                ['NN', ship],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Han']],
                ['VBZ', saves],
                ['NP', ['PRP', him]],
                ['IN', by],
                mark('S'),
                ['VBG', shooting],
                ['NP', ['NNP', 'Darth'], ['POS', '\'s']],
                ['NN', ship],
                ['.', '.']
              ]).
pllm:training(1600100000175,
              tree_to_toks,
              [ 'ADVP',
                'Almost',
                at,
                'the-end',
                of,
                'the-movie',
                (','),
                'Darth-Vader',
                (is),
                'ADJP',
                about,
                to,
                shoot,
                'Luke-\'s',
                ship,
                but,
                'Han',
                saves,
                him,
                by,
                shooting,
                'Darth-\'s',
                ship,
                ('.')
              ]).
pllm:training(1700010000177,
              string,
              "I'm still bitter about George Lucas re-editing the middle three movies.").
pllm:training(1700010000177,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    ['ADVP', ['RB', still]],
                    [ 'ADJP',
                      ['JJ', bitter],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBG', 're-editing'],
                            ['NP', ['DT', the], ['JJ', middle], ['CD', three], ['NNS', movies]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700010000177,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADVP', ['RB', still]],
                'ADJP',
                ['JJ', bitter],
                ['IN', about],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBG', 're-editing'],
                ['NP', ['DT', the], ['JJ', middle], ['CD', three], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(1700010000177,
              tree_to_toks,
              [ 'I',
                '\'m',
                still,
                'ADJP',
                bitter,
                about,
                'George-Lucas',
                're-editing',
                'the-middle-three-movies',
                ('.')
              ]).
pllm:training(1700020000178,
              string,
              "I don't blame you.  I don't think they added anything.").
pllm:training(1700020000178,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', do], ['RB', not], ['VP', ['VB', blame], ['NP', ['PRP', you]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['VP', ['VBD', added], ['NP', ['NN', anything]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1700020000178,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', blame],
                ['NP', ['PRP', you]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', added],
                ['NP', ['NN', anything]],
                ['.', '.']
              ]).
pllm:training(1700020000178,
              tree_to_toks,
              ['I', do, not, blame, you, '.', 'I', do, not, think, they, added, anything, '.']).
pllm:training(1700030000179,
              string,
              "The worst part was at the end of Return of the Jedi.").
pllm:training(1700030000179,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJS', worst], ['NN', part]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'PP',
                      ['IN', at],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', end]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NN', 'Return']],
                            ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700030000179,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJS', worst], ['NN', part]],
                ['VBD', was],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(1700030000179,
              tree_to_toks,
              ['The-worst-part', was, at, 'the-end', of, 'Return', of, 'the-Jedi', '.']).
pllm:training(1700040000180, string, "Oh, when he put in Hayden Christensen?").
pllm:training(1700040000180,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                [ 'SBAR',
                  ['WHADVP', ['WRB', when]],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', put],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Hayden'], ['NNP', 'Christensen']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1700040000180,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', put],
                ['IN', in],
                ['NP', ['NNP', 'Hayden'], ['NNP', 'Christensen']],
                ['.', ?]
              ]).
pllm:training(1700040000180,
              tree_to_toks,
              ['Oh', ',', when, he, put, in, 'Hayden-Christensen', ?]).
pllm:training(1700050000181, string, "Yeah - I never wanted to see him again.").
pllm:training(1700050000181,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', -],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', never]],
                  [ 'VP',
                    ['VBD', wanted],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', see], ['NP', ['PRP', him]], ['ADVP', ['RB', again]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700050000181,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', -],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['PRP', him]],
                ['ADVP', ['RB', again]],
                ['.', '.']
              ]).
pllm:training(1700050000181,
              tree_to_toks,
              ['Yeah', -, 'I', never, wanted, to, see, him, again, '.']).
pllm:training(1700060000182,
              string,
              "Same here - he drained all the energy out of the room.").
pllm:training(1700060000182,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NP', ['JJ', 'Same'], ['RB', here]], ['PP', ['HYPH', -], ['NP', ['PRP', he]]]],
                  [ 'VP',
                    ['VBD', drained],
                    ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                    ['PP', ['IN', out], ['PP', ['IN', of], ['NP', ['DT', the], ['NN', room]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700060000182,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['JJ', 'Same'], ['RB', here]],
                ['HYPH', -],
                ['NP', ['PRP', he]],
                ['VBD', drained],
                ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                ['IN', out],
                ['IN', of],
                ['NP', ['DT', the], ['NN', room]],
                ['.', '.']
              ]).
pllm:training(1700060000182,
              tree_to_toks,
              ['Same-here', -, he, drained, 'all-the-energy', out, of, 'the-room', '.']).
pllm:training(1700070000183,
              string,
              "Plus, they changed the music at the end.  I liked the original song better.").
pllm:training(1700070000183,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'Plus'],
                    [',', ','],
                    ['NP', ['PRP', they]],
                    [ 'VP',
                      ['VBD', changed],
                      ['NP', ['DT', the], ['NN', music]],
                      ['PP', ['IN', at], ['NP', ['DT', the], ['NN', end]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', liked],
                      ['NP', ['DT', the], ['JJ', original], ['NN', song]],
                      ['ADVP', ['RBR', better]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1700070000183,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['CC', 'Plus'],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VBD', changed],
                ['NP', ['DT', the], ['NN', music]],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', original], ['NN', song]],
                ['ADVP', ['RBR', better]],
                ['.', '.']
              ]).
pllm:training(1700070000183,
              tree_to_toks,
              [ 'Plus',
                (','),
                they,
                changed,
                'the-music',
                at,
                'the-end',
                ('.'),
                'I',
                liked,
                'the-original-song',
                better,
                ('.')
              ]).
pllm:training(1700080000184, string, "You actually liked that song?  Ha!").
pllm:training(1700080000184,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    ['ADVP', ['RB', actually]],
                    ['VP', ['VBD', liked], ['SBAR', ['IN', that], ['FRAG', ['NP', ['NN', song]]]]],
                    ['.', ?]
                  ]
                ],
                ['CORENLP', ['INTJ', ['UH', 'Ha'], ['.', '.']]]
              ]).
pllm:training(1700080000184,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', actually]],
                ['VBD', liked],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NN', song]],
                ['.', ?],
                mark('CORENLP'),
                ['INTJ', ['UH', 'Ha'], ['.', '.']]
              ]).
pllm:training(1700080000184,
              tree_to_toks,
              ['You', actually, liked, that, song, ?, 'Ha', '.']).
pllm:training(1700090000185,
              string,
              "In my defense, I was five when the original came out.").
pllm:training(1700090000185,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['PP', ['IN', 'In'], ['NP', ['PRP$', my], ['NN', defense]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['CD', five]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['DT', the], ['JJ', original]],
                          ['VP', ['VBD', came], ['PRT', ['RP', out]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700090000185,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'In'],
                ['NP', ['PRP$', my], ['NN', defense]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['NP', ['CD', five]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['DT', the], ['JJ', original]],
                ['VBD', came],
                ['PRT', ['RP', out]],
                ['.', '.']
              ]).
pllm:training(1700090000185,
              tree_to_toks,
              ['In', 'my-defense', ',', 'I', was, five, when, 'the-original', came, out, '.']).
pllm:training(1700100000186,
              string,
              "Now I have something new to hold against you.").
pllm:training(1700100000186,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Now']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', have],
                  [ 'NP',
                    ['NP', ['NN', something]],
                    [ 'ADJP',
                      ['JJ', new],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', hold], ['PP', ['IN', against], ['NP', ['PRP', you]]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1700100000186,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Now']],
                ['NP', ['PRP', 'I']],
                ['AUX', have],
                ['NP', ['NN', something]],
                'ADJP',
                ['JJ', new],
                mark('S'),
                ['TO', to],
                ['VB', hold],
                ['IN', against],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(1700100000186,
              tree_to_toks,
              ['Now', 'I', have, something, 'ADJP', new, to, hold, against, you, '.']).
pllm:training(1800010000188,
              string,
              "If you watched all of the movies, which order would you view them?").
pllm:training(1800010000188,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'SBAR',
                    ['IN', 'If'],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VBD', watched],
                        [ 'NP',
                          ['NP', ['DT', all]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['WDT', which], ['NN', order]],
                  ['S', ['MD', would], ['NP', ['PRP', you]], ['VP', ['VB', view], ['NP', ['PRP', them]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1800010000188,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', watched],
                ['NP', ['DT', all]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                [',', ','],
                ['NP', ['WDT', which], ['NN', order]],
                mark('S'),
                ['MD', would],
                ['NP', ['PRP', you]],
                ['VB', view],
                ['NP', ['PRP', them]],
                ['.', ?]
              ]).
pllm:training(1800010000188,
              tree_to_toks,
              [ 'If',
                you,
                watched,
                all,
                of,
                'the-movies',
                (','),
                'which-order',
                would,
                you,
                view,
                them,
                (?)
              ]).
pllm:training(1800020000189,
              string,
              "Ah, that's a highly debated question.  I guess I would go chronologically.").
pllm:training(1800020000189,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Ah']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['DT', a],
                        ['ADJP', ['RB', highly], ['VBN', debated]],
                        ['NN', question]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['MD', would],
                            ['VP', ['VB', go], ['ADVP', ['RB', chronologically]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800020000189,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Ah']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['ADJP', ['RB', highly], ['VBN', debated]], ['NN', question]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', go],
                ['ADVP', ['RB', chronologically]],
                ['.', '.']
              ]).
pllm:training(1800020000189,
              tree_to_toks,
              [ 'Ah',
                (','),
                that,
                '\'s',
                'a-highly-debated-question',
                ('.'),
                'I',
                guess,
                'I',
                would,
                go,
                chronologically,
                ('.')
              ]).
pllm:training(1800030000190, string, "Really?  Interesting.").
pllm:training(1800030000190,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                ['CORENLP', ['NP', ['JJ', 'Interesting'], ['.', '.']]]
              ]).
pllm:training(1800030000190,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                ['NP', ['JJ', 'Interesting'], ['.', '.']]
              ]).
pllm:training(1800030000190, tree_to_toks, ['Really', ?, 'Interesting-.']).
pllm:training(1800040000191,
              string,
              "Yeah.  I think I would want to see the rise and fall of Anakin before I watched the stories of his children.").
pllm:training(1800040000191,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', want],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', see],
                                    [ 'NP',
                                      [ 'NP',
                                        ['DT', the],
                                        ['NN', rise],
                                        ['CC', and],
                                        ['NN', fall]
                                      ],
                                      ['PP', ['IN', of], ['NP', ['NNP', 'Anakin']]]
                                    ],
                                    [ 'SBAR',
                                      ['IN', before],
                                      [ 'S',
                                        ['NP', ['PRP', 'I']],
                                        [ 'VP',
                                          ['VBD', watched],
                                          [ 'NP',
                                            ['NP', ['DT', the], ['NNS', stories]],
                                            [ 'PP',
                                              ['IN', of],
                                              ['NP', ['PRP$', his], ['NNS', children]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800040000191,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', want],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['DT', the], ['NN', rise], ['CC', and], ['NN', fall]],
                ['IN', of],
                ['NP', ['NNP', 'Anakin']],
                mark('SBAR'),
                ['IN', before],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['NNS', stories]],
                ['IN', of],
                ['NP', ['PRP$', his], ['NNS', children]],
                ['.', '.']
              ]).
pllm:training(1800040000191,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'I',
                think,
                'I',
                would,
                want,
                to,
                see,
                'the-rise-and-fall',
                of,
                'Anakin',
                before,
                'I',
                watched,
                'the-stories',
                of,
                'his-children',
                ('.')
              ]).
pllm:training(1800050000192,
              string,
              "See, now I'm more apt to go in order of release.").
pllm:training(1800050000192,
              text_to_tree,
              [ 'S',
                ['INTJ', ['VB', 'See']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', '\'m'],
                  [ 'ADJP',
                    ['RBR', more],
                    ['JJ', apt],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', go],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NP', ['NN', order]],
                              ['PP', ['IN', of], ['NP', ['NN', release]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1800050000192,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['VB', 'See']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['PRP', 'I']],
                ['AUX', '\'m'],
                'ADJP',
                ['RBR', more],
                ['JJ', apt],
                mark('S'),
                ['TO', to],
                ['VB', go],
                ['IN', in],
                ['NP', ['NN', order]],
                ['IN', of],
                ['NP', ['NN', release]],
                ['.', '.']
              ]).
pllm:training(1800050000192,
              tree_to_toks,
              ['See', ',', now, 'I', '\'m', 'ADJP', more, apt, to, go, in, order, of, release, '.']).
pllm:training(1800060000193, string, "Really?").
pllm:training(1800060000193, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(1800060000193, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(1800060000193, tree_to_toks, ['Really', ?]).
pllm:training(1800070000194,
              string,
              "Yes.  So, I would stars with Star Wars, then Empire Strikes Back, then Return of the Jedi, then I would...").
pllm:training(1800070000194,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      [',', ','],
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', would],
                        [ 'VP',
                          ['NP', ['NNS', stars]],
                          ['PP', ['IN', with], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'S',
                      ['ADVP', ['RB', then]],
                      ['NP', ['NNP', 'Empire']],
                      [ 'VP',
                        ['VBZ', 'Strikes'],
                        [ 'NP',
                          [ 'NP',
                            ['NML', ['ADVP', ['RB', 'Back']], [',', ','], ['ADVP', ['RB', then]]],
                            ['NNP', 'Return']
                          ],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['S', ['ADVP', ['RB', then]], ['NP', ['PRP', 'I']], ['VP', ['VB', 'would.']]],
                    [',', ','],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  ['FRAG', ['.', '.']]
                ]
              ]).
pllm:training(1800070000194,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['NP', ['NNS', stars]],
                ['IN', with],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', then]],
                ['NP', ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                [ 'NP',
                  ['NML', ['ADVP', ['RB', 'Back']], [',', ','], ['ADVP', ['RB', then]]],
                  ['NNP', 'Return']
                ],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', 'I']],
                ['VB', 'would.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(1800070000194,
              tree_to_toks,
              [ 'Yes',
                ('.'),
                'So',
                (','),
                'I',
                would,
                stars,
                with,
                'Star-Wars',
                (','),
                then,
                'Empire',
                'Strikes',
                'Back--then-Return',
                of,
                'the-Jedi',
                (','),
                then,
                'I',
                'would.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(1800080000195,
              string,
              "I get it.  Then you would move on to Episodes 1, 2, and 3.").
pllm:training(1800080000195,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', get], ['NP', ['PRP', it]]], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Then']],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', move],
                      ['ADVP', ['RB', on]],
                      [ 'PP',
                        ['TO', to],
                        [ 'NP',
                          ['NP', ['NNS', 'Episodes']],
                          ['CD', '1'],
                          [',', ','],
                          ['CD', '2'],
                          [',', ','],
                          ['CC', and],
                          ['CD', '3']
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1800080000195,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', get],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Then']],
                ['NP', ['PRP', you]],
                ['MD', would],
                ['VB', move],
                ['ADVP', ['RB', on]],
                ['TO', to],
                ['NP', ['NNS', 'Episodes']],
                ['CD', '1'],
                [',', ','],
                ['CD', '2'],
                [',', ','],
                ['CC', and],
                ['CD', '3'],
                ['.', '.']
              ]).
pllm:training(1800080000195,
              tree_to_toks,
              ['I', get, it, '.', 'Then', you, would, move, on, to, 'Episodes', '1', ',', '2', ',', and, '3', '.']).
pllm:training(1800090000196,
              string,
              "Exactly.  And then I'd finish with The Force Awakens and Rogue One.").
pllm:training(1800090000196,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['ADVP', ['RB', then]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', '\'d'],
                      [ 'VP',
                        ['VB', finish],
                        [ 'PP',
                          ['IN', with],
                          [ 'NP',
                            ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                            ['CC', and],
                            ['NP', ['NNP', 'Rogue'], ['CD', 'One']]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800090000196,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', finish],
                ['IN', with],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['CC', and],
                ['NP', ['NNP', 'Rogue'], ['CD', 'One']],
                ['.', '.']
              ]).
pllm:training(1800090000196,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'And',
                then,
                'I',
                '\'d',
                finish,
                with,
                'The-Force-Awakens',
                and,
                'Rogue-One',
                ('.')
              ]).
pllm:training(1800100000197,
              string,
              "Well, luckily there is no wrong way to watch the series.").
pllm:training(1800100000197,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['ADVP', ['RB', luckily]],
                ['NP', ['EX', there]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['DT', no], ['JJ', wrong], ['NN', way]],
                    [ 'SBAR',
                      [ 'S',
                        ['VP', ['TO', to], ['VP', ['VB', watch], ['NP', ['DT', the], ['NN', series]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1800100000197,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['ADVP', ['RB', luckily]],
                ['NP', ['EX', there]],
                ['AUX', is],
                ['NP', ['DT', no], ['JJ', wrong], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', watch],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(1800100000197,
              tree_to_toks,
              ['Well', ',', luckily, there, is, 'no-wrong-way', to, watch, 'the-series', '.']).
pllm:training(1900010000199,
              string,
              "Who is your favorite character in Star Wars?").
pllm:training(1900010000199,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1900010000199,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(1900010000199,
              tree_to_toks,
              ['Who', is, 'your-favorite-character', in, 'Star-Wars', ?]).
pllm:training(1900020000200, string, "I like C-3PO.").
pllm:training(1900020000200,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['VP', ['VB', like], ['FRAG', ['X', ['SYM', 'C']], [:, -], ['NP', ['CD', '3'], ['NN', 'PO']]]],
                ['.', '.']
              ]).
pllm:training(1900020000200,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('FRAG'),
                ['X', ['SYM', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NN', 'PO']],
                ['.', '.']
              ]).
pllm:training(1900020000200, tree_to_toks, ['I', like, 'C', -, '3-PO', '.']).
pllm:training(1900030000201,
              string,
              "He is really good. Which movie is he the best in?").
pllm:training(1900030000201,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', really], ['JJ', good]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WDT', 'Which'], ['NN', movie]],
                    [ 'S',
                      ['VBZ', is],
                      ['NP', ['PRP', he]],
                      ['PP', ['NP', ['DT', the], ['JJS', best]], ['IN', in]]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1900030000201,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['ADJP', ['RB', really], ['JJ', good]],
                ['.', '.'],
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', movie]],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP', he]],
                ['NP', ['DT', the], ['JJS', best]],
                ['IN', in],
                ['.', ?]
              ]).
pllm:training(1900030000201,
              tree_to_toks,
              ['He', is, really, good, '.', 'Which-movie', is, he, 'the-best', in, ?]).
pllm:training(1900040000202, string, "He is awesome in the first movie.").
pllm:training(1900040000202,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'ADJP',
                      ['JJ', awesome],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['NN', movie]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900040000202,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                'ADJP',
                ['JJ', awesome],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(1900040000202,
              tree_to_toks,
              ['He', is, 'ADJP', awesome, in, 'the-first-movie', '.']).
pllm:training(1900050000203,
              string,
              "Yeah, they really developed his character well.").
pllm:training(1900050000203,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['VBD', developed],
                    ['NP', ['PRP$', his], ['NN', character]],
                    ['ADVP', ['RB', well]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900050000203,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', really]],
                ['VBD', developed],
                ['NP', ['PRP$', his], ['NN', character]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(1900050000203,
              tree_to_toks,
              ['Yeah', ',', they, really, developed, 'his-character', well, '.']).
pllm:training(1900060000204, string, "Do you like R2-D2 as well?").
pllm:training(1900060000204,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NN', 'R2-D2']], ['ADVP', ['RB', as], ['RB', well]]],
                ['.', ?]
              ]).
pllm:training(1900060000204,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NN', 'R2-D2']],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', ?]
              ]).
pllm:training(1900060000204, tree_to_toks, ['Do', you, like, 'R2-D2', as, well, ?]).
pllm:training(1900070000205, string, "Yes, he is really funny.").
pllm:training(1900070000205,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', is], ['ADJP', ['RB', really], ['JJ', funny]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1900070000205,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADJP', ['RB', really], ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(1900070000205, tree_to_toks, ['Yes', ',', he, is, really, funny, '.']).
pllm:training(1900080000206, string, "Did you like him in the prequels?").
pllm:training(1900080000206,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['PRP', him]],
                  ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', prequels]]]
                ],
                ['.', ?]
              ]).
pllm:training(1900080000206,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', ?]
              ]).
pllm:training(1900080000206, tree_to_toks, ['Did', you, like, him, in, 'the-prequels', ?]).
pllm:training(1900090000207,
              string,
              "No, it was just a little strange to see him there.").
pllm:training(1900090000207,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', just]],
                    ['ADJP', ['NP', ['DT', a], ['JJ', little]], ['JJ', strange]],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', see], ['NP', ['PRP', him]], ['ADVP', ['RB', there]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900090000207,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJ', strange],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['PRP', him]],
                ['ADVP', ['RB', there]],
                ['.', '.']
              ]).
pllm:training(1900090000207,
              tree_to_toks,
              ['No', ',', it, was, just, 'ADJP', 'a-little', strange, to, see, him, there, '.']).
pllm:training(1900100000208,
              string,
              "Yeah, he should have just been in the originals.").
pllm:training(1900100000208,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['MD', should],
                    [ 'VP',
                      ['VB', have],
                      ['ADVP', ['RB', just]],
                      [ 'VP',
                        ['VBN', been],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', originals]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900100000208,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['MD', should],
                ['VB', have],
                ['ADVP', ['RB', just]],
                ['VBN', been],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(1900100000208,
              tree_to_toks,
              ['Yeah', ',', he, should, have, just, been, in, 'the-originals', '.']).
pllm:training(2000010000210,
              string,
              "Did you know Jabba the Hut was supposed to be furry?").
pllm:training(2000010000210,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'NP',
                      ['NP', ['NNP', 'Jabba']],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', the], ['NNP', 'Hut']],
                          [ 'VP',
                            ['VBD', was],
                            [ 'VP',
                              ['VBN', supposed],
                              ['S', ['VP', ['TO', to], ['VP', ['VB', be], ['ADJP', ['JJ', furry]]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2000010000210,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['NNP', 'Jabba']],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VBD', was],
                ['VBN', supposed],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['ADJP', ['JJ', furry]],
                ['.', ?]
              ]).
pllm:training(2000010000210,
              tree_to_toks,
              ['Did', you, know, 'Jabba', 'the-Hut', was, supposed, to, be, furry, ?]).
pllm:training(2000020000211, string, "Huh?  You're making that up.").
pllm:training(2000020000211,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Huh'], ['.', ?]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['VB', '\'re'],
                      ['VP', ['VBG', making], ['NP', ['DT', that]], ['PRT', ['RP', up]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2000020000211,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Huh'], ['.', ?]],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', '\'re'],
                ['VBG', making],
                ['NP', ['DT', that]],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(2000020000211, tree_to_toks, ['Huh-?', 'You', '\'re', making, that, up, '.']).
pllm:training(2000030000212,
              string,
              "No, I'm serious.  He was originally written as a furry character.").
pllm:training(2000030000212,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', '\'m'], ['ADJP', ['JJ', serious]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', originally]],
                      [ 'VP',
                        ['VBN', written],
                        ['PP', ['IN', as], ['NP', ['DT', a], ['JJ', furry], ['NN', character]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2000030000212,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADJP', ['JJ', serious]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADVP', ['RB', originally]],
                ['VBN', written],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', furry], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(2000030000212,
              tree_to_toks,
              [ 'No',
                (','),
                'I',
                '\'m',
                serious,
                ('.'),
                'He',
                was,
                originally,
                written,
                (as),
                'a-furry-character',
                ('.')
              ]).
pllm:training(2000040000213, string, "I just can't even picture that.").
pllm:training(2000040000213,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                [ 'VP',
                  ['MD', can],
                  ['RB', not],
                  ['ADVP', ['RB', even]],
                  ['VP', ['VB', picture], ['NP', ['DT', that]]]
                ],
                ['.', '.']
              ]).
pllm:training(2000040000213,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['MD', can],
                ['RB', not],
                ['ADVP', ['RB', even]],
                ['VB', picture],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(2000040000213, tree_to_toks, ['I', just, can, not, even, picture, that, '.']).
pllm:training(2000050000214,
              string,
              "Yeah, I guess the idea got dumped because they didn't think he'd be scary enough.").
pllm:training(2000050000214,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', guess],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['DT', the], ['NN', idea]],
                      [ 'VP',
                        ['VBD', got],
                        [ 'VP',
                          ['VBN', dumped],
                          [ 'SBAR',
                            ['IN', because],
                            [ 'S',
                              ['NP', ['PRP', they]],
                              [ 'VP',
                                ['AUX', did],
                                ['RB', 'n\'t'],
                                [ 'VP',
                                  ['VB', think],
                                  [ 'SBAR',
                                    [ 'S',
                                      ['NP', ['PRP', he]],
                                      [ 'VP',
                                        ['MD', '\'d'],
                                        [ 'VP',
                                          ['AUX', be],
                                          ['ADJP', ['JJ', scary]],
                                          ['ADVP', ['RB', enough]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2000050000214,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', idea]],
                ['VBD', got],
                ['VBN', dumped],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', did],
                ['RB', 'n\'t'],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['MD', '\'d'],
                ['AUX', be],
                ['ADJP', ['JJ', scary]],
                ['ADVP', ['RB', enough]],
                ['.', '.']
              ]).
pllm:training(2000050000214,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                guess,
                'the-idea',
                got,
                dumped,
                because,
                they,
                did,
                'n\'t',
                think,
                he,
                '\'d',
                be,
                scary,
                enough,
                ('.')
              ]).
pllm:training(2000060000215,
              string,
              "Jabba is pretty ugly looking with his pasty skin and what not.").
pllm:training(2000060000215,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Jabba']],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADJP', ['RB', pretty], ['JJ', ugly]],
                    [ 'S',
                      [ 'VP',
                        [ 'VP',
                          ['VBG', looking],
                          ['PP', ['IN', with], ['NP', ['PRP$', his], ['JJ', pasty], ['NN', skin]]]
                        ],
                        ['CC', and],
                        ['NP', ['WP', what], ['RB', not]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000060000215,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Jabba']],
                ['VBZ', is],
                ['ADJP', ['RB', pretty], ['JJ', ugly]],
                mark('S'),
                ['VBG', looking],
                ['IN', with],
                ['NP', ['PRP$', his], ['JJ', pasty], ['NN', skin]],
                ['CC', and],
                ['NP', ['WP', what], ['RB', not]],
                ['.', '.']
              ]).
pllm:training(2000060000215,
              tree_to_toks,
              [ 'Jabba',
                (is),
                pretty,
                ugly,
                looking,
                with,
                'his-pasty-skin',
                and,
                'what-not',
                ('.')
              ]).
pllm:training(2000070000216,
              string,
              "If he was furry, you'd just want to pet him, not hurt him.").
pllm:training(2000070000216,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'If'],
                    ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', furry]]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', '\'d'],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VB', want],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VP', ['VB', pet], ['NP', ['PRP', him]]],
                            [',', ','],
                            ['RB', not],
                            ['VP', ['VB', hurt], ['NP', ['PRP', him]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000070000216,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', furry]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['ADVP', ['RB', just]],
                ['VB', want],
                mark('S'),
                ['TO', to],
                ['VB', pet],
                ['NP', ['PRP', him]],
                [',', ','],
                ['RB', not],
                ['VB', hurt],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(2000070000216,
              tree_to_toks,
              ['If', he, was, furry, ',', you, '\'d', just, want, to, pet, him, ',', not, hurt, him, '.']).
pllm:training(2000080000217,
              string,
              "That would have been an odd dynamic for the series.").
pllm:training(2000080000217,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      [ 'VP',
                        ['VBN', been],
                        [ 'NP',
                          ['NP', ['DT', an], ['JJ', odd], ['NN', dynamic]],
                          ['PP', ['IN', for], ['NP', ['DT', the], ['NN', series]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000080000217,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', have],
                ['VBN', been],
                ['NP', ['DT', an], ['JJ', odd], ['NN', dynamic]],
                ['IN', for],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(2000080000217,
              tree_to_toks,
              ['That', would, have, been, 'an-odd-dynamic', for, 'the-series', '.']).
pllm:training(2000090000218, string, "I'm glad George Lucas came to his senses.").
pllm:training(2000090000218,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    [ 'ADJP',
                      ['JJ', glad],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBD', came],
                            ['PP', ['IN', to], ['NP', ['PRP$', his], ['NNS', senses]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000090000218,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', came],
                ['IN', to],
                ['NP', ['PRP$', his], ['NNS', senses]],
                ['.', '.']
              ]).
pllm:training(2000090000218,
              tree_to_toks,
              ['I', '\'m', 'ADJP', glad, 'George-Lucas', came, to, 'his-senses', '.']).
pllm:training(2000100000219, string, "At least he did about something!").
pllm:training(2000100000219,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['IN', 'At'], ['JJS', least]],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBD', did], ['PP', ['IN', about], ['NP', ['NN', something]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2000100000219,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['IN', 'At'], ['JJS', least]],
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['IN', about],
                ['NP', ['NN', something]],
                ['.', '.']
              ]).
pllm:training(2000100000219, tree_to_toks, ['At', least, he, did, about, something, '.']).
pllm:training(2100010000221, string, "Have you ever seen Red Letter Media?").
pllm:training(2100010000221,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', ever]],
                  ['VP', ['VBN', seen], ['NP', ['NNP', 'Red'], ['NNP', 'Letter'], ['NNP', 'Media']]],
                  ['.', ?]
                ]
              ]).
pllm:training(2100010000221,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', ever]],
                ['VBN', seen],
                ['NP', ['NNP', 'Red'], ['NNP', 'Letter'], ['NNP', 'Media']],
                ['.', ?]
              ]).
pllm:training(2100010000221,
              tree_to_toks,
              ['Have', you, ever, seen, 'Red-Letter-Media', ?]).
pllm:training(2100020000222, string, "I don't know think so.. what's it about?").
pllm:training(2100020000222,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      ['VP', ['VB', know], ['S', ['VP', ['VB', think], ['ADVP', ['RB', so]]]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  ['CORENLP', ['FRAG', ['.', '.']]],
                  [ 'SBAR',
                    ['NP', ['WP', what]],
                    ['S', ['AUX', '\'s'], ['NP', ['PRP', it]], ['VP', ['ADVP', ['RB', about]]]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(2100020000222,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('S'),
                ['VB', think],
                ['ADVP', ['RB', so]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', about]],
                ['.', ?]
              ]).
pllm:training(2100020000222,
              tree_to_toks,
              ['I', do, not, know, think, so, '.', '.', what, '\'s', it, about, ?]).
pllm:training(2100030000223,
              string,
              "It's this guy who does reviews on Youtube.  One of the things he's most famous for it this several of his Star Wars movie reviews, including the Phantom Menace.").
pllm:training(2100030000223,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['NP', ['DT', this], ['NN', guy]],
                        [ 'SBAR',
                          ['NP', ['WP', who]],
                          [ 'S',
                            [ 'VP',
                              ['VBZ', does],
                              [ 'NP',
                                ['NP', ['NNS', reviews]],
                                ['PP', ['IN', on], ['NP', ['NNP', 'Youtube']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  [ 'NP',
                    ['NP', ['CD', 'One']],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNS', things]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', he]],
                            [ 'VP',
                              ['AUX', '\'s'],
                              [ 'ADJP',
                                ['RBS', most],
                                ['JJ', famous],
                                ['PP', ['IN', for], ['NP', ['PRP', it]]]
                              ],
                              [ 'ADVP',
                                ['DT', this],
                                ['JJ', several],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['PRP$', his],
                                    ['NNP', 'Star'],
                                    ['NNP', 'Wars'],
                                    ['NN', movie]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [ 'VP',
                    ['VBZ', reviews],
                    [',', ','],
                    [ 'PP',
                      ['VBG', including],
                      ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100030000223,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['NP', ['DT', this], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', does],
                ['NP', ['NNS', reviews]],
                ['IN', on],
                ['NP', ['NNP', 'Youtube']],
                ['.', '.'],
                mark('S'),
                ['NP', ['CD', 'One']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', things]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', '\'s'],
                'ADJP',
                ['RBS', most],
                ['JJ', famous],
                ['IN', for],
                ['NP', ['PRP', it]],
                'ADVP',
                ['DT', this],
                ['JJ', several],
                ['IN', of],
                ['NP', ['PRP$', his], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['VBZ', reviews],
                [',', ','],
                ['VBG', including],
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                ['.', '.']
              ]).
pllm:training(2100030000223,
              tree_to_toks,
              [ 'It',
                '\'s',
                'this-guy',
                who,
                does,
                reviews,
                on,
                'Youtube',
                ('.'),
                'One',
                of,
                'the-things',
                he,
                '\'s',
                'ADJP',
                most,
                famous,
                for,
                it,
                'ADVP',
                this,
                several,
                of,
                'his-Star-Wars-movie',
                reviews,
                (','),
                including,
                'the-Phantom-Menace',
                ('.')
              ]).
pllm:training(2100040000224, string, "No, I haven't.").
pllm:training(2100040000224,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', 'n\'t']],
                  ['.', '.']
                ]
              ]).
pllm:training(2100040000224,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', 'n\'t'],
                ['.', '.']
              ]).
pllm:training(2100040000224, tree_to_toks, ['No', ',', 'I', have, 'n\'t', '.']).
pllm:training(2100050000225,
              string,
              "Oh, man, it is HILARIOUS!  I mean, he doesn't just nitpick things, but he offers a lot of really wise insight while pretending to be this deranged old guy.").
pllm:training(2100050000225,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['INTJ', ['UH', man]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', is], ['ADJP', ['JJ', 'HILARIOUS']]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                    [ 'PRN',
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBZ', does],
                          ['RB', not],
                          ['ADVP', ['RB', just]],
                          ['VP', ['VB', nitpick], ['NP', ['NNS', things]]]
                        ]
                      ],
                      [',', ',']
                    ],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      [ 'VP',
                        ['VBZ', offers],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', lot]],
                          [ 'PP',
                            ['IN', of],
                            ['NP', ['ADJP', ['RB', really], ['JJ', wise]], ['NN', insight]]
                          ]
                        ],
                        [ 'PP',
                          ['IN', while],
                          [ 'S',
                            [ 'VP',
                              ['VBG', pretending],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', be],
                                    [ 'NP',
                                      ['DT', this],
                                      ['ADJP', ['VBN', deranged], ['JJ', old]],
                                      ['NN', guy]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100050000225,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', 'HILARIOUS']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['ADVP', ['RB', just]],
                ['VB', nitpick],
                ['NP', ['NNS', things]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', offers],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['ADJP', ['RB', really], ['JJ', wise]], ['NN', insight]],
                ['IN', while],
                mark('S'),
                ['VBG', pretending],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', this], ['ADJP', ['VBN', deranged], ['JJ', old]], ['NN', guy]],
                ['.', '.']
              ]).
pllm:training(2100050000225,
              tree_to_toks,
              [ 'Oh',
                (','),
                man,
                (','),
                it,
                (is),
                'HILARIOUS',
                ('.'),
                'I',
                mean,
                'PRN',
                (','),
                he,
                does,
                not,
                just,
                nitpick,
                things,
                (','),
                but,
                he,
                offers,
                'a-lot',
                of,
                'really-wise-insight',
                while,
                pretending,
                to,
                be,
                'this-deranged-old-guy',
                ('.')
              ]).
pllm:training(2100060000226, string, "Oh, man, it's sounds pretty funny.").
pllm:training(2100060000226,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh']],
                  [',', ','],
                  ['INTJ', ['UH', man]],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['VP', ['VBZ', sounds], ['ADJP', ['RB', pretty], ['JJ', funny]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100060000226,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['VBZ', sounds],
                ['ADJP', ['RB', pretty], ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(2100060000226,
              tree_to_toks,
              ['Oh', ',', man, ',', it, '\'s', sounds, pretty, funny, '.']).
pllm:training(2100070000227,
              string,
              "It is.  You'll have to look it up.  I mean, he points out things like, there's no real protagonist in the movie.").
pllm:training(2100070000227,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', is]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'You']],
                      [ 'VP',
                        ['MD', '\'ll'],
                        [ 'VP',
                          ['VB', have],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', look], ['NP', ['PRP', it]], ['PRT', ['RP', up]]]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', mean],
                      [ 'PRN',
                        [',', ','],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', points],
                            ['PRT', ['RP', out]],
                            ['SBAR', ['S', ['NP', ['NNS', things]], ['VP', ['VB', like]]]]
                          ]
                        ],
                        [',', ',']
                      ],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['AUX', '\'s'],
                            [ 'NP',
                              ['NP', ['DT', no], ['JJ', real], ['NN', protagonist]],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NN', movie]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100070000227,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['MD', '\'ll'],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', look],
                ['NP', ['PRP', it]],
                ['PRT', ['RP', up]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', points],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', things]],
                ['VB', like],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['AUX', '\'s'],
                ['NP', ['DT', no], ['JJ', real], ['NN', protagonist]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(2100070000227,
              tree_to_toks,
              [ 'It',
                (is),
                ('.'),
                'You',
                '\'ll',
                have,
                to,
                look,
                it,
                up,
                ('.'),
                'I',
                mean,
                'PRN',
                (','),
                he,
                points,
                out,
                things,
                like,
                (','),
                there,
                '\'s',
                'no-real-protagonist',
                in,
                'the-movie',
                ('.')
              ]).
pllm:training(2100080000228, string, "Uh.. isn't that Anakin?").
pllm:training(2100080000228,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Uh'], ['.', '.']]],
                [ 'SEQBAR',
                  ['CORENLP', ['FRAG', ['.', '.']]],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'VP',
                        ['VBZ', is],
                        ['RB', not],
                        ['SBAR', ['IN', that], ['FRAG', ['NP', ['NNP', 'Anakin']]]]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(2100080000228,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Uh'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VBZ', is],
                ['RB', not],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NNP', 'Anakin']],
                ['.', ?]
              ]).
pllm:training(2100080000228, tree_to_toks, ['Uh', '.', '.', is, not, that, 'Anakin', ?]).
pllm:training(2100090000229,
              string,
              "No, not really.  I mean, he doesn't show up until about the middle of the film, and pretty much affects the story only by accident.").
pllm:training(2100090000229,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['ADVP', ['RB', not], ['RB', really]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      [ 'VP',
                        ['VBZ', does],
                        ['RB', not],
                        [ 'VP',
                          ['VB', show],
                          ['PRT', ['RP', up]],
                          [ 'PP',
                            ['IN', until],
                            [ 'PP',
                              ['IN', about],
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', middle]],
                                ['PP', ['IN', of], ['NP', ['DT', the], ['NN', film]]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [',', ','],
                      ['CC', and],
                      ['ADVP', ['RB', pretty], ['RB', much]],
                      [ 'VP',
                        ['VBZ', affects],
                        ['NP', ['DT', the], ['NN', story]],
                        ['ADVP', ['RB', only]],
                        ['PP', ['IN', by], ['NP', ['NN', accident]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100090000229,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['ADVP', ['RB', not], ['RB', really]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['VB', show],
                ['PRT', ['RP', up]],
                ['IN', until],
                ['IN', about],
                ['NP', ['DT', the], ['NN', middle]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', film]],
                [',', ','],
                ['CC', and],
                ['ADVP', ['RB', pretty], ['RB', much]],
                ['VBZ', affects],
                ['NP', ['DT', the], ['NN', story]],
                ['ADVP', ['RB', only]],
                ['IN', by],
                ['NP', ['NN', accident]],
                ['.', '.']
              ]).
pllm:training(2100090000229,
              tree_to_toks,
              [ 'No',
                (','),
                not,
                really,
                ('.'),
                'I',
                mean,
                (','),
                he,
                does,
                not,
                show,
                up,
                until,
                about,
                'the-middle',
                of,
                'the-film',
                (','),
                and,
                pretty,
                much,
                affects,
                'the-story',
                only,
                by,
                accident,
                ('.')
              ]).
pllm:training(2100100000230,
              string,
              "Oh, yeah, I remember that.  He just hits a few buttons and the ship takes off on it's own.").
pllm:training(2100100000230,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], [',', ','], ['UH', yeah]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', remember], ['NP', ['DT', that]]],
                  ['.', '.']
                ],
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBZ', hits], ['NP', ['DT', a], ['JJ', few], ['NNS', buttons]]]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['DT', the], ['NN', ship]],
                    [ 'VP',
                      ['VBZ', takes],
                      ['PRT', ['RP', off]],
                      [ 'SBAR',
                        ['IN', on],
                        ['S', ['NP', ['PRP', it]], ['VP', ['AUX', '\'s'], ['VP', ['VB', own]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100100000230,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], [',', ','], ['UH', yeah]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', just]],
                ['VBZ', hits],
                ['NP', ['DT', a], ['JJ', few], ['NNS', buttons]],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', the], ['NN', ship]],
                ['VBZ', takes],
                ['PRT', ['RP', off]],
                mark('SBAR'),
                ['IN', on],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['VB', own],
                ['.', '.']
              ]).
pllm:training(2100100000230,
              tree_to_toks,
              [ 'Oh',
                (','),
                yeah,
                (','),
                'I',
                remember,
                that,
                ('.'),
                'He',
                just,
                hits,
                'a-few-buttons',
                and,
                'the-ship',
                takes,
                off,
                on,
                it,
                '\'s',
                own,
                ('.')
              ]).
pllm:training(2200010000232, string, "Do you like Star Wars?").
pllm:training(2200010000232,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(2200010000232,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(2200010000232, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(2200020000233,
              string,
              "Of course, but I like the old ones the best.").
pllm:training(2200020000233,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course]]],
                [',', ','],
                ['CC', but],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    ['NP', ['DT', the], ['JJ', old], ['NNS', ones]],
                    ['NP', ['DT', the], ['JJS', best]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2200020000233,
              unphrasify,
              [ mark('S'),
                ['IN', 'Of'],
                ['NP', ['NN', course]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', old], ['NNS', ones]],
                ['NP', ['DT', the], ['JJS', best]],
                ['.', '.']
              ]).
pllm:training(2200020000233,
              tree_to_toks,
              ['Of', course, ',', but, 'I', like, 'the-old-ones', 'the-best', '.']).
pllm:training(2200030000234,
              string,
              "The old movies made or the oldest storyline?").
pllm:training(2200030000234,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', old], ['NNS', movies]],
                  [ 'VP',
                    ['VP', ['VBN', made]],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJS', oldest], ['NN', storyline]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2200030000234,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', old], ['NNS', movies]],
                ['VBN', made],
                ['CC', or],
                ['NP', ['DT', the], ['JJS', oldest], ['NN', storyline]],
                ['.', ?]
              ]).
pllm:training(2200030000234,
              tree_to_toks,
              ['The-old-movies', made, or, 'the-oldest-storyline', ?]).
pllm:training(2200040000235,
              string,
              "The older movies. The ones with Harrison Ford and Leia.").
pllm:training(2200040000235,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NP', ['DT', 'The'], ['JJR', older], ['NNS', movies]], ['.', '.']],
                [ 'CORENLP',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['NNS', ones]],
                    [ 'PP',
                      ['IN', with],
                      ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['CC', and], ['NNP', 'Leia']]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200040000235,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['DT', 'The'], ['JJR', older], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                ['NP', ['DT', 'The'], ['NNS', ones]],
                ['IN', with],
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['CC', and], ['NNP', 'Leia']],
                ['.', '.']
              ]).
pllm:training(2200040000235,
              tree_to_toks,
              ['The-older-movies', '.', 'The-ones', with, 'Harrison-Ford-and-Leia', '.']).
pllm:training(2200050000236,
              string,
              "Yea. I would have to agree. Although, the ones coming out now are doing pretty good in the box office.").
pllm:training(2200050000236,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Yea'], ['.', '.']],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', would],
                        ['VP', ['VB', have], ['S', ['VP', ['TO', to], ['VP', ['VB', agree]]]]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['ADVP', ['IN', 'Although']],
                    [',', ','],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', ones]],
                      ['VP', ['VBG', coming], ['PRT', ['RP', out]], ['ADVP', ['RB', now]]]
                    ],
                    [ 'VP',
                      ['AUX', are],
                      [ 'VP',
                        ['VBG', doing],
                        ['ADJP', ['RB', pretty], ['JJ', good]],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['NN', box], ['NN', office]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200050000236,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Yea'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', agree],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['IN', 'Although']],
                [',', ','],
                ['NP', ['DT', the], ['NNS', ones]],
                ['VBG', coming],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', now]],
                ['AUX', are],
                ['VBG', doing],
                ['ADJP', ['RB', pretty], ['JJ', good]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', box], ['NN', office]],
                ['.', '.']
              ]).
pllm:training(2200050000236,
              tree_to_toks,
              [ 'Yea-.',
                'I',
                would,
                have,
                to,
                agree,
                ('.'),
                'Although',
                (','),
                'the-ones',
                coming,
                out,
                now,
                are,
                doing,
                pretty,
                good,
                in,
                'the-box-office',
                ('.')
              ]).
pllm:training(2200060000237,
              string,
              "Agreed. But George Lucas made his name off of those old movies.").
pllm:training(2200060000237,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['VP', ['VBN', 'Agreed']], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                    [ 'VP',
                      ['VBD', made],
                      ['NP', ['PRP$', his], ['NN', name]],
                      ['PRT', ['IN', off]],
                      ['PP', ['IN', of], ['NP', ['DT', those], ['JJ', old], ['NNS', movies]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200060000237,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VBN', 'Agreed'],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', made],
                ['NP', ['PRP$', his], ['NN', name]],
                ['PRT', ['IN', off]],
                ['IN', of],
                ['NP', ['DT', those], ['JJ', old], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2200060000237,
              tree_to_toks,
              [ 'Agreed',
                ('.'),
                'But',
                'George-Lucas',
                made,
                'his-name',
                off,
                of,
                'those-old-movies',
                ('.')
              ]).
pllm:training(2200070000238,
              string,
              "That's true. They kind of messed up on those middle movies with Jar Jar Binks and the likes.").
pllm:training(2200070000238,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['ADVP', ['RB', kind], ['RB', of]],
                    [ 'VP',
                      ['VBN', messed],
                      ['PRT', ['RP', up]],
                      [ 'PP',
                        ['IN', on],
                        [ 'NP',
                          ['NP', ['DT', those], ['JJ', middle], ['NNS', movies]],
                          [ 'PP',
                            ['IN', with],
                            [ 'NP',
                              ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                              ['CC', and],
                              ['NP', ['DT', the], ['NNS', likes]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200070000238,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VBN', messed],
                ['PRT', ['RP', up]],
                ['IN', on],
                ['NP', ['DT', those], ['JJ', middle], ['NNS', movies]],
                ['IN', with],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['CC', and],
                ['NP', ['DT', the], ['NNS', likes]],
                ['.', '.']
              ]).
pllm:training(2200070000238,
              tree_to_toks,
              [ 'That',
                '\'s',
                true,
                ('.'),
                'They',
                kind,
                of,
                messed,
                up,
                on,
                'those-middle-movies',
                with,
                'Jar-Jar-Binks',
                and,
                'the-likes',
                ('.')
              ]).
pllm:training(2200080000239,
              string,
              "Exactly. I am glad they are back to their winning ways.").
pllm:training(2200080000239,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      [ 'ADJP',
                        ['JJ', glad],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VB', are],
                              ['ADVP', ['RB', back]],
                              [ 'PP',
                                ['IN', to],
                                ['NP', ['PRP$', their], ['VBG', winning], ['NNS', ways]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200080000239,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['ADVP', ['RB', back]],
                ['IN', to],
                ['NP', ['PRP$', their], ['VBG', winning], ['NNS', ways]],
                ['.', '.']
              ]).
pllm:training(2200080000239,
              tree_to_toks,
              ['Exactly', '.', 'I', am, 'ADJP', glad, they, are, back, to, 'their-winning-ways', '.']).
pllm:training(2200090000240,
              string,
              "Me too. So many people love Star Wars. It is nice to see them do good movies.").
pllm:training(2200090000240,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      ['NP', ['JJ', many], ['NNS', people]],
                      ['VP', ['VB', love], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'ADJP',
                          ['JJ', nice],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              [ 'VP',
                                ['VB', see],
                                [ 'S',
                                  ['NP', ['PRP', them]],
                                  ['VP', ['VB', do], ['NP', ['JJ', good], ['NNS', movies]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2200090000240,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['JJ', many], ['NNS', people]],
                ['VB', love],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                'ADJP',
                ['JJ', nice],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('S'),
                ['NP', ['PRP', them]],
                ['VB', do],
                ['NP', ['JJ', good], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2200090000240,
              tree_to_toks,
              [ 'Me',
                too,
                ('.'),
                'So',
                'many-people',
                love,
                'Star-Wars',
                ('.'),
                'It',
                (is),
                'ADJP',
                nice,
                to,
                see,
                them,
                do,
                'good-movies',
                ('.')
              ]).
pllm:training(2200100000241, string, "Yep. And they make more money too.").
pllm:training(2200100000241,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Yep'], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['NP', ['PRP', they]],
                    ['VP', ['VB', make], ['NP', ['JJR', more], ['NN', money]], ['ADVP', ['RB', too]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200100000241,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Yep'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', they]],
                ['VB', make],
                ['NP', ['JJR', more], ['NN', money]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(2200100000241,
              tree_to_toks,
              ['Yep-.', 'And', they, make, 'more-money', too, '.']).
pllm:training(2300010000243,
              string,
              "I just came back from Seeing The Force Awakens. I don't understand why people think that Rey is a Mary Sue.").
pllm:training(2300010000243,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VBD', came],
                      ['ADVP', ['RB', back]],
                      [ 'PP',
                        ['IN', from],
                        [ 'S',
                          [ 'VP',
                            ['VBG', 'Seeing'],
                            ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', understand],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', why]],
                        [ 'S',
                          ['NP', ['NNS', people]],
                          [ 'VP',
                            ['VB', think],
                            [ 'SBAR',
                              ['IN', that],
                              [ 'S',
                                ['NP', ['NNP', 'Rey']],
                                ['VP', ['AUX', is], ['NP', ['DT', a], ['NNP', 'Mary'], ['VB', 'Sue']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300010000243,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', came],
                ['ADVP', ['RB', back]],
                ['IN', from],
                mark('S'),
                ['VBG', 'Seeing'],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['VB', understand],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', think],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['AUX', is],
                ['NP', ['DT', a], ['NNP', 'Mary'], ['VB', 'Sue']],
                ['.', '.']
              ]).
pllm:training(2300010000243,
              tree_to_toks,
              [ 'I',
                just,
                came,
                back,
                from,
                'Seeing',
                'The-Force-Awakens',
                ('.'),
                'I',
                do,
                not,
                understand,
                why,
                people,
                think,
                that,
                'Rey',
                (is),
                'a-Mary-Sue',
                ('.')
              ]).
pllm:training(2300020000244,
              string,
              "Because she can do everything so easily, without any training.").
pllm:training(2300020000244,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['IN', 'Because'],
                  [ 'S',
                    ['NP', ['PRP', she]],
                    [ 'VP',
                      ['MD', can],
                      [ 'VP',
                        ['AUX', do],
                        ['NP', ['NN', everything]],
                        ['ADVP', ['RB', so], ['RB', easily]],
                        [',', ','],
                        ['PP', ['IN', without], ['NP', ['DT', any], ['NN', training]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2300020000244,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['IN', 'Because'],
                mark('S'),
                ['NP', ['PRP', she]],
                ['MD', can],
                ['AUX', do],
                ['NP', ['NN', everything]],
                ['ADVP', ['RB', so], ['RB', easily]],
                [',', ','],
                ['IN', without],
                ['NP', ['DT', any], ['NN', training]],
                ['.', '.']
              ]).
pllm:training(2300020000244,
              tree_to_toks,
              [ 'Because',
                she,
                can,
                do,
                everything,
                so,
                easily,
                (','),
                without,
                'any-training',
                ('.')
              ]).
pllm:training(2300030000245,
              string,
              "Yes, she did everything so quickly and so easily, like she was following some sort of quick and easy path.").
pllm:training(2300030000245,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', she]],
                  [ 'VP',
                    ['VBD', did],
                    ['NP', ['NN', everything]],
                    [ 'ADVP',
                      ['ADVP', ['RB', so], ['RB', quickly]],
                      ['CC', and],
                      ['ADVP', ['RB', so], ['RB', easily]]
                    ],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', like],
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBD', was],
                          [ 'VP',
                            ['VBG', following],
                            [ 'NP',
                              ['NP', ['DT', some], ['NN', sort]],
                              [ 'PP',
                                ['IN', of],
                                [ 'NP',
                                  ['ADJP', ['JJ', quick], ['CC', and], ['JJ', easy]],
                                  ['NN', path]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300030000245,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', she]],
                ['VBD', did],
                ['NP', ['NN', everything]],
                [ 'ADVP',
                  ['ADVP', ['RB', so], ['RB', quickly]],
                  ['CC', and],
                  ['ADVP', ['RB', so], ['RB', easily]]
                ],
                [',', ','],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', was],
                ['VBG', following],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['ADJP', ['JJ', quick], ['CC', and], ['JJ', easy]], ['NN', path]],
                ['.', '.']
              ]).
pllm:training(2300030000245,
              tree_to_toks,
              [ 'Yes',
                (','),
                she,
                did,
                everything,
                so,
                quickly,
                and,
                so,
                easily,
                (','),
                like,
                she,
                was,
                following,
                'some-sort',
                of,
                'quick-and-easy-path',
                ('.')
              ]).
pllm:training(2300040000246, string, "You think she's going Dark Side?").
pllm:training(2300040000246,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['VP', ['VBG', going], ['NP', ['JJ', 'Dark'], ['NN', 'Side']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2300040000246,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['VBG', going],
                ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                ['.', ?]
              ]).
pllm:training(2300040000246, tree_to_toks, ['You', think, she, '\'s', going, 'Dark-Side', ?]).
pllm:training(2300050000247,
              string,
              "Just watch it.  She's a huge ball of anger, and she uses the Force when he's angry, it's classic Dark Side.").
pllm:training(2300050000247,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['ADVP', ['RB', 'Just']], ['VP', ['VB', watch], ['NP', ['PRP', it]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'She']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', huge], ['NN', ball]],
                          ['PP', ['IN', of], ['NP', ['NN', anger]]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', she]],
                      [ 'VP',
                        ['VBZ', uses],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', 'Force']],
                          [ 'SBAR',
                            [ 'S',
                              [ 'SBAR',
                                ['WHADVP', ['WRB', when]],
                                [ 'S',
                                  ['NP', ['PRP', he]],
                                  ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', angry]]]
                                ]
                              ],
                              [',', ','],
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['VBZ', '\'s'],
                                ['NP', ['JJ', classic], ['JJ', 'Dark'], ['NN', 'Side']]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2300050000247,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Just']],
                ['VB', watch],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', huge], ['NN', ball]],
                ['IN', of],
                ['NP', ['NN', anger]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', uses],
                ['NP', ['DT', the], ['NN', 'Force']],
                mark('SBAR'),
                mark('S'),
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', angry]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['JJ', classic], ['JJ', 'Dark'], ['NN', 'Side']],
                ['.', '.']
              ]).
pllm:training(2300050000247,
              tree_to_toks,
              [ 'Just',
                watch,
                it,
                ('.'),
                'She',
                '\'s',
                'a-huge-ball',
                of,
                anger,
                (','),
                and,
                she,
                uses,
                'the-Force',
                when,
                he,
                '\'s',
                angry,
                (','),
                it,
                '\'s',
                'classic-Dark-Side',
                ('.')
              ]).
pllm:training(2300060000248, string, "I don't think that's the intent.").
pllm:training(2300060000248,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          ['VP', ['VBZ', '\'s'], ['NP', ['DT', the], ['NN', intent]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300060000248,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['NN', intent]],
                ['.', '.']
              ]).
pllm:training(2300060000248,
              tree_to_toks,
              ['I', do, not, think, that, '\'s', 'the-intent', '.']).
pllm:training(2300070000249,
              string,
              "Maybe it wasn't, but the signs are there.  She doesn't start beating Kylo until she's angry. That's Dark Side right there.").
pllm:training(2300070000249,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'Maybe']],
                      ['NP', ['PRP', it]],
                      ['VP', ['VBD', was], ['RB', 'n\'t']]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['DT', the], ['NNS', signs]],
                      ['VP', ['VB', are], ['ADVP', ['RB', there]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'She']],
                      [ 'VP',
                        ['VBZ', does],
                        ['RB', not],
                        [ 'VP',
                          ['VB', start],
                          ['S', ['VP', ['VBG', beating], ['NP', ['NNP', 'Kylo']]]],
                          [ 'SBAR',
                            ['IN', until],
                            ['S', ['NP', ['PRP', she]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', angry]]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['DT', 'That']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                        ['ADVP', ['RB', right], ['RB', there]]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2300070000249,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['RB', 'n\'t'],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['DT', the], ['NNS', signs]],
                ['VB', are],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', does],
                ['RB', not],
                ['VB', start],
                mark('S'),
                ['VBG', beating],
                ['NP', ['NNP', 'Kylo']],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', angry]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                ['ADVP', ['RB', right], ['RB', there]],
                ['.', '.']
              ]).
pllm:training(2300070000249,
              tree_to_toks,
              [ 'Maybe',
                it,
                was,
                'n\'t',
                (','),
                but,
                'the-signs',
                are,
                there,
                ('.'),
                'She',
                does,
                not,
                start,
                beating,
                'Kylo',
                until,
                she,
                '\'s',
                angry,
                ('.'),
                'That',
                '\'s',
                'Dark-Side',
                right,
                there,
                ('.')
              ]).
pllm:training(2300080000250,
              string,
              "That's a good point.  Rey is flirting with the Dark Side.  I don't think the guys at Disney are that subtle, either.").
pllm:training(2300080000250,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['NNP', 'Rey']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'VP',
                          ['VBG', flirting],
                          ['PP', ['IN', with], ['NP', ['DT', the], ['NNP', 'Dark'], ['NN', 'Side']]]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', do],
                        ['RB', not],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              [ 'NP',
                                ['NP', ['DT', the], ['NNS', guys]],
                                ['PP', ['IN', at], ['NP', ['NNP', 'Disney']]]
                              ],
                              [ 'VP',
                                ['VB', are],
                                ['ADVP', ['IN', that]],
                                ['ADJP', ['JJ', subtle]],
                                [',', ','],
                                ['ADVP', ['RB', either]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2300080000250,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['VBZ', is],
                ['VBG', flirting],
                ['IN', with],
                ['NP', ['DT', the], ['NNP', 'Dark'], ['NN', 'Side']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NNS', guys]],
                ['IN', at],
                ['NP', ['NNP', 'Disney']],
                ['VB', are],
                ['ADVP', ['IN', that]],
                ['ADJP', ['JJ', subtle]],
                [',', ','],
                ['ADVP', ['RB', either]],
                ['.', '.']
              ]).
pllm:training(2300080000250,
              tree_to_toks,
              [ 'That',
                '\'s',
                'a-good-point',
                ('.'),
                'Rey',
                (is),
                flirting,
                with,
                'the-Dark-Side',
                ('.'),
                'I',
                do,
                not,
                think,
                'the-guys',
                at,
                'Disney',
                are,
                that,
                subtle,
                (','),
                either,
                ('.')
              ]).
pllm:training(2300090000251,
              string,
              "True. It's possible that they completely missed the point.  I wouldn't put that past them. But that's why we have death of the author.").
pllm:training(2300090000251,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['JJ', 'True'], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['JJ', possible]],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['ADVP', ['RB', completely]],
                            ['VP', ['VBD', missed], ['NP', ['DT', the], ['NN', point]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'SEQBAR',
                    [ 'CORENLP',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['MD', would],
                          ['RB', 'n\'t'],
                          [ 'VP',
                            ['VB', put],
                            ['NP', ['DT', that]],
                            ['PP', ['IN', past], ['NP', ['PRP', them]]]
                          ]
                        ],
                        ['.', '.']
                      ]
                    ],
                    [ 'CORENLP',
                      [ 'S',
                        ['CC', 'But'],
                        ['NP', ['DT', that]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', why]],
                            [ 'S',
                              ['NP', ['PRP', we]],
                              [ 'VP',
                                ['VB', have],
                                [ 'NP',
                                  ['NP', ['NN', death]],
                                  ['PP', ['IN', of], ['NP', ['DT', the], ['NN', author]]]
                                ]
                              ]
                            ]
                          ]
                        ],
                        ['.', '.']
                      ]
                    ]
                  ]
                ]
              ]).
pllm:training(2300090000251,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['JJ', 'True'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', possible]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', completely]],
                ['VBD', missed],
                ['NP', ['DT', the], ['NN', point]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['RB', 'n\'t'],
                ['VB', put],
                ['NP', ['DT', that]],
                ['IN', past],
                ['NP', ['PRP', them]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', have],
                ['NP', ['NN', death]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', author]],
                ['.', '.']
              ]).
pllm:training(2300090000251,
              tree_to_toks,
              [ 'True',
                ('.'),
                'It',
                '\'s',
                possible,
                that,
                they,
                completely,
                missed,
                'the-point',
                ('.'),
                'I',
                would,
                'n\'t',
                put,
                that,
                past,
                them,
                ('.'),
                'But',
                that,
                '\'s',
                why,
                we,
                have,
                death,
                of,
                'the-author',
                ('.')
              ]).
pllm:training(2300100000252,
              string,
              "I bet the next movie completely fails to confirm your idea.").
pllm:training(2300100000252,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', bet],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                        ['ADVP', ['RB', completely]],
                        [ 'VP',
                          ['VBZ', fails],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', confirm], ['NP', ['PRP$', your], ['NN', idea]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300100000252,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', bet],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                ['ADVP', ['RB', completely]],
                ['VBZ', fails],
                mark('S'),
                ['TO', to],
                ['VB', confirm],
                ['NP', ['PRP$', your], ['NN', idea]],
                ['.', '.']
              ]).
pllm:training(2300100000252,
              tree_to_toks,
              ['I', bet, 'the-next-movie', completely, fails, to, confirm, 'your-idea', '.']).
pllm:training(2400010000254,
              string,
              "I heard they got a new director for Episode VIII.").
pllm:training(2400010000254,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', heard],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', got],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', new], ['NN', director]],
                          ['PP', ['IN', for], ['NP', ['NN', 'Episode'], ['NNS', 'VIII']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2400010000254,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', got],
                ['NP', ['DT', a], ['JJ', new], ['NN', director]],
                ['IN', for],
                ['NP', ['NN', 'Episode'], ['NNS', 'VIII']],
                ['.', '.']
              ]).
pllm:training(2400010000254,
              tree_to_toks,
              ['I', heard, they, got, 'a-new-director', for, 'Episode-VIII', '.']).
pllm:training(2400020000255, string, "Really?").
pllm:training(2400020000255, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(2400020000255, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(2400020000255, tree_to_toks, ['Really', ?]).
pllm:training(2400030000256, string, "Yup.").
pllm:training(2400030000256, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Yup'], ['.', '.']]]).
pllm:training(2400030000256, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Yup'], ['.', '.']]]).
pllm:training(2400030000256, tree_to_toks, ['Yup', '.']).
pllm:training(2400040000257, string, "But Abrams did such a great job.").
pllm:training(2400040000257,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['NNP', 'Abrams']],
                  ['VP', ['VBD', did], ['NP', ['PDT', such], ['DT', a], ['JJ', great], ['NN', job]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2400040000257,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'Abrams']],
                ['VBD', did],
                ['NP', ['PDT', such], ['DT', a], ['JJ', great], ['NN', job]],
                ['.', '.']
              ]).
pllm:training(2400040000257, tree_to_toks, ['But', 'Abrams', did, 'such-a-great-job', '.']).
pllm:training(2400050000258, string, "He usually does.").
pllm:training(2400050000258,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['ADVP', ['RB', usually]], ['VP', ['VBZ', does]], ['.', '.']]
              ]).
pllm:training(2400050000258,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', usually]],
                ['VBZ', does],
                ['.', '.']
              ]).
pllm:training(2400050000258, tree_to_toks, ['He', usually, does, '.']).
pllm:training(2400060000259, string, "Guess they just wanted to change it up.").
pllm:training(2400060000259,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Guess'],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        ['ADVP', ['RB', just]],
                        [ 'VP',
                          ['VBD', wanted],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', change], ['NP', ['PRP', it]], ['PRT', ['RP', up]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400060000259,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Guess'],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', just]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', change],
                ['NP', ['PRP', it]],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(2400060000259,
              tree_to_toks,
              ['Guess', they, just, wanted, to, change, it, up, '.']).
pllm:training(2400070000260, string, "I guess. I hope it's as good as the first.").
pllm:training(2400070000260,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', guess]], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', hope],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['AUX', '\'s'],
                          [ 'ADJP',
                            ['ADJP', ['RB', as], ['JJ', good]],
                            ['PP', ['IN', as], ['NP', ['DT', the], ['JJ', first]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400070000260,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hope],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                'ADJP',
                ['ADJP', ['RB', as], ['JJ', good]],
                ['IN', as],
                ['NP', ['DT', the], ['JJ', first]],
                ['.', '.']
              ]).
pllm:training(2400070000260,
              tree_to_toks,
              ['I', guess, '.', 'I', hope, it, '\'s', 'ADJP', as, good, as, 'the-first', '.']).
pllm:training(2400080000261, string, "We'll find out soon.").
pllm:training(2400080000261,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'We']],
                  ['VP', ['MD', '\'ll'], ['VP', ['VB', find], ['PRT', ['RP', out]], ['ADVP', ['RB', soon]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2400080000261,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'We']],
                ['MD', '\'ll'],
                ['VB', find],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', soon]],
                ['.', '.']
              ]).
pllm:training(2400080000261, tree_to_toks, ['We', '\'ll', find, out, soon, '.']).
pllm:training(2400090000262,
              string,
              "He didn't direct the last Star Trek either.").
pllm:training(2400090000262,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    [ 'VP',
                      ['VB', direct],
                      ['NP', ['DT', the], ['JJ', last], ['NNP', 'Star'], ['NNP', 'Trek']],
                      ['ADVP', ['RB', either]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400090000262,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', direct],
                ['NP', ['DT', the], ['JJ', last], ['NNP', 'Star'], ['NNP', 'Trek']],
                ['ADVP', ['RB', either]],
                ['.', '.']
              ]).
pllm:training(2400090000262,
              tree_to_toks,
              ['He', did, 'n\'t', direct, 'the-last-Star-Trek', either, '.']).
pllm:training(2400100000263, string, "What is up with these studios?!").
pllm:training(2400100000263,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    [ 'VP',
                      ['AUX', is],
                      ['PRT', ['RP', up]],
                      ['PP', ['IN', with], ['NP', ['DT', these], ['NNS', studios]]]
                    ]
                  ],
                  ['.', ?]
                ],
                ['CORENLP', ['FRAG', ['.', '.']]]
              ]).
pllm:training(2400100000263,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['DT', these], ['NNS', studios]],
                ['.', ?],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(2400100000263,
              tree_to_toks,
              ['What', is, up, with, 'these-studios', ?, 'FRAG', '.']).
pllm:training(2500010000265, string, "Did you like the new Star Wars movie?").
pllm:training(2500010000265,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]]
                ],
                ['.', ?]
              ]).
pllm:training(2500010000265,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(2500010000265,
              tree_to_toks,
              ['Did', you, like, 'the-new-Star-Wars-movie', ?]).
pllm:training(2500020000266, string, "I don't know, I have not seen it.").
pllm:training(2500020000266,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', know]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', not], ['VP', ['VBN', seen], ['NP', ['PRP', it]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2500020000266,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', not],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(2500020000266,
              tree_to_toks,
              ['I', do, not, know, ',', 'I', have, not, seen, it, '.']).
pllm:training(2500030000267,
              string,
              "Haven't seen it? It is like the most watched movie in forever. Why haven't you seen it?").
pllm:training(2500030000267,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['VP', ['VB', 'Have'], ['RB', 'n\'t'], ['VP', ['VBN', seen], ['NP', ['PRP', it]]]],
                    ['.', ?]
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'PP',
                          ['IN', like],
                          [ 'NP',
                            [ 'NP',
                              ['DT', the],
                              ['ADJP', ['RBS', most], ['VBN', watched]],
                              ['NN', movie]
                            ],
                            ['PP', ['IN', in], ['ADVP', ['RB', forever]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'SBAR',
                      ['WHADVP', ['WRB', 'Why']],
                      [ 'S',
                        ['VB', have],
                        ['RB', 'n\'t'],
                        ['NP', ['PRP', you]],
                        ['VP', ['VBN', seen], ['NP', ['PRP', it]]]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(2500030000267,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['RB', 'n\'t'],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                ['IN', like],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['VBN', watched]], ['NN', movie]],
                ['IN', in],
                ['ADVP', ['RB', forever]],
                ['.', '.'],
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', have],
                ['RB', 'n\'t'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(2500030000267,
              tree_to_toks,
              [ 'Have',
                'n\'t',
                seen,
                it,
                (?),
                'It',
                (is),
                like,
                'the-most-watched-movie',
                in,
                forever,
                ('.'),
                'Why',
                have,
                'n\'t',
                you,
                seen,
                it,
                (?)
              ]).
pllm:training(2500040000268,
              string,
              "I am not really interested in new movies. They always try to explain things that should be left to the imagination.").
pllm:training(2500040000268,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      ['RB', not],
                      [ 'ADJP',
                        ['RB', really],
                        ['JJ', interested],
                        ['PP', ['IN', in], ['NP', ['JJ', new], ['NNS', movies]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['ADVP', ['RB', always]],
                    [ 'VP',
                      ['VB', try],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', explain],
                            [ 'NP',
                              ['NP', ['NNS', things]],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  [ 'VP',
                                    ['MD', should],
                                    [ 'VP',
                                      ['VB', be],
                                      [ 'VP',
                                        ['VBN', left],
                                        [ 'PP',
                                          ['IN', to],
                                          ['NP', ['DT', the], ['NN', imagination]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2500040000268,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['RB', not],
                'ADJP',
                ['RB', really],
                ['JJ', interested],
                ['IN', in],
                ['NP', ['JJ', new], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['ADVP', ['RB', always]],
                ['VB', try],
                mark('S'),
                ['TO', to],
                ['VB', explain],
                ['NP', ['NNS', things]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', should],
                ['VB', be],
                ['VBN', left],
                ['IN', to],
                ['NP', ['DT', the], ['NN', imagination]],
                ['.', '.']
              ]).
pllm:training(2500040000268,
              tree_to_toks,
              [ 'I',
                am,
                not,
                'ADJP',
                really,
                interested,
                in,
                'new-movies',
                ('.'),
                'They',
                always,
                try,
                to,
                explain,
                things,
                that,
                should,
                be,
                left,
                to,
                'the-imagination',
                ('.')
              ]).
pllm:training(2500050000269, string, "I don't understand, can you explain?").
pllm:training(2500050000269,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', understand]]]],
                  [',', ','],
                  ['S', ['MD', can], ['NP', ['PRP', you]], ['VP', ['VB', explain]]],
                  ['.', ?]
                ]
              ]).
pllm:training(2500050000269,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', understand],
                [',', ','],
                mark('S'),
                ['MD', can],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['.', ?]
              ]).
pllm:training(2500050000269,
              tree_to_toks,
              ['I', do, not, understand, ',', can, you, explain, ?]).
pllm:training(2500060000270,
              string,
              "Well I think that the Phantom Menace was a waste of a movie since they used the whole build up of the movie over explained Darth Vader so it took away all imaginations for him.").
pllm:training(2500060000270,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Well']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    ['IN', that],
                    [ 'S',
                      ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                      [ 'VP',
                        ['AUX', was],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', waste]],
                          ['PP', ['IN', of], ['NP', ['DT', a], ['NN', movie]]]
                        ],
                        [ 'SBAR',
                          ['IN', since],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VBD', used],
                              [ 'S',
                                ['NP', ['DT', the], ['NN', whole]],
                                [ 'VP',
                                  ['VB', build],
                                  ['PRT', ['RP', up]],
                                  [ 'PP',
                                    ['IN', of],
                                    [ 'NP',
                                      ['NP', ['DT', the], ['NN', movie]],
                                      [ 'VP',
                                        ['ADVP', ['RB', over]],
                                        ['VBD', explained],
                                        ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                                        [ 'SBAR',
                                          ['IN', so],
                                          [ 'S',
                                            ['NP', ['PRP', it]],
                                            [ 'VP',
                                              ['VBD', took],
                                              ['PRT', ['RP', away]],
                                              [ 'NP',
                                                [ 'NP',
                                                  ['DT', all],
                                                  ['NNS', imaginations]
                                                ],
                                                ['PP', ['IN', for], ['NP', ['PRP', him]]]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500060000270,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Well']],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', waste]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', movie]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', used],
                mark('S'),
                ['NP', ['DT', the], ['NN', whole]],
                ['VB', build],
                ['PRT', ['RP', up]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['ADVP', ['RB', over]],
                ['VBD', explained],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                mark('SBAR'),
                ['IN', so],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', took],
                ['PRT', ['RP', away]],
                ['NP', ['DT', all], ['NNS', imaginations]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(2500060000270,
              tree_to_toks,
              [ 'Well',
                'I',
                think,
                that,
                'the-Phantom-Menace',
                was,
                'a-waste',
                of,
                'a-movie',
                since,
                they,
                used,
                'the-whole',
                build,
                up,
                of,
                'the-movie',
                over,
                explained,
                'Darth-Vader',
                so,
                it,
                took,
                away,
                'all-imaginations',
                for,
                him,
                ('.')
              ]).
pllm:training(2500070000271,
              string,
              "I liked the Phantom Menace, I thought it was a good story line.").
pllm:training(2500070000271,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', liked],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                    [',', ','],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', thought],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['AUX', was],
                                ['NP', ['DT', a], ['JJ', good], ['NN', story], ['NN', line]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500070000271,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['JJ', good], ['NN', story], ['NN', line]],
                ['.', '.']
              ]).
pllm:training(2500070000271,
              tree_to_toks,
              [ 'I',
                liked,
                'the-Phantom-Menace',
                (','),
                'I',
                thought,
                it,
                was,
                'a-good-story-line',
                ('.')
              ]).
pllm:training(2500080000272,
              string,
              "Story line yes but it changed the whole dynamic of the movies for me.").
pllm:training(2500080000272,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['NN', 'Story']], ['VP', ['VB', line], ['INTJ', ['UH', yes]]]],
                ['CC', but],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', changed],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', whole], ['NN', dynamic]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', movies]],
                          ['PP', ['IN', for], ['NP', ['PRP', me]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500080000272,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NN', 'Story']],
                ['VB', line],
                ['INTJ', ['UH', yes]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', changed],
                ['NP', ['DT', the], ['JJ', whole], ['NN', dynamic]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                ['IN', for],
                ['NP', ['PRP', me]],
                ['.', '.']
              ]).
pllm:training(2500080000272,
              tree_to_toks,
              [ 'Story',
                line,
                yes,
                but,
                it,
                changed,
                'the-whole-dynamic',
                of,
                'the-movies',
                for,
                me,
                ('.')
              ]).
pllm:training(2500090000273, string, "Change the dynamic how?").
pllm:training(2500090000273,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VP', ['VB', 'Change'], ['NP', ['DT', the], ['JJ', dynamic]], ['ADVP', ['WRB', how]]],
                  ['.', ?]
                ]
              ]).
pllm:training(2500090000273,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Change'],
                ['NP', ['DT', the], ['JJ', dynamic]],
                ['ADVP', ['WRB', how]],
                ['.', ?]
              ]).
pllm:training(2500090000273, tree_to_toks, ['Change', 'the-dynamic', how, ?]).
pllm:training(2500100000274,
              string,
              "It began to explain Darth Vader and at the end I actually felt a little pity for him. Prior to that Darth Vader was a true villain. One should not have any sympathy for a villain.").
pllm:training(2500100000274,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', began],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', explain], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['PP', ['IN', at], ['NP', ['DT', the], ['NN', end]]],
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', actually]],
                    [ 'VP',
                      ['VBD', felt],
                      [ 'NP',
                        ['NP', ['DT', a], ['JJ', little], ['NN', pity]],
                        ['PP', ['IN', for], ['NP', ['PRP', him]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['ADVP', ['RB', 'Prior'], ['PP', ['IN', to], ['NP', ['DT', that]]]],
                      ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                      ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', true], ['NN', villain]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'One']],
                      [ 'VP',
                        ['MD', should],
                        ['RB', not],
                        [ 'VP',
                          ['VB', have],
                          [ 'NP',
                            ['NP', ['DT', any], ['NN', sympathy]],
                            ['PP', ['IN', for], ['NP', ['DT', a], ['NN', villain]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2500100000274,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', began],
                mark('S'),
                ['TO', to],
                ['VB', explain],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['CC', and],
                mark('S'),
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', actually]],
                ['VBD', felt],
                ['NP', ['DT', a], ['JJ', little], ['NN', pity]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                'ADVP',
                ['RB', 'Prior'],
                ['IN', to],
                ['NP', ['DT', that]],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', true], ['NN', villain]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'One']],
                ['MD', should],
                ['RB', not],
                ['VB', have],
                ['NP', ['DT', any], ['NN', sympathy]],
                ['IN', for],
                ['NP', ['DT', a], ['NN', villain]],
                ['.', '.']
              ]).
pllm:training(2500100000274,
              tree_to_toks,
              [ 'It',
                began,
                to,
                explain,
                'Darth-Vader',
                and,
                at,
                'the-end',
                'I',
                actually,
                felt,
                'a-little-pity',
                for,
                him,
                ('.'),
                'ADVP',
                'Prior',
                to,
                that,
                'Darth-Vader',
                was,
                'a-true-villain',
                ('.'),
                'One',
                should,
                not,
                have,
                'any-sympathy',
                for,
                'a-villain',
                ('.')
              ]).
pllm:training(2600010000276, string, "What movies do you like").
pllm:training(2600010000276,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WDT', 'What'], ['NNS', movies]],
                ['S', ['AUX', do], ['NP', ['PRP', you]], ['VP', ['VB', like]]],
                ['.', '.']
              ]).
pllm:training(2600010000276,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WDT', 'What'], ['NNS', movies]],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['.', '.']
              ]).
pllm:training(2600010000276, tree_to_toks, ['What-movies', do, you, like, '.']).
pllm:training(2600020000277, string, "My favorite is star wars").
pllm:training(2600020000277,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'My'], ['NN', favorite]],
                  ['VP', ['VBZ', is], ['NP', ['NN', star], ['NNS', wars]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600020000277,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(2600020000277, tree_to_toks, ['My-favorite', is, 'star-wars', '.']).
pllm:training(2600030000278, string, "I love star wars").
pllm:training(2600030000278,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', love], ['NP', ['NN', star], ['NNS', wars]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600030000278,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(2600030000278, tree_to_toks, ['I', love, 'star-wars', '.']).
pllm:training(2600040000279, string, "Me too").
pllm:training(2600040000279,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(2600040000279,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(2600040000279, tree_to_toks, ['Me', too, '.']).
pllm:training(2600050000280, string, "They are great movies").
pllm:training(2600050000280,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'They']],
                  ['VP', ['VB', are], ['NP', ['JJ', great], ['NNS', movies]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600050000280,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VB', are],
                ['NP', ['JJ', great], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2600050000280, tree_to_toks, ['They', are, 'great-movies', '.']).
pllm:training(2600060000281, string, "I liked the comics better").
pllm:training(2600060000281,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', liked],
                    ['S', ['NP', ['DT', the], ['NNS', comics]], ['ADJP', ['JJR', better]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2600060000281,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                mark('S'),
                ['NP', ['DT', the], ['NNS', comics]],
                ['ADJP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(2600060000281, tree_to_toks, ['I', liked, 'the-comics', better, '.']).
pllm:training(2600070000282, string, "Me too").
pllm:training(2600070000282,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(2600070000282,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(2600070000282, tree_to_toks, ['Me', too, '.']).
pllm:training(2600080000283, string, "But the movies were okay").
pllm:training(2600080000283,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['DT', the], ['NNS', movies]],
                  ['VP', ['VBD', were], ['ADJP', ['JJ', okay]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600080000283,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', the], ['NNS', movies]],
                ['VBD', were],
                ['ADJP', ['JJ', okay]],
                ['.', '.']
              ]).
pllm:training(2600080000283, tree_to_toks, ['But', 'the-movies', were, okay, '.']).
pllm:training(2600090000284, string, "Yes they were").
pllm:training(2600090000284,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['INTJ', ['UH', 'Yes']], ['NP', ['PRP', they]], ['VP', ['VBD', were]], ['.', '.']]
              ]).
pllm:training(2600090000284,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['.', '.']
              ]).
pllm:training(2600090000284, tree_to_toks, ['Yes', they, were, '.']).
pllm:training(2600100000285, string, "Nice talking to you").
pllm:training(2600100000285,
              text_to_tree,
              [ 'S',
                ['NP', ['JJ', 'Nice']],
                ['VP', ['VBG', talking], ['PP', ['TO', to], ['NP', ['PRP', you]]]],
                ['.', '.']
              ]).
pllm:training(2600100000285,
              unphrasify,
              [ mark('S'),
                ['NP', ['JJ', 'Nice']],
                ['VBG', talking],
                ['TO', to],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(2600100000285, tree_to_toks, ['Nice', talking, to, you, '.']).
pllm:training(2700010000287,
              string,
              "Do you prefer the original trilogy or the prequels?").
pllm:training(2700010000287,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', prefer],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                      ['CC', or],
                      ['NP', ['DT', the], ['NNS', prequels]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2700010000287,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                ['CC', or],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', ?]
              ]).
pllm:training(2700010000287,
              tree_to_toks,
              ['Do', you, prefer, 'the-original-trilogy', or, 'the-prequels', ?]).
pllm:training(2700020000288,
              string,
              "I definitely like the originals more but I really like Revenge of the Sith.").
pllm:training(2700020000288,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', definitely]],
                    [ 'VP',
                      ['VB', like],
                      ['NP', ['DT', the], ['NNS', originals]],
                      ['ADVP', ['RBR', more]]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', like],
                      [ 'NP',
                        ['NP', ['NN', 'Revenge']],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700020000288,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', definitely]],
                ['VB', like],
                ['NP', ['DT', the], ['NNS', originals]],
                ['ADVP', ['RBR', more]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(2700020000288,
              tree_to_toks,
              [ 'I',
                definitely,
                like,
                'the-originals',
                more,
                but,
                'I',
                really,
                like,
                'Revenge',
                of,
                'the-Sith',
                ('.')
              ]).
pllm:training(2700030000289,
              string,
              "I do too, it is probably my third favorite movie.").
pllm:training(2700030000289,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['PRP', 'I']], ['VP', ['AUX', do], ['ADVP', ['RB', too]]]],
                [',', ','],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', probably]],
                    ['NP', ['PRP$', my], ['JJ', third], ['JJ', favorite], ['NN', movie]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2700030000289,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['ADVP', ['RB', too]],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', is],
                ['ADVP', ['RB', probably]],
                ['NP', ['PRP$', my], ['JJ', third], ['JJ', favorite], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(2700030000289,
              tree_to_toks,
              ['I', do, too, ',', it, is, probably, 'my-third-favorite-movie', '.']).
pllm:training(2700040000290,
              string,
              "What's your favorite? Mine is The Empire Strikes Back").
pllm:training(2700040000290,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'What']],
                    ['S', ['VBZ', '\'s'], ['NP', ['PRP$', your], ['JJ', favorite]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'Mine']],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                          ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2700040000290,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Mine']],
                ['VBZ', is],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', '.']
              ]).
pllm:training(2700040000290,
              tree_to_toks,
              ['What', '\'s', 'your-favorite', ?, 'Mine', is, 'The-Empire', 'Strikes', 'Back', '.']).
pllm:training(2700050000291,
              string,
              "My favorite is actually A New Hope, but Empire comes next.").
pllm:training(2700050000291,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP$', 'My'], ['NN', favorite]],
                    [ 'VP',
                      ['VBZ', is],
                      ['ADVP', ['RB', actually]],
                      ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]
                    ]
                  ],
                  [',', ','],
                  ['CC', but],
                  ['S', ['NP', ['NNP', 'Empire']], ['VP', ['VBZ', comes], ['ADVP', ['RB', next]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2700050000291,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['ADVP', ['RB', actually]],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Empire']],
                ['VBZ', comes],
                ['ADVP', ['RB', next]],
                ['.', '.']
              ]).
pllm:training(2700050000291,
              tree_to_toks,
              ['My-favorite', is, actually, 'A-New-Hope', ',', but, 'Empire', comes, next, '.']).
pllm:training(2700060000292,
              string,
              "Do you like the new movie at all, I thought it was alright but not great.").
pllm:training(2700060000292,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['JJ', new], ['NN', movie]],
                  ['ADVP', ['IN', at], ['DT', all]],
                  [',', ','],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', thought],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', it]],
                            [ 'VP',
                              ['AUX', was],
                              ['ADJP', ['JJ', alright], ['CC', but], ['RB', not], ['JJ', great]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2700060000292,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', new], ['NN', movie]],
                ['ADVP', ['IN', at], ['DT', all]],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['ADJP', ['JJ', alright], ['CC', but], ['RB', not], ['JJ', great]],
                ['.', '.']
              ]).
pllm:training(2700060000292,
              tree_to_toks,
              [ 'Do',
                you,
                like,
                'the-new-movie',
                at,
                all,
                (','),
                'I',
                thought,
                it,
                was,
                alright,
                but,
                not,
                great,
                ('.')
              ]).
pllm:training(2700070000293,
              string,
              "I liked it but thought it was only better than The Phantom Menace and Attack of the Clones.").
pllm:training(2700070000293,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]],
                    ['CC', but],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['ADJP', ['RB', only], ['JJR', better]],
                              [ 'PP',
                                ['IN', than],
                                [ 'NP',
                                  ['NP', ['DT', 'The'], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                                  ['CC', and],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Attack']],
                                    ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', 'Clones']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700070000293,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['CC', but],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['ADJP', ['RB', only], ['JJR', better]],
                ['IN', than],
                ['NP', ['DT', 'The'], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['CC', and],
                ['NP', ['NNP', 'Attack']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', 'Clones']],
                ['.', '.']
              ]).
pllm:training(2700070000293,
              tree_to_toks,
              [ 'I',
                liked,
                it,
                but,
                thought,
                it,
                was,
                'ADJP',
                only,
                better,
                than,
                'The-Phantom-Menace',
                and,
                'Attack',
                of,
                'the-Clones',
                ('.')
              ]).
pllm:training(2700080000294,
              string,
              "I could agree with that, it was trying too hard to be the originals.").
pllm:training(2700080000294,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', could],
                      ['VP', ['VB', agree], ['PP', ['IN', with], ['NP', ['DT', that]]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBG', trying],
                      [ 'ADJP',
                        ['RB', too],
                        ['JJ', hard],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            ['VP', ['VB', be], ['NP', ['DT', the], ['NNS', originals]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700080000294,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', could],
                ['VB', agree],
                ['IN', with],
                ['NP', ['DT', that]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['VBG', trying],
                'ADJP',
                ['RB', too],
                ['JJ', hard],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(2700080000294,
              tree_to_toks,
              [ 'I',
                could,
                agree,
                with,
                that,
                (','),
                it,
                was,
                trying,
                'ADJP',
                too,
                hard,
                to,
                be,
                'the-originals',
                ('.')
              ]).
pllm:training(2700090000295,
              string,
              "I think that's true, and it didn't have any real significant moments besides Hans ending.").
pllm:training(2700090000295,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['SBAR', ['S', ['NP', ['DT', that]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]]]]
                    ]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', have],
                        [ 'NP',
                          [ 'NP',
                            ['DT', any],
                            ['JJ', real],
                            ['JJ', significant],
                            ['NNS', moments]
                          ],
                          [ 'PP',
                            ['IN', besides],
                            ['NP', ['NP', ['NNP', 'Hans']], ['VP', ['VBG', ending]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700090000295,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', have],
                ['NP', ['DT', any], ['JJ', real], ['JJ', significant], ['NNS', moments]],
                ['IN', besides],
                ['NP', ['NNP', 'Hans']],
                ['VBG', ending],
                ['.', '.']
              ]).
pllm:training(2700090000295,
              tree_to_toks,
              [ 'I',
                think,
                that,
                '\'s',
                true,
                (','),
                and,
                it,
                did,
                'n\'t',
                have,
                'any-real-significant-moments',
                besides,
                'Hans',
                ending,
                ('.')
              ]).
pllm:training(2700100000296,
              string,
              "Yeah, I do look forward to the next movies though.").
pllm:training(2700100000296,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    [ 'VP',
                      ['VB', look],
                      ['ADVP', ['RB', forward]],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', next], ['NNS', movies]]],
                      ['ADVP', ['RB', though]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700100000296,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['VB', look],
                ['ADVP', ['RB', forward]],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', next], ['NNS', movies]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(2700100000296,
              tree_to_toks,
              ['Yeah', ',', 'I', do, look, forward, to, 'the-next-movies', though, '.']).
pllm:training(2800010000298,
              string,
              "Who do you think would win in a lightsaber battle, Luke or Rey?").
pllm:training(2800010000298,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', win],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', a], ['NN', lightsaber], ['NN', battle]],
                                  [',', ','],
                                  ['NP', ['NNP', 'Luke']],
                                  ['CC', or],
                                  ['NP', ['NNP', 'Rey']]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2800010000298,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['MD', would],
                ['VB', win],
                ['IN', in],
                ['NP', ['DT', a], ['NN', lightsaber], ['NN', battle]],
                [',', ','],
                ['NP', ['NNP', 'Luke']],
                ['CC', or],
                ['NP', ['NNP', 'Rey']],
                ['.', ?]
              ]).
pllm:training(2800010000298,
              tree_to_toks,
              [ 'Who',
                do,
                you,
                think,
                would,
                win,
                in,
                'a-lightsaber-battle',
                (','),
                'Luke',
                or,
                'Rey',
                (?)
              ]).
pllm:training(2800020000299, string, "Obviously Rey.").
pllm:training(2800020000299,
              text_to_tree,
              ['CORENLP', ['FRAG', ['ADVP', ['RB', 'Obviously']], ['NP', ['NNP', 'Rey']], ['.', '.']]]).
pllm:training(2800020000299,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Obviously']],
                ['NP', ['NNP', 'Rey']],
                ['.', '.']
              ]).
pllm:training(2800020000299, tree_to_toks, ['Obviously', 'Rey', '.']).
pllm:training(2800030000300, string, "Why? Luke has more practice.").
pllm:training(2800030000300,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Luke']],
                    ['VP', ['VBZ', has], ['NP', ['JJR', more], ['NN', practice]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2800030000300,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', has],
                ['NP', ['JJR', more], ['NN', practice]],
                ['.', '.']
              ]).
pllm:training(2800030000300, tree_to_toks, ['Why', ?, 'Luke', has, 'more-practice', '.']).
pllm:training(2800040000301,
              string,
              "Luke is also older, and Rey is already good without learning anything.").
pllm:training(2800040000301,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['NP', ['NNP', 'Luke']],
                  ['VP', ['AUX', is], ['ADVP', ['RB', also]], ['ADJP', ['JJR', older]]]
                ],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['NNP', 'Rey']],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', already]],
                    ['ADJP', ['JJ', good]],
                    [ 'PP',
                      ['IN', without],
                      ['S', ['VP', ['VBG', learning], ['NP', ['NN', anything]]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2800040000301,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['AUX', is],
                ['ADVP', ['RB', also]],
                ['ADJP', ['JJR', older]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['AUX', is],
                ['ADVP', ['RB', already]],
                ['ADJP', ['JJ', good]],
                ['IN', without],
                mark('S'),
                ['VBG', learning],
                ['NP', ['NN', anything]],
                ['.', '.']
              ]).
pllm:training(2800040000301,
              tree_to_toks,
              [ 'Luke',
                (is),
                also,
                older,
                (','),
                and,
                'Rey',
                (is),
                already,
                good,
                without,
                learning,
                anything,
                ('.')
              ]).
pllm:training(2800050000302, string, "True. Still, I think Luke would win.").
pllm:training(2800050000302,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['JJ', 'True'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Still']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['SBAR', ['S', ['NP', ['NNP', 'Luke']], ['VP', ['MD', would], ['VP', ['VB', win]]]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2800050000302,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['JJ', 'True'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Still']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['MD', would],
                ['VB', win],
                ['.', '.']
              ]).
pllm:training(2800050000302,
              tree_to_toks,
              ['True', '.', 'Still', ',', 'I', think, 'Luke', would, win, '.']).
pllm:training(2800060000303, string, "Actually, we're both wrong.").
pllm:training(2800060000303,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Actually']],
                  [',', ','],
                  ['NP', ['PRP', we]],
                  ['VP', ['VB', '\'re'], ['NP', ['DT', both], ['NN', wrong]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2800060000303,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Actually']],
                [',', ','],
                ['NP', ['PRP', we]],
                ['VB', '\'re'],
                ['NP', ['DT', both], ['NN', wrong]],
                ['.', '.']
              ]).
pllm:training(2800060000303, tree_to_toks, ['Actually', ',', we, '\'re', 'both-wrong', '.']).
pllm:training(2800070000304, string, "Why?").
pllm:training(2800070000304,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]]).
pllm:training(2800070000304,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', 'Why']], ['.', ?]]).
pllm:training(2800070000304, tree_to_toks, ['Why', ?]).
pllm:training(2800080000305, string, "Yoda wins, obviously.").
pllm:training(2800080000305,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Yoda']],
                  ['VP', ['VBZ', wins], [',', ','], ['ADVP', ['RB', obviously]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2800080000305,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', wins],
                [',', ','],
                ['ADVP', ['RB', obviously]],
                ['.', '.']
              ]).
pllm:training(2800080000305, tree_to_toks, ['Yoda', wins, ',', obviously, '.']).
pllm:training(2800090000306, string, "That's true.").
pllm:training(2800090000306,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
              ]).
pllm:training(2800090000306,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.']
              ]).
pllm:training(2800090000306, tree_to_toks, ['That', '\'s', true, '.']).
pllm:training(2800100000307, string, "Yoda always wins.").
pllm:training(2800100000307,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['NNP', 'Yoda']], ['ADVP', ['RB', always]], ['VP', ['VBZ', wins]], ['.', '.']]
              ]).
pllm:training(2800100000307,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['ADVP', ['RB', always]],
                ['VBZ', wins],
                ['.', '.']
              ]).
pllm:training(2800100000307, tree_to_toks, ['Yoda', always, wins, '.']).
pllm:training(2900010000309,
              string,
              "Okay, what was one of the biggest shocks in Stars Wars?").
pllm:training(2900010000309,
              text_to_tree,
              [ 'SBAR',
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['WP', what]],
                [ 'S',
                  [ 'VP',
                    ['AUX', was],
                    [ 'NP',
                      ['NP', ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJS', biggest], ['NNS', shocks]],
                          ['PP', ['IN', in], ['NP', ['NNP', 'Stars'], ['NNPS', 'Wars']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(2900010000309,
              unphrasify,
              [ mark('SBAR'),
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', was],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['JJS', biggest], ['NNS', shocks]],
                ['IN', in],
                ['NP', ['NNP', 'Stars'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(2900010000309,
              tree_to_toks,
              ['Okay', ',', what, was, one, of, 'the-biggest-shocks', in, 'Stars-Wars', ?]).
pllm:training(2900020000310, string, "What do you mean by biggest shock?").
pllm:training(2900020000310,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', mean], ['PP', ['IN', by], ['NP', ['JJS', biggest], ['NN', shock]]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2900020000310,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['IN', by],
                ['NP', ['JJS', biggest], ['NN', shock]],
                ['.', ?]
              ]).
pllm:training(2900020000310,
              tree_to_toks,
              ['What', do, you, mean, by, 'biggest-shock', ?]).
pllm:training(2900030000311,
              string,
              "I mean, the most shocking or unexpected revealation in the movies.").
pllm:training(2900030000311,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', mean],
                    [',', ','],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        [ 'ADJP',
                          ['RBS', most],
                          ['JJ', shocking],
                          ['CC', or],
                          ['JJ', unexpected]
                        ],
                        ['NN', revealation]
                      ],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', movies]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900030000311,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                [ 'NP',
                  ['DT', the],
                  ['ADJP', ['RBS', most], ['JJ', shocking], ['CC', or], ['JJ', unexpected]],
                  ['NN', revealation]
                ],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2900030000311,
              tree_to_toks,
              [ 'I',
                mean,
                (','),
                'the-most-shocking-or-unexpected-revealation',
                in,
                'the-movies',
                ('.')
              ]).
pllm:training(2900040000312,
              string,
              "Well, the whole \"Luke, I am your Father\" was a doozy when you first learned it.").
pllm:training(2900040000312,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well']],
                  [',', ','],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', whole]],
                    ['``', '"'],
                    [ 'S',
                      ['NP', ['NNP', 'Luke']],
                      [',', ','],
                      ['NP', ['PRP', 'I']],
                      ['VP', ['VB', am], ['NP', ['PRP$', your], ['NNP', 'Father']]]
                    ],
                    ['\'\'', '"']
                  ],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', doozy]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['ADVP', ['RB', first]],
                          ['VP', ['VBD', learned], ['NP', ['PRP', it]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900040000312,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['DT', the], ['JJ', whole]],
                ['``', '"'],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NNP', 'Father']],
                ['\'\'', '"'],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', doozy]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', first]],
                ['VBD', learned],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(2900040000312,
              tree_to_toks,
              [ 'Well',
                (','),
                'the-whole',
                '"',
                'Luke',
                (','),
                'I',
                am,
                'your-Father',
                '"',
                was,
                'a-doozy',
                when,
                you,
                first,
                learned,
                it,
                ('.')
              ]).
pllm:training(2900050000313,
              string,
              "Yes, it was definitley not something you'd see coming.").
pllm:training(2900050000313,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', definitley]],
                    [ 'NP',
                      ['NP', ['RB', not], ['NN', something]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['VP', ['MD', '\'d'], ['VP', ['VB', see], ['S', ['VP', ['VBG', coming]]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900050000313,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', definitley]],
                ['NP', ['RB', not], ['NN', something]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['VB', see],
                mark('S'),
                ['VBG', coming],
                ['.', '.']
              ]).
pllm:training(2900050000313,
              tree_to_toks,
              ['Yes', ',', it, was, definitley, 'not-something', you, '\'d', see, coming, '.']).
pllm:training(2900060000314,
              string,
              "Them there's the whole Luke and Leia are brother and sister thing.").
pllm:training(2900060000314,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'Them']],
                  ['NP', ['EX', there]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', whole],
                      [ 'NML',
                        [ 'S',
                          ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                          ['VP', ['VB', are], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]]
                        ]
                      ],
                      ['NN', thing]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900060000314,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Them']],
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['DT', the],
                ['JJ', whole],
                mark('NML'),
                mark('S'),
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                ['VB', are],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['NN', thing],
                ['.', '.']
              ]).
pllm:training(2900060000314,
              tree_to_toks,
              [ 'Them',
                there,
                '\'s',
                the,
                whole,
                'Luke-and-Leia',
                are,
                'brother-and-sister',
                thing,
                ('.')
              ]).
pllm:training(2900070000315,
              string,
              "Oh, don't remind me, makes the whole kiss on Hoth a bit akward.").
pllm:training(2900070000315,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['S', ['VP', ['AUX', do], ['RB', not], ['VP', ['VB', remind], ['NP', ['PRP', me]]]]],
                [',', ','],
                [ 'VP',
                  ['VBZ', makes],
                  [ 'S',
                    ['NP', ['DT', the], ['NN', whole]],
                    [ 'VP',
                      ['VB', kiss],
                      ['PP', ['IN', on], ['NP', ['NNP', 'Hoth']]],
                      ['ADVP', ['NP', ['DT', a], ['NN', bit]], ['RB', akward]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2900070000315,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                mark('S'),
                ['AUX', do],
                ['RB', not],
                ['VB', remind],
                ['NP', ['PRP', me]],
                [',', ','],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['DT', the], ['NN', whole]],
                ['VB', kiss],
                ['IN', on],
                ['NP', ['NNP', 'Hoth']],
                'ADVP',
                ['NP', ['DT', a], ['NN', bit]],
                ['RB', akward],
                ['.', '.']
              ]).
pllm:training(2900070000315,
              tree_to_toks,
              [ 'Oh',
                (','),
                do,
                not,
                remind,
                me,
                (','),
                makes,
                'the-whole',
                kiss,
                on,
                'Hoth',
                'ADVP',
                'a-bit',
                akward,
                ('.')
              ]).
pllm:training(2900080000316,
              string,
              "Yeah, goes from \" You lucky so and so\" to \" I hear banjos, run!\"").
pllm:training(2900080000316,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  [ 'VP',
                    ['VBZ', goes],
                    [ 'PP',
                      ['IN', from],
                      ['``', '"'],
                      [ 'NP',
                        [ 'NP',
                          ['NP', ['PRP', 'You']],
                          ['ADJP', ['JJ', lucky], ['ADVP', ['RB', so], ['CC', and], ['RB', so]]]
                        ],
                        ['``', '"'],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              [ 'SBAR',
                                ['``', '"'],
                                [ 'S',
                                  ['NP', ['PRP', 'I']],
                                  ['VP', ['VB', hear], ['NP', ['NNS', banjos]]]
                                ]
                              ],
                              [',', ','],
                              ['VP', ['VB', run]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.'],
                  ['\'\'', '"']
                ],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(2900080000316,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['VBZ', goes],
                ['IN', from],
                ['``', '"'],
                ['NP', ['PRP', 'You']],
                ['ADJP', ['JJ', lucky], ['ADVP', ['RB', so], ['CC', and], ['RB', so]]],
                ['``', '"'],
                mark('S'),
                ['TO', to],
                mark('SBAR'),
                ['``', '"'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hear],
                ['NP', ['NNS', banjos]],
                [',', ','],
                ['VB', run],
                ['.', '.'],
                ['\'\'', '"'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(2900080000316,
              tree_to_toks,
              [ 'Yeah',
                (','),
                goes,
                from,
                '"',
                'You',
                lucky,
                so,
                and,
                so,
                '"',
                to,
                '"',
                'I',
                hear,
                banjos,
                (','),
                run,
                ('.'),
                '"',
                'FRAG',
                ('.')
              ]).
pllm:training(2900090000317,
              string,
              "Other than that, I can't think of any more real shocking revealtions.").
pllm:training(2900090000317,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['PP', ['JJ', 'Other'], ['PP', ['IN', than], ['NP', ['DT', that]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', any],
                          ['ADJP', ['JJR', more]],
                          ['JJ', real],
                          ['JJ', shocking],
                          ['NNS', revealtions]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900090000317,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['JJ', 'Other'],
                ['IN', than],
                ['NP', ['DT', that]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', think],
                ['IN', of],
                [ 'NP',
                  ['DT', any],
                  ['ADJP', ['JJR', more]],
                  ['JJ', real],
                  ['JJ', shocking],
                  ['NNS', revealtions]
                ],
                ['.', '.']
              ]).
pllm:training(2900090000317,
              tree_to_toks,
              [ 'Other',
                than,
                that,
                (','),
                'I',
                can,
                not,
                think,
                of,
                'any-more-real-shocking-revealtions',
                ('.')
              ]).
pllm:training(2900100000318,
              string,
              "Neither can I, since with the prequels we all knew where we were going in the end.").
pllm:training(2900100000318,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'Neither']],
                  [ 'VP',
                    ['MD', can],
                    [ 'VP',
                      ['NP', ['PRP', 'I']],
                      [',', ','],
                      [ 'PP',
                        ['IN', since],
                        ['IN', with],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', prequels]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', we]],
                              ['ADVP', ['DT', all]],
                              [ 'VP',
                                ['VBD', knew],
                                [ 'SBAR',
                                  ['WHADVP', ['WRB', where]],
                                  [ 'S',
                                    ['NP', ['PRP', we]],
                                    [ 'VP',
                                      ['VBD', were],
                                      [ 'VP',
                                        ['VBG', going],
                                        ['PP', ['IN', in], ['NP', ['DT', the], ['NN', end]]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900100000318,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'Neither']],
                ['MD', can],
                ['NP', ['PRP', 'I']],
                [',', ','],
                ['IN', since],
                ['IN', with],
                ['NP', ['DT', the], ['NNS', prequels]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['ADVP', ['DT', all]],
                ['VBD', knew],
                mark('SBAR'),
                ['WHADVP', ['WRB', where]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VBD', were],
                ['VBG', going],
                ['IN', in],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.']
              ]).
pllm:training(2900100000318,
              tree_to_toks,
              [ 'Neither',
                can,
                'I',
                (','),
                since,
                with,
                'the-prequels',
                we,
                all,
                knew,
                where,
                we,
                were,
                going,
                in,
                'the-end',
                ('.')
              ]).
pllm:training(3000010000320,
              string,
              "Do you prefer the new Star wars, the old Star Wars or the ones in the middle?").
pllm:training(3000010000320,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', prefer],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNS', wars]],
                    [',', ','],
                    ['NP', ['DT', the], ['JJ', old], ['NNP', 'Star'], ['NNPS', 'Wars']],
                    ['CC', or],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', ones]],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NN', middle]]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3000010000320,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNS', wars]],
                [',', ','],
                ['NP', ['DT', the], ['JJ', old], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['CC', or],
                ['NP', ['DT', the], ['NNS', ones]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', middle]],
                ['.', ?]
              ]).
pllm:training(3000010000320,
              tree_to_toks,
              [ 'Do',
                you,
                prefer,
                'the-new-Star-wars',
                (','),
                'the-old-Star-Wars',
                or,
                'the-ones',
                in,
                'the-middle',
                (?)
              ]).
pllm:training(3000020000321,
              string,
              "I think the old star wars, Luke, Leai and Hans, are best.").
pllm:training(3000020000321,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', old], ['NN', star], ['NNS', wars]],
                          [',', ','],
                          ['NP', ['NNP', 'Luke'], [',', ','], ['NNP', 'Leai'], ['CC', and], ['NNP', 'Hans']],
                          [',', ',']
                        ],
                        ['VP', ['VB', are], ['ADJP', ['JJS', best]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000020000321,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', old], ['NN', star], ['NNS', wars]],
                [',', ','],
                ['NP', ['NNP', 'Luke'], [',', ','], ['NNP', 'Leai'], ['CC', and], ['NNP', 'Hans']],
                [',', ','],
                ['VB', are],
                ['ADJP', ['JJS', best]],
                ['.', '.']
              ]).
pllm:training(3000020000321,
              tree_to_toks,
              ['I', think, 'the-old-star-wars', ',', 'Luke--Leai-and-Hans', ',', are, best, '.']).
pllm:training(3000030000322, string, "They had a good bit of story to dig into.").
pllm:training(3000030000322,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'They']],
                [ 'VP',
                  ['AUX', had],
                  [ 'NP',
                    ['NP', ['DT', a], ['JJ', good], ['NN', bit]],
                    ['PP', ['IN', of], ['NP', ['NN', story]]],
                    ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', dig], ['PP', ['IN', into]]]]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3000030000322,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'They']],
                ['AUX', had],
                ['NP', ['DT', a], ['JJ', good], ['NN', bit]],
                ['IN', of],
                ['NP', ['NN', story]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', dig],
                ['IN', into],
                ['.', '.']
              ]).
pllm:training(3000030000322,
              tree_to_toks,
              ['They', had, 'a-good-bit', of, story, to, dig, into, '.']).
pllm:training(3000040000323,
              string,
              "It was the relationships, like Han and Leai, the slow burn into love.").
pllm:training(3000040000323,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', was],
                    ['NP', ['DT', the], ['NNS', relationships]],
                    [',', ','],
                    ['PP', ['IN', like], ['NP', ['NNP', 'Han'], ['CC', and], ['NNP', 'Leai']]],
                    [',', ','],
                    [ 'S',
                      ['NP', ['DT', the], ['JJ', slow]],
                      ['VP', ['VB', burn], ['PP', ['IN', into], ['NP', ['NN', love]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000040000323,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['NP', ['DT', the], ['NNS', relationships]],
                [',', ','],
                ['IN', like],
                ['NP', ['NNP', 'Han'], ['CC', and], ['NNP', 'Leai']],
                [',', ','],
                mark('S'),
                ['NP', ['DT', the], ['JJ', slow]],
                ['VB', burn],
                ['IN', into],
                ['NP', ['NN', love]],
                ['.', '.']
              ]).
pllm:training(3000040000323,
              tree_to_toks,
              [ 'It',
                was,
                'the-relationships',
                (','),
                like,
                'Han-and-Leai',
                (','),
                'the-slow',
                burn,
                into,
                love,
                ('.')
              ]).
pllm:training(3000050000324,
              string,
              "Their relationship really played out well, I was invested.").
pllm:training(3000050000324,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VBD', played], ['PRT', ['RP', out]], ['ADVP', ['RB', well]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', was], ['VP', ['VBN', invested]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3000050000324,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                ['ADVP', ['RB', really]],
                ['VBD', played],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', well]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBN', invested],
                ['.', '.']
              ]).
pllm:training(3000050000324,
              tree_to_toks,
              ['Their-relationship', really, played, out, well, ',', 'I', was, invested, '.']).
pllm:training(3000060000325,
              string,
              "The witty come back between the two always made me smile, like they really did like one another.").
pllm:training(3000060000325,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['JJ', witty]],
                    [ 'SBAR',
                      [ 'S',
                        [ 'VP',
                          ['VB', come],
                          ['ADVP', ['RB', back]],
                          ['PP', ['IN', between], ['NP', ['DT', the], ['CD', two]]]
                        ]
                      ]
                    ]
                  ],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VBD', made],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      [ 'VP',
                        ['VB', smile],
                        [',', ','],
                        [ 'S',
                          ['INTJ', ['UH', like]],
                          ['NP', ['PRP', they]],
                          ['ADVP', ['RB', really]],
                          [ 'VP',
                            ['VBD', did],
                            ['PP', ['IN', like], ['NP', ['CD', one], ['DT', another]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000060000325,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', witty]],
                mark('SBAR'),
                mark('S'),
                ['VB', come],
                ['ADVP', ['RB', back]],
                ['IN', between],
                ['NP', ['DT', the], ['CD', two]],
                ['ADVP', ['RB', always]],
                ['VBD', made],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', smile],
                [',', ','],
                mark('S'),
                ['INTJ', ['UH', like]],
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', really]],
                ['VBD', did],
                ['IN', like],
                ['NP', ['CD', one], ['DT', another]],
                ['.', '.']
              ]).
pllm:training(3000060000325,
              tree_to_toks,
              [ 'The-witty',
                come,
                back,
                between,
                'the-two',
                always,
                made,
                me,
                smile,
                (','),
                like,
                they,
                really,
                did,
                like,
                'one-another',
                ('.')
              ]).
pllm:training(3000070000326, string, "I like that they came from world apart.").
pllm:training(3000070000326,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', came],
                          ['PP', ['IN', from], ['NP', ['NN', world]]],
                          ['ADVP', ['RB', apart]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000070000326,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', came],
                ['IN', from],
                ['NP', ['NN', world]],
                ['ADVP', ['RB', apart]],
                ['.', '.']
              ]).
pllm:training(3000070000326,
              tree_to_toks,
              ['I', like, that, they, came, from, world, apart, '.']).
pllm:training(3000080000327,
              string,
              "Yes, he was a bit of a scoundrel and her a princess, it was a wrong side of the tracks love.").
pllm:training(3000080000327,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['INTJ', ['UH', 'Yes']],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', bit]],
                          ['PP', ['IN', of], ['NP', ['DT', a], ['NN', scoundrel]]]
                        ],
                        ['CC', and],
                        ['NP', ['PRP$', her], ['NP', ['DT', a], ['NN', princess]]]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', wrong], ['NN', side]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', tracks]],
                          ['SBAR', ['S', ['VP', ['VB', love]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000080000327,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', bit]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', scoundrel]],
                ['CC', and],
                ['PRP$', her],
                ['NP', ['DT', a], ['NN', princess]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', wrong], ['NN', side]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', tracks]],
                mark('SBAR'),
                mark('S'),
                ['VB', love],
                ['.', '.']
              ]).
pllm:training(3000080000327,
              tree_to_toks,
              [ 'Yes',
                (','),
                he,
                was,
                'a-bit',
                of,
                'a-scoundrel',
                and,
                her,
                'a-princess',
                (','),
                it,
                was,
                'a-wrong-side',
                of,
                'the-tracks',
                love,
                ('.')
              ]).
pllm:training(3000090000328,
              string,
              "Did you like the part when he was about to be frozen and she said she loved him.").
pllm:training(3000090000328,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['NN', part]],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', when]],
                    [ 'S',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['AUX', was],
                          [ 'VP',
                            ['IN', about],
                            ['S', ['VP', ['TO', to], ['VP', ['AUX', be], ['VP', ['VBN', frozen]]]]]
                          ]
                        ]
                      ],
                      ['CC', and],
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBD', said],
                          [ 'SBAR',
                            ['S', ['NP', ['PRP', she]], ['VP', ['VBD', loved], ['NP', ['PRP', him]]]]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3000090000328,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', part]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', about],
                mark('S'),
                ['TO', to],
                ['AUX', be],
                ['VBN', frozen],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', loved],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3000090000328,
              tree_to_toks,
              [ 'Did',
                you,
                like,
                'the-part',
                when,
                he,
                was,
                about,
                to,
                be,
                frozen,
                and,
                she,
                said,
                she,
                loved,
                him,
                ('.')
              ]).
pllm:training(3000100000329, string, "And he said, \"I know\", got me everytime.").
pllm:training(3000100000329,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'And'],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    [ 'VP',
                      ['VBD', said],
                      [',', ','],
                      ['``', '"'],
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                      ['\'\'', '"']
                    ],
                    [',', ','],
                    ['VP', ['VBD', got], ['NP', ['PRP', me]], ['NP-TMP', ['NN', everytime]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000100000329,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', he]],
                ['VBD', said],
                [',', ','],
                ['``', '"'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                ['\'\'', '"'],
                [',', ','],
                ['VBD', got],
                ['NP', ['PRP', me]],
                ['NP-TMP', ['NN', everytime]],
                ['.', '.']
              ]).
pllm:training(3000100000329,
              tree_to_toks,
              ['And', he, said, ',', '"', 'I', know, '"', ',', got, me, everytime, '.']).
pllm:training(3100010000331, string, "Did you like the role of Anakin Skywalker?").
pllm:training(3100010000331,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', role]],
                    ['PP', ['IN', of], ['NP', ['NNP', 'Anakin'], ['NNP', 'Skywalker']]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3100010000331,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', role]],
                ['IN', of],
                ['NP', ['NNP', 'Anakin'], ['NNP', 'Skywalker']],
                ['.', ?]
              ]).
pllm:training(3100010000331,
              tree_to_toks,
              ['Did', you, like, 'the-role', of, 'Anakin-Skywalker', ?]).
pllm:training(3100020000332, string, "I loved the story behind him.").
pllm:training(3100020000332,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', loved],
                    ['NP', ['DT', the], ['NN', story]],
                    ['PP', ['IN', behind], ['NP', ['PRP', him]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100020000332,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', loved],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', behind],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3100020000332, tree_to_toks, ['I', loved, 'the-story', behind, him, '.']).
pllm:training(3100030000333,
              string,
              "Yeah but did you love the way he was played.").
pllm:training(3100030000333,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah'], ['FRAG', ['CC', but]]],
                  ['VBD', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', love],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', way]],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['VP', ['VBN', played]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100030000333,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah'], ['FRAG', ['CC', but]]],
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', love],
                ['NP', ['DT', the], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['VBN', played],
                ['.', '.']
              ]).
pllm:training(3100030000333,
              tree_to_toks,
              ['Yeah', but, did, you, love, 'the-way', he, was, played, '.']).
pllm:training(3100040000334,
              string,
              "I thought it could have had room for improvement.").
pllm:training(3100040000334,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', have],
                            [ 'VP',
                              ['VBN', had],
                              [ 'NP',
                                ['NP', ['NN', room]],
                                ['PP', ['IN', for], ['NP', ['NN', improvement]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100040000334,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', could],
                ['VB', have],
                ['VBN', had],
                ['NP', ['NN', room]],
                ['IN', for],
                ['NP', ['NN', improvement]],
                ['.', '.']
              ]).
pllm:training(3100040000334,
              tree_to_toks,
              ['I', thought, it, could, have, had, room, for, improvement, '.']).
pllm:training(3100050000335, string, "How about Natalie Portman's character").
pllm:training(3100050000335,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['NNP', 'Natalie'], ['NNP', 'Portman'], ['POS', '\'s']],
                      ['NN', character]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100050000335,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['WHADVP', ['WRB', 'How']],
                ['IN', about],
                ['NP', ['NNP', 'Natalie'], ['NNP', 'Portman'], ['POS', '\'s']],
                ['NN', character],
                ['.', '.']
              ]).
pllm:training(3100050000335,
              tree_to_toks,
              ['How', about, 'Natalie-Portman-\'s', character, '.']).
pllm:training(3100060000336, string, "She did a great job as a ruler.").
pllm:training(3100060000336,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'She']],
                [ 'VP',
                  ['AUX', did],
                  [ 'NP',
                    ['NP', ['DT', a], ['JJ', great], ['NN', job]],
                    ['PP', ['IN', as], ['NP', ['DT', a], ['NN', ruler]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3100060000336,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'She']],
                ['AUX', did],
                ['NP', ['DT', a], ['JJ', great], ['NN', job]],
                ['IN', as],
                ['NP', ['DT', a], ['NN', ruler]],
                ['.', '.']
              ]).
pllm:training(3100060000336, tree_to_toks, ['She', did, 'a-great-job', as, 'a-ruler', '.']).
pllm:training(3100070000337, string, "I think it was good too").
pllm:training(3100070000337,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBD', was], ['ADJP', ['JJ', good], ['RB', too]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100070000337,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', good], ['RB', too]],
                ['.', '.']
              ]).
pllm:training(3100070000337, tree_to_toks, ['I', think, it, was, good, too, '.']).
pllm:training(3100080000338, string, "I just think people dont love the prequels").
pllm:training(3100080000338,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['NNS', people]],
                        [ 'VP',
                          ['VB', do],
                          ['RB', nt],
                          ['VP', ['VB', love], ['NP', ['DT', the], ['NNS', prequels]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100080000338,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', do],
                ['RB', nt],
                ['VB', love],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(3100080000338,
              tree_to_toks,
              ['I', just, think, people, do, nt, love, 'the-prequels', '.']).
pllm:training(3100090000339,
              string,
              "I always caution against going backwards in a film.").
pllm:training(3100090000339,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VB', caution],
                    [ 'PP',
                      ['IN', against],
                      [ 'S',
                        [ 'VP',
                          ['VBG', going],
                          ['ADVP', ['RB', backwards]],
                          ['PP', ['IN', in], ['NP', ['DT', a], ['NN', film]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100090000339,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VB', caution],
                ['IN', against],
                mark('S'),
                ['VBG', going],
                ['ADVP', ['RB', backwards]],
                ['IN', in],
                ['NP', ['DT', a], ['NN', film]],
                ['.', '.']
              ]).
pllm:training(3100090000339,
              tree_to_toks,
              ['I', always, caution, against, going, backwards, in, 'a-film', '.']).
pllm:training(3100100000340,
              string,
              "Im glad the franchise is going forward now.").
pllm:training(3100100000340,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['VP', ['VBG', 'Im'], ['ADJP', ['JJ', glad]], ['NP', ['DT', the], ['NN', franchise]]]
                ],
                [ 'VP',
                  ['AUX', is],
                  ['VP', ['VBG', going], ['ADVP', ['RB', forward]], ['ADVP', ['RB', now]]]
                ],
                ['.', '.']
              ]).
pllm:training(3100100000340,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['VBG', 'Im'],
                ['ADJP', ['JJ', glad]],
                ['NP', ['DT', the], ['NN', franchise]],
                ['AUX', is],
                ['VBG', going],
                ['ADVP', ['RB', forward]],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(3100100000340,
              tree_to_toks,
              ['Im', glad, 'the-franchise', is, going, forward, now, '.']).
pllm:training(3200010000342,
              string,
              "What do you think of the latest Star Wars Movie?").
pllm:training(3200010000342,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJS', latest]],
                          ['NP', ['NNP', 'Star'], ['NNPS', 'Wars'], ['NNP', 'Movie']]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3200010000342,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['JJS', latest]],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars'], ['NNP', 'Movie']],
                ['.', ?]
              ]).
pllm:training(3200010000342,
              tree_to_toks,
              ['What', do, you, think, of, 'the-latest', 'Star-Wars-Movie', ?]).
pllm:training(3200020000343,
              string,
              "I really liked it, how do you think the next one will be?").
pllm:training(3200020000343,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]]
                  ],
                  [',', ','],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', how]],
                    [ 'S',
                      ['VB', do],
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['DT', the], ['JJ', next], ['NN', one]],
                            ['VP', ['MD', will], ['VP', ['VB', be]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3200020000343,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                [',', ','],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', next], ['NN', one]],
                ['MD', will],
                ['VB', be],
                ['.', ?]
              ]).
pllm:training(3200020000343,
              tree_to_toks,
              ['I', really, liked, it, ',', how, do, you, think, 'the-next-one', will, be, ?]).
pllm:training(3200030000344, string, "Well I really hope it turns out better.").
pllm:training(3200030000344,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well']],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['VB', hope],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBZ', turns], ['PRT', ['RP', out]], ['NP', ['JJR', better]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200030000344,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', hope],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', turns],
                ['PRT', ['RP', out]],
                ['NP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(3200030000344,
              tree_to_toks,
              ['Well', 'I', really, hope, it, turns, out, better, '.']).
pllm:training(3200040000345, string, "Yea me too.").
pllm:training(3200040000345,
              text_to_tree,
              ['S', ['VP', ['VB', 'Yea'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']]).
pllm:training(3200040000345,
              unphrasify,
              [mark('S'), ['VB', 'Yea'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(3200040000345, tree_to_toks, ['Yea', me, too, '.']).
pllm:training(3200050000346,
              string,
              "Personally I thought the last one that came out was a little week.").
pllm:training(3200050000346,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Personally']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', last], ['NN', one]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            ['S', ['VP', ['VBD', came], ['PRT', ['RP', out]]]]
                          ]
                        ],
                        ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', little], ['NN', week]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200050000346,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Personally']],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', last], ['NN', one]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', came],
                ['PRT', ['RP', out]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', little], ['NN', week]],
                ['.', '.']
              ]).
pllm:training(3200050000346,
              tree_to_toks,
              [ 'Personally',
                'I',
                thought,
                'the-last-one',
                that,
                came,
                out,
                was,
                'a-little-week',
                ('.')
              ]).
pllm:training(3200060000347, string, "Why do you think that?").
pllm:training(3200060000347,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', think], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(3200060000347,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(3200060000347, tree_to_toks, ['Why', do, you, think, that, ?]).
pllm:training(3200070000348,
              string,
              "Because they didn't really explain things all that well.").
pllm:training(3200070000348,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'Because'],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', did],
                        ['RB', 'n\'t'],
                        ['ADVP', ['RB', really]],
                        [ 'VP',
                          ['VB', explain],
                          ['NP', ['NNS', things]],
                          ['SBAR', ['NP', ['NP', ['DT', all]], ['WHPP', ['WDT', that]]]]
                        ]
                      ]
                    ]
                  ],
                  ['ADVP', ['RB', well]],
                  ['.', '.']
                ]
              ]).
pllm:training(3200070000348,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'Because'],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', really]],
                ['VB', explain],
                ['NP', ['NNS', things]],
                mark('SBAR'),
                ['NP', ['DT', all]],
                ['WHPP', ['WDT', that]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(3200070000348,
              tree_to_toks,
              ['Because', they, did, 'n\'t', really, explain, things, all, that, well, '.']).
pllm:training(3200080000349,
              string,
              "Isn't that what they're suppose to do? Make you wonder?").
pllm:training(3200080000349,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['AUX', 'Is'],
                  ['RB', 'n\'t'],
                  [ 'NP',
                    ['NP', ['DT', that]],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['AUX', '\'re'],
                          ['VP', ['VB', suppose], ['S', ['VP', ['TO', to], ['VP', ['AUX', do]]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ],
                [ 'CORENLP',
                  ['S', ['VP', ['VB', 'Make'], ['S', ['NP', ['PRP', you]], ['VP', ['VB', wonder]]]], ['.', ?]]
                ]
              ]).
pllm:training(3200080000349,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['AUX', 'Is'],
                ['RB', 'n\'t'],
                ['NP', ['DT', that]],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', '\'re'],
                ['VB', suppose],
                mark('S'),
                ['TO', to],
                ['AUX', do],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Make'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', wonder],
                ['.', ?]
              ]).
pllm:training(3200080000349,
              tree_to_toks,
              ['Is', 'n\'t', that, what, they, '\'re', suppose, to, do, ?, 'Make', you, wonder, ?]).
pllm:training(3200090000350,
              string,
              "Yea, but I would have liked to have seen a bit more than what the ending gave.").
pllm:training(3200090000350,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yea']],
                  [',', ','],
                  ['CC', but],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      [ 'VP',
                        ['VBN', liked],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', have],
                              [ 'VP',
                                ['VBN', seen],
                                ['NP', ['NP', ['DT', a], ['NN', bit]], ['JJR', more]],
                                [ 'PP',
                                  ['IN', than],
                                  [ 'SBAR',
                                    ['NP', ['WP', what]],
                                    [ 'S',
                                      ['NP', ['NP', ['DT', the]], ['VP', ['VBG', ending]]],
                                      ['VP', ['VBD', gave]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200090000350,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                ['VBN', liked],
                mark('S'),
                ['TO', to],
                ['VB', have],
                ['VBN', seen],
                ['NP', ['DT', a], ['NN', bit]],
                ['JJR', more],
                ['IN', than],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', the]],
                ['VBG', ending],
                ['VBD', gave],
                ['.', '.']
              ]).
pllm:training(3200090000350,
              tree_to_toks,
              [ 'Yea',
                (','),
                but,
                'I',
                would,
                have,
                liked,
                to,
                have,
                seen,
                'a-bit',
                more,
                than,
                what,
                the,
                ending,
                gave,
                ('.')
              ]).
pllm:training(3200100000351, string, "Yea that would have been nice.").
pllm:training(3200100000351,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yea']],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['MD', would],
                    ['VP', ['VB', have], ['VP', ['VBN', been], ['ADJP', ['JJ', nice]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200100000351,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yea']],
                ['NP', ['DT', that]],
                ['MD', would],
                ['VB', have],
                ['VBN', been],
                ['ADJP', ['JJ', nice]],
                ['.', '.']
              ]).
pllm:training(3200100000351, tree_to_toks, ['Yea', that, would, have, been, nice, '.']).
pllm:training(3300010000353,
              string,
              "I was so excited about the first new Star Wars Movie.").
pllm:training(3300010000353,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'ADJP',
                      ['RB', so],
                      ['JJ', excited],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['DT', the],
                          ['JJ', first],
                          ['JJ', new],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', 'Movie']
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300010000353,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['RB', so],
                ['JJ', excited],
                ['IN', about],
                [ 'NP',
                  ['DT', the],
                  ['JJ', first],
                  ['JJ', new],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', 'Movie']
                ],
                ['.', '.']
              ]).
pllm:training(3300010000353,
              tree_to_toks,
              ['I', was, 'ADJP', so, excited, about, 'the-first-new-Star-Wars-Movie', '.']).
pllm:training(3300020000354, string, "Why is that?").
pllm:training(3300020000354,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['WHADVP', ['WRB', 'Why']], ['S', ['VBZ', is], ['NP', ['DT', that]]], ['.', ?]]
              ]).
pllm:training(3300020000354,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(3300020000354, tree_to_toks, ['Why', is, that, ?]).
pllm:training(3300030000355, string, "There were several reasons, not just one.").
pllm:training(3300030000355,
              text_to_tree,
              [ 'S',
                ['NP', ['EX', 'There']],
                [ 'VP',
                  ['AUX', were],
                  [ 'NP',
                    ['NP', ['JJ', several], ['NNS', reasons]],
                    [',', ','],
                    ['CONJP', ['RB', not], ['RB', just]],
                    ['NP', ['CD', one]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3300030000355,
              unphrasify,
              [ mark('S'),
                ['NP', ['EX', 'There']],
                ['AUX', were],
                ['NP', ['JJ', several], ['NNS', reasons]],
                [',', ','],
                ['CONJP', ['RB', not], ['RB', just]],
                ['NP', ['CD', one]],
                ['.', '.']
              ]).
pllm:training(3300030000355,
              tree_to_toks,
              ['There', were, 'several-reasons', ',', not, just, one, '.']).
pllm:training(3300040000356, string, "Such as?").
pllm:training(3300040000356,
              text_to_tree,
              ['CORENLP', ['FRAG', ['NP', ['JJ', 'Such']], ['PP', ['IN', as]], ['.', ?]]]).
pllm:training(3300040000356,
              unphrasify,
              [mark('CORENLP'), mark('FRAG'), ['NP', ['JJ', 'Such']], ['IN', as], ['.', ?]]).
pllm:training(3300040000356, tree_to_toks, ['Such', as, ?]).
pllm:training(3300050000357,
              string,
              "I was excited about the stars that I remembered from childhood being a part of them.").
pllm:training(3300050000357,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'ADJP',
                      ['JJ', excited],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', stars]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              ['NP', ['PRP', 'I']],
                              [ 'VP',
                                ['VBD', remembered],
                                ['PP', ['IN', from], ['NP', ['NN', childhood]]],
                                [ 'S',
                                  [ 'VP',
                                    ['VBG', being],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', part]],
                                      ['PP', ['IN', of], ['NP', ['PRP', them]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300050000357,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['JJ', excited],
                ['IN', about],
                ['NP', ['DT', the], ['NNS', stars]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', remembered],
                ['IN', from],
                ['NP', ['NN', childhood]],
                mark('S'),
                ['VBG', being],
                ['NP', ['DT', a], ['NN', part]],
                ['IN', of],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(3300050000357,
              tree_to_toks,
              [ 'I',
                was,
                'ADJP',
                excited,
                about,
                'the-stars',
                that,
                'I',
                remembered,
                from,
                childhood,
                being,
                'a-part',
                of,
                them,
                ('.')
              ]).
pllm:training(3300060000358,
              string,
              "I enjoyed this also, though I am much younger than you.").
pllm:training(3300060000358,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', enjoyed],
                    ['NP', ['DT', this]],
                    ['ADVP', ['RB', also]],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', am],
                          [ 'ADJP',
                            ['ADJP', ['JJ', much], ['JJR', younger]],
                            ['PP', ['IN', than], ['NP', ['PRP', you]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300060000358,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', enjoyed],
                ['NP', ['DT', this]],
                ['ADVP', ['RB', also]],
                [',', ','],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['ADJP', ['JJ', much], ['JJR', younger]],
                ['IN', than],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(3300060000358,
              tree_to_toks,
              ['I', enjoyed, this, also, ',', though, 'I', am, 'ADJP', much, younger, than, you, '.']).
pllm:training(3300070000359,
              string,
              "Why do you have to remind me of this? Princess Leia was my favorite.").
pllm:training(3300070000359,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['WHADVP', ['WRB', 'Why']],
                    [ 'S',
                      ['VB', do],
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VB', have],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', remind],
                              ['NP', ['PRP', me]],
                              ['PP', ['IN', of], ['NP', ['DT', this]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                    ['VP', ['VBD', was], ['NP', ['PRP$', my], ['NN', favorite]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3300070000359,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', remind],
                ['NP', ['PRP', me]],
                ['IN', of],
                ['NP', ['DT', this]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['VBD', was],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['.', '.']
              ]).
pllm:training(3300070000359,
              tree_to_toks,
              [ 'Why',
                do,
                you,
                have,
                to,
                remind,
                me,
                of,
                this,
                (?),
                'Princess-Leia',
                was,
                'my-favorite',
                ('.')
              ]).
pllm:training(3300080000360,
              string,
              "I enjoyed her too, and it's too bad that she won't be around for the premiere of the next movie.").
pllm:training(3300080000360,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VBD', enjoyed], ['NP', ['PRP$', her]], ['ADVP', ['RB', too]]]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADJP', ['RB', too], ['JJ', bad]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['MD', wo],
                            ['RB', 'n\'t'],
                            [ 'VP',
                              ['VB', be],
                              ['ADVP', ['RB', around]],
                              [ 'PP',
                                ['IN', for],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NN', premiere]],
                                  [ 'PP',
                                    ['IN', of],
                                    ['NP', ['DT', the], ['JJ', next], ['NN', movie]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300080000360,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', enjoyed],
                ['NP', ['PRP$', her]],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', too], ['JJ', bad]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', she]],
                ['MD', wo],
                ['RB', 'n\'t'],
                ['VB', be],
                ['ADVP', ['RB', around]],
                ['IN', for],
                ['NP', ['DT', the], ['NN', premiere]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(3300080000360,
              tree_to_toks,
              [ 'I',
                enjoyed,
                her,
                too,
                (','),
                and,
                it,
                '\'s',
                too,
                bad,
                that,
                she,
                wo,
                'n\'t',
                be,
                around,
                for,
                'the-premiere',
                of,
                'the-next-movie',
                ('.')
              ]).
pllm:training(3300090000361,
              string,
              "Yes, I cried when I heard about Carrie Fisher's death.").
pllm:training(3300090000361,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', cried],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', heard],
                          [ 'PP',
                            ['IN', about],
                            [ 'NP',
                              ['NP', ['NNP', 'Carrie'], ['NNP', 'Fisher'], ['POS', '\'s']],
                              ['NN', death]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300090000361,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', cried],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                ['IN', about],
                ['NP', ['NNP', 'Carrie'], ['NNP', 'Fisher'], ['POS', '\'s']],
                ['NN', death],
                ['.', '.']
              ]).
pllm:training(3300090000361,
              tree_to_toks,
              ['Yes', ',', 'I', cried, when, 'I', heard, about, 'Carrie-Fisher-\'s', death, '.']).
pllm:training(3300100000362, string, "She was an inspiration.").
pllm:training(3300100000362,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'She']],
                  ['VP', ['VBD', was], ['NP', ['DT', an], ['NN', inspiration]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3300100000362,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBD', was],
                ['NP', ['DT', an], ['NN', inspiration]],
                ['.', '.']
              ]).
pllm:training(3300100000362, tree_to_toks, ['She', was, 'an-inspiration', '.']).
pllm:training(3400010000364, string, "Do you like Star Wars?").
pllm:training(3400010000364,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(3400010000364,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(3400010000364, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(3400020000365, string, "It's okay").
pllm:training(3400020000365,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', okay]]], ['.', '.']]]).
pllm:training(3400020000365,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', okay]],
                ['.', '.']
              ]).
pllm:training(3400020000365, tree_to_toks, ['It', '\'s', okay, '.']).
pllm:training(3400030000366, string, "What did you like about it").
pllm:training(3400030000366,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                ],
                ['.', '.']
              ]).
pllm:training(3400030000366,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(3400030000366, tree_to_toks, ['What', did, you, like, about, it, '.']).
pllm:training(3400040000367, string, "the space battles").
pllm:training(3400040000367,
              text_to_tree,
              ['S', ['NP', ['DT', the], ['NN', space]], ['VP', ['VBZ', battles]], ['.', '.']]).
pllm:training(3400040000367,
              unphrasify,
              [mark('S'), ['NP', ['DT', the], ['NN', space]], ['VBZ', battles], ['.', '.']]).
pllm:training(3400040000367, tree_to_toks, ['the-space', battles, '.']).
pllm:training(3400050000368, string, "I liked Jar Jar").
pllm:training(3400050000368,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['NNP', 'Jar'], ['NNP', 'Jar']]],
                  ['.', '.']
                ]
              ]).
pllm:training(3400050000368,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar']],
                ['.', '.']
              ]).
pllm:training(3400050000368, tree_to_toks, ['I', liked, '', '.']).
pllm:training(3400060000369, string, "He wasn't a popular character").
pllm:training(3400060000369,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', was],
                    ['RB', 'n\'t'],
                    ['NP', ['DT', a], ['JJ', popular], ['NN', character]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400060000369,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['RB', 'n\'t'],
                ['NP', ['DT', a], ['JJ', popular], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(3400060000369, tree_to_toks, ['He', was, 'n\'t', 'a-popular-character', '.']).
pllm:training(3400070000370, string, "I thought he was funny").
pllm:training(3400070000370,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    ['SBAR', ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', funny]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400070000370,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(3400070000370, tree_to_toks, ['I', thought, he, was, funny, '.']).
pllm:training(3400080000371, string, "He was too goofy").
pllm:training(3400080000371,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  ['VP', ['VBD', was], ['ADJP', ['RB', too], ['JJ', goofy]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3400080000371,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADJP', ['RB', too], ['JJ', goofy]],
                ['.', '.']
              ]).
pllm:training(3400080000371, tree_to_toks, ['He', was, too, goofy, '.']).
pllm:training(3400090000372, string, "He was a bad as a  senator").
pllm:training(3400090000372,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', bad]],
                      ['PP', ['IN', as], ['NP', ['DT', a], ['NN', senator]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400090000372,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', bad]],
                ['IN', as],
                ['NP', ['DT', a], ['NN', senator]],
                ['.', '.']
              ]).
pllm:training(3400090000372, tree_to_toks, ['He', was, 'a-bad', as, 'a-senator', '.']).
pllm:training(3400100000373, string, "That's true").
pllm:training(3400100000373,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
              ]).
pllm:training(3400100000373,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.']
              ]).
pllm:training(3400100000373, tree_to_toks, ['That', '\'s', true, '.']).
pllm:training(3500010000375,
              string,
              "Who is the greatest Sith? Other than Vader, that's too easy.").
pllm:training(3500010000375,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'Who']],
                    [ 'S',
                      ['VBZ', is],
                      ['NP', ['NP', ['DT', the], ['JJS', greatest]], ['NP', ['NNP', 'Sith']]]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['S', ['ADJP', ['JJ', 'Other'], ['PP', ['IN', than], ['NP', ['NNP', 'Vader']]]]],
                  [',', ','],
                  ['NP', ['DT', that]],
                  ['VP', ['AUX', '\'s'], ['ADJP', ['RB', too], ['JJ', easy]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3500010000375,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['DT', the], ['JJS', greatest]],
                ['NP', ['NNP', 'Sith']],
                ['.', ?],
                mark('S'),
                mark('S'),
                'ADJP',
                ['JJ', 'Other'],
                ['IN', than],
                ['NP', ['NNP', 'Vader']],
                [',', ','],
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                ['ADJP', ['RB', too], ['JJ', easy]],
                ['.', '.']
              ]).
pllm:training(3500010000375,
              tree_to_toks,
              [ 'Who',
                (is),
                'the-greatest',
                'Sith',
                (?),
                'ADJP',
                'Other',
                than,
                'Vader',
                (','),
                that,
                '\'s',
                too,
                easy,
                ('.')
              ]).
pllm:training(3500020000376, string, "Darth Maul is my favorite.").
pllm:training(3500020000376,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]],
                ['VP', ['AUX', is], ['NP', ['PRP$', my], ['NN', favorite]]],
                ['.', '.']
              ]).
pllm:training(3500020000376,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['AUX', is],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['.', '.']
              ]).
pllm:training(3500020000376, tree_to_toks, ['Darth', 'Maul', is, 'my-favorite', '.']).
pllm:training(3500030000377,
              string,
              "He's not that powerful in the force though. His skill is all sword play.").
pllm:training(3500030000377,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['RB', not],
                    ['NP', ['DT', that], ['JJ', powerful]],
                    ['PP', ['IN', in], ['NP', ['DT', the], ['NN', force]]],
                    ['ADVP', ['IN', though]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', skill]],
                    ['VP', ['VBZ', is], ['NP', ['DT', all], ['NN', sword], ['NN', play]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3500030000377,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['AUX', '\'s'],
                ['RB', not],
                ['NP', ['DT', that], ['JJ', powerful]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', force]],
                ['ADVP', ['IN', though]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', skill]],
                ['VBZ', is],
                ['NP', ['DT', all], ['NN', sword], ['NN', play]],
                ['.', '.']
              ]).
pllm:training(3500030000377,
              tree_to_toks,
              [ 'He',
                '\'s',
                not,
                'that-powerful',
                in,
                'the-force',
                though,
                ('.'),
                'His-skill',
                (is),
                'all-sword-play',
                ('.')
              ]).
pllm:training(3500040000378,
              string,
              "I don't agree. It would take incredible force powers to master his double sword.").
pllm:training(3500040000378,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', agree]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['MD', would],
                      [ 'VP',
                        ['VB', take],
                        ['NP', ['JJ', incredible], ['NN', force], ['NNS', powers]],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', master],
                              ['NP', ['PRP$', his], ['JJ', double], ['NN', sword]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3500040000378,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', agree],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', would],
                ['VB', take],
                ['NP', ['JJ', incredible], ['NN', force], ['NNS', powers]],
                mark('S'),
                ['TO', to],
                ['VB', master],
                ['NP', ['PRP$', his], ['JJ', double], ['NN', sword]],
                ['.', '.']
              ]).
pllm:training(3500040000378,
              tree_to_toks,
              [ 'I',
                do,
                not,
                agree,
                ('.'),
                'It',
                would,
                take,
                'incredible-force-powers',
                to,
                master,
                'his-double-sword',
                ('.')
              ]).
pllm:training(3500050000379,
              string,
              "Maybe, but he doesn't seem to use any other force techniques with any regularity.").
pllm:training(3500050000379,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Maybe']],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', does],
                      ['RB', not],
                      [ 'VP',
                        ['VB', seem],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', use],
                              [ 'NP',
                                ['DT', any],
                                ['JJ', other],
                                ['NN', force],
                                ['NNS', techniques]
                              ],
                              ['PP', ['IN', with], ['NP', ['DT', any], ['NN', regularity]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3500050000379,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Maybe']],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['VB', seem],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', any], ['JJ', other], ['NN', force], ['NNS', techniques]],
                ['IN', with],
                ['NP', ['DT', any], ['NN', regularity]],
                ['.', '.']
              ]).
pllm:training(3500050000379,
              tree_to_toks,
              [ 'Maybe',
                (','),
                but,
                he,
                does,
                not,
                seem,
                to,
                use,
                'any-other-force-techniques',
                with,
                'any-regularity',
                ('.')
              ]).
pllm:training(3500060000380, string, "Like what?").
pllm:training(3500060000380,
              text_to_tree,
              ['CORENLP', ['SBAR', ['INTJ', ['UH', 'Like']], ['NP', ['WP', what]], ['.', ?]]]).
pllm:training(3500060000380,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['INTJ', ['UH', 'Like']], ['NP', ['WP', what]], ['.', ?]]).
pllm:training(3500060000380, tree_to_toks, ['Like', what, ?]).
pllm:training(3500070000381,
              string,
              "Force push, force choke, force jump, things like that.").
pllm:training(3500070000381,
              text_to_tree,
              [ 'S',
                [ 'VP',
                  ['VB', 'Force'],
                  [ 'S',
                    [ 'VP',
                      ['VB', push],
                      [',', ','],
                      ['INTJ', ['VB', force], ['VB', choke]],
                      [',', ','],
                      [ 'NP',
                        ['NP', ['NN', force], ['NN', jump]],
                        [',', ','],
                        ['NP', ['NP', ['NNS', things]], ['PP', ['IN', like], ['NP', ['DT', that]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3500070000381,
              unphrasify,
              [ mark('S'),
                ['VB', 'Force'],
                mark('S'),
                ['VB', push],
                [',', ','],
                ['INTJ', ['VB', force], ['VB', choke]],
                [',', ','],
                ['NP', ['NN', force], ['NN', jump]],
                [',', ','],
                ['NP', ['NNS', things]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(3500070000381,
              tree_to_toks,
              ['Force', push, ',', force, choke, ',', 'force-jump', ',', things, like, that, '.']).
pllm:training(3500080000382, string, "Does anyone other than Darth Vader?").
pllm:training(3500080000382,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VBZ', 'Does'],
                    ['NP', ['NN', anyone], ['JJ', other]],
                    ['PP', ['IN', than], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3500080000382,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Does'],
                ['NP', ['NN', anyone], ['JJ', other]],
                ['IN', than],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['.', ?]
              ]).
pllm:training(3500080000382,
              tree_to_toks,
              ['Does', 'anyone-other', than, 'Darth-Vader', ?]).
pllm:training(3500090000383,
              string,
              "Kylo Ren uses force moves quite a bit. Remember when he stopped that laser blast in mid-air?").
pllm:training(3500090000383,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren']],
                    [ 'VP',
                      ['VBZ', uses],
                      ['NP', ['NN', force], ['NNS', moves]],
                      ['ADVP', ['RB', quite], ['NP', ['DT', a], ['NN', bit]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', 'Remember'],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', stopped],
                            ['NP', ['DT', that], ['NN', laser], ['NN', blast]],
                            ['PP', ['IN', in], ['NP', ['NN', 'mid-air']]]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(3500090000383,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren']],
                ['VBZ', uses],
                ['NP', ['NN', force], ['NNS', moves]],
                'ADVP',
                ['RB', quite],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Remember'],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', stopped],
                ['NP', ['DT', that], ['NN', laser], ['NN', blast]],
                ['IN', in],
                ['NP', ['NN', 'mid-air']],
                ['.', ?]
              ]).
pllm:training(3500090000383,
              tree_to_toks,
              [ 'Kylo-Ren',
                uses,
                'force-moves',
                'ADVP',
                quite,
                'a-bit',
                ('.'),
                'Remember',
                when,
                he,
                stopped,
                'that-laser-blast',
                in,
                'mid-air',
                (?)
              ]).
pllm:training(3500100000384,
              string,
              "That was cool. Do you think he is more powerful than Vader?").
pllm:training(3500100000384,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['DT', 'That']], ['VP', ['VBD', was], ['ADJP', ['JJ', cool]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['VB', 'Do'],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', is],
                            [ 'ADJP',
                              ['ADJP', ['RBR', more], ['JJ', powerful]],
                              ['PP', ['IN', than], ['NP', ['NNP', 'Vader']]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(3500100000384,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', was],
                ['ADJP', ['JJ', cool]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                'ADJP',
                ['ADJP', ['RBR', more], ['JJ', powerful]],
                ['IN', than],
                ['NP', ['NNP', 'Vader']],
                ['.', ?]
              ]).
pllm:training(3500100000384,
              tree_to_toks,
              [ 'That',
                was,
                cool,
                ('.'),
                'Do',
                you,
                think,
                he,
                (is),
                'ADJP',
                more,
                powerful,
                than,
                'Vader',
                (?)
              ]).
pllm:training(3600010000386,
              string,
              "Did you know one of the actors is banned from Star Wars events?").
pllm:training(3600010000386,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['CD', one]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', actors]]]
                        ],
                        [ 'VP',
                          ['VBZ', is],
                          [ 'VP',
                            ['VBN', banned],
                            [ 'PP',
                              ['IN', from],
                              ['NP', ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', events]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3600010000386,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', actors]],
                ['VBZ', is],
                ['VBN', banned],
                ['IN', from],
                ['NP', ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', events]],
                ['.', ?]
              ]).
pllm:training(3600010000386,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                one,
                of,
                'the-actors',
                (is),
                banned,
                from,
                'Star-Wars-events',
                (?)
              ]).
pllm:training(3600020000387, string, "Really?  That seems strange and bizarre.").
pllm:training(3600020000387,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', seems], ['ADJP', ['JJ', strange], ['CC', and], ['JJ', bizarre]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3600020000387,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', seems],
                ['ADJP', ['JJ', strange], ['CC', and], ['JJ', bizarre]],
                ['.', '.']
              ]).
pllm:training(3600020000387,
              tree_to_toks,
              ['Really', ?, 'That', seems, strange, and, bizarre, '.']).
pllm:training(3600030000388,
              string,
              "Yeah.  Apparently, George Lucas doesn't like him and think he's annoying?").
pllm:training(3600030000388,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Apparently']],
                  [',', ','],
                  ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                  [ 'VP',
                    ['AUX', does],
                    ['RB', not],
                    [ 'VP',
                      ['VP', ['VB', like], ['NP', ['PRP', him]]],
                      ['CC', and],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          ['S', ['NP', ['PRP', he]], ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', annoying]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3600030000388,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('S'),
                ['ADVP', ['RB', 'Apparently']],
                [',', ','],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['AUX', does],
                ['RB', not],
                ['VB', like],
                ['NP', ['PRP', him]],
                ['CC', and],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', annoying]],
                ['.', ?]
              ]).
pllm:training(3600030000388,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'Apparently',
                (','),
                'George-Lucas',
                does,
                not,
                like,
                him,
                and,
                think,
                he,
                '\'s',
                annoying,
                (?)
              ]).
pllm:training(3600040000389, string, "Harrison Ford?  Mark Hamill?").
pllm:training(3600040000389,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', ?]]],
                ['CORENLP', ['NP', ['NNP', 'Mark'], ['NNP', 'Hamill'], ['.', ?]]]
              ]).
pllm:training(3600040000389,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', ?]],
                mark('CORENLP'),
                ['NP', ['NNP', 'Mark'], ['NNP', 'Hamill'], ['.', ?]]
              ]).
pllm:training(3600040000389, tree_to_toks, ['Harrison-Ford-?', 'Mark-Hamill-?']).
pllm:training(3600050000390,
              string,
              "No, it's actually the guy who played Darth Vader in the original movies.").
pllm:training(3600050000390,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['ADVP', ['RB', actually]],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', guy]],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          [ 'VP',
                            ['VBD', played],
                            [ 'NP',
                              ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                              [ 'PP',
                                ['IN', in],
                                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600050000390,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', actually]],
                ['NP', ['DT', the], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(3600050000390,
              tree_to_toks,
              [ 'No',
                (','),
                it,
                '\'s',
                actually,
                'the-guy',
                who,
                played,
                'Darth-Vader',
                in,
                'the-original-movies',
                ('.')
              ]).
pllm:training(3600060000391,
              string,
              "Oh, I know who you're talking about.  I think his name is David Prowse.").
pllm:training(3600060000391,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['VP', ['VB', '\'re'], ['VP', ['VBG', talking], ['PP', ['IN', about]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP$', his], ['NN', name]],
                          ['VP', ['VBZ', is], ['NP', ['NNP', 'David'], ['NNP', 'Prowse']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3600060000391,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', '\'re'],
                ['VBG', talking],
                ['IN', about],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', his], ['NN', name]],
                ['VBZ', is],
                ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                ['.', '.']
              ]).
pllm:training(3600060000391,
              tree_to_toks,
              [ 'Oh',
                (','),
                'I',
                know,
                who,
                you,
                '\'re',
                talking,
                about,
                ('.'),
                'I',
                think,
                'his-name',
                (is),
                'David-Prowse',
                ('.')
              ]).
pllm:training(3600070000392,
              string,
              "Since he didn't voice Vader, I guess they don't seem inclined to stick up for him.").
pllm:training(3600070000392,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'Since'],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBD', did], ['RB', 'n\'t'], ['VP', ['VB', voice], ['NP', ['NNP', 'Vader']]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VB', do],
                          ['RB', not],
                          [ 'VP',
                            ['VB', seem],
                            [ 'ADJP',
                              ['JJ', inclined],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', stick],
                                    ['PRT', ['RP', up]],
                                    ['PP', ['IN', for], ['NP', ['PRP', him]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600070000392,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'Since'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', voice],
                ['NP', ['NNP', 'Vader']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', seem],
                'ADJP',
                ['JJ', inclined],
                mark('S'),
                ['TO', to],
                ['VB', stick],
                ['PRT', ['RP', up]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3600070000392,
              tree_to_toks,
              [ 'Since',
                he,
                did,
                'n\'t',
                voice,
                'Vader',
                (','),
                'I',
                guess,
                they,
                do,
                not,
                seem,
                'ADJP',
                inclined,
                to,
                stick,
                up,
                for,
                him,
                ('.')
              ]).
pllm:training(3600080000393,
              string,
              "Well, anyway can play Vader so they don't need to kiss up to him.").
pllm:training(3600080000393,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well'], [',', ','], ['UH', anyway]],
                  ['PRN', ['SINV', ['VP', ['MD', can], ['VP', ['VB', play]]], ['NP', ['NNP', 'Vader']]]],
                  ['ADVP', ['RB', so]],
                  ['NP', ['PRP', they]],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', need],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', kiss],
                            ['PRT', ['RP', up]],
                            ['PP', ['IN', to], ['NP', ['PRP', him]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600080000393,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well'], [',', ','], ['UH', anyway]],
                'PRN',
                mark('SINV'),
                ['MD', can],
                ['VB', play],
                ['NP', ['NNP', 'Vader']],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', need],
                mark('S'),
                ['TO', to],
                ['VB', kiss],
                ['PRT', ['RP', up]],
                ['IN', to],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3600080000393,
              tree_to_toks,
              [ 'Well',
                (','),
                anyway,
                'PRN',
                can,
                play,
                'Vader',
                so,
                they,
                do,
                not,
                need,
                to,
                kiss,
                up,
                to,
                him,
                ('.')
              ]).
pllm:training(3600090000394,
              string,
              "He's the one actor you would never be able to spot since his most famous role called for him wearing a mask.").
pllm:training(3600090000394,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['DT', the], ['CD', one], ['NN', actor]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          [ 'VP',
                            ['MD', would],
                            ['ADVP', ['RB', never]],
                            [ 'VP',
                              ['VB', be],
                              [ 'ADJP',
                                ['JJ', able],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', spot],
                                      [ 'PP',
                                        ['IN', since],
                                        [ 'NP',
                                          [ 'NP',
                                            ['PRP$', his],
                                            ['ADJP', ['RBS', most], ['JJ', famous]],
                                            ['NN', role]
                                          ],
                                          [ 'VP',
                                            ['VBN', called],
                                            [ 'PP',
                                              ['IN', for],
                                              [ 'S',
                                                ['NP', ['PRP', him]],
                                                [ 'VP',
                                                  ['VBG', wearing],
                                                  ['NP', ['DT', a], ['NN', mask]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600090000394,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['CD', one], ['NN', actor]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', would],
                ['ADVP', ['RB', never]],
                ['VB', be],
                'ADJP',
                ['JJ', able],
                mark('S'),
                ['TO', to],
                ['VB', spot],
                ['IN', since],
                ['NP', ['PRP$', his], ['ADJP', ['RBS', most], ['JJ', famous]], ['NN', role]],
                ['VBN', called],
                ['IN', for],
                mark('S'),
                ['NP', ['PRP', him]],
                ['VBG', wearing],
                ['NP', ['DT', a], ['NN', mask]],
                ['.', '.']
              ]).
pllm:training(3600090000394,
              tree_to_toks,
              [ 'He',
                '\'s',
                'the-one-actor',
                you,
                would,
                never,
                be,
                'ADJP',
                able,
                to,
                spot,
                since,
                'his-most-famous-role',
                called,
                for,
                him,
                wearing,
                'a-mask',
                ('.')
              ]).
pllm:training(3600100000395, string, "That's gotta be a strange feeling.").
pllm:training(3600100000395,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'VP',
                      ['VBN', got],
                      [ 'S',
                        [ 'VP',
                          ['TO', ta],
                          ['VP', ['VB', be], ['NP', ['DT', a], ['JJ', strange], ['NN', feeling]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600100000395,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['VBN', got],
                mark('S'),
                ['TO', ta],
                ['VB', be],
                ['NP', ['DT', a], ['JJ', strange], ['NN', feeling]],
                ['.', '.']
              ]).
pllm:training(3600100000395,
              tree_to_toks,
              ['That', '\'s', got, ta, be, 'a-strange-feeling', '.']).
pllm:training(3700010000397,
              string,
              "The only one of the prequel Star Wars movies I really like is Revenge of the Sith.").
pllm:training(3700010000397,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['JJ', only], ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', the],
                          ['NN', prequel],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NNS', movies]
                        ]
                      ]
                    ],
                    ['SBAR', ['S', ['NP', ['PRP', 'I']], ['ADVP', ['RB', really]], ['VP', ['VB', like]]]]
                  ],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['NN', 'Revenge']],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3700010000397,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', only], ['CD', one]],
                ['IN', of],
                [ 'NP',
                  ['DT', the],
                  ['NN', prequel],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NNS', movies]
                ],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['VBZ', is],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(3700010000397,
              tree_to_toks,
              [ 'The-only-one',
                of,
                'the-prequel-Star-Wars-movies',
                'I',
                really,
                like,
                (is),
                'Revenge',
                of,
                'the-Sith',
                ('.')
              ]).
pllm:training(3700020000398, string, "Is that the third one?").
pllm:training(3700020000398,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBZ', 'Is'],
                  ['NP', ['DT', that]],
                  ['NP', ['DT', the], ['JJ', third], ['NN', one]],
                  ['.', ?]
                ]
              ]).
pllm:training(3700020000398,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['NP', ['DT', the], ['JJ', third], ['NN', one]],
                ['.', ?]
              ]).
pllm:training(3700020000398, tree_to_toks, ['Is', that, 'the-third-one', ?]).
pllm:training(3700030000399, string, "Yeah. It's the climax of the prequels.").
pllm:training(3700030000399,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', climax]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', prequels]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700030000399,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['NN', climax]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(3700030000399,
              tree_to_toks,
              ['Yeah', '.', 'It', '\'s', 'the-climax', of, 'the-prequels', '.']).
pllm:training(3700040000400,
              string,
              "Why do you like that one? I never even got around to seeing it.").
pllm:training(3700040000400,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  [ 'S',
                    ['AUX', do],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', like], ['NP', ['DT', that], ['NN', one]]]
                  ],
                  ['.', ?]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', never]],
                    ['ADVP', ['RB', even]],
                    [ 'VP',
                      ['VBD', got],
                      ['ADVP', ['RB', around]],
                      ['PP', ['IN', to], ['S', ['VP', ['VBG', seeing], ['NP', ['PRP', it]]]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700040000400,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', that], ['NN', one]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', even]],
                ['VBD', got],
                ['ADVP', ['RB', around]],
                ['IN', to],
                mark('S'),
                ['VBG', seeing],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(3700040000400,
              tree_to_toks,
              [ 'Why',
                do,
                you,
                like,
                'that-one',
                (?),
                'I',
                never,
                even,
                got,
                around,
                to,
                seeing,
                it,
                ('.')
              ]).
pllm:training(3700050000401,
              string,
              "Well, I can understand that. The second one is very bad.").
pllm:training(3700050000401,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['MD', can], ['VP', ['VB', understand], ['NP', ['DT', that]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', second], ['NN', one]],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', very], ['JJ', bad]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700050000401,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', understand],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', second], ['NN', one]],
                ['VBZ', is],
                ['ADJP', ['RB', very], ['JJ', bad]],
                ['.', '.']
              ]).
pllm:training(3700050000401,
              tree_to_toks,
              ['Well', ',', 'I', can, understand, that, '.', 'The-second-one', is, very, bad, '.']).
pllm:training(3700060000402,
              string,
              "It's just so slow, and the twists come out of nowhere.").
pllm:training(3700060000402,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['AUX', '\'s'], ['ADVP', ['RB', just]], ['ADJP', ['RB', so], ['JJ', slow]]]
                ],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['DT', the], ['NNS', twists]],
                  ['VP', ['VB', come], ['PP', ['IN', out], ['PP', ['IN', of], ['NP', ['RB', nowhere]]]]]
                ],
                ['.', '.']
              ]).
pllm:training(3700060000402,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', '\'s'],
                ['ADVP', ['RB', just]],
                ['ADJP', ['RB', so], ['JJ', slow]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', the], ['NNS', twists]],
                ['VB', come],
                ['IN', out],
                ['IN', of],
                ['NP', ['RB', nowhere]],
                ['.', '.']
              ]).
pllm:training(3700060000402,
              tree_to_toks,
              ['It', '\'s', just, so, slow, ',', and, 'the-twists', come, out, of, nowhere, '.']).
pllm:training(3700070000403,
              string,
              "The first one, too, felt a bit unnecessary. And the explanation for what the force is doesn't help.").
pllm:training(3700070000403,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', first], ['CD', one]],
                    [',', ','],
                    ['ADVP', ['RB', too]],
                    [',', ','],
                    [ 'VP',
                      ['VBD', felt],
                      ['S', ['NP', ['DT', a], ['NN', bit]], ['ADJP', ['JJ', unnecessary]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', explanation]],
                      [ 'PP',
                        ['IN', for],
                        [ 'SBAR',
                          ['NP', ['WP', what]],
                          ['S', ['NP', ['DT', the], ['NN', force]], ['VP', ['VBZ', is]]]
                        ]
                      ]
                    ],
                    ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', help]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700070000403,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', first], ['CD', one]],
                [',', ','],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['VBD', felt],
                mark('S'),
                ['NP', ['DT', a], ['NN', bit]],
                ['ADJP', ['JJ', unnecessary]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['DT', the], ['NN', explanation]],
                ['IN', for],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', the], ['NN', force]],
                ['VBZ', is],
                ['VBZ', does],
                ['RB', not],
                ['VB', help],
                ['.', '.']
              ]).
pllm:training(3700070000403,
              tree_to_toks,
              [ 'The-first-one',
                (','),
                too,
                (','),
                felt,
                'a-bit',
                unnecessary,
                ('.'),
                'And',
                'the-explanation',
                for,
                what,
                'the-force',
                (is),
                does,
                not,
                help,
                ('.')
              ]).
pllm:training(3700080000404,
              string,
              "Yeah, that was rough. It made it feel less mystical.").
pllm:training(3700080000404,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    ['VP', ['VBD', was], ['ADJP', ['JJ', rough]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', made],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VB', feel], ['ADJP', ['RBR', less], ['JJ', mystical]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700080000404,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['ADJP', ['JJ', rough]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', made],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VB', feel],
                ['ADJP', ['RBR', less], ['JJ', mystical]],
                ['.', '.']
              ]).
pllm:training(3700080000404,
              tree_to_toks,
              ['Yeah', ',', that, was, rough, '.', 'It', made, it, feel, less, mystical, '.']).
pllm:training(3700090000405,
              string,
              "The third one, though, it helps you understand who Anakin is. And he's really the protagonist of the series.").
pllm:training(3700090000405,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', third], ['CD', one]],
                    [',', ','],
                    ['ADVP', ['RB', though]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', helps],
                      [ 'S',
                        ['NP', ['PRP', you]],
                        [ 'VP',
                          ['VB', understand],
                          [ 'SBAR',
                            ['NP', ['WP', who]],
                            ['S', ['NP', ['NNP', 'Anakin']], ['VP', ['VBZ', is]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADVP', ['RB', really]],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', protagonist]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NN', series]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700090000405,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', third], ['CD', one]],
                [',', ','],
                ['ADVP', ['RB', though]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', helps],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', understand],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['NNP', 'Anakin']],
                ['VBZ', is],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', really]],
                ['NP', ['DT', the], ['NN', protagonist]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(3700090000405,
              tree_to_toks,
              [ 'The-third-one',
                (','),
                though,
                (','),
                it,
                helps,
                you,
                understand,
                who,
                'Anakin',
                (is),
                ('.'),
                'And',
                he,
                '\'s',
                really,
                'the-protagonist',
                of,
                'the-series',
                ('.')
              ]).
pllm:training(3700100000406, string, "I've never thought of it that way.").
pllm:training(3700100000406,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'ve'],
                    ['ADVP', ['RB', never]],
                    [ 'VP',
                      ['VBN', thought],
                      ['PP', ['IN', of], ['NP', ['NP', ['PRP', it]], ['NP', ['DT', that], ['NN', way]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3700100000406,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['ADVP', ['RB', never]],
                ['VBN', thought],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['NP', ['DT', that], ['NN', way]],
                ['.', '.']
              ]).
pllm:training(3700100000406,
              tree_to_toks,
              ['I', '\'ve', never, thought, of, it, 'that-way', '.']).
pllm:training(3800010000408,
              string,
              "Have you seen the original Star Wars trilogy?").
pllm:training(3800010000408,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', original],
                      ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NN', trilogy]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3800010000408,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                [ 'NP',
                  ['DT', the],
                  ['JJ', original],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', trilogy]
                ],
                ['.', ?]
              ]).
pllm:training(3800010000408,
              tree_to_toks,
              ['Have', you, seen, 'the-original-Star-Wars-trilogy', ?]).
pllm:training(3800020000409,
              string,
              "Yes, my favorite was The Empire Strikes Back.  I really liked when Luke went to Dagoba!").
pllm:training(3800020000409,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yes']],
                    [',', ','],
                    ['NP', ['PRP$', my], ['NN', favorite]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                        ['SBAR', ['S', ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VBD', liked],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NNP', 'Luke']],
                          ['VP', ['VBD', went], ['PP', ['IN', to], ['NP', ['NNP', 'Dagoba']]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800020000409,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['VBD', was],
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                mark('SBAR'),
                mark('S'),
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', went],
                ['IN', to],
                ['NP', ['NNP', 'Dagoba']],
                ['.', '.']
              ]).
pllm:training(3800020000409,
              tree_to_toks,
              [ 'Yes',
                (','),
                'my-favorite',
                was,
                'The-Empire',
                'Strikes',
                'Back',
                ('.'),
                'I',
                really,
                liked,
                when,
                'Luke',
                went,
                to,
                'Dagoba',
                ('.')
              ]).
pllm:training(3800030000410,
              string,
              "Yeah, Yoda is one of my favorite characters.").
pllm:training(3800030000410,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['NNP', 'Yoda']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        ['NP', ['PRP$', my], ['JJ', favorite], ['NNS', characters]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800030000410,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', is],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NNS', characters]],
                ['.', '.']
              ]).
pllm:training(3800030000410,
              tree_to_toks,
              ['Yeah', ',', 'Yoda', is, one, of, 'my-favorite-characters', '.']).
pllm:training(3800040000411,
              string,
              "It was really cool when he got the x-wing out of the swamp after Luke failed to from a lack of faith.").
pllm:training(3800040000411,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADJP', ['RB', really], ['JJ', cool]],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', got],
                          ['NP', ['DT', the], ['NN', 'x-wing']],
                          [ 'PP',
                            ['IN', out],
                            ['IN', of],
                            [ 'NP',
                              ['DT', the],
                              [ 'NML',
                                [ 'S',
                                  [ 'VP',
                                    ['VB', swamp],
                                    [ 'SBAR',
                                      ['IN', after],
                                      [ 'S',
                                        ['NP', ['NNP', 'Luke']],
                                        [ 'VP',
                                          ['VBD', failed],
                                          ['S', ['VP', ['TO', to]]],
                                          [ 'PP',
                                            ['IN', from],
                                            [ 'NP',
                                              ['NP', ['DT', a], ['NN', lack]],
                                              ['PP', ['IN', of], ['NP', ['NN', faith]]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800040000411,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['ADJP', ['RB', really], ['JJ', cool]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['NP', ['DT', the], ['NN', 'x-wing']],
                ['IN', out],
                ['IN', of],
                ['DT', the],
                mark('NML'),
                mark('S'),
                ['VB', swamp],
                mark('SBAR'),
                ['IN', after],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', failed],
                mark('S'),
                ['TO', to],
                ['IN', from],
                ['NP', ['DT', a], ['NN', lack]],
                ['IN', of],
                ['NP', ['NN', faith]],
                ['.', '.']
              ]).
pllm:training(3800040000411,
              tree_to_toks,
              [ 'It',
                was,
                really,
                cool,
                when,
                he,
                got,
                'the-x-wing',
                out,
                of,
                the,
                swamp,
                after,
                'Luke',
                failed,
                to,
                from,
                'a-lack',
                of,
                faith,
                ('.')
              ]).
pllm:training(3800050000412,
              string,
              "I think Yoda must have been one of the most powerful jedi.").
pllm:training(3800050000412,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['NNP', 'Yoda']],
                        [ 'VP',
                          ['MD', must],
                          [ 'VP',
                            ['VB', have],
                            [ 'VP',
                              ['VBN', been],
                              [ 'NP',
                                ['NP', ['CD', one]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['DT', the],
                                    ['ADJP', ['RBS', most], ['JJ', powerful]],
                                    ['NN', jedi]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800050000412,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['MD', must],
                ['VB', have],
                ['VBN', been],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', powerful]], ['NN', jedi]],
                ['.', '.']
              ]).
pllm:training(3800050000412,
              tree_to_toks,
              ['I', think, 'Yoda', must, have, been, one, of, 'the-most-powerful-jedi', '.']).
pllm:training(3800060000413,
              string,
              "Me too, though I think Obi-wan Kenobi was becoming nearly as wise.  Especially after all his time on Tatooine.").
pllm:training(3800060000413,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'Me']],
                  [ 'VP',
                    ['ADVP', ['RB', too]],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['NNP', 'Obi-wan'], ['NNP', 'Kenobi']],
                              [ 'VP',
                                ['AUX', was],
                                [ 'VP',
                                  ['VBG', becoming],
                                  ['ADJP', ['RB', nearly], ['RB', as], ['JJ', wise]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'FRAG',
                    ['ADVP', ['RB', 'Especially']],
                    ['ADVP', ['RB', after], ['RB', all]],
                    [ 'NP',
                      ['NP', ['PRP$', his], ['NN', time]],
                      ['PP', ['IN', on], ['NP', ['NNP', 'Tatooine']]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800060000413,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                [',', ','],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Obi-wan'], ['NNP', 'Kenobi']],
                ['AUX', was],
                ['VBG', becoming],
                ['ADJP', ['RB', nearly], ['RB', as], ['JJ', wise]],
                ['.', '.'],
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Especially']],
                ['ADVP', ['RB', after], ['RB', all]],
                ['NP', ['PRP$', his], ['NN', time]],
                ['IN', on],
                ['NP', ['NNP', 'Tatooine']],
                ['.', '.']
              ]).
pllm:training(3800060000413,
              tree_to_toks,
              [ 'Me',
                too,
                (','),
                though,
                'I',
                think,
                'Obi-wan-Kenobi',
                was,
                becoming,
                nearly,
                (as),
                wise,
                ('.'),
                'Especially',
                after,
                all,
                'his-time',
                on,
                'Tatooine',
                ('.')
              ]).
pllm:training(3800070000414,
              string,
              "Do you think he really didn't recognize R2-D2 and C-3P0 in A New Hope?").
pllm:training(3800070000414,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['ADVP', ['RB', really]],
                      [ 'VP',
                        ['AUX', did],
                        ['RB', 'n\'t'],
                        [ 'VP',
                          ['VB', recognize],
                          [ 'NP',
                            ['NP', ['NN', 'R2-D2'], ['CC', and], ['NN', 'C']],
                            [:, -],
                            ['NP', ['CD', '3'], ['NNP', 'P0']]
                          ],
                          ['PP', ['IN', in], ['NP', ['DT', 'A'], ['JJ', 'New'], ['NN', 'Hope']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3800070000414,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', really]],
                ['AUX', did],
                ['RB', 'n\'t'],
                ['VB', recognize],
                ['NP', ['NN', 'R2-D2'], ['CC', and], ['NN', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NNP', 'P0']],
                ['IN', in],
                ['NP', ['DT', 'A'], ['JJ', 'New'], ['NN', 'Hope']],
                ['.', ?]
              ]).
pllm:training(3800070000414,
              tree_to_toks,
              [ 'Do',
                you,
                think,
                he,
                really,
                did,
                'n\'t',
                recognize,
                'R2-D2-and-C',
                (-),
                '3-P0',
                in,
                'A-New-Hope',
                (?)
              ]).
pllm:training(3800080000415,
              string,
              "It does seem kind of strange, but I suppose it had been nearly 20 years since he had last seen them.  Maybe he figured they had been sent to the spice mines of Kessel already (or at least 3P0.").
pllm:training(3800080000415,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', does],
                        [ 'S',
                          [ 'VP',
                            ['VB', seem],
                            ['ADJP', ['ADVP', ['RB', kind], ['RB', of]], ['JJ', strange]]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', suppose],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', it]],
                            [ 'VP',
                              ['VBD', had],
                              [ 'VP',
                                ['VBN', been],
                                ['NP', ['QP', ['RB', nearly], ['CD', '20']], ['NNS', years]],
                                [ 'SBAR',
                                  ['IN', since],
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['VBD', had],
                                      ['ADVP', ['JJ', last]],
                                      ['VP', ['VBN', seen], ['NP', ['PRP', them]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', figured],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VBD', had],
                            [ 'VP',
                              ['VBN', been],
                              [ 'VP',
                                ['VBN', sent],
                                [ 'PP',
                                  ['IN', to],
                                  [ 'NP',
                                    [ 'NP',
                                      ['NP', ['DT', the], ['NN', spice], ['NNS', mines]],
                                      ['PP', ['IN', of], ['NP', ['NNP', 'Kessel']]],
                                      ['ADVP', ['RB', already]]
                                    ],
                                    ['-LRB-', '-LRB-'],
                                    ['CC', or],
                                    [ 'NP',
                                      ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '3']],
                                      ['NN', 'P0']
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800080000415,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', does],
                mark('S'),
                ['VB', seem],
                ['ADJP', ['ADVP', ['RB', kind], ['RB', of]], ['JJ', strange]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', had],
                ['VBN', been],
                ['NP', ['QP', ['RB', nearly], ['CD', '20']], ['NNS', years]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', had],
                ['ADVP', ['JJ', last]],
                ['VBN', seen],
                ['NP', ['PRP', them]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', he]],
                ['VBD', figured],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', had],
                ['VBN', been],
                ['VBN', sent],
                ['IN', to],
                ['NP', ['DT', the], ['NN', spice], ['NNS', mines]],
                ['IN', of],
                ['NP', ['NNP', 'Kessel']],
                ['ADVP', ['RB', already]],
                ['-LRB-', '-LRB-'],
                ['CC', or],
                ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '3']], ['NN', 'P0']],
                ['.', '.']
              ]).
pllm:training(3800080000415,
              tree_to_toks,
              [ 'It',
                does,
                seem,
                kind,
                of,
                strange,
                (','),
                but,
                'I',
                suppose,
                it,
                had,
                been,
                'nearly-20-years',
                since,
                he,
                had,
                last,
                seen,
                them,
                ('.'),
                'Maybe',
                he,
                figured,
                they,
                had,
                been,
                sent,
                to,
                'the-spice-mines',
                of,
                'Kessel',
                already,
                '-LRB-',
                or,
                'at-least-3-P0',
                ('.')
              ]).
pllm:training(3800090000416,
              string,
              "It is rather a wonder that 3P0 survived as long as he had.  He must have had a ton of luck, or caused endless trouble for R2.").
pllm:training(3800090000416,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', rather]],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', wonder]],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          ['NP', ['NNP', '3'], ['NNP', 'P0']],
                          [ 'VP',
                            ['VBD', survived],
                            [ 'ADVP',
                              ['ADVP', ['RB', as], ['RB', long]],
                              ['SBAR', ['IN', as], ['S', ['NP', ['PRP', he]], ['VP', ['AUX', had]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['MD', must],
                      [ 'VP',
                        ['VB', have],
                        [ 'VP',
                          [ 'VP',
                            ['VBN', had],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', ton]],
                              ['PP', ['IN', of], ['NP', ['NN', luck]]]
                            ]
                          ],
                          [',', ','],
                          ['CC', or],
                          [ 'VP',
                            ['VBN', caused],
                            ['NP', ['JJ', endless], ['NN', trouble]],
                            ['PP', ['IN', for], ['NP', ['NN', 'R2']]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800090000416,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', is],
                ['ADVP', ['RB', rather]],
                ['NP', ['DT', a], ['NN', wonder]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', '3'], ['NNP', 'P0']],
                ['VBD', survived],
                'ADVP',
                ['ADVP', ['RB', as], ['RB', long]],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', had],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['MD', must],
                ['VB', have],
                ['VBN', had],
                ['NP', ['DT', a], ['NN', ton]],
                ['IN', of],
                ['NP', ['NN', luck]],
                [',', ','],
                ['CC', or],
                ['VBN', caused],
                ['NP', ['JJ', endless], ['NN', trouble]],
                ['IN', for],
                ['NP', ['NN', 'R2']],
                ['.', '.']
              ]).
pllm:training(3800090000416,
              tree_to_toks,
              [ 'It',
                (is),
                rather,
                'a-wonder',
                that,
                '3-P0',
                survived,
                'ADVP',
                (as),
                long,
                (as),
                he,
                had,
                ('.'),
                'He',
                must,
                have,
                had,
                'a-ton',
                of,
                luck,
                (','),
                or,
                caused,
                'endless-trouble',
                for,
                'R2',
                ('.')
              ]).
pllm:training(3800100000417,
              string,
              "Yeah, I'm leaning more toward the endless trouble...").
pllm:training(3800100000417,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    [ 'VP',
                      ['VBG', leaning],
                      [ 'PP',
                        ['ADVP', ['RBR', more]],
                        ['IN', toward],
                        ['NP', ['DT', the], ['JJ', endless], ['NN', 'trouble.']],
                        [',', ',']
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', [',', ',']], ['.', '.']],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(3800100000417,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['VBG', leaning],
                ['ADVP', ['RBR', more]],
                ['IN', toward],
                ['NP', ['DT', the], ['JJ', endless], ['NN', 'trouble.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(3800100000417,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                '\'m',
                leaning,
                more,
                toward,
                'the-endless-trouble.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(3900010000419,
              string,
              "Did you know the podracers engines are based off of real jet engines?").
pllm:training(3900010000419,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', podracers]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNS', engines]],
                          [ 'VP',
                            ['VB', are],
                            [ 'VP',
                              ['VBN', based],
                              ['PRT', ['IN', off]],
                              [ 'PP',
                                ['IN', of],
                                ['NP', ['NML', ['JJ', real], ['NN', jet]], ['NNS', engines]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3900010000419,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['DT', the], ['NNS', podracers]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', engines]],
                ['VB', are],
                ['VBN', based],
                ['PRT', ['IN', off]],
                ['IN', of],
                ['NP', ['NML', ['JJ', real], ['NN', jet]], ['NNS', engines]],
                ['.', ?]
              ]).
pllm:training(3900010000419,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                'the-podracers',
                engines,
                are,
                based,
                off,
                of,
                'real-jet-engines',
                (?)
              ]).
pllm:training(3900020000420,
              string,
              "I didn't, is that what they actually look like?").
pllm:training(3900020000420,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VP', ['AUX', did], ['RB', 'n\'t']],
                  [',', ','],
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['DT', that]],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', they]],
                          ['ADVP', ['RB', actually]],
                          ['VP', ['VB', look], ['PP', ['IN', like]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3900020000420,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', did],
                ['RB', 'n\'t'],
                [',', ','],
                ['AUX', is],
                ['NP', ['DT', that]],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', actually]],
                ['VB', look],
                ['IN', like],
                ['.', ?]
              ]).
pllm:training(3900020000420,
              tree_to_toks,
              ['I', did, 'n\'t', ',', is, that, what, they, actually, look, like, ?]).
pllm:training(3900030000421,
              string,
              "Yes, if you look at a picture of a jet engine and compare it to anakins podracer they are exactly alike.").
pllm:training(3900030000421,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', if],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        [ 'VP',
                          ['VB', look],
                          [ 'PP',
                            ['IN', at],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', picture]],
                              ['PP', ['IN', of], ['NP', ['DT', a], ['NN', jet], ['NN', engine]]]
                            ]
                          ]
                        ],
                        ['CC', and],
                        [ 'VP',
                          ['VB', compare],
                          ['NP', ['PRP', it]],
                          ['PP', ['IN', to], ['NP', ['NNS', anakins], ['NN', podracer]]]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', are], ['ADVP', ['RB', exactly]], ['ADVP', ['RB', alike]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3900030000421,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', look],
                ['IN', at],
                ['NP', ['DT', a], ['NN', picture]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', jet], ['NN', engine]],
                ['CC', and],
                ['VB', compare],
                ['NP', ['PRP', it]],
                ['IN', to],
                ['NP', ['NNS', anakins], ['NN', podracer]],
                ['NP', ['PRP', they]],
                ['VB', are],
                ['ADVP', ['RB', exactly]],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(3900030000421,
              tree_to_toks,
              [ 'Yes',
                (','),
                if,
                you,
                look,
                at,
                'a-picture',
                of,
                'a-jet-engine',
                and,
                compare,
                it,
                to,
                'anakins-podracer',
                they,
                are,
                exactly,
                alike,
                ('.')
              ]).
pllm:training(3900040000422,
              string,
              "Another fun fact is the guy who played Darth Maul also appears without his evil makeup in another scene.").
pllm:training(3900040000422,
              text_to_tree,
              [ 'S',
                ['NP', ['DT', 'Another'], ['NN', fun], ['NN', fact]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', guy]],
                    [ 'SBAR',
                      ['NP', ['WP', who]],
                      [ 'S',
                        [ 'VP',
                          ['VBD', played],
                          [ 'S',
                            ['NP', ['NNP', 'Darth']],
                            [ 'VP',
                              ['VB', 'Maul'],
                              ['ADVP', ['RB', also]],
                              ['NP', ['NNS', appears]],
                              [ 'PP',
                                ['IN', without],
                                [ 'NP',
                                  ['NP', ['PRP$', his], ['JJ', evil], ['NN', makeup]],
                                  ['PP', ['IN', in], ['NP', ['DT', another], ['NN', scene]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3900040000422,
              unphrasify,
              [ mark('S'),
                ['NP', ['DT', 'Another'], ['NN', fun], ['NN', fact]],
                ['AUX', is],
                ['NP', ['DT', the], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['ADVP', ['RB', also]],
                ['NP', ['NNS', appears]],
                ['IN', without],
                ['NP', ['PRP$', his], ['JJ', evil], ['NN', makeup]],
                ['IN', in],
                ['NP', ['DT', another], ['NN', scene]],
                ['.', '.']
              ]).
pllm:training(3900040000422,
              tree_to_toks,
              [ 'Another-fun-fact',
                (is),
                'the-guy',
                who,
                played,
                'Darth',
                'Maul',
                also,
                appears,
                without,
                'his-evil-makeup',
                in,
                'another-scene',
                ('.')
              ]).
pllm:training(3900050000423,
              string,
              "Which one? I'm not even sure I'd know what he looked like without the makeup.").
pllm:training(3900050000423,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      ['RB', not],
                      [ 'ADJP',
                        ['RB', even],
                        ['JJ', sure],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', 'I']],
                            [ 'VP',
                              ['MD', '\'d'],
                              [ 'VP',
                                ['VB', know],
                                [ 'SBAR',
                                  ['NP', ['WP', what]],
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['VBD', looked],
                                      [ 'PP',
                                        ['IN', like],
                                        [ 'PP',
                                          ['IN', without],
                                          ['NP', ['DT', the], ['NN', makeup]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3900050000423,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', one]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['RB', not],
                'ADJP',
                ['RB', even],
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', looked],
                ['IN', like],
                ['IN', without],
                ['NP', ['DT', the], ['NN', makeup]],
                ['.', '.']
              ]).
pllm:training(3900050000423,
              tree_to_toks,
              [ 'Which-one',
                (?),
                'I',
                '\'m',
                not,
                'ADJP',
                even,
                sure,
                'I',
                '\'d',
                know,
                what,
                he,
                looked,
                like,
                without,
                'the-makeup',
                ('.')
              ]).
pllm:training(3900060000424,
              string,
              "He is one of the Naboo soldiers who is helping Padme get to her throne room in Theed.").
pllm:training(3900060000424,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      [ 'NP',
                        ['NP', ['CD', one]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Naboo'], ['NNS', soldiers]]]
                      ],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          [ 'VP',
                            ['VBZ', is],
                            [ 'VP',
                              ['VBG', helping],
                              [ 'S',
                                ['NP', ['NNP', 'Padme']],
                                [ 'VP',
                                  ['VB', get],
                                  [ 'PP',
                                    ['IN', to],
                                    ['NP', ['PRP$', her], ['NN', throne], ['NN', room]]
                                  ],
                                  ['PP', ['IN', in], ['NP', ['NNP', 'Theed']]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3900060000424,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Naboo'], ['NNS', soldiers]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', is],
                ['VBG', helping],
                mark('S'),
                ['NP', ['NNP', 'Padme']],
                ['VB', get],
                ['IN', to],
                ['NP', ['PRP$', her], ['NN', throne], ['NN', room]],
                ['IN', in],
                ['NP', ['NNP', 'Theed']],
                ['.', '.']
              ]).
pllm:training(3900060000424,
              tree_to_toks,
              [ 'He',
                (is),
                one,
                of,
                'the-Naboo-soldiers',
                who,
                (is),
                helping,
                'Padme',
                get,
                to,
                'her-throne-room',
                in,
                'Theed',
                ('.')
              ]).
pllm:training(3900070000425, string, "Oh wow, that's cool!").
pllm:training(3900070000425,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], ['UH', wow]],
                  [',', ','],
                  ['NP', ['DT', that]],
                  ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', cool]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3900070000425,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], ['UH', wow]],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(3900070000425, tree_to_toks, ['Oh', wow, ',', that, '\'s', cool, '.']).
pllm:training(3900080000426,
              string,
              "The guy who played Darth Maul is named Ray Park, he is a professional stunt man and fight choreographer.").
pllm:training(3900080000426,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP-TMP',
                    ['NP', ['DT', 'The'], ['NN', guy]],
                    [ 'SBAR',
                      ['NP', ['WP', who]],
                      [ 'S',
                        [ 'VP',
                          ['VBD', played],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['NNP', 'Darth'], ['NNP', 'Maul']],
                              [ 'VP',
                                ['VBZ', is],
                                ['VP', ['VBN', named], ['NP', ['NNP', 'Ray'], ['NNP', 'Park']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    [ 'VP',
                      ['VBZ', is],
                      ['NP', ['DT', a], ['JJ', professional], ['NN', stunt], ['NN', man]]
                    ],
                    ['CC', and],
                    ['VP', ['VB', fight], ['NP', ['NN', choreographer]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3900080000426,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                'NP-TMP',
                ['NP', ['DT', 'The'], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Maul']],
                ['VBZ', is],
                ['VBN', named],
                ['NP', ['NNP', 'Ray'], ['NNP', 'Park']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', professional], ['NN', stunt], ['NN', man]],
                ['CC', and],
                ['VB', fight],
                ['NP', ['NN', choreographer]],
                ['.', '.']
              ]).
pllm:training(3900080000426,
              tree_to_toks,
              [ 'NP-TMP',
                'The-guy',
                who,
                played,
                'Darth-Maul',
                (is),
                named,
                'Ray-Park',
                (','),
                he,
                (is),
                'a-professional-stunt-man',
                and,
                fight,
                choreographer,
                ('.')
              ]).
pllm:training(3900090000427, string, "Does he still do sword fights?").
pllm:training(3900090000427,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['VBZ', 'Does'],
                    ['NP', ['PRP', he]],
                    ['ADVP', ['RB', still]],
                    ['VP', ['VB', do], ['NP', ['NN', sword], ['NNS', fights]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3900090000427,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Does'],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', still]],
                ['VB', do],
                ['NP', ['NN', sword], ['NNS', fights]],
                ['.', ?]
              ]).
pllm:training(3900090000427, tree_to_toks, ['Does', he, still, do, 'sword-fights', ?]).
pllm:training(3900100000428,
              string,
              "He does, he still works in movies today sometimes and he even does his Darth Maul routine at Star Wars events for fans.").
pllm:training(3900100000428,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['PRP', 'He']], ['VP', ['AUX', does]]],
                [',', ','],
                [ 'S',
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', still]],
                  [ 'VP',
                    ['VBZ', works],
                    ['PP', ['IN', in], ['NP', ['NNS', movies]]],
                    ['NP', ['NN', today]],
                    ['ADVP', ['RB', sometimes]]
                  ]
                ],
                ['CC', and],
                [ 'S',
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', even]],
                  [ 'VP',
                    ['AUX', does],
                    [ 'S',
                      ['NP', ['PRP$', his], ['NNP', 'Darth']],
                      [ 'VP',
                        ['VB', 'Maul'],
                        [ 'NP',
                          [ 'NP',
                            [ 'ADJP',
                              ['JJ', routine],
                              ['PP', ['IN', at], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                            ],
                            ['NNS', events]
                          ],
                          ['PP', ['IN', for], ['NP', ['NNS', fans]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3900100000428,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['AUX', does],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', still]],
                ['VBZ', works],
                ['IN', in],
                ['NP', ['NNS', movies]],
                ['NP', ['NN', today]],
                ['ADVP', ['RB', sometimes]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', even]],
                ['AUX', does],
                mark('S'),
                ['NP', ['PRP$', his], ['NNP', 'Darth']],
                ['VB', 'Maul'],
                'ADJP',
                ['JJ', routine],
                ['IN', at],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NNS', events],
                ['IN', for],
                ['NP', ['NNS', fans]],
                ['.', '.']
              ]).
pllm:training(3900100000428,
              tree_to_toks,
              [ 'He',
                does,
                (','),
                he,
                still,
                works,
                in,
                movies,
                today,
                sometimes,
                and,
                he,
                even,
                does,
                'his-Darth',
                'Maul',
                'ADJP',
                routine,
                at,
                'Star-Wars',
                events,
                for,
                fans,
                ('.')
              ]).
pllm:training(4000010000430,
              string,
              "What do you think of the connection between rae and kylo?").
pllm:training(4000010000430,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', connection]],
                          ['PP', ['IN', between], ['NP', ['NN', rae], ['CC', and], ['NN', kylo]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4000010000430,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['NN', connection]],
                ['IN', between],
                ['NP', ['NN', rae], ['CC', and], ['NN', kylo]],
                ['.', ?]
              ]).
pllm:training(4000010000430,
              tree_to_toks,
              ['What', do, you, think, of, 'the-connection', between, 'rae-and-kylo', ?]).
pllm:training(4000020000431,
              string,
              "I am convinced they are brother and sister.").
pllm:training(4000020000431,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    [ 'ADJP',
                      ['JJ', convinced],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          ['VP', ['VB', are], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000020000431,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', convinced],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(4000020000431,
              tree_to_toks,
              ['I', am, 'ADJP', convinced, they, are, 'brother-and-sister', '.']).
pllm:training(4000030000432,
              string,
              "I was wondering that as well. But the actors don't look anything alike.").
pllm:training(4000030000432,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', was],
                      [ 'VP',
                        ['VBG', wondering],
                        ['NP', ['DT', that]],
                        ['ADVP', ['RB', as], ['RB', well]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['DT', the], ['NNS', actors]],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      ['VP', ['VB', look], ['NP', ['NN', anything]], ['ADVP', ['RB', alike]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000030000432,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBG', wondering],
                ['NP', ['DT', that]],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', the], ['NNS', actors]],
                ['VB', do],
                ['RB', not],
                ['VB', look],
                ['NP', ['NN', anything]],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(4000030000432,
              tree_to_toks,
              [ 'I',
                was,
                wondering,
                that,
                (as),
                well,
                ('.'),
                'But',
                'the-actors',
                do,
                not,
                look,
                anything,
                alike,
                ('.')
              ]).
pllm:training(4000040000433,
              string,
              "Driver and Ridley both have dark features. Also not mandatory to look alike.").
pllm:training(4000040000433,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NP', ['NN', 'Driver']], ['CC', and], ['NP', ['NNP', 'Ridley']]],
                    ['DT', both],
                    ['VP', ['VB', have], ['NP', ['JJ', dark], ['NNS', features]]],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['ADVP', ['RB', 'Also']],
                  ['RB', not],
                  [ 'VP',
                    ['JJ', mandatory],
                    ['S', ['VP', ['TO', to], ['VP', ['VB', look], ['ADVP', ['RB', alike]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000040000433,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', 'Driver']],
                ['CC', and],
                ['NP', ['NNP', 'Ridley']],
                ['DT', both],
                ['VB', have],
                ['NP', ['JJ', dark], ['NNS', features]],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Also']],
                ['RB', not],
                ['JJ', mandatory],
                mark('S'),
                ['TO', to],
                ['VB', look],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(4000040000433,
              tree_to_toks,
              [ 'Driver',
                and,
                'Ridley',
                both,
                have,
                'dark-features',
                ('.'),
                'Also',
                not,
                mandatory,
                to,
                look,
                alike,
                ('.')
              ]).
pllm:training(4000050000434,
              string,
              "I suppose that is true, luke and leia were twins and looked entirely different.").
pllm:training(4000050000434,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', suppose],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          ['VP', ['VBZ', is], ['ADJP', ['JJ', true], [',', ','], ['JJ', luke]]]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['NN', leia]],
                    [ 'VP',
                      ['VP', ['VBD', were], ['NP', ['NNS', twins]]],
                      ['CC', and],
                      ['VP', ['VBD', looked], ['ADJP', ['RB', entirely], ['JJ', different]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000050000434,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', is],
                ['ADJP', ['JJ', true], [',', ','], ['JJ', luke]],
                ['CC', and],
                mark('S'),
                ['NP', ['NN', leia]],
                ['VBD', were],
                ['NP', ['NNS', twins]],
                ['CC', and],
                ['VBD', looked],
                ['ADJP', ['RB', entirely], ['JJ', different]],
                ['.', '.']
              ]).
pllm:training(4000050000434,
              tree_to_toks,
              [ 'I',
                suppose,
                that,
                (is),
                true,
                (','),
                luke,
                and,
                leia,
                were,
                twins,
                and,
                looked,
                entirely,
                different,
                ('.')
              ]).
pllm:training(4000060000435,
              string,
              "Exactly. I am excited to see what will be revealed next, Like what is going on with luke now?").
pllm:training(4000060000435,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      [ 'ADJP',
                        ['JJ', excited],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', see],
                              [ 'SBAR',
                                ['NP', ['WP', what]],
                                [ 'S',
                                  [ 'VP',
                                    ['MD', will],
                                    [ 'VP',
                                      ['VB', be],
                                      [ 'VP',
                                        ['VBN', revealed],
                                        ['ADVP', ['RB', next]],
                                        [',', ','],
                                        [ 'PP',
                                          ['IN', 'Like'],
                                          [ 'SBAR',
                                            ['NP', ['WP', what]],
                                            [ 'S',
                                              [ 'VP',
                                                ['VBZ', is],
                                                [ 'VP',
                                                  ['VBG', going],
                                                  ['PRT', ['RP', on]],
                                                  [ 'PP',
                                                    ['IN', with],
                                                    ['NP', ['NN', luke]]
                                                  ],
                                                  ['ADVP', ['RB', now]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4000060000435,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', excited],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['MD', will],
                ['VB', be],
                ['VBN', revealed],
                ['ADVP', ['RB', next]],
                [',', ','],
                ['IN', 'Like'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', is],
                ['VBG', going],
                ['PRT', ['RP', on]],
                ['IN', with],
                ['NP', ['NN', luke]],
                ['ADVP', ['RB', now]],
                ['.', ?]
              ]).
pllm:training(4000060000435,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'I',
                am,
                'ADJP',
                excited,
                to,
                see,
                what,
                will,
                be,
                revealed,
                next,
                (','),
                'Like',
                what,
                (is),
                going,
                on,
                with,
                luke,
                now,
                (?)
              ]).
pllm:training(4000070000436,
              string,
              "It seems like he is somewhat like the original movies obi wan kenobi, hermit like in style.").
pllm:training(4000070000436,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'It']],
                [ 'VP',
                  ['VBZ', seems],
                  [ 'SBAR',
                    ['IN', like],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      [ 'VP',
                        ['AUX', is],
                        [ 'PP',
                          ['RB', somewhat],
                          ['IN', like],
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                            ['VP', ['VBG', obi], ['NP', ['JJ', wan], ['NNS', kenobi]]],
                            [',', ','],
                            [ 'VP',
                              ['VBN', hermit],
                              ['PP', ['IN', like], ['PP', ['IN', in], ['NP', ['NN', style]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4000070000436,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', seems],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', is],
                ['RB', somewhat],
                ['IN', like],
                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                ['VBG', obi],
                ['NP', ['JJ', wan], ['NNS', kenobi]],
                [',', ','],
                ['VBN', hermit],
                ['IN', like],
                ['IN', in],
                ['NP', ['NN', style]],
                ['.', '.']
              ]).
pllm:training(4000070000436,
              tree_to_toks,
              [ 'It',
                seems,
                like,
                he,
                (is),
                somewhat,
                like,
                'the-original-movies',
                obi,
                'wan-kenobi',
                (','),
                hermit,
                like,
                in,
                style,
                ('.')
              ]).
pllm:training(4000080000437,
              string,
              "That is a similarity there between luke now and obi wan. I love both those characters.").
pllm:training(4000080000437,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', similarity]],
                      ['ADVP', ['RB', there]],
                      [ 'PP',
                        ['IN', between],
                        [ 'NP',
                          ['NP', ['RB', luke], ['RB', now]],
                          ['CC', and],
                          ['NP', ['JJ', obi], ['NN', wan]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', love], ['NP', ['PDT', both], ['DT', those], ['NNS', characters]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000080000437,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['AUX', is],
                ['NP', ['DT', a], ['NN', similarity]],
                ['ADVP', ['RB', there]],
                ['IN', between],
                ['NP', ['RB', luke], ['RB', now]],
                ['CC', and],
                ['NP', ['JJ', obi], ['NN', wan]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['PDT', both], ['DT', those], ['NNS', characters]],
                ['.', '.']
              ]).
pllm:training(4000080000437,
              tree_to_toks,
              [ 'That',
                (is),
                'a-similarity',
                there,
                between,
                'luke-now',
                and,
                'obi-wan',
                ('.'),
                'I',
                love,
                'both-those-characters',
                ('.')
              ]).
pllm:training(4000090000438,
              string,
              "Me too. so iconic and classic. I am so happy they brought mark hamill back.").
pllm:training(4000090000438,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'FRAG',
                      ['ADJP', ['RB', so], ['JJ', iconic], ['CC', and], ['JJ', classic]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', am],
                        [ 'ADJP',
                          ['RB', so],
                          ['JJ', happy],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', they]],
                              [ 'VP',
                                ['VBD', brought],
                                ['NP', ['NN', mark], ['NN', hamill]],
                                ['ADVP', ['RB', back]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(4000090000438,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADJP', ['RB', so], ['JJ', iconic], ['CC', and], ['JJ', classic]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['RB', so],
                ['JJ', happy],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', brought],
                ['NP', ['NN', mark], ['NN', hamill]],
                ['ADVP', ['RB', back]],
                ['.', '.']
              ]).
pllm:training(4000090000438,
              tree_to_toks,
              [ 'Me',
                too,
                ('.'),
                so,
                iconic,
                and,
                classic,
                ('.'),
                'I',
                am,
                'ADJP',
                so,
                happy,
                they,
                brought,
                'mark-hamill',
                back,
                ('.')
              ]).
pllm:training(4000100000439,
              string,
              "Ya me too. I was so sad when ford's han solo was killed off.").
pllm:training(4000100000439,
              text_to_tree,
              [ 'SEQBAR',
                ['S', ['NP', ['PRP', 'Ya']], ['VP', ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADJP', ['RB', so], ['JJ', sad]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NP', ['NN', ford], ['POS', '\'s']], ['NNP', han], ['NN', solo]],
                          ['VP', ['VBD', was], ['VP', ['VBN', killed], ['PRT', ['RP', off]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000100000439,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'Ya']],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADJP', ['RB', so], ['JJ', sad]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NN', ford], ['POS', '\'s']],
                ['NNP', han],
                ['NN', solo],
                ['VBD', was],
                ['VBN', killed],
                ['PRT', ['RP', off]],
                ['.', '.']
              ]).
pllm:training(4000100000439,
              tree_to_toks,
              [ 'Ya',
                me,
                too,
                ('.'),
                'I',
                was,
                so,
                sad,
                when,
                'ford-\'s',
                han,
                solo,
                was,
                killed,
                off,
                ('.')
              ]).
pllm:training(4100010000441, string, "What was your favorite Star Wars Movie?").
pllm:training(4100010000441,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NP', ['NNP', 'Movie']]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4100010000441,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NP', ['NNP', 'Movie']],
                ['.', ?]
              ]).
pllm:training(4100010000441,
              tree_to_toks,
              ['What', was, 'your-favorite-Star-Wars', 'Movie', ?]).
pllm:training(4100020000442, string, "Return of the Jedi, you?").
pllm:training(4100020000442,
              text_to_tree,
              [ 'NP',
                ['NP', ['NP', ['NN', 'Return']], ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(4100020000442,
              unphrasify,
              [ ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                [',', ','],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(4100020000442, tree_to_toks, ['Return', of, 'the-Jedi', ',', you, ?]).
pllm:training(4100030000443, string, "I, for one, loved The Force Awakens.").
pllm:training(4100030000443,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [',', ','],
                  ['PP', ['IN', for], ['NP', ['CD', one]]],
                  [',', ','],
                  ['VP', ['VBD', loved], ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']]],
                  ['.', '.']
                ]
              ]).
pllm:training(4100030000443,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                [',', ','],
                ['IN', for],
                ['NP', ['CD', one]],
                [',', ','],
                ['VBD', loved],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.']
              ]).
pllm:training(4100030000443,
              tree_to_toks,
              ['I', ',', for, one, ',', loved, 'The-Force-Awakens', '.']).
pllm:training(4100040000444,
              string,
              "Yea, but there is nothing quite like the originals.").
pllm:training(4100040000444,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['EX', there]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['NN', nothing]],
                    ['PP', ['RB', quite], ['IN', like], ['NP', ['DT', the], ['NNS', originals]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4100040000444,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['EX', there]],
                ['AUX', is],
                ['NP', ['NN', nothing]],
                ['RB', quite],
                ['IN', like],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(4100040000444,
              tree_to_toks,
              ['Yea', ',', but, there, is, nothing, quite, like, 'the-originals', '.']).
pllm:training(4100050000445,
              string,
              "Of course not, but the special effects are way different now, I enjoy those.").
pllm:training(4100050000445,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course], ['RB', not]]],
                [',', ','],
                ['CC', but],
                [ 'S',
                  ['NP', ['DT', the], ['JJ', special], ['NNS', effects]],
                  [ 'VP',
                    ['AUX', are],
                    ['ADJP', ['RB', way], ['JJ', different]],
                    ['ADVP', ['RB', now]]
                  ]
                ],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VP', ['VB', enjoy], ['NP', ['DT', those]]],
                ['.', '.']
              ]).
pllm:training(4100050000445,
              unphrasify,
              [ mark('S'),
                ['IN', 'Of'],
                ['NP', ['NN', course], ['RB', not]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['DT', the], ['JJ', special], ['NNS', effects]],
                ['AUX', are],
                ['ADJP', ['RB', way], ['JJ', different]],
                ['ADVP', ['RB', now]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', enjoy],
                ['NP', ['DT', those]],
                ['.', '.']
              ]).
pllm:training(4100050000445,
              tree_to_toks,
              [ 'Of',
                'course-not',
                (','),
                but,
                'the-special-effects',
                are,
                way,
                different,
                now,
                (','),
                'I',
                enjoy,
                those,
                ('.')
              ]).
pllm:training(4100060000446,
              string,
              "What about the plot lines, the character development?").
pllm:training(4100060000446,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', plot], ['NNS', lines]],
                      [',', ','],
                      ['NP', ['DT', the], ['NN', character], ['NN', development]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4100060000446,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['DT', the], ['NN', plot], ['NNS', lines]],
                [',', ','],
                ['NP', ['DT', the], ['NN', character], ['NN', development]],
                ['.', ?]
              ]).
pllm:training(4100060000446,
              tree_to_toks,
              ['What', about, 'the-plot-lines', ',', 'the-character-development', ?]).
pllm:training(4100070000447, string, "What about it?").
pllm:training(4100070000447,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', it]]], ['.', ?]]
              ]).
pllm:training(4100070000447,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(4100070000447, tree_to_toks, ['What', about, it, ?]).
pllm:training(4100080000448,
              string,
              "The newer movies just don't capture the same magic the original trilogy did.").
pllm:training(4100080000448,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJR', newer], ['NNS', movies]],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', capture],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same], ['NN', magic]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                            ['VP', ['VBD', did]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4100080000448,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJR', newer], ['NNS', movies]],
                ['ADVP', ['RB', just]],
                ['VB', do],
                ['RB', not],
                ['VB', capture],
                ['NP', ['DT', the], ['JJ', same], ['NN', magic]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                ['VBD', did],
                ['.', '.']
              ]).
pllm:training(4100080000448,
              tree_to_toks,
              [ 'The-newer-movies',
                just,
                do,
                not,
                capture,
                'the-same-magic',
                'the-original-trilogy',
                did,
                ('.')
              ]).
pllm:training(4100090000449,
              string,
              "Yes they do! Don't you think they covered the gaping hole of the death stars weakness int he last movie?").
pllm:training(4100090000449,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['INTJ', ['UH', 'Yes']], ['NP', ['PRP', they]], ['VP', ['VB', do]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['S', ['VP', ['VB', 'Do'], ['RB', 'n\'t']]],
                      ['S', ['NP', ['PRP', you]], ['VP', ['VB', think], ['NP', ['PRP', they]]]]
                    ],
                    [ 'S',
                      [ 'VP',
                        ['VBD', covered],
                        [ 'NP',
                          ['NP', ['DT', the], ['VBG', gaping], ['NN', hole]],
                          [ 'PP',
                            ['IN', of],
                            [ 'NP',
                              ['NP', ['DT', the], ['NN', death], ['NNS', stars]],
                              ['NP', ['NN', weakness], ['NN', int]]
                            ]
                          ]
                        ]
                      ],
                      ['NP', ['PRP', he]],
                      ['ADVP', ['RB', last]],
                      ['NP', ['NN', movie]],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(4100090000449,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', they]],
                ['VB', do],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                mark('S'),
                ['VB', 'Do'],
                ['RB', 'n\'t'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', think],
                ['NP', ['PRP', they]],
                mark('S'),
                ['VBD', covered],
                ['NP', ['DT', the], ['VBG', gaping], ['NN', hole]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', death], ['NNS', stars]],
                ['NP', ['NN', weakness], ['NN', int]],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', last]],
                ['NP', ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(4100090000449,
              tree_to_toks,
              [ 'Yes',
                they,
                do,
                ('.'),
                'Do',
                'n\'t',
                you,
                think,
                they,
                covered,
                'the-gaping-hole',
                of,
                'the-death-stars',
                'weakness-int',
                he,
                last,
                movie,
                (?)
              ]).
pllm:training(4100100000450,
              string,
              "Yes, because they had to. Just like they had to kill Han Solo.").
pllm:training(4100100000450,
              text_to_tree,
              [ 'SEQBAR',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', because],
                    ['S', ['NP', ['PRP', they]], ['VP', ['AUX', had], ['S', ['VP', ['TO', to]]]]]
                  ],
                  ['.', '.']
                ],
                [ 'FRAG',
                  ['ADVP', ['RB', 'Just']],
                  [ 'SBAR',
                    ['IN', like],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['AUX', had],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            ['VP', ['VB', kill], ['NP', ['NNP', 'Han'], ['NNP', 'Solo']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4100100000450,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', had],
                mark('S'),
                ['TO', to],
                ['.', '.'],
                mark('FRAG'),
                ['ADVP', ['RB', 'Just']],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', had],
                mark('S'),
                ['TO', to],
                ['VB', kill],
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['.', '.']
              ]).
pllm:training(4100100000450,
              tree_to_toks,
              [ 'Yes',
                (','),
                because,
                they,
                had,
                to,
                ('.'),
                'Just',
                like,
                they,
                had,
                to,
                kill,
                'Han-Solo',
                ('.')
              ]).
pllm:training(4200010000452, string, "Who played Luke Skywalker?").
pllm:training(4200010000452,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', played], ['NP', ['NNP', 'Luke'], ['NNP', 'Skywalker']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200010000452,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Luke'], ['NNP', 'Skywalker']],
                ['.', ?]
              ]).
pllm:training(4200010000452, tree_to_toks, ['Who', played, 'Luke-Skywalker', ?]).
pllm:training(4200020000453, string, "Mark Hammil").
pllm:training(4200020000453,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Mark'], ['NNP', 'Hammil'], ['.', '.']]]).
pllm:training(4200020000453,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Mark'], ['NNP', 'Hammil'], ['.', '.']]]).
pllm:training(4200020000453, tree_to_toks, ['Mark-Hammil-.']).
pllm:training(4200030000454, string, "Who played Han Solo?").
pllm:training(4200030000454,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', played], ['NP', ['NNP', 'Han'], ['NNP', 'Solo']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200030000454,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['.', ?]
              ]).
pllm:training(4200030000454, tree_to_toks, ['Who', played, 'Han-Solo', ?]).
pllm:training(4200040000455, string, "Harrison Ford").
pllm:training(4200040000455,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', '.']]]).
pllm:training(4200040000455,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', '.']]]).
pllm:training(4200040000455, tree_to_toks, ['Harrison-Ford-.']).
pllm:training(4200050000456, string, "Was this Harrison Ford's first film?").
pllm:training(4200050000456,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Was'],
                  ['NP', ['DT', this]],
                  [ 'NP',
                    ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['POS', '\'s']],
                    ['NP', ['JJ', first], ['NN', film]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4200050000456,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Was'],
                ['NP', ['DT', this]],
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['POS', '\'s']],
                ['NP', ['JJ', first], ['NN', film]],
                ['.', ?]
              ]).
pllm:training(4200050000456,
              tree_to_toks,
              ['Was', this, 'Harrison-Ford-\'s', 'first-film', ?]).
pllm:training(4200060000457, string, "No").
pllm:training(4200060000457, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'No'], ['.', '.']]]).
pllm:training(4200060000457, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'No'], ['.', '.']]]).
pllm:training(4200060000457, tree_to_toks, ['No', '.']).
pllm:training(4200070000458, string, "Who directed Star Wars?").
pllm:training(4200070000458,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', directed], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200070000458,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', directed],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(4200070000458, tree_to_toks, ['Who', directed, 'Star-Wars', ?]).
pllm:training(4200080000459, string, "George Lucas").
pllm:training(4200080000459,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'George'], ['NNP', 'Lucas'], ['.', '.']]]).
pllm:training(4200080000459,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'George'], ['NNP', 'Lucas'], ['.', '.']]]).
pllm:training(4200080000459, tree_to_toks, ['George-Lucas-.']).
pllm:training(4200090000460, string, "Who was the producer?").
pllm:training(4200090000460,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VBD', was], ['NP', ['DT', the], ['NN', producer]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200090000460,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', the], ['NN', producer]],
                ['.', ?]
              ]).
pllm:training(4200090000460, tree_to_toks, ['Who', was, 'the-producer', ?]).
pllm:training(4200100000461, string, "Gary Kurtz").
pllm:training(4200100000461,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Gary'], ['NNP', 'Kurtz'], ['.', '.']]]).
pllm:training(4200100000461,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Gary'], ['NNP', 'Kurtz'], ['.', '.']]]).
pllm:training(4200100000461, tree_to_toks, ['Gary-Kurtz-.']).
pllm:training(4300010000463,
              string,
              "Why didn't the Wookie get a medal in A New Hope?").
pllm:training(4300010000463,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  [ 'S',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    ['NP', ['DT', the], ['NNP', 'Wookie']],
                    [ 'VP',
                      ['VB', get],
                      ['NP', ['DT', a], ['NN', medal]],
                      ['PP', ['IN', in], ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4300010000463,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VBD', did],
                ['RB', 'n\'t'],
                ['NP', ['DT', the], ['NNP', 'Wookie']],
                ['VB', get],
                ['NP', ['DT', a], ['NN', medal]],
                ['IN', in],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                ['.', ?]
              ]).
pllm:training(4300010000463,
              tree_to_toks,
              ['Why', did, 'n\'t', 'the-Wookie', get, 'a-medal', in, 'A-New-Hope', ?]).
pllm:training(4300020000464, string, "What are you talking about?").
pllm:training(4300020000464,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', are],
                    ['NP', ['PRP', you]],
                    ['VP', ['VBG', talking], ['PP', ['IN', about]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4300020000464,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                ['VBG', talking],
                ['IN', about],
                ['.', ?]
              ]).
pllm:training(4300020000464, tree_to_toks, ['What', are, you, talking, about, ?]).
pllm:training(4300030000465,
              string,
              "At the end of the movie everone gets a medal but Chewy.").
pllm:training(4300030000465,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['IN', 'At'],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', end]],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                    ]
                  ],
                  ['NP', ['NN', everone]],
                  [ 'VP',
                    ['VBZ', gets],
                    ['NP', ['NP', ['DT', a], ['NN', medal]], ['PP', ['CC', but], ['NP', ['NNP', 'Chewy']]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300030000465,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'At'],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['NP', ['NN', everone]],
                ['VBZ', gets],
                ['NP', ['DT', a], ['NN', medal]],
                ['CC', but],
                ['NP', ['NNP', 'Chewy']],
                ['.', '.']
              ]).
pllm:training(4300030000465,
              tree_to_toks,
              ['At', 'the-end', of, 'the-movie', everone, gets, 'a-medal', but, 'Chewy', '.']).
pllm:training(4300040000466, string, "Huh, I had no idea.").
pllm:training(4300040000466,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VP', ['AUX', had], ['NP', ['DT', no], ['NN', idea]]],
                ['.', '.']
              ]).
pllm:training(4300040000466,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['AUX', had],
                ['NP', ['DT', no], ['NN', idea]],
                ['.', '.']
              ]).
pllm:training(4300040000466, tree_to_toks, ['Huh', ',', 'I', had, 'no-idea', '.']).
pllm:training(4300050000467, string, "Weird, huh?").
pllm:training(4300050000467,
              text_to_tree,
              ['FRAG', ['ADJP', ['JJ', 'Weird']], [',', ','], ['NP', ['NNP', huh]], ['.', ?]]).
pllm:training(4300050000467,
              unphrasify,
              [mark('FRAG'), ['ADJP', ['JJ', 'Weird']], [',', ','], ['NP', ['NNP', huh]], ['.', ?]]).
pllm:training(4300050000467, tree_to_toks, ['Weird', ',', huh, ?]).
pllm:training(4300060000468,
              string,
              "Maybe nobody wanted to get close enough to present him.").
pllm:training(4300060000468,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Maybe']],
                  ['NP', ['NN', nobody]],
                  [ 'VP',
                    ['VBD', wanted],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', get],
                          [ 'ADJP',
                            ['JJ', close],
                            ['JJ', enough],
                            ['S', ['VP', ['TO', to], ['VP', ['VB', present], ['NP', ['PRP', him]]]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300060000468,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['NN', nobody]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', get],
                'ADJP',
                ['JJ', close],
                ['JJ', enough],
                mark('S'),
                ['TO', to],
                ['VB', present],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(4300060000468,
              tree_to_toks,
              ['Maybe', nobody, wanted, to, get, 'ADJP', close, enough, to, present, him, '.']).
pllm:training(4300070000469, string, "It was Leia though.").
pllm:training(4300070000469,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBD', was], ['NP', ['NNP', 'Leia']], ['ADVP', ['RB', though]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4300070000469,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['NP', ['NNP', 'Leia']],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(4300070000469, tree_to_toks, ['It', was, 'Leia', though, '.']).
pllm:training(4300080000470, string, "I haven't a clue.").
pllm:training(4300080000470,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', 'n\'t'], ['VP', ['NP', ['DT', a], ['NN', clue]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4300080000470,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', 'n\'t'],
                ['NP', ['DT', a], ['NN', clue]],
                ['.', '.']
              ]).
pllm:training(4300080000470, tree_to_toks, ['I', have, 'n\'t', 'a-clue', '.']).
pllm:training(4300090000471,
              string,
              "It's been bugging me for the last 30 years or so.").
pllm:training(4300090000471,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'VP',
                      ['VBN', been],
                      [ 'VP',
                        ['VBG', bugging],
                        ['NP', ['PRP', me]],
                        [ 'UCP',
                          [ 'PP',
                            ['IN', for],
                            ['NP', ['DT', the], ['JJ', last], ['CD', '30'], ['NNS', years]]
                          ],
                          ['CC', or],
                          ['ADVP', ['RB', so]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300090000471,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['VBN', been],
                ['VBG', bugging],
                ['NP', ['PRP', me]],
                'UCP',
                ['IN', for],
                ['NP', ['DT', the], ['JJ', last], ['CD', '30'], ['NNS', years]],
                ['CC', or],
                ['ADVP', ['RB', so]],
                ['.', '.']
              ]).
pllm:training(4300090000471,
              tree_to_toks,
              ['It', '\'s', been, bugging, me, 'UCP', for, 'the-last-30-years', or, so, '.']).
pllm:training(4300100000472, string, "Oh, Lord!").
pllm:training(4300100000472,
              text_to_tree,
              ['CORENLP', ['FRAG', ['INTJ', ['UH', 'Oh']], [',', ','], ['NP', ['NNP', 'Lord']], ['.', '.']]]).
pllm:training(4300100000472,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['NP', ['NNP', 'Lord']],
                ['.', '.']
              ]).
pllm:training(4300100000472, tree_to_toks, ['Oh', ',', 'Lord', '.']).
pllm:training(4400010000474,
              string,
              "What did you think of Jabba the Hut in the Star Wars movies?").
pllm:training(4400010000474,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', did],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      ['PP', ['IN', of], ['NP', ['NNP', 'Jabba']]],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Hut']],
                        [ 'PP',
                          ['IN', in],
                          [ 'NP',
                            ['DT', the],
                            ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                            ['NNS', movies]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4400010000474,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(4400010000474,
              tree_to_toks,
              ['What', did, you, think, of, 'Jabba', 'the-Hut', in, 'the-Star-Wars-movies', ?]).
pllm:training(4400020000475, string, "I thought that he was creepy.").
pllm:training(4400020000475,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['IN', that],
                      ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', creepy]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400020000475,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(4400020000475, tree_to_toks, ['I', thought, that, he, was, creepy, '.']).
pllm:training(4400030000476, string, "Me too!").
pllm:training(4400030000476,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(4400030000476,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(4400030000476, tree_to_toks, ['Me', too, '.']).
pllm:training(4400040000477, string, "I wish he had some sort of clothes on.").
pllm:training(4400040000477,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', had],
                          [ 'NP',
                            ['NP', ['DT', some], ['NN', sort]],
                            ['PP', ['IN', of], ['NP', ['NNS', clothes]]]
                          ],
                          ['PP', ['IN', on]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400040000477,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', had],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['NNS', clothes]],
                ['IN', on],
                ['.', '.']
              ]).
pllm:training(4400040000477,
              tree_to_toks,
              ['I', wish, he, had, 'some-sort', of, clothes, on, '.']).
pllm:training(4400050000478, string, "That would of made everything better.").
pllm:training(4400050000478,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      [ 'PP',
                        ['IN', of],
                        [ 'S',
                          [ 'VP',
                            ['VBN', made],
                            ['NP', ['NN', everything]],
                            ['S', ['ADJP', ['JJR', better]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400050000478,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['IN', of],
                mark('S'),
                ['VBN', made],
                ['NP', ['NN', everything]],
                mark('S'),
                ['ADJP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(4400050000478,
              tree_to_toks,
              ['That', would, of, made, everything, better, '.']).
pllm:training(4400060000479,
              string,
              "I was also freaked out when he made Princess Leia his slave.").
pllm:training(4400060000479,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', also]],
                    [ 'VP',
                      ['VBN', freaked],
                      ['PRT', ['RP', out]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', made],
                            ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                            ['NP', ['PRP$', his], ['NN', slave]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400060000479,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADVP', ['RB', also]],
                ['VBN', freaked],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', made],
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['NP', ['PRP$', his], ['NN', slave]],
                ['.', '.']
              ]).
pllm:training(4400060000479,
              tree_to_toks,
              ['I', was, also, freaked, out, when, he, made, 'Princess-Leia', 'his-slave', '.']).
pllm:training(4400070000480, string, "I really hated that part!").
pllm:training(4400070000480,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  ['VP', ['VBD', hated], ['SBAR', ['IN', that], ['FRAG', ['NP', ['NN', part]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4400070000480,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', hated],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NN', part]],
                ['.', '.']
              ]).
pllm:training(4400070000480, tree_to_toks, ['I', really, hated, that, part, '.']).
pllm:training(4400080000481,
              string,
              "Yeah, I am glad that Princess Leia got her revenge.").
pllm:training(4400080000481,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    [ 'ADJP',
                      ['JJ', glad],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                          ['VP', ['VBD', got], ['NP', ['PRP$', her], ['NN', revenge]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400080000481,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['VBD', got],
                ['NP', ['PRP$', her], ['NN', revenge]],
                ['.', '.']
              ]).
pllm:training(4400080000481,
              tree_to_toks,
              ['Yeah', ',', 'I', am, 'ADJP', glad, that, 'Princess-Leia', got, 'her-revenge', '.']).
pllm:training(4400090000482, string, "In my opinion, Jabba the Hut deserved it.").
pllm:training(4400090000482,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'In'], ['NP', ['PRP$', my], ['NN', opinion]]],
                [',', ','],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VP', ['VBD', deserved], ['NP', ['PRP', it]]],
                ['.', '.']
              ]).
pllm:training(4400090000482,
              unphrasify,
              [ mark('S'),
                ['IN', 'In'],
                ['NP', ['PRP$', my], ['NN', opinion]],
                [',', ','],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VBD', deserved],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(4400090000482,
              tree_to_toks,
              ['In', 'my-opinion', ',', 'Jabba', 'the-Hut', deserved, it, '.']).
pllm:training(4400100000483, string, "Yes, he so did!").
pllm:training(4400100000483,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', so]],
                  ['VP', ['VBD', did]],
                  ['.', '.']
                ]
              ]).
pllm:training(4400100000483,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', so]],
                ['VBD', did],
                ['.', '.']
              ]).
pllm:training(4400100000483, tree_to_toks, ['Yes', ',', he, so, did, '.']).
pllm:training(4500010000485,
              string,
              "Which of the Star Wars droids is your favorite?").
pllm:training(4500010000485,
              text_to_tree,
              [ 'SBAR',
                [ 'NP',
                  ['NP', ['WDT', 'Which']],
                  ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']]],
                  ['NNS', droids]
                ],
                ['S', ['VP', ['AUX', is], ['NP', ['PRP$', your], ['NN', favorite]]]],
                ['.', ?]
              ]).
pllm:training(4500010000485,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WDT', 'Which']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NNS', droids],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['NN', favorite]],
                ['.', ?]
              ]).
pllm:training(4500010000485,
              tree_to_toks,
              ['Which', of, 'the-Star-Wars', droids, is, 'your-favorite', ?]).
pllm:training(4500020000486, string, "Doesn't everyone love R2-D2?").
pllm:training(4500020000486,
              text_to_tree,
              [ 'S',
                ['AUX', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['NN', everyone]],
                ['VP', ['VB', love], ['NP', ['NN', 'R2-D2']]],
                ['.', ?]
              ]).
pllm:training(4500020000486,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['NN', everyone]],
                ['VB', love],
                ['NP', ['NN', 'R2-D2']],
                ['.', ?]
              ]).
pllm:training(4500020000486, tree_to_toks, ['Does', 'n\'t', everyone, love, 'R2-D2', ?]).
pllm:training(4500030000487,
              string,
              "Yes, although I think C-3PO is my favorite?").
pllm:training(4500030000487,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                [ 'SBAR',
                  ['IN', although],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NP', ['SYM', 'C']], [:, -], ['NP', ['CD', '3'], ['NNS', 'PO']]],
                          ['VP', ['AUX', is], ['NP', ['PRP$', my], ['JJ', favorite]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(4500030000487,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', although],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['SYM', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NNS', 'PO']],
                ['AUX', is],
                ['NP', ['PRP$', my], ['JJ', favorite]],
                ['.', ?]
              ]).
pllm:training(4500030000487,
              tree_to_toks,
              ['Yes', ',', although, 'I', think, 'C', -, '3-PO', is, 'my-favorite', ?]).
pllm:training(4500040000488,
              string,
              "I always found him a little too prim and proper.").
pllm:training(4500040000488,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                [ 'VP',
                  ['VBD', found],
                  [ 'S',
                    ['NP', ['PRP', him]],
                    [ 'ADJP',
                      ['NP', ['DT', a], ['RB', little]],
                      ['RB', too],
                      ['JJ', prim],
                      ['CC', and],
                      ['JJ', proper]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4500040000488,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', found],
                mark('S'),
                ['NP', ['PRP', him]],
                'ADJP',
                ['NP', ['DT', a], ['RB', little]],
                ['RB', too],
                ['JJ', prim],
                ['CC', and],
                ['JJ', proper],
                ['.', '.']
              ]).
pllm:training(4500040000488,
              tree_to_toks,
              ['I', always, found, him, 'ADJP', 'a-little', too, prim, and, proper, '.']).
pllm:training(4500050000489, string, "Yes, the accent can be annoying sometime.").
pllm:training(4500050000489,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['DT', the], ['NN', accent]],
                  [ 'VP',
                    ['MD', can],
                    ['VP', ['VB', be], ['ADJP', ['JJ', annoying]], ['ADVP', ['RB', sometime]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500050000489,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['DT', the], ['NN', accent]],
                ['MD', can],
                ['VB', be],
                ['ADJP', ['JJ', annoying]],
                ['ADVP', ['RB', sometime]],
                ['.', '.']
              ]).
pllm:training(4500050000489,
              tree_to_toks,
              ['Yes', ',', 'the-accent', can, be, annoying, sometime, '.']).
pllm:training(4500060000490,
              string,
              "Not just that, but the whole idea of a protocol droid.").
pllm:training(4500060000490,
              text_to_tree,
              [ 'S',
                [ 'NP',
                  ['RB', 'Not'],
                  ['RB', just],
                  ['NP', ['DT', that]],
                  [',', ','],
                  ['CC', but],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', whole], ['NN', idea]],
                    ['PP', ['IN', of], ['NP', ['DT', a], ['NN', protocol]]]
                  ]
                ],
                ['VP', ['VBD', droid]],
                ['.', '.']
              ]).
pllm:training(4500060000490,
              unphrasify,
              [ mark('S'),
                ['RB', 'Not'],
                ['RB', just],
                ['NP', ['DT', that]],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', the], ['JJ', whole], ['NN', idea]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', protocol]],
                ['VBD', droid],
                ['.', '.']
              ]).
pllm:training(4500060000490,
              tree_to_toks,
              ['Not', just, that, ',', but, 'the-whole-idea', of, 'a-protocol', droid, '.']).
pllm:training(4500070000491,
              string,
              "Yes.    Why would a child like Annakin build such a thing?").
pllm:training(4500070000491,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'SBAR',
                    ['WHADVP', ['WRB', 'Why']],
                    [ 'S',
                      ['MD', would],
                      [ 'NP',
                        ['NP', ['DT', a], ['NN', child]],
                        ['PP', ['IN', like], ['NP', ['NNP', 'Annakin']]]
                      ],
                      ['VP', ['VB', build], ['NP', ['PDT', such], ['DT', a], ['NN', thing]]]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4500070000491,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['MD', would],
                ['NP', ['DT', a], ['NN', child]],
                ['IN', like],
                ['NP', ['NNP', 'Annakin']],
                ['VB', build],
                ['NP', ['PDT', such], ['DT', a], ['NN', thing]],
                ['.', ?]
              ]).
pllm:training(4500070000491,
              tree_to_toks,
              ['Yes', '.', 'Why', would, 'a-child', like, 'Annakin', build, 'such-a-thing', ?]).
pllm:training(4500080000492,
              string,
              "Maybe it was a kit that he was working from.").
pllm:training(4500080000492,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['AUX', was],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', kit]],
                    [ 'SBAR',
                      ['NP', ['WDT', that]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', was], ['VP', ['VBG', working], ['PP', ['IN', from]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4500080000492,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', kit]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['VBG', working],
                ['IN', from],
                ['.', '.']
              ]).
pllm:training(4500080000492,
              tree_to_toks,
              ['Maybe', it, was, 'a-kit', that, he, was, working, from, '.']).
pllm:training(4500090000493,
              string,
              "Perhaps.     Maybe best to not take that part of the series too literally.").
pllm:training(4500090000493,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['ADVP', ['RB', 'Perhaps']], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Maybe']],
                  ['NP', ['JJS', best]],
                  [ 'VP',
                    ['TO', to],
                    ['RB', not],
                    [ 'VP',
                      ['VB', take],
                      [ 'NP',
                        ['NP', ['DT', that], ['NN', part]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NN', series]]]
                      ],
                      ['ADVP', ['RB', too], ['RB', literally]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500090000493,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Perhaps']],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['JJS', best]],
                ['TO', to],
                ['RB', not],
                ['VB', take],
                ['NP', ['DT', that], ['NN', part]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', series]],
                ['ADVP', ['RB', too], ['RB', literally]],
                ['.', '.']
              ]).
pllm:training(4500090000493,
              tree_to_toks,
              [ 'Perhaps',
                ('.'),
                'Maybe',
                best,
                to,
                not,
                take,
                'that-part',
                of,
                'the-series',
                too,
                literally,
                ('.')
              ]).
pllm:training(4500100000494, string, "Yes, it is just a space fantasy!").
pllm:training(4500100000494,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', just]],
                    ['NP', ['DT', a], ['NN', space], ['NN', fantasy]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500100000494,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADVP', ['RB', just]],
                ['NP', ['DT', a], ['NN', space], ['NN', fantasy]],
                ['.', '.']
              ]).
pllm:training(4500100000494, tree_to_toks, ['Yes', ',', it, is, just, 'a-space-fantasy', '.']).
pllm:training(4600010000496,
              string,
              "Who is the most mysterious person in Star Wars?").
pllm:training(4600010000496,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        ['ADJP', ['RBS', most], ['JJ', mysterious]],
                        ['NN', person]
                      ],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(4600010000496,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', mysterious]], ['NN', person]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(4600010000496,
              tree_to_toks,
              ['Who', is, 'the-most-mysterious-person', in, 'Star-Wars', ?]).
pllm:training(4600020000497, string, "I think Boba Fett").
pllm:training(4600020000497,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', think], ['NP', ['NNP', 'Boba'], ['NNP', 'Fett']]],
                  ['.', '.']
                ]
              ]).
pllm:training(4600020000497,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                ['NP', ['NNP', 'Boba'], ['NNP', 'Fett']],
                ['.', '.']
              ]).
pllm:training(4600020000497, tree_to_toks, ['I', think, 'Boba-Fett', '.']).
pllm:training(4600030000498, string, "Why do you say that?").
pllm:training(4600030000498,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4600030000498,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(4600030000498, tree_to_toks, ['Why', do, you, say, that, ?]).
pllm:training(4600040000499,
              string,
              "Maybe I don't know the plot inside and out but I dont know his background!").
pllm:training(4600040000499,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        ['NP', ['DT', the], ['NN', plot]],
                        ['ADVP', ['RB', inside], ['CC', and], ['RB', out]]
                      ]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', nt],
                      ['VP', ['VB', know], ['NP', ['PRP$', his], ['NN', background]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4600040000499,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', the], ['NN', plot]],
                ['ADVP', ['RB', inside], ['CC', and], ['RB', out]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', nt],
                ['VB', know],
                ['NP', ['PRP$', his], ['NN', background]],
                ['.', '.']
              ]).
pllm:training(4600040000499,
              tree_to_toks,
              [ 'Maybe',
                'I',
                do,
                not,
                know,
                'the-plot',
                inside,
                and,
                out,
                but,
                'I',
                do,
                nt,
                know,
                'his-background',
                ('.')
              ]).
pllm:training(4600050000500, string, "Doesn't he have a kid or something too?").
pllm:training(4600050000500,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VBZ', 'Does'], ['RB', 'n\'t']]],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['VB', have],
                    ['NP', ['DT', a], ['NN', kid], ['CC', or], ['NN', something]],
                    ['ADVP', ['RB', too]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4600050000500,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['PRP', he]],
                ['VB', have],
                ['NP', ['DT', a], ['NN', kid], ['CC', or], ['NN', something]],
                ['ADVP', ['RB', too]],
                ['.', ?]
              ]).
pllm:training(4600050000500,
              tree_to_toks,
              ['Does', 'n\'t', he, have, 'a-kid-or-something', too, ?]).
pllm:training(4600060000501,
              string,
              "Yeah I wonder what his name is and what he is up to now!").
pllm:training(4600060000501,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', wonder],
                  [ 'SBAR',
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      ['S', ['NP', ['PRP$', his], ['NN', name]], ['VP', ['AUX', is]]]
                    ],
                    ['CC', and],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', is], ['PP', ['IN', up], ['PP', ['TO', to], ['NP', ['RB', now]]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4600060000501,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP$', his], ['NN', name]],
                ['AUX', is],
                ['CC', and],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', is],
                ['IN', up],
                ['TO', to],
                ['NP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(4600060000501,
              tree_to_toks,
              ['Yeah', 'I', wonder, what, 'his-name', is, and, what, he, is, up, to, now, '.']).
pllm:training(4600070000502, string, "Who else is mysterious?").
pllm:training(4600070000502,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who'], ['RB', else]],
                  ['S', ['VBZ', is], ['ADJP', ['JJ', mysterious]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4600070000502,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who'], ['RB', else]],
                mark('S'),
                ['VBZ', is],
                ['ADJP', ['JJ', mysterious]],
                ['.', ?]
              ]).
pllm:training(4600070000502, tree_to_toks, ['Who-else', is, mysterious, ?]).
pllm:training(4600080000503, string, "I would like to know more about Darth Maul").
pllm:training(4600080000503,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['VB', like],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', know],
                          [ 'NP',
                            ['NP', ['JJR', more]],
                            [ 'SBAR',
                              ['IN', about],
                              ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4600080000503,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', like],
                mark('S'),
                ['TO', to],
                ['VB', know],
                ['NP', ['JJR', more]],
                mark('SBAR'),
                ['IN', about],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['.', '.']
              ]).
pllm:training(4600080000503,
              tree_to_toks,
              ['I', would, like, to, know, more, about, 'Darth', 'Maul', '.']).
pllm:training(4600090000504, string, "What about him?").
pllm:training(4600090000504,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', him]]], ['.', ?]]
              ]).
pllm:training(4600090000504,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', him]],
                ['.', ?]
              ]).
pllm:training(4600090000504, tree_to_toks, ['What', about, him, ?]).
pllm:training(4600100000505, string, "How he got such a cool lightsaber!").
pllm:training(4600100000505,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', got],
                      ['NP', ['PDT', such], ['DT', a], ['JJ', cool], ['NN', lightsaber]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4600100000505,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['NP', ['PDT', such], ['DT', a], ['JJ', cool], ['NN', lightsaber]],
                ['.', '.']
              ]).
pllm:training(4600100000505,
              tree_to_toks,
              ['How', he, got, 'such-a-cool-lightsaber', '.']).
pllm:training(4700010000507,
              string,
              "Have you seen Star Wars, The Empire Strikes Back?").
pllm:training(4700010000507,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'S',
                      ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      [',', ','],
                      ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                      ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700010000507,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('S'),
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', ?]
              ]).
pllm:training(4700010000507,
              tree_to_toks,
              ['Have', you, seen, 'Star-Wars', ',', 'The-Empire', 'Strikes', 'Back', ?]).
pllm:training(4700020000508, string, "Yes, I've seen it many times.").
pllm:training(4700020000508,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'ve'],
                    [ 'VP',
                      ['VBN', seen],
                      ['NP', ['PRP', it]],
                      ['NP-TMP', ['JJ', many], ['NNS', times]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700020000508,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['NP-TMP', ['JJ', many], ['NNS', times]],
                ['.', '.']
              ]).
pllm:training(4700020000508, tree_to_toks, ['Yes', ',', 'I', '\'ve', seen, it, many, times, '.']).
pllm:training(4700030000509,
              string,
              "Who is your favorite character in the Empire Strikes Back?").
pllm:training(4700030000509,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNP', 'Empire']],
                          ['SBAR', ['S', ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700030000509,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Empire']],
                mark('SBAR'),
                mark('S'),
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', ?]
              ]).
pllm:training(4700030000509,
              tree_to_toks,
              ['Who', is, 'your-favorite-character', in, 'the-Empire', 'Strikes', 'Back', ?]).
pllm:training(4700040000510,
              string,
              "Definitely Yoda, my favorite character of any science-fiction movie.").
pllm:training(4700040000510,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  [ 'NP',
                    ['NP', ['NNP', 'Yoda']],
                    [',', ','],
                    [ 'NP',
                      ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', any],
                          ['NML', ['NN', science], ['HYPH', -], ['NN', fiction]],
                          ['NN', movie]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700040000510,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['NNP', 'Yoda']],
                [',', ','],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                ['IN', of],
                [ 'NP',
                  ['DT', any],
                  ['NML', ['NN', science], ['HYPH', -], ['NN', fiction]],
                  ['NN', movie]
                ],
                ['.', '.']
              ]).
pllm:training(4700040000510,
              tree_to_toks,
              [ 'Definitely',
                'Yoda',
                (','),
                'my-favorite-character',
                of,
                'any-science---fiction-movie',
                ('.')
              ]).
pllm:training(4700050000511, string, "What your favorite thing about Yoda?").
pllm:training(4700050000511,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'NP',
                    ['NP', ['PRP$', your], ['JJ', favorite], ['NN', thing]],
                    ['PP', ['IN', about], ['NP', ['NNP', 'Yoda']]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700050000511,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', thing]],
                ['IN', about],
                ['NP', ['NNP', 'Yoda']],
                ['.', ?]
              ]).
pllm:training(4700050000511,
              tree_to_toks,
              ['What', 'your-favorite-thing', about, 'Yoda', ?]).
pllm:training(4700060000512, string, "His facial expressions, they're funny.").
pllm:training(4700060000512,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'His'], ['JJ', facial], ['NNS', expressions]],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', '\'re'], ['ADJP', ['JJ', funny]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4700060000512,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['JJ', facial], ['NNS', expressions]],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['ADJP', ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(4700060000512,
              tree_to_toks,
              ['His-facial-expressions', ',', they, '\'re', funny, '.']).
pllm:training(4700070000513,
              string,
              "I always wondered how they made his costume so realistic.").
pllm:training(4700070000513,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VBD', wondered],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', made],
                          ['NP', ['PRP$', his], ['NN', costume]],
                          ['S', ['ADJP', ['RB', so], ['JJ', realistic]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700070000513,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', wondered],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', made],
                ['NP', ['PRP$', his], ['NN', costume]],
                mark('S'),
                ['ADJP', ['RB', so], ['JJ', realistic]],
                ['.', '.']
              ]).
pllm:training(4700070000513,
              tree_to_toks,
              ['I', always, wondered, how, they, made, 'his-costume', so, realistic, '.']).
pllm:training(4700080000514,
              string,
              "I wonder if there was a real person inside?").
pllm:training(4700080000514,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['IN', if],
                      [ 'S',
                        ['NP', ['EX', there]],
                        [ 'VP',
                          ['VBD', was],
                          ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                          ['ADVP', ['RB', inside]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700080000514,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                ['ADVP', ['RB', inside]],
                ['.', ?]
              ]).
pllm:training(4700080000514,
              tree_to_toks,
              ['I', wonder, if, there, was, 'a-real-person', inside, ?]).
pllm:training(4700090000515,
              string,
              "Darth Vader definitely had a real person inside.").
pllm:training(4700090000515,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  ['ADVP', ['RB', definitely]],
                  [ 'VP',
                    ['VBD', had],
                    ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                    ['ADVP', ['RB', inside]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700090000515,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['ADVP', ['RB', definitely]],
                ['VBD', had],
                ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                ['ADVP', ['RB', inside]],
                ['.', '.']
              ]).
pllm:training(4700090000515,
              tree_to_toks,
              ['Darth-Vader', definitely, had, 'a-real-person', inside, '.']).
pllm:training(4700100000516,
              string,
              "Darth Vader, now that's my favorite villain of all time.").
pllm:training(4700100000516,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  [',', ','],
                  ['ADVP', ['RB', now]],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', my], ['JJ', favorite], ['NN', villain]],
                      ['PP', ['IN', of], ['NP', ['DT', all], ['NN', time]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700100000516,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', villain]],
                ['IN', of],
                ['NP', ['DT', all], ['NN', time]],
                ['.', '.']
              ]).
pllm:training(4700100000516,
              tree_to_toks,
              ['Darth-Vader', ',', now, that, '\'s', 'my-favorite-villain', of, 'all-time', '.']).
pllm:training(4800010000518, string, "do you like luke or anakin").
pllm:training(4800010000518,
              text_to_tree,
              [ 'S',
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['FW', luke], ['CC', or], ['FW', anakin]]],
                ['.', '.']
              ]).
pllm:training(4800010000518,
              unphrasify,
              [ mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['FW', luke], ['CC', or], ['FW', anakin]],
                ['.', '.']
              ]).
pllm:training(4800010000518, tree_to_toks, [do, you, like, 'luke-or-anakin', '.']).
pllm:training(4800020000519, string, "anakin").
pllm:training(4800020000519, text_to_tree, ['CORENLP', ['NP', ['NN', anakin], ['.', '.']]]).
pllm:training(4800020000519, unphrasify, [mark('CORENLP'), ['NP', ['NN', anakin], ['.', '.']]]).
pllm:training(4800020000519, tree_to_toks, ['anakin-.']).
pllm:training(4800030000520, string, "why?").
pllm:training(4800030000520,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(4800030000520,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(4800030000520, tree_to_toks, [why, ?]).
pllm:training(4800040000521, string, "anakin was reckless and exciting").
pllm:training(4800040000521,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', anakin]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', reckless], ['CC', and], ['JJ', exciting]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4800040000521,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', anakin]],
                ['VBD', was],
                ['ADJP', ['JJ', reckless], ['CC', and], ['JJ', exciting]],
                ['.', '.']
              ]).
pllm:training(4800040000521, tree_to_toks, [anakin, was, reckless, and, exciting, '.']).
pllm:training(4800050000522, string, "yeah. luke was not as interesting.").
pllm:training(4800050000522,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', yeah], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NN', luke]],
                    ['VP', ['VBD', was], ['RB', not], ['ADJP', ['RB', as], ['JJ', interesting]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4800050000522,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', yeah], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', luke]],
                ['VBD', was],
                ['RB', not],
                ['ADJP', ['RB', as], ['JJ', interesting]],
                ['.', '.']
              ]).
pllm:training(4800050000522,
              tree_to_toks,
              [yeah, '.', luke, was, not, as, interesting, '.']).
pllm:training(4800060000523,
              string,
              "he was kinda less questioning and more obedient").
pllm:training(4800060000523,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', he]],
                [ 'VP',
                  ['AUX', was],
                  [ 'ADJP',
                    ['ADJP', ['RB', kinda], ['RBR', less], ['VBG', questioning]],
                    ['CC', and],
                    ['ADJP', ['RBR', more], ['JJ', obedient]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4800060000523,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                [ 'ADJP',
                  ['ADJP', ['RB', kinda], ['RBR', less], ['VBG', questioning]],
                  ['CC', and],
                  ['ADJP', ['RBR', more], ['JJ', obedient]]
                ],
                ['.', '.']
              ]).
pllm:training(4800060000523,
              tree_to_toks,
              [he, was, kinda, less, questioning, and, more, obedient, '.']).
pllm:training(4800070000524, string, "anakin did a lot of rebellious stuff").
pllm:training(4800070000524,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', anakin]],
                  [ 'VP',
                    ['VBD', did],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', lot]],
                      ['PP', ['IN', of], ['NP', ['JJ', rebellious], ['NN', stuff]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800070000524,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', anakin]],
                ['VBD', did],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['JJ', rebellious], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(4800070000524,
              tree_to_toks,
              [anakin, did, 'a-lot', of, 'rebellious-stuff', '.']).
pllm:training(4800080000525, string, "like when he jumped out the ship").
pllm:training(4800080000525,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', like]],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', when]],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBD', jumped], ['PRT', ['RP', out]], ['NP', ['DT', the], ['NN', ship]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800080000525,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', like]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', jumped],
                ['PRT', ['RP', out]],
                ['NP', ['DT', the], ['NN', ship]],
                ['.', '.']
              ]).
pllm:training(4800080000525, tree_to_toks, [like, when, he, jumped, out, 'the-ship', '.']).
pllm:training(4800090000526, string, "and still beat up enemies and stuff").
pllm:training(4800090000526,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', and],
                  ['ADVP', ['RB', still]],
                  [ 'VP',
                    ['VB', beat],
                    ['PRT', ['RP', up]],
                    ['NP', ['NNS', enemies], ['CC', and], ['NN', stuff]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800090000526,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', and],
                ['ADVP', ['RB', still]],
                ['VB', beat],
                ['PRT', ['RP', up]],
                ['NP', ['NNS', enemies], ['CC', and], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(4800090000526,
              tree_to_toks,
              [and, still, beat, up, 'enemies-and-stuff', '.']).
pllm:training(4800100000527, string, "yeah, he was cool").
pllm:training(4800100000527,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', yeah]],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', cool]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4800100000527,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', yeah]],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(4800100000527, tree_to_toks, [yeah, ',', he, was, cool, '.']).
pllm:training(4900010000529,
              string,
              "So, you remember the climax of Return of the Jedi?").
pllm:training(4900010000529,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', remember],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', climax]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['NN', 'Return']],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4900010000529,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                [',', ','],
                ['NP', ['PRP', you]],
                ['VB', remember],
                ['NP', ['DT', the], ['NN', climax]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', ?]
              ]).
pllm:training(4900010000529,
              tree_to_toks,
              ['So', ',', you, remember, 'the-climax', of, 'Return', of, 'the-Jedi', ?]).
pllm:training(4900020000530,
              string,
              "Where Vader picks up the Emperor and throws him down that shaft?").
pllm:training(4900020000530,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Where']],
                  [ 'S',
                    ['NP', ['NNP', 'Vader']],
                    [ 'VP',
                      [ 'VP',
                        ['VBZ', picks],
                        ['PRT', ['RP', up]],
                        ['NP', ['DT', the], ['NNP', 'Emperor']]
                      ],
                      ['CC', and],
                      [ 'VP',
                        ['VBZ', throws],
                        ['NP', ['PRP', him]],
                        ['PRT', ['RP', down]],
                        ['PP', ['IN', that], ['NP', ['NN', shaft]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4900020000530,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Where']],
                mark('S'),
                ['NP', ['NNP', 'Vader']],
                ['VBZ', picks],
                ['PRT', ['RP', up]],
                ['NP', ['DT', the], ['NNP', 'Emperor']],
                ['CC', and],
                ['VBZ', throws],
                ['NP', ['PRP', him]],
                ['PRT', ['RP', down]],
                ['IN', that],
                ['NP', ['NN', shaft]],
                ['.', ?]
              ]).
pllm:training(4900020000530,
              tree_to_toks,
              [ 'Where',
                'Vader',
                picks,
                up,
                'the-Emperor',
                and,
                throws,
                him,
                down,
                that,
                shaft,
                (?)
              ]).
pllm:training(4900030000531,
              string,
              "Yeah.  Here's something I find weird... I've heard different explanations for that big explosion of blue energy.").
pllm:training(4900030000531,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['RB', 'Here']], ['VP', ['VBZ', '\'s'], ['NP', ['NN', something]]]],
                    [ 'PRN',
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', find], ['NP', ['NN', 'weird.']]]],
                      [',', ',']
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'ve'],
                      [ 'VP',
                        ['VBN', heard],
                        ['NP', ['JJ', different], ['NNS', explanations]],
                        [ 'PP',
                          ['IN', for],
                          [ 'NP',
                            ['NP', ['DT', that], ['JJ', big], ['NN', explosion]],
                            ['PP', ['IN', of], ['NP', ['JJ', blue], ['NN', energy]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4900030000531,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['RB', 'Here']],
                ['VBZ', '\'s'],
                ['NP', ['NN', something]],
                'PRN',
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', find],
                ['NP', ['NN', 'weird.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['VBN', heard],
                ['NP', ['JJ', different], ['NNS', explanations]],
                ['IN', for],
                ['NP', ['DT', that], ['JJ', big], ['NN', explosion]],
                ['IN', of],
                ['NP', ['JJ', blue], ['NN', energy]],
                ['.', '.']
              ]).
pllm:training(4900030000531,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'Here',
                '\'s',
                something,
                'PRN',
                'I',
                find,
                'weird.',
                (','),
                ('.'),
                (','),
                ('.'),
                'I',
                '\'ve',
                heard,
                'different-explanations',
                for,
                'that-big-explosion',
                of,
                'blue-energy',
                ('.')
              ]).
pllm:training(4900040000532, string, "Really?").
pllm:training(4900040000532, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(4900040000532, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(4900040000532, tree_to_toks, ['Really', ?]).
pllm:training(4900050000533,
              string,
              "Yeah, some of the books say it happened because the Emperor was full of Dark Side energy and all, so that when someone like that dies the energy explodes outward.").
pllm:training(4900050000533,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['NP', ['DT', some]], ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', books]]]],
                  [ 'VP',
                    ['VB', say],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBD', happened],
                          [ 'SBAR',
                            ['IN', because],
                            [ 'S',
                              ['NP', ['DT', the], ['NNP', 'Emperor']],
                              [ 'VP',
                                ['VBD', was],
                                ['ADJP', ['JJ', full]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Dark'], ['NNP', 'Side'], ['NN', energy]],
                                    ['CC', and],
                                    ['NP', ['DT', all]]
                                  ]
                                ],
                                [',', ','],
                                [ 'SBAR',
                                  ['IN', so],
                                  ['IN', that],
                                  [ 'S',
                                    [ 'SBAR',
                                      ['WHADVP', ['WRB', when]],
                                      [ 'S',
                                        [ 'NP',
                                          ['NP', ['NN', someone]],
                                          ['PP', ['IN', like], ['NP', ['DT', that]]]
                                        ],
                                        [ 'VP',
                                          ['VBZ', dies],
                                          ['NP', ['DT', the], ['NN', energy]]
                                        ]
                                      ]
                                    ],
                                    ['VP', ['VBZ', explodes], ['ADVP', ['RB', outward]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4900050000533,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', some]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', books]],
                ['VB', say],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', happened],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Emperor']],
                ['VBD', was],
                ['ADJP', ['JJ', full]],
                ['IN', of],
                ['NP', ['NNP', 'Dark'], ['NNP', 'Side'], ['NN', energy]],
                ['CC', and],
                ['NP', ['DT', all]],
                [',', ','],
                mark('SBAR'),
                ['IN', so],
                ['IN', that],
                mark('S'),
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NN', someone]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['VBZ', dies],
                ['NP', ['DT', the], ['NN', energy]],
                ['VBZ', explodes],
                ['ADVP', ['RB', outward]],
                ['.', '.']
              ]).
pllm:training(4900050000533,
              tree_to_toks,
              [ 'Yeah',
                (','),
                some,
                of,
                'the-books',
                say,
                it,
                happened,
                because,
                'the-Emperor',
                was,
                full,
                of,
                'Dark-Side-energy',
                and,
                all,
                (','),
                so,
                that,
                when,
                someone,
                like,
                that,
                dies,
                'the-energy',
                explodes,
                outward,
                ('.')
              ]).
pllm:training(4900060000534,
              string,
              "Weird, don't remember that happening when Darth Maul was killed.  Or Count Dooku for that matter...").
pllm:training(4900060000534,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['ADJP', ['JJ', 'Weird']],
                  [',', ','],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', remember],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          [ 'NP',
                            ['NP', ['VBG', happening]],
                            [ 'SBAR',
                              ['WHADVP', ['WRB', when]],
                              ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]
                            ]
                          ],
                          ['VP', ['AUX', was], ['VP', ['VBN', killed]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'Or'],
                    [ 'VP',
                      ['VB', 'Count'],
                      ['NP', ['NNP', 'Dooku']],
                      ['PP', ['IN', for], ['NP', ['DT', that], ['NN', 'matter.']], [',', ',']]
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  ['FRAG', ['.', '.']]
                ]
              ]).
pllm:training(4900060000534,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['ADJP', ['JJ', 'Weird']],
                [',', ','],
                ['AUX', do],
                ['RB', not],
                ['VB', remember],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['VBG', happening]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['AUX', was],
                ['VBN', killed],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'Or'],
                ['VB', 'Count'],
                ['NP', ['NNP', 'Dooku']],
                ['IN', for],
                ['NP', ['DT', that], ['NN', 'matter.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(4900060000534,
              tree_to_toks,
              [ 'Weird',
                (','),
                do,
                not,
                remember,
                that,
                happening,
                when,
                'Darth',
                'Maul',
                was,
                killed,
                ('.'),
                'Or',
                'Count',
                'Dooku',
                for,
                'that-matter.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(4900070000535,
              string,
              "Yeah, true, that's one confusing aspect.  But you know what i always thought?").
pllm:training(4900070000535,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['ADJP', ['JJ', true]],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['NP', ['NP', ['CD', one]], ['VP', ['VBG', confusing], ['NP', ['NN', aspect]]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        ['S', ['NP', ['PRP', i]], ['ADVP', ['RB', always]], ['VP', ['VBD', thought]]]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4900070000535,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['ADJP', ['JJ', true]],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['CD', one]],
                ['VBG', confusing],
                ['NP', ['NN', aspect]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', always]],
                ['VBD', thought],
                ['.', ?]
              ]).
pllm:training(4900070000535,
              tree_to_toks,
              [ 'Yeah',
                (','),
                true,
                (','),
                that,
                '\'s',
                one,
                confusing,
                aspect,
                ('.'),
                'But',
                you,
                know,
                what,
                i,
                always,
                thought,
                (?)
              ]).
pllm:training(4900080000536, string, "What's that?").
pllm:training(4900080000536,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['NP', ['WP', 'What']], ['S', ['VBZ', '\'s'], ['NP', ['DT', that]]], ['.', ?]]
              ]).
pllm:training(4900080000536,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(4900080000536, tree_to_toks, ['What', '\'s', that, ?]).
pllm:training(4900090000537,
              string,
              "I figured the explosion because his body hit some kind of  energy reactor.   After all, the explosion is the same blue color as reactor thing down at the very bottom of the shaft.").
pllm:training(4900090000537,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', figured],
                      ['NP', ['DT', the], ['NN', explosion]],
                      [ 'SBAR',
                        ['IN', because],
                        [ 'S',
                          ['NP', ['PRP$', his], ['NN', body]],
                          [ 'VP',
                            ['VBD', hit],
                            [ 'NP',
                              ['NP', ['DT', some], ['NN', kind]],
                              ['PP', ['IN', of], ['NP', ['NN', energy], ['NN', reactor]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['PP', ['IN', 'After'], ['NP', ['DT', all]]],
                    [',', ','],
                    ['NP', ['DT', the], ['NN', explosion]],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same], ['JJ', blue], ['NN', color]],
                        ['PP', ['IN', as], ['NP', ['NN', reactor], ['NN', thing]]]
                      ],
                      [ 'ADVP',
                        ['RB', down],
                        [ 'PP',
                          ['IN', at],
                          [ 'NP',
                            ['NP', ['DT', the], ['ADJP', ['RB', very], ['JJ', bottom]]],
                            ['PP', ['IN', of], ['NP', ['DT', the], ['NN', shaft]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4900090000537,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', figured],
                ['NP', ['DT', the], ['NN', explosion]],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP$', his], ['NN', body]],
                ['VBD', hit],
                ['NP', ['DT', some], ['NN', kind]],
                ['IN', of],
                ['NP', ['NN', energy], ['NN', reactor]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['IN', 'After'],
                ['NP', ['DT', all]],
                [',', ','],
                ['NP', ['DT', the], ['NN', explosion]],
                ['VBZ', is],
                ['NP', ['DT', the], ['JJ', same], ['JJ', blue], ['NN', color]],
                ['IN', as],
                ['NP', ['NN', reactor], ['NN', thing]],
                'ADVP',
                ['RB', down],
                ['IN', at],
                ['NP', ['DT', the], ['ADJP', ['RB', very], ['JJ', bottom]]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', shaft]],
                ['.', '.']
              ]).
pllm:training(4900090000537,
              tree_to_toks,
              [ 'I',
                figured,
                'the-explosion',
                because,
                'his-body',
                hit,
                'some-kind',
                of,
                'energy-reactor',
                ('.'),
                'After',
                all,
                (','),
                'the-explosion',
                (is),
                'the-same-blue-color',
                (as),
                'reactor-thing',
                'ADVP',
                down,
                at,
                'the-very-bottom',
                of,
                'the-shaft',
                ('.')
              ]).
pllm:training(4900100000538,
              string,
              "Huh, that theory makes me sense to me than the whole Dark Side thing. But, then again, the color is also the same as the Force Lightning the Emperor was torturing Luke with..").
pllm:training(4900100000538,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['NNP', 'Huh']],
                  [',', ','],
                  ['NP', ['DT', that], ['NN', theory]],
                  [ 'VP',
                    ['VBZ', makes],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      [ 'VP',
                        ['VB', sense],
                        ['PP', ['TO', to], ['NP', ['PRP', me]]],
                        [ 'PP',
                          ['IN', than],
                          [ 'NP',
                            ['DT', the],
                            ['JJ', whole],
                            ['JJ', 'Dark'],
                            ['JJ', 'Side'],
                            ['NN', thing]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['CC', 'But'],
                    [',', ','],
                    ['ADVP', ['RB', then], ['RB', again]],
                    [',', ','],
                    ['NP', ['DT', the], ['NN', color]],
                    [ 'VP',
                      ['AUX', is],
                      ['ADVP', ['RB', also]],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same]],
                        [ 'PP',
                          ['IN', as],
                          [ 'NP',
                            ['NP', ['DT', the], ['NNP', 'Force'], ['NN', 'Lightning']],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['DT', the], ['NN', 'Emperor']],
                                [ 'VP',
                                  ['AUX', was],
                                  [ 'VP',
                                    ['VBG', torturing],
                                    ['NP', ['NNP', 'Luke']],
                                    ['PP', ['IN', with]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ],
                  ['CORENLP', ['FRAG', ['.', '.']]]
                ]
              ]).
pllm:training(4900100000538,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['DT', that], ['NN', theory]],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', sense],
                ['TO', to],
                ['NP', ['PRP', me]],
                ['IN', than],
                ['NP', ['DT', the], ['JJ', whole], ['JJ', 'Dark'], ['JJ', 'Side'], ['NN', thing]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['CC', 'But'],
                [',', ','],
                ['ADVP', ['RB', then], ['RB', again]],
                [',', ','],
                ['NP', ['DT', the], ['NN', color]],
                ['AUX', is],
                ['ADVP', ['RB', also]],
                ['NP', ['DT', the], ['JJ', same]],
                ['IN', as],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NN', 'Lightning']],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', 'Emperor']],
                ['AUX', was],
                ['VBG', torturing],
                ['NP', ['NNP', 'Luke']],
                ['IN', with],
                ['.', '.'],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(4900100000538,
              tree_to_toks,
              [ 'Huh',
                (','),
                'that-theory',
                makes,
                me,
                sense,
                to,
                me,
                than,
                'the-whole-Dark-Side-thing',
                ('.'),
                'But',
                (','),
                then,
                again,
                (','),
                'the-color',
                (is),
                also,
                'the-same',
                (as),
                'the-Force-Lightning',
                'the-Emperor',
                was,
                torturing,
                'Luke',
                with,
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(5000010000540,
              string,
              "Are you excited for the new Star Wars movie?").
pllm:training(5000010000540,
              text_to_tree,
              [ 'S',
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VBN', excited],
                  [ 'PP',
                    ['IN', for],
                    ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5000010000540,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['VBN', excited],
                ['IN', for],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(5000010000540,
              tree_to_toks,
              ['Are', you, excited, for, 'the-new-Star-Wars-movie', ?]).
pllm:training(5000020000541, string, "Which one do you mean?").
pllm:training(5000020000541,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WDT', 'Which'], ['NN', one]],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', mean]]],
                  ['.', ?]
                ]
              ]).
pllm:training(5000020000541,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', one]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['.', ?]
              ]).
pllm:training(5000020000541, tree_to_toks, ['Which-one', do, you, mean, ?]).
pllm:training(5000030000542, string, "I mean The Last Jedi.").
pllm:training(5000030000542,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', mean], ['NP', ['DT', 'The'], ['JJ', 'Last'], ['NNP', 'Jedi']]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000030000542,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                ['NP', ['DT', 'The'], ['JJ', 'Last'], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(5000030000542, tree_to_toks, ['I', mean, 'The-Last-Jedi', '.']).
pllm:training(5000040000543, string, "Oh yes, I can't wait!").
pllm:training(5000040000543,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], ['UH', yes]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['MD', can], ['RB', not], ['VP', ['VB', wait]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000040000543,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], ['UH', yes]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', wait],
                ['.', '.']
              ]).
pllm:training(5000040000543, tree_to_toks, ['Oh', yes, ',', 'I', can, not, wait, '.']).
pllm:training(5000050000544,
              string,
              "Are you also excited for the Han Solo movie?").
pllm:training(5000050000544,
              text_to_tree,
              [ 'S',
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', also]],
                [ 'VP',
                  ['VBN', excited],
                  ['PP', ['IN', for], ['NP', ['DT', the], ['NNP', 'Han'], ['NNP', 'Solo'], ['NN', movie]]]
                ],
                ['.', ?]
              ]).
pllm:training(5000050000544,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', also]],
                ['VBN', excited],
                ['IN', for],
                ['NP', ['DT', the], ['NNP', 'Han'], ['NNP', 'Solo'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(5000050000544,
              tree_to_toks,
              ['Are', you, also, excited, for, 'the-Han-Solo-movie', ?]).
pllm:training(5000060000545,
              string,
              "Yes, I am. I am a little worried that it will be as good as Rogue One or not.").
pllm:training(5000060000545,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['INTJ', ['UH', 'Yes']], [',', ','], ['NP', ['PRP', 'I']], ['VP', ['VB', am]], ['.', '.']]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', am],
                    [ 'ADJP',
                      ['NP', ['DT', a], ['JJ', little]],
                      ['JJ', worried],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['MD', will],
                            [ 'VP',
                              ['AUX', be],
                              [ 'ADJP',
                                [ 'ADJP',
                                  ['ADJP', ['RB', as], ['JJ', good]],
                                  ['PP', ['IN', as], ['NP', ['NNP', 'Rogue'], ['NNP', 'One']]]
                                ],
                                ['CC', or],
                                ['RB', not]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000060000545,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', am],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJ', worried],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', will],
                ['AUX', be],
                'ADJP',
                'ADJP',
                ['ADJP', ['RB', as], ['JJ', good]],
                ['IN', as],
                ['NP', ['NNP', 'Rogue'], ['NNP', 'One']],
                ['CC', or],
                ['RB', not],
                ['.', '.']
              ]).
pllm:training(5000060000545,
              tree_to_toks,
              [ 'Yes',
                (','),
                'I',
                am,
                ('.'),
                'I',
                am,
                'ADJP',
                'a-little',
                worried,
                that,
                it,
                will,
                be,
                'ADJP',
                'ADJP',
                (as),
                good,
                (as),
                'Rogue-One',
                or,
                not,
                ('.')
              ]).
pllm:training(5000070000546,
              string,
              "Yeah, me too. I did hear yesterday that Disney fired the two people who were directing it because their creative vision didn't align.").
pllm:training(5000070000546,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', me]],
                    ['ADVP', ['RB', too]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', did],
                      [ 'VP',
                        ['VB', hear],
                        ['NP-TMP', ['NN', yesterday]],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', 'Disney']],
                            [ 'VP',
                              ['VBD', fired],
                              [ 'NP',
                                ['NP', ['DT', the], ['CD', two], ['NNS', people]],
                                [ 'SBAR',
                                  ['NP', ['WP', who]],
                                  [ 'S',
                                    [ 'VP',
                                      ['VBD', were],
                                      [ 'VP',
                                        ['VBG', directing],
                                        ['NP', ['PRP', it]],
                                        [ 'SBAR',
                                          ['IN', because],
                                          [ 'S',
                                            [ 'NP',
                                              ['PRP$', their],
                                              ['JJ', creative],
                                              ['NN', vision]
                                            ],
                                            [ 'VP',
                                              ['VBD', did],
                                              ['RB', 'n\'t'],
                                              ['VP', ['VB', align]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5000070000546,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['VB', hear],
                ['NP-TMP', ['NN', yesterday]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBD', fired],
                ['NP', ['DT', the], ['CD', two], ['NNS', people]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', were],
                ['VBG', directing],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP$', their], ['JJ', creative], ['NN', vision]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', align],
                ['.', '.']
              ]).
pllm:training(5000070000546,
              tree_to_toks,
              [ 'Yeah',
                (','),
                me,
                too,
                ('.'),
                'I',
                did,
                hear,
                yesterday,
                that,
                'Disney',
                fired,
                'the-two-people',
                who,
                were,
                directing,
                it,
                because,
                'their-creative-vision',
                did,
                'n\'t',
                align,
                ('.')
              ]).
pllm:training(5000080000547,
              string,
              "I heard that too, I think that is a good sign.").
pllm:training(5000080000547,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', heard],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['ADVP', ['RB', too]],
                        [',', ','],
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['DT', that]],
                              ['VP', ['VBZ', is], ['NP', ['DT', a], ['JJ', good], ['NN', sign]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000080000547,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['ADVP', ['RB', too]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                ['.', '.']
              ]).
pllm:training(5000080000547,
              tree_to_toks,
              ['I', heard, that, too, ',', 'I', think, that, is, 'a-good-sign', '.']).
pllm:training(5000090000548,
              string,
              "I bet they were trying to make it all artsy and have the characters be all sexual and emo and that's not what Disney is about.").
pllm:training(5000090000548,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', bet],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            [ 'VP',
                              ['VBD', were],
                              [ 'VP',
                                ['VBG', trying],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', make],
                                      [ 'S',
                                        ['NP', ['PRP', it]],
                                        ['ADJP', ['DT', all], ['JJ', artsy]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ],
                            ['CC', and],
                            ['VP', ['VB', have], ['NP', ['DT', the], ['NNS', characters]]],
                            [ 'VP',
                              ['VB', be],
                              [ 'NP',
                                ['NP', ['DT', all], ['JJ', sexual]],
                                ['CC', and],
                                ['NP', ['NN', emo]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['RB', not],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        ['S', ['NP', ['NNP', 'Disney']], ['VP', ['VBZ', is], ['ADVP', ['RB', about]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000090000548,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', bet],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['VBG', trying],
                mark('S'),
                ['TO', to],
                ['VB', make],
                mark('S'),
                ['NP', ['PRP', it]],
                ['ADJP', ['DT', all], ['JJ', artsy]],
                ['CC', and],
                ['VB', have],
                ['NP', ['DT', the], ['NNS', characters]],
                ['VB', be],
                ['NP', ['DT', all], ['JJ', sexual]],
                ['CC', and],
                ['NP', ['NN', emo]],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['RB', not],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBZ', is],
                ['ADVP', ['RB', about]],
                ['.', '.']
              ]).
pllm:training(5000090000548,
              tree_to_toks,
              [ 'I',
                bet,
                they,
                were,
                trying,
                to,
                make,
                it,
                all,
                artsy,
                and,
                have,
                'the-characters',
                be,
                'all-sexual',
                and,
                emo,
                and,
                that,
                '\'s',
                not,
                what,
                'Disney',
                (is),
                about,
                ('.')
              ]).
pllm:training(5000100000549,
              string,
              "Yeah I take it as a good sign that Disney is willing to fire directors if they feel they aren't taking Star Wars in the direction they want.").
pllm:training(5000100000549,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [ 'PRN',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', take],
                        ['NP', ['PRP', it]],
                        [ 'PP',
                          ['IN', as],
                          [ 'NP',
                            ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                            [ 'SBAR',
                              ['NP', ['WDT', that]],
                              [ 'S',
                                ['NP', ['NNP', 'Disney']],
                                [ 'VP',
                                  ['VBZ', is],
                                  [ 'ADJP',
                                    ['JJ', willing],
                                    [ 'S',
                                      [ 'VP',
                                        ['TO', to],
                                        [ 'VP',
                                          ['VB', fire],
                                          ['NP', ['NNS', directors]],
                                          [ 'SBAR',
                                            ['IN', if],
                                            [ 'S',
                                              ['NP', ['PRP', they]],
                                              [ 'VP',
                                                ['VB', feel],
                                                [ 'SBAR',
                                                  [ 'S',
                                                    ['NP', ['PRP', they]],
                                                    [ 'VP',
                                                      ['VB', are],
                                                      ['RB', not],
                                                      [ 'VP',
                                                        ['VBG', taking],
                                                        [ 'NP',
                                                          [ 'NP',
                                                            ['NNP', 'Star'],
                                                            ['NNPS', 'Wars']
                                                          ],
                                                          [ 'PP',
                                                            ['IN', in],
                                                            [ 'NP',
                                                              ['DT', the],
                                                              ['NN', direction]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', want]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000100000549,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                'PRN',
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', take],
                ['NP', ['PRP', it]],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBZ', is],
                'ADJP',
                ['JJ', willing],
                mark('S'),
                ['TO', to],
                ['VB', fire],
                ['NP', ['NNS', directors]],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', feel],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['RB', not],
                ['VBG', taking],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['IN', in],
                ['NP', ['DT', the], ['NN', direction]],
                ['NP', ['PRP', they]],
                ['VB', want],
                ['.', '.']
              ]).
pllm:training(5000100000549,
              tree_to_toks,
              [ 'Yeah',
                'PRN',
                'I',
                take,
                it,
                (as),
                'a-good-sign',
                that,
                'Disney',
                (is),
                'ADJP',
                willing,
                to,
                fire,
                directors,
                if,
                they,
                feel,
                they,
                are,
                not,
                taking,
                'Star-Wars',
                in,
                'the-direction',
                they,
                want,
                ('.')
              ]).
pllm:training(5100010000551,
              string,
              "So what is your favorite weapon in star wars").
pllm:training(5100010000551,
              text_to_tree,
              [ 'SBAR',
                ['RB', 'So'],
                ['NP', ['WP', what]],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', weapon]],
                      ['PP', ['IN', in], ['NP', ['NN', star], ['NNS', wars]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5100010000551,
              unphrasify,
              [ mark('SBAR'),
                ['RB', 'So'],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', weapon]],
                ['IN', in],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(5100010000551,
              tree_to_toks,
              ['So', what, is, 'your-favorite-weapon', in, 'star-wars', '.']).
pllm:training(5100020000552, string, "What do you think").
pllm:training(5100020000552,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', think]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100020000552,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['.', '.']
              ]).
pllm:training(5100020000552, tree_to_toks, ['What', do, you, think, '.']).
pllm:training(5100030000553, string, "I think it is obvious").
pllm:training(5100030000553,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    ['SBAR', ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', is], ['ADJP', ['JJ', obvious]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5100030000553,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', obvious]],
                ['.', '.']
              ]).
pllm:training(5100030000553, tree_to_toks, ['I', think, it, is, obvious, '.']).
pllm:training(5100040000554, string, "Well?").
pllm:training(5100040000554, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Well'], ['.', ?]]]).
pllm:training(5100040000554, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Well'], ['.', ?]]]).
pllm:training(5100040000554, tree_to_toks, ['Well', ?]).
pllm:training(5100050000555, string, "A light saber").
pllm:training(5100050000555,
              text_to_tree,
              ['CORENLP', ['NP', ['DT', 'A'], ['JJ', light], ['NN', saber], ['.', '.']]]).
pllm:training(5100050000555,
              unphrasify,
              [mark('CORENLP'), ['NP', ['DT', 'A'], ['JJ', light], ['NN', saber], ['.', '.']]]).
pllm:training(5100050000555, tree_to_toks, ['A-light-saber-.']).
pllm:training(5100060000556, string, "Wrong").
pllm:training(5100060000556, text_to_tree, ['CORENLP', ['ADJP', ['JJ', 'Wrong'], ['.', '.']]]).
pllm:training(5100060000556,
              unphrasify,
              [mark('CORENLP'), ['ADJP', ['JJ', 'Wrong'], ['.', '.']]]).
pllm:training(5100060000556, tree_to_toks, ['Wrong', '.']).
pllm:training(5100070000557, string, "What?!!").
pllm:training(5100070000557,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WP', 'What']], ['.', ?]]],
                ['SEQBAR', ['CORENLP', ['FRAG', ['.', '.']]], ['CORENLP', ['FRAG', ['.', '.']]]]
              ]).
pllm:training(5100070000557,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(5100070000557, tree_to_toks, ['What', ?, '.', 'FRAG', '.']).
pllm:training(5100080000558, string, "It is not").
pllm:training(5100080000558,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', is], ['RB', not]], ['.', '.']]]).
pllm:training(5100080000558,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'It']], ['VBZ', is], ['RB', not], ['.', '.']]).
pllm:training(5100080000558, tree_to_toks, ['It', is, not, '.']).
pllm:training(5100090000559, string, "Fine what is it").
pllm:training(5100090000559,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['INTJ', ['UH', 'Fine']],
                  ['NP', ['WP', what]],
                  ['S', ['VBZ', is], ['NP', ['PRP', it]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100090000559,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['INTJ', ['UH', 'Fine']],
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(5100090000559, tree_to_toks, ['Fine', what, is, it, '.']).
pllm:training(5100100000560, string, "The blaster the noise is fun").
pllm:training(5100100000560,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NP', ['DT', 'The'], ['NN', blaster]], ['NP', ['DT', the], ['NN', noise]]],
                  ['VP', ['VBZ', is], ['ADJP', ['JJ', fun]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100100000560,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', blaster]],
                ['NP', ['DT', the], ['NN', noise]],
                ['VBZ', is],
                ['ADJP', ['JJ', fun]],
                ['.', '.']
              ]).
pllm:training(5100100000560, tree_to_toks, ['The-blaster', 'the-noise', is, fun, '.']).
pllm:training(5200010000562,
              string,
              "what do you think about the theory that rey is obi wan's daughter?").
pllm:training(5200010000562,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', what]],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'PP',
                      ['IN', about],
                      [ 'NP',
                        ['DT', the],
                        ['NN', theory],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', rey]],
                            [ 'VP',
                              ['AUX', is],
                              [ 'VP',
                                ['VBG', obi],
                                ['NP', ['NP', ['NNP', wan], ['POS', '\'s']], ['NN', daughter]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5200010000562,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', about],
                ['DT', the],
                ['NN', theory],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', rey]],
                ['AUX', is],
                ['VBG', obi],
                ['NP', ['NNP', wan], ['POS', '\'s']],
                ['NN', daughter],
                ['.', ?]
              ]).
pllm:training(5200010000562,
              tree_to_toks,
              [ what,
                do,
                you,
                think,
                about,
                the,
                theory,
                that,
                rey,
                (is),
                obi,
                'wan-\'s',
                daughter,
                (?)
              ]).
pllm:training(5200020000563, string, "i honestly hate it. it makes no sense").
pllm:training(5200020000563,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    ['ADVP', ['RB', honestly]],
                    ['VP', ['VB', hate], ['NP', ['PRP', it]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', makes], ['NP', ['DT', no], ['NN', sense]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200020000563,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', honestly]],
                ['VB', hate],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', makes],
                ['NP', ['DT', no], ['NN', sense]],
                ['.', '.']
              ]).
pllm:training(5200020000563,
              tree_to_toks,
              [i, honestly, hate, it, '.', it, makes, 'no-sense', '.']).
pllm:training(5200030000564,
              string,
              "really? he was in hiding for a long time, yo udon't think obi could have found a boo?").
pllm:training(5200030000564,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['ADVP', ['RB', really]], ['.', ?]]],
                [ 'S',
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['AUX', was],
                    ['PP', ['IN', in], ['NP', ['NN', hiding]]],
                    ['PP', ['IN', for], ['NP', ['DT', a], ['JJ', long], ['NN', time]]],
                    [',', ','],
                    [ 'S',
                      [ 'VP',
                        ['VBG', yo],
                        [ 'S',
                          [ 'VP',
                            ['VB', udo],
                            ['RB', 'n\'t'],
                            [ 'VP',
                              ['VB', think],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', obi]],
                                  [ 'VP',
                                    ['MD', could],
                                    [ 'VP',
                                      ['AUX', have],
                                      ['VP', ['VBN', found], ['NP', ['DT', a], ['NN', boo]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5200030000564,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', really]],
                ['.', ?],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', in],
                ['NP', ['NN', hiding]],
                ['IN', for],
                ['NP', ['DT', a], ['JJ', long], ['NN', time]],
                [',', ','],
                mark('S'),
                ['VBG', yo],
                mark('S'),
                ['VB', udo],
                ['RB', 'n\'t'],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', obi]],
                ['MD', could],
                ['AUX', have],
                ['VBN', found],
                ['NP', ['DT', a], ['NN', boo]],
                ['.', ?]
              ]).
pllm:training(5200030000564,
              tree_to_toks,
              [ really,
                (?),
                he,
                was,
                in,
                hiding,
                for,
                'a-long-time',
                (','),
                yo,
                udo,
                'n\'t',
                think,
                obi,
                could,
                have,
                found,
                'a-boo',
                (?)
              ]).
pllm:training(5200040000565,
              string,
              "no, i don't. i think she's related to the skywalkers").
pllm:training(5200040000565,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', no]],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    ['VP', ['VB', do], ['RB', not]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'VP',
                              ['VBN', related],
                              ['PP', ['IN', to], ['NP', ['DT', the], ['NNS', skywalkers]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200040000565,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', no]],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', do],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['VBN', related],
                ['IN', to],
                ['NP', ['DT', the], ['NNS', skywalkers]],
                ['.', '.']
              ]).
pllm:training(5200040000565,
              tree_to_toks,
              [no, ',', i, do, not, '.', i, think, she, '\'s', related, to, 'the-skywalkers', '.']).
pllm:training(5200050000566, string, "why?").
pllm:training(5200050000566,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(5200050000566,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(5200050000566, tree_to_toks, [why, ?]).
pllm:training(5200060000567, string, "because she's so force sensative!").
pllm:training(5200060000567,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', because],
                    ['S', ['NP', ['PRP', she]], ['VP', ['VBZ', '\'s'], ['ADVP', ['RB', so]]]]
                  ],
                  ['VP', ['VB', force], ['ADJP', ['JJ', sensative]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5200060000567,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', so]],
                ['VB', force],
                ['ADJP', ['JJ', sensative]],
                ['.', '.']
              ]).
pllm:training(5200060000567,
              tree_to_toks,
              [because, she, '\'s', so, force, sensative, '.']).
pllm:training(5200070000568,
              string,
              "i guess only a skywalker could move the force that well").
pllm:training(5200070000568,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['RB', only], ['DT', a], ['NN', skywalker]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', move],
                            ['NP', ['DT', the], ['NN', force], ['SBAR', ['NP', ['WDT', that]]]],
                            ['ADVP', ['RB', well]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5200070000568,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['RB', only], ['DT', a], ['NN', skywalker]],
                ['MD', could],
                ['VB', move],
                ['DT', the],
                ['NN', force],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(5200070000568,
              tree_to_toks,
              [i, guess, 'only-a-skywalker', could, move, the, force, that, well, '.']).
pllm:training(5200080000569,
              string,
              "exactly! plus, i really want her to be related to kylo ren").
pllm:training(5200080000569,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', exactly]], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['CC', plus]],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', want],
                      [ 'S',
                        ['NP', ['PRP', her]],
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'VP',
                              ['VBN', related],
                              ['PP', ['IN', to], ['NP', ['NN', kylo], ['NN', ren]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200080000569,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', exactly]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['CC', plus]],
                [',', ','],
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', really]],
                ['VB', want],
                mark('S'),
                ['NP', ['PRP', her]],
                ['TO', to],
                ['VB', be],
                ['VBN', related],
                ['IN', to],
                ['NP', ['NN', kylo], ['NN', ren]],
                ['.', '.']
              ]).
pllm:training(5200080000569,
              tree_to_toks,
              [exactly, '.', plus, ',', i, really, want, her, to, be, related, to, 'kylo-ren', '.']).
pllm:training(5200090000570, string, "why?").
pllm:training(5200090000570,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(5200090000570,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(5200090000570, tree_to_toks, [why, ?]).
pllm:training(5200100000571,
              string,
              "because people keep saying they should be together, and that's nasty! let's shut that down").
pllm:training(5200100000571,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['IN', because],
                  [ 'S',
                    [ 'S',
                      ['NP', ['NNS', people]],
                      [ 'VP',
                        ['VB', keep],
                        [ 'S',
                          [ 'VP',
                            ['VBG', saying],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', they]],
                                [ 'VP',
                                  ['MD', should],
                                  ['VP', ['AUX', be], ['ADVP', ['RB', together]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    ['S', ['NP', ['DT', that]], ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', nasty]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', let],
                      [ 'S',
                        ['NP', ['PRP', '\'s']],
                        ['VP', ['VB', shut], ['NP', ['DT', that]], ['PRT', ['RP', down]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200100000571,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', keep],
                mark('S'),
                ['VBG', saying],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['MD', should],
                ['AUX', be],
                ['ADVP', ['RB', together]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', nasty]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', let],
                mark('S'),
                ['NP', ['PRP', '\'s']],
                ['VB', shut],
                ['NP', ['DT', that]],
                ['PRT', ['RP', down]],
                ['.', '.']
              ]).
pllm:training(5200100000571,
              tree_to_toks,
              [ because,
                people,
                keep,
                saying,
                they,
                should,
                be,
                together,
                (','),
                and,
                that,
                '\'s',
                nasty,
                ('.'),
                let,
                '\'s',
                shut,
                that,
                down,
                ('.')
              ]).
pllm:training(5300010000573, string, "Did you like the Force Awakens?").
pllm:training(5300010000573,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['DT', the], ['NNP', 'Force'], ['NNPS', 'Awakens']]],
                ['.', ?]
              ]).
pllm:training(5300010000573,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NNPS', 'Awakens']],
                ['.', ?]
              ]).
pllm:training(5300010000573, tree_to_toks, ['Did', you, like, 'the-Force-Awakens', ?]).
pllm:training(5300020000574,
              string,
              "I didnt like it that much, I'm a Star Wars fan but think the last movie wasnt as good.").
pllm:training(5300020000574,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    [ 'VP',
                      ['VBD', did],
                      ['ADVP', ['RB', nt]],
                      ['PP', ['IN', like], ['NP', ['PRP', it]]],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          ['ADVP', ['RB', much]],
                          [',', ','],
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VB', '\'m'],
                            ['NP', ['DT', a], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', fan]]
                          ]
                        ]
                      ]
                    ],
                    ['CC', but],
                    [ 'VP',
                      ['VB', think],
                      ['NP', ['DT', the], ['JJ', last], ['NN', movie], ['NN', wasnt]],
                      ['PP', ['IN', as], ['ADJP', ['JJ', good]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300020000574,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['ADVP', ['RB', nt]],
                ['IN', like],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['ADVP', ['RB', much]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['NP', ['DT', a], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', fan]],
                ['CC', but],
                ['VB', think],
                ['NP', ['DT', the], ['JJ', last], ['NN', movie], ['NN', wasnt]],
                ['IN', as],
                ['ADJP', ['JJ', good]],
                ['.', '.']
              ]).
pllm:training(5300020000574,
              tree_to_toks,
              [ 'I',
                did,
                nt,
                like,
                it,
                that,
                much,
                (','),
                'I',
                '\'m',
                'a-Star-Wars-fan',
                but,
                think,
                'the-last-movie-wasnt',
                (as),
                good,
                ('.')
              ]).
pllm:training(5300030000575,
              string,
              "I agree, I think theres many flaws, hopefuly this will get fixed.").
pllm:training(5300030000575,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', agree]]],
                  [',', ','],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['ADVP', ['RB', theres]],
                      ['NP', ['JJ', many], ['NNS', flaws]]
                    ]
                  ],
                  [',', ','],
                  [ 'S',
                    ['ADVP', ['RB', hopefuly]],
                    ['NP', ['DT', this]],
                    ['VP', ['MD', will], ['VP', ['VB', get], ['VP', ['VBN', fixed]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300030000575,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                ['ADVP', ['RB', theres]],
                ['NP', ['JJ', many], ['NNS', flaws]],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', hopefuly]],
                ['NP', ['DT', this]],
                ['MD', will],
                ['VB', get],
                ['VBN', fixed],
                ['.', '.']
              ]).
pllm:training(5300030000575,
              tree_to_toks,
              [ 'I',
                agree,
                (','),
                'I',
                think,
                theres,
                'many-flaws',
                (','),
                hopefuly,
                this,
                will,
                get,
                fixed,
                ('.')
              ]).
pllm:training(5300040000576, string, "What character did you like the most?").
pllm:training(5300040000576,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What'], ['NN', character]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['NP', ['DT', the], ['JJS', most]]]
                ],
                ['.', ?]
              ]).
pllm:training(5300040000576,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What'], ['NN', character]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(5300040000576,
              tree_to_toks,
              ['What-character', did, you, like, 'the-most', ?]).
pllm:training(5300050000577,
              string,
              "I liked the villain, I thought hes light saver was pretty cool.").
pllm:training(5300050000577,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', liked], ['NP', ['DT', the], ['NN', villain]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'NP',
                      ['NP', ['NNS', hes]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['JJ', light], ['NN', saver]],
                          ['VP', ['VBD', was], ['ADJP', ['RB', pretty], ['JJ', cool]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300050000577,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['NN', villain]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                ['NP', ['NNS', hes]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['JJ', light], ['NN', saver]],
                ['VBD', was],
                ['ADJP', ['RB', pretty], ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(5300050000577,
              tree_to_toks,
              [ 'I',
                liked,
                'the-villain',
                (','),
                'I',
                thought,
                hes,
                'light-saver',
                was,
                pretty,
                cool,
                ('.')
              ]).
pllm:training(5300060000578,
              string,
              "Yeah it was, it would be interesting to see how he got trained.").
pllm:training(5300060000578,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah'], ['S', ['NP', ['PRP', it]], ['VP', ['AUX', was]]]],
                [',', ','],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['AUX', be],
                    ['ADJP', ['JJ', interesting]],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', see],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', how]],
                            [ 'S',
                              ['NP', ['PRP', he]],
                              ['VP', ['VBD', got], ['VP', ['VBN', trained]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5300060000578,
              unphrasify,
              [ mark('S'),
                'INTJ',
                ['UH', 'Yeah'],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                [',', ','],
                ['NP', ['PRP', it]],
                ['MD', would],
                ['AUX', be],
                ['ADJP', ['JJ', interesting]],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['VBN', trained],
                ['.', '.']
              ]).
pllm:training(5300060000578,
              tree_to_toks,
              [ 'INTJ',
                'Yeah',
                it,
                was,
                (','),
                it,
                would,
                be,
                interesting,
                to,
                see,
                how,
                he,
                got,
                trained,
                ('.')
              ]).
pllm:training(5300070000579,
              string,
              "I wonder how the next Star Wars movie will be like.").
pllm:training(5300070000579,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        [ 'NP',
                          ['DT', the],
                          ['JJ', next],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', movie]
                        ],
                        ['VP', ['MD', will], ['VP', ['VB', be], ['INTJ', ['UH', like]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300070000579,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                [ 'NP',
                  ['DT', the],
                  ['JJ', next],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', movie]
                ],
                ['MD', will],
                ['VB', be],
                ['INTJ', ['UH', like]],
                ['.', '.']
              ]).
pllm:training(5300070000579,
              tree_to_toks,
              ['I', wonder, how, 'the-next-Star-Wars-movie', will, be, like, '.']).
pllm:training(5300080000580,
              string,
              "It will be interesting to watch Kilo Ren fight Luke.").
pllm:training(5300080000580,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['MD', will],
                    [ 'VP',
                      ['VB', be],
                      [ 'ADJP',
                        ['JJ', interesting],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', watch],
                              [ 'S',
                                ['NP', ['NNP', 'Kilo'], ['NNP', 'Ren']],
                                ['VP', ['VB', fight], ['NP', ['NNP', 'Luke']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300080000580,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', will],
                ['VB', be],
                'ADJP',
                ['JJ', interesting],
                mark('S'),
                ['TO', to],
                ['VB', watch],
                mark('S'),
                ['NP', ['NNP', 'Kilo'], ['NNP', 'Ren']],
                ['VB', fight],
                ['NP', ['NNP', 'Luke']],
                ['.', '.']
              ]).
pllm:training(5300080000580,
              tree_to_toks,
              ['It', will, be, 'ADJP', interesting, to, watch, 'Kilo-Ren', fight, 'Luke', '.']).
pllm:training(5300090000581, string, "That would be a pretty cool fight.").
pllm:training(5300090000581,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', cool]], ['NN', fight]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300090000581,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', be],
                ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', cool]], ['NN', fight]],
                ['.', '.']
              ]).
pllm:training(5300090000581,
              tree_to_toks,
              ['That', would, be, 'a-pretty-cool-fight', '.']).
pllm:training(5300100000582,
              string,
              "I wonder if Luke can put up a fight after all this time.").
pllm:training(5300100000582,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['IN', if],
                      [ 'S',
                        ['NP', ['NNP', 'Luke']],
                        [ 'VP',
                          ['MD', can],
                          [ 'VP',
                            ['VB', put],
                            ['PRT', ['RP', up]],
                            ['NP', ['DT', a], ['NN', fight]],
                            ['PP', ['IN', after], ['NP', ['PDT', all], ['DT', this], ['NN', time]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300100000582,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['MD', can],
                ['VB', put],
                ['PRT', ['RP', up]],
                ['NP', ['DT', a], ['NN', fight]],
                ['IN', after],
                ['NP', ['PDT', all], ['DT', this], ['NN', time]],
                ['.', '.']
              ]).
pllm:training(5300100000582,
              tree_to_toks,
              ['I', wonder, if, 'Luke', can, put, up, 'a-fight', after, 'all-this-time', '.']).
pllm:training(5400010000584,
              string,
              "Who is the most annoying person in Star Wars?").
pllm:training(5400010000584,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        ['ADJP', ['RBS', most], ['JJ', annoying]],
                        ['NN', person]
                      ],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5400010000584,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', annoying]], ['NN', person]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(5400010000584,
              tree_to_toks,
              ['Who', is, 'the-most-annoying-person', in, 'Star-Wars', ?]).
pllm:training(5400020000585, string, "I think it would be Young Anakin").
pllm:training(5400020000585,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['MD', would],
                          ['VP', ['VB', be], ['NP', ['JJ', 'Young'], ['NNP', 'Anakin']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400020000585,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['VB', be],
                ['NP', ['JJ', 'Young'], ['NNP', 'Anakin']],
                ['.', '.']
              ]).
pllm:training(5400020000585, tree_to_toks, ['I', think, it, would, be, 'Young-Anakin', '.']).
pllm:training(5400030000586, string, "Why do you say that?").
pllm:training(5400030000586,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(5400030000586,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(5400030000586, tree_to_toks, ['Why', do, you, say, that, ?]).
pllm:training(5400040000587,
              string,
              "Maybe it's just his acting but he is so over the top with everything").
pllm:training(5400040000587,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADVP', ['RB', just]],
                      ['NP', ['PRP$', his], ['VBG', acting]]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', is],
                      ['ADVP', ['RB', so], ['PP', ['IN', over], ['NP', ['DT', the], ['JJ', top]]]],
                      ['PP', ['IN', with], ['NP', ['NN', everything]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400040000587,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', just]],
                ['NP', ['PRP$', his], ['VBG', acting]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                'ADVP',
                ['RB', so],
                ['IN', over],
                ['NP', ['DT', the], ['JJ', top]],
                ['IN', with],
                ['NP', ['NN', everything]],
                ['.', '.']
              ]).
pllm:training(5400040000587,
              tree_to_toks,
              [ 'Maybe',
                it,
                '\'s',
                just,
                'his-acting',
                but,
                he,
                (is),
                'ADVP',
                so,
                over,
                'the-top',
                with,
                everything,
                ('.')
              ]).
pllm:training(5400050000588, string, "Oh, like during his pod race?").
pllm:training(5400050000588,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                [ 'ADVP',
                  ['IN', like],
                  ['PP', ['IN', during], ['NP', ['PRP$', his], ['NN', pod], ['NN', race]]]
                ],
                ['.', ?]
              ]).
pllm:training(5400050000588,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                'ADVP',
                ['IN', like],
                ['IN', during],
                ['NP', ['PRP$', his], ['NN', pod], ['NN', race]],
                ['.', ?]
              ]).
pllm:training(5400050000588,
              tree_to_toks,
              ['Oh', ',', 'ADVP', like, during, 'his-pod-race', ?]).
pllm:training(5400060000589, string, "Yeah he seems so fake.").
pllm:training(5400060000589,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', seems], ['ADJP', ['RB', so], ['JJ', fake]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5400060000589,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', he]],
                ['VBZ', seems],
                ['ADJP', ['RB', so], ['JJ', fake]],
                ['.', '.']
              ]).
pllm:training(5400060000589, tree_to_toks, ['Yeah', he, seems, so, fake, '.']).
pllm:training(5400070000590,
              string,
              "He got a little better though, he wasn't always so inexperienced with his acting").
pllm:training(5400070000590,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', got],
                    ['ADJP', ['NP', ['DT', a], ['JJ', little]], ['JJR', better]],
                    [ 'SBAR',
                      ['IN', though],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['RB', 'n\'t'],
                          ['ADVP', ['RB', always]],
                          [ 'ADJP',
                            ['RB', so],
                            ['JJ', inexperienced],
                            ['PP', ['IN', with], ['NP', ['PRP$', his], ['NN', acting]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400070000590,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', got],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJR', better],
                mark('SBAR'),
                ['IN', though],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', always]],
                'ADJP',
                ['RB', so],
                ['JJ', inexperienced],
                ['IN', with],
                ['NP', ['PRP$', his], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(5400070000590,
              tree_to_toks,
              [ 'He',
                got,
                'ADJP',
                'a-little',
                better,
                though,
                (','),
                he,
                was,
                'n\'t',
                always,
                'ADJP',
                so,
                inexperienced,
                with,
                'his-acting',
                ('.')
              ]).
pllm:training(5400080000591, string, "I wonder what that actor is up to now!").
pllm:training(5400080000591,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', wonder],
                  [ 'SBAR',
                    ['NP', ['WP', what]],
                    [ 'S',
                      ['NP', ['DT', that], ['NN', actor]],
                      ['VP', ['AUX', is], ['PP', ['IN', up], ['PP', ['TO', to], ['NP', ['RB', now]]]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5400080000591,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', that], ['NN', actor]],
                ['AUX', is],
                ['IN', up],
                ['TO', to],
                ['NP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(5400080000591,
              tree_to_toks,
              ['I', wonder, what, 'that-actor', is, up, to, now, '.']).
pllm:training(5400090000592,
              string,
              "He hasn't been in any movies that I know of!").
pllm:training(5400090000592,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', has],
                    ['RB', 'n\'t'],
                    [ 'VP',
                      ['VBN', been],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['NP', ['DT', any], ['NNS', movies]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know], ['PP', ['IN', of]]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400090000592,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', has],
                ['RB', 'n\'t'],
                ['VBN', been],
                ['IN', in],
                ['NP', ['DT', any], ['NNS', movies]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                ['IN', of],
                ['.', '.']
              ]).
pllm:training(5400090000592,
              tree_to_toks,
              ['He', has, 'n\'t', been, in, 'any-movies', that, 'I', know, of, '.']).
pllm:training(5400100000593,
              string,
              "I liked him in Star Wars, he was just a little kid. I should cut him some slack").
pllm:training(5400100000593,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', liked],
                        ['NP', ['PRP', him]],
                        ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', just]],
                      ['NP', ['DT', a], ['JJ', little], ['NN', kid]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', should],
                      ['VP', ['VB', cut], ['NP', ['PRP', him]], ['NP', ['DT', some], ['NN', slack]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5400100000593,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                ['NP', ['DT', a], ['JJ', little], ['NN', kid]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', should],
                ['VB', cut],
                ['NP', ['PRP', him]],
                ['NP', ['DT', some], ['NN', slack]],
                ['.', '.']
              ]).
pllm:training(5400100000593,
              tree_to_toks,
              [ 'I',
                liked,
                him,
                in,
                'Star-Wars',
                (','),
                he,
                was,
                just,
                'a-little-kid',
                ('.'),
                'I',
                should,
                cut,
                him,
                'some-slack',
                ('.')
              ]).
pllm:training(5500010000595,
              string,
              "Do you like the concept of the Death Star in Star Wars?").
pllm:training(5500010000595,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', concept]],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Death'], ['NNP', 'Star']],
                        ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5500010000595,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', concept]],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Death'], ['NNP', 'Star']],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(5500010000595,
              tree_to_toks,
              ['Do', you, like, 'the-concept', of, 'the-Death-Star', in, 'Star-Wars', ?]).
pllm:training(5500020000596, string, "I do actually.").
pllm:training(5500020000596,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['ADVP', ['RB', actually]]], ['.', '.']]
              ]).
pllm:training(5500020000596,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['ADVP', ['RB', actually]],
                ['.', '.']
              ]).
pllm:training(5500020000596, tree_to_toks, ['I', do, actually, '.']).
pllm:training(5500030000597,
              string,
              "I was wondering if you thought it was practical like it could be actually done?").
pllm:training(5500030000597,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBG', wondering],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          [ 'VP',
                            ['VBD', thought],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', it]],
                                [ 'VP',
                                  ['VBD', was],
                                  ['ADJP', ['JJ', practical]],
                                  [ 'SBAR',
                                    ['IN', like],
                                    [ 'S',
                                      ['NP', ['PRP', it]],
                                      [ 'VP',
                                        ['MD', could],
                                        [ 'VP',
                                          ['VB', be],
                                          ['ADVP', ['RB', actually]],
                                          ['VP', ['VBN', done]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5500030000597,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBG', wondering],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', practical]],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', could],
                ['VB', be],
                ['ADVP', ['RB', actually]],
                ['VBN', done],
                ['.', ?]
              ]).
pllm:training(5500030000597,
              tree_to_toks,
              [ 'I',
                was,
                wondering,
                if,
                you,
                thought,
                it,
                was,
                practical,
                like,
                it,
                could,
                be,
                actually,
                done,
                (?)
              ]).
pllm:training(5500040000598,
              string,
              "I think a weapon could be created like that but not in the same way.").
pllm:training(5500040000598,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', a], ['NN', weapon]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', be],
                            [ 'VP',
                              ['VBN', created],
                              [ 'PP',
                                ['PP', ['IN', like], ['NP', ['DT', that]]],
                                ['CONJP', ['CC', but], ['RB', not]],
                                ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', same], ['NN', way]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5500040000598,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', a], ['NN', weapon]],
                ['MD', could],
                ['VB', be],
                ['VBN', created],
                ['IN', like],
                ['NP', ['DT', that]],
                ['CONJP', ['CC', but], ['RB', not]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', same], ['NN', way]],
                ['.', '.']
              ]).
pllm:training(5500040000598,
              tree_to_toks,
              [ 'I',
                think,
                'a-weapon',
                could,
                be,
                created,
                like,
                that,
                but,
                not,
                in,
                'the-same-way',
                ('.')
              ]).
pllm:training(5500050000599, string, "How so?").
pllm:training(5500050000599,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'How']], ['FRAG', ['ADVP', ['RB', so]]], ['.', ?]]]).
pllm:training(5500050000599,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('FRAG'),
                ['ADVP', ['RB', so]],
                ['.', ?]
              ]).
pllm:training(5500050000599, tree_to_toks, ['How', so, ?]).
pllm:training(5500060000600,
              string,
              "I don't think we could ever create a weapon that is essentially a planet/moon just would require hundreds of years, that's a lot of space to use and build something that large inside of it.").
pllm:training(5500060000600,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', do],
                  ['RB', not],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', we]],
                        [ 'VP',
                          ['MD', could],
                          ['ADVP', ['RB', ever]],
                          [ 'VP',
                            ['VB', create],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', weapon]],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  [ 'VP',
                                    ['AUX', is],
                                    ['ADVP', ['RB', essentially]],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', planet]],
                                      [ 'SBAR',
                                        [ 'S',
                                          ['NP', ['JJ', /], ['NN', moon]],
                                          ['ADVP', ['RB', just]],
                                          [ 'VP',
                                            ['MD', would],
                                            [ 'VP',
                                              ['VB', require],
                                              [ 'NP',
                                                ['NP', ['NNS', hundreds]],
                                                ['PP', ['IN', of], ['NP', ['NNS', years]]],
                                                [',', ','],
                                                [ 'SBAR',
                                                  ['NP', ['WDT', that]],
                                                  [ 'S',
                                                    [ 'VP',
                                                      ['AUX', '\'s'],
                                                      [ 'NP',
                                                        ['NP', ['DT', a], ['NN', lot]],
                                                        [ 'PP',
                                                          ['IN', of],
                                                          ['NP', ['NN', space]]
                                                        ]
                                                      ],
                                                      [ 'S',
                                                        [ 'VP',
                                                          ['TO', to],
                                                          [ 'VP',
                                                            ['VB', use],
                                                            ['CC', and],
                                                            ['VB', build],
                                                            [ 'NP',
                                                              ['NP', ['NN', something]],
                                                              [ 'SBAR',
                                                                ['NP', ['IN', that]],
                                                                [ 'S',
                                                                  [ 'VP',
                                                                    ['JJ', large],
                                                                    [ 'PP',
                                                                      ['IN', inside],
                                                                      ['IN', of],
                                                                      ['NP', ['PRP', it]]
                                                                    ]
                                                                  ]
                                                                ]
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5500060000600,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['MD', could],
                ['ADVP', ['RB', ever]],
                ['VB', create],
                ['NP', ['DT', a], ['NN', weapon]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['AUX', is],
                ['ADVP', ['RB', essentially]],
                ['NP', ['DT', a], ['NN', planet]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['JJ', /], ['NN', moon]],
                ['ADVP', ['RB', just]],
                ['MD', would],
                ['VB', require],
                ['NP', ['NNS', hundreds]],
                ['IN', of],
                ['NP', ['NNS', years]],
                [',', ','],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['NN', space]],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['CC', and],
                ['VB', build],
                ['NP', ['NN', something]],
                mark('SBAR'),
                ['NP', ['IN', that]],
                mark('S'),
                ['JJ', large],
                ['IN', inside],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(5500060000600,
              tree_to_toks,
              [ 'I',
                do,
                not,
                think,
                we,
                could,
                ever,
                create,
                'a-weapon',
                that,
                (is),
                essentially,
                'a-planet',
                '/-moon',
                just,
                would,
                require,
                hundreds,
                of,
                years,
                (','),
                that,
                '\'s',
                'a-lot',
                of,
                space,
                to,
                use,
                and,
                build,
                something,
                that,
                large,
                inside,
                of,
                it,
                ('.')
              ]).
pllm:training(5500070000601, string, "That's a good point.").
pllm:training(5500070000601,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5500070000601,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(5500070000601, tree_to_toks, ['That', '\'s', 'a-good-point', '.']).
pllm:training(5500080000602, string, "Do you think it was a cool concept?").
pllm:training(5500080000602,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', cool], ['NN', concept]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5500080000602,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', cool], ['NN', concept]],
                ['.', ?]
              ]).
pllm:training(5500080000602,
              tree_to_toks,
              ['Do', you, think, it, was, 'a-cool-concept', ?]).
pllm:training(5500090000603,
              string,
              "I absolutely loved the idea and it was rather shocking.").
pllm:training(5500090000603,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', absolutely]],
                    ['VP', ['VBD', loved], ['NP', ['DT', the], ['NN', idea]]]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    ['VP', ['VBD', was], ['ADJP', ['RB', rather], ['JJ', shocking]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5500090000603,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', absolutely]],
                ['VBD', loved],
                ['NP', ['DT', the], ['NN', idea]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['RB', rather], ['JJ', shocking]],
                ['.', '.']
              ]).
pllm:training(5500090000603,
              tree_to_toks,
              ['I', absolutely, loved, 'the-idea', and, it, was, rather, shocking, '.']).
pllm:training(5500100000604, string, "Yeah it was a big twist.").
pllm:training(5500100000604,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['NP', ['PRP', it]],
                  ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', big], ['NN', twist]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5500100000604,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', big], ['NN', twist]],
                ['.', '.']
              ]).
pllm:training(5500100000604, tree_to_toks, ['Yeah', it, was, 'a-big-twist', '.']).
pllm:training(5600010000606,
              string,
              "What do you think of the robots R2-D2 in the old trilogy?").
pllm:training(5600010000606,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'NP',
                        [ 'NP',
                          ['NML', ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', robots]]]],
                          ['NN', 'R2'],
                          ['HYPH', -],
                          ['NN', 'D2']
                        ],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', old], ['NN', trilogy]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600010000606,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('NML'),
                ['IN', of],
                ['NP', ['DT', the], ['NNS', robots]],
                ['NN', 'R2'],
                ['HYPH', -],
                ['NN', 'D2'],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', old], ['NN', trilogy]],
                ['.', ?]
              ]).
pllm:training(5600010000606,
              tree_to_toks,
              ['What', do, you, think, of, 'the-robots', 'R2', -, 'D2', in, 'the-old-trilogy', ?]).
pllm:training(5600020000607, string, "He was alright.").
pllm:training(5600020000607,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['VP', ['VBD', was], ['ADJP', ['JJ', alright]]], ['.', '.']]
              ]).
pllm:training(5600020000607,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADJP', ['JJ', alright]],
                ['.', '.']
              ]).
pllm:training(5600020000607, tree_to_toks, ['He', was, alright, '.']).
pllm:training(5600030000608, string, "Just alright he was a genius robot.").
pllm:training(5600030000608,
              text_to_tree,
              [ 'S',
                ['NP', ['RB', 'Just'], ['NN', alright]],
                ['NP', ['PRP', he]],
                ['VP', ['AUX', was], ['NP', ['DT', a], ['NN', genius], ['NN', robot]]],
                ['.', '.']
              ]).
pllm:training(5600030000608,
              unphrasify,
              [ mark('S'),
                ['NP', ['RB', 'Just'], ['NN', alright]],
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', genius], ['NN', robot]],
                ['.', '.']
              ]).
pllm:training(5600030000608,
              tree_to_toks,
              ['Just-alright', he, was, 'a-genius-robot', '.']).
pllm:training(5600040000609,
              string,
              "Yeah but the other one the gold human looking one was more of the brains of the operation.").
pllm:training(5600040000609,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['CC', but],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', other], ['NN', one]],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['NN', gold]],
                        ['ADJP', ['JJ', human]],
                        ['S', ['VP', ['VBG', looking], ['NP', ['NN', one]]]]
                      ]
                    ]
                  ],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['JJR', more]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', brains]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NN', operation]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600040000609,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['CC', but],
                ['NP', ['DT', the], ['JJ', other], ['NN', one]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', gold]],
                ['ADJP', ['JJ', human]],
                mark('S'),
                ['VBG', looking],
                ['NP', ['NN', one]],
                ['VBD', was],
                ['NP', ['JJR', more]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', brains]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', operation]],
                ['.', '.']
              ]).
pllm:training(5600040000609,
              tree_to_toks,
              [ 'Yeah',
                but,
                'the-other-one',
                'the-gold',
                human,
                looking,
                one,
                was,
                more,
                of,
                'the-brains',
                of,
                'the-operation',
                ('.')
              ]).
pllm:training(5600050000610,
              string,
              "R2-D2 didn't have voice capatability but he was smart.").
pllm:training(5600050000610,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['NN', 'R2'], ['HYPH', -], ['NN', 'D2']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      ['VP', ['VB', have], ['NP', ['NN', voice], ['NN', capatability]]]
                    ]
                  ],
                  ['CC', but],
                  ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', smart]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5600050000610,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NN', 'R2'], ['HYPH', -], ['NN', 'D2']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', have],
                ['NP', ['NN', voice], ['NN', capatability]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', smart]],
                ['.', '.']
              ]).
pllm:training(5600050000610,
              tree_to_toks,
              ['R2---D2', did, 'n\'t', have, 'voice-capatability', but, he, was, smart, '.']).
pllm:training(5600060000611,
              string,
              "Yes I suppose he was as smart as you could expect.").
pllm:training(5600060000611,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', suppose],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADJP', ['IN', as], ['JJ', smart]],
                          [ 'SBAR',
                            ['IN', as],
                            [ 'S',
                              ['NP', ['PRP', you]],
                              ['VP', ['MD', could], ['VP', ['VB', expect]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600060000611,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['IN', as], ['JJ', smart]],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', could],
                ['VB', expect],
                ['.', '.']
              ]).
pllm:training(5600060000611,
              tree_to_toks,
              ['Yes', 'I', suppose, he, was, as, smart, as, you, could, expect, '.']).
pllm:training(5600070000612,
              string,
              "Do you think they were created in the same place or factory?").
pllm:training(5600070000612,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', were],
                          [ 'VP',
                            ['VBN', created],
                            [ 'PP',
                              ['IN', in],
                              [ 'NP',
                                ['NP', ['DT', the], ['JJ', same], ['NN', place]],
                                ['CC', or],
                                ['NP', ['NN', factory]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600070000612,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['VBN', created],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', same], ['NN', place]],
                ['CC', or],
                ['NP', ['NN', factory]],
                ['.', ?]
              ]).
pllm:training(5600070000612,
              tree_to_toks,
              ['Do', you, think, they, were, created, in, 'the-same-place', or, factory, ?]).
pllm:training(5600080000613,
              string,
              "I doubt it they're too totally different models of robot.").
pllm:training(5600080000613,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', doubt],
                    ['NP', ['PRP', it]],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VB', '\'re'],
                          [ 'NP',
                            [ 'NP',
                              ['ADJP', ['RB', too], ['RB', totally], ['JJ', different]],
                              ['NNS', models]
                            ],
                            ['PP', ['IN', of], ['NP', ['NN', robot]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600080000613,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', doubt],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['NP', ['ADJP', ['RB', too], ['RB', totally], ['JJ', different]], ['NNS', models]],
                ['IN', of],
                ['NP', ['NN', robot]],
                ['.', '.']
              ]).
pllm:training(5600080000613,
              tree_to_toks,
              ['I', doubt, it, they, '\'re', 'too-totally-different-models', of, robot, '.']).
pllm:training(5600090000614,
              string,
              "That's a good point but still think it's possible?").
pllm:training(5600090000614,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                    ['CC', but],
                    ['ADVP', ['RB', still]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', possible]]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600090000614,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['CC', but],
                ['ADVP', ['RB', still]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', possible]],
                ['.', ?]
              ]).
pllm:training(5600090000614,
              tree_to_toks,
              ['That', '\'s', 'a-good-point', but, still, think, it, '\'s', possible, ?]).
pllm:training(5600100000615, string, "Yeah anythings possible just unlikely.").
pllm:training(5600100000615,
              text_to_tree,
              [ 'S',
                ['NP', ['UH', 'Yeah']],
                [ 'VP',
                  ['VBZ', anythings],
                  ['ADJP', ['JJ', possible]],
                  ['ADVP', ['RB', just], ['RB', unlikely]]
                ],
                ['.', '.']
              ]).
pllm:training(5600100000615,
              unphrasify,
              [ mark('S'),
                ['NP', ['UH', 'Yeah']],
                ['VBZ', anythings],
                ['ADJP', ['JJ', possible]],
                ['ADVP', ['RB', just], ['RB', unlikely]],
                ['.', '.']
              ]).
pllm:training(5600100000615,
              tree_to_toks,
              ['Yeah', anythings, possible, just, unlikely, '.']).
pllm:training(5700010000617,
              string,
              "What do you think of the Star Wars prequels.").
pllm:training(5700010000617,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', the],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NNS', prequels]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700010000617,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(5700010000617,
              tree_to_toks,
              ['What', do, you, think, of, 'the-Star-Wars-prequels', '.']).
pllm:training(5700020000618,
              string,
              "Episodes one through Three, or the chronological sequels?").
pllm:training(5700020000618,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NNS', 'Episodes']],
                  [ 'NP',
                    ['NP', ['NP', ['CD', one]], ['PP', ['IN', through], ['NP', ['CD', 'Three']]]],
                    [',', ','],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJ', chronological], ['NNS', sequels]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5700020000618,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NNS', 'Episodes']],
                ['NP', ['CD', one]],
                ['IN', through],
                ['NP', ['CD', 'Three']],
                [',', ','],
                ['CC', or],
                ['NP', ['DT', the], ['JJ', chronological], ['NNS', sequels]],
                ['.', ?]
              ]).
pllm:training(5700020000618,
              tree_to_toks,
              ['Episodes', one, through, 'Three', ',', or, 'the-chronological-sequels', ?]).
pllm:training(5700030000619,
              string,
              "A bit confusing, I know, but Episode one through Three.").
pllm:training(5700030000619,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['ADJP', ['NP', ['DT', 'A'], ['NN', bit]], ['JJ', confusing]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VB', know]],
                    [',', ','],
                    ['CC', but],
                    [ 'VP',
                      ['NP', ['NNP', 'Episode'], ['CD', one]],
                      ['PP', ['IN', through], ['NP', ['CD', 'Three']]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700030000619,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                'ADJP',
                ['NP', ['DT', 'A'], ['NN', bit]],
                ['JJ', confusing],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                ['CC', but],
                ['NP', ['NNP', 'Episode'], ['CD', one]],
                ['IN', through],
                ['NP', ['CD', 'Three']],
                ['.', '.']
              ]).
pllm:training(5700030000619,
              tree_to_toks,
              [ 'ADJP',
                'A-bit',
                confusing,
                (','),
                'I',
                know,
                (','),
                but,
                'Episode-one',
                through,
                'Three',
                ('.')
              ]).
pllm:training(5700040000620,
              string,
              "I think they do not get the credit they deserve, I liked them.").
pllm:training(5700040000620,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VB', do],
                            ['RB', not],
                            [ 'VP',
                              ['VB', get],
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', credit]],
                                ['SBAR', ['S', ['NP', ['PRP', they]], ['VP', ['VB', deserve]]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['PRP', them]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5700040000620,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', get],
                ['NP', ['DT', the], ['NN', credit]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', deserve],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(5700040000620,
              tree_to_toks,
              [ 'I',
                think,
                they,
                do,
                not,
                get,
                'the-credit',
                they,
                deserve,
                (','),
                'I',
                liked,
                them,
                ('.')
              ]).
pllm:training(5700050000621, string, "I did too, I thought the plot played well.").
pllm:training(5700050000621,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', did], ['ADVP', ['RB', too]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['NN', plot]],
                        ['VP', ['VBD', played], ['ADVP', ['RB', well]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700050000621,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', plot]],
                ['VBD', played],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(5700050000621,
              tree_to_toks,
              ['I', did, too, ',', 'I', thought, 'the-plot', played, well, '.']).
pllm:training(5700060000622,
              string,
              "It did. It showed a back story into the rise of Darth Vader.").
pllm:training(5700060000622,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBD', did]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', showed],
                      ['NP', ['DT', a], ['ADVP', ['RB', back]], ['NN', story]],
                      [ 'PP',
                        ['IN', into],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', rise]],
                          ['PP', ['IN', of], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5700060000622,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', did],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', showed],
                ['NP', ['DT', a], ['ADVP', ['RB', back]], ['NN', story]],
                ['IN', into],
                ['NP', ['DT', the], ['NN', rise]],
                ['IN', of],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['.', '.']
              ]).
pllm:training(5700060000622,
              tree_to_toks,
              ['It', did, '.', 'It', showed, 'a-back-story', into, 'the-rise', of, 'Darth-Vader', '.']).
pllm:training(5700070000623,
              string,
              "From a lowly Anakin, on the sand planet to all and powerful.").
pllm:training(5700070000623,
              text_to_tree,
              [ 'CORENLP',
                [ 'PP',
                  [ 'PP',
                    ['IN', 'From'],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', lowly], ['NNP', 'Anakin']],
                      [',', ','],
                      ['PP', ['IN', on], ['NP', ['DT', the], ['NN', sand], ['NN', planet]]]
                    ]
                  ],
                  ['PP', ['IN', to], ['NP', ['NP', ['DT', all]], ['CC', and], ['NP', ['JJ', powerful]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5700070000623,
              unphrasify,
              [ mark('CORENLP'),
                ['IN', 'From'],
                ['NP', ['DT', a], ['JJ', lowly], ['NNP', 'Anakin']],
                [',', ','],
                ['IN', on],
                ['NP', ['DT', the], ['NN', sand], ['NN', planet]],
                ['IN', to],
                ['NP', ['DT', all]],
                ['CC', and],
                ['NP', ['JJ', powerful]],
                ['.', '.']
              ]).
pllm:training(5700070000623,
              tree_to_toks,
              ['From', 'a-lowly-Anakin', ',', on, 'the-sand-planet', to, all, and, powerful, '.']).
pllm:training(5700080000624,
              string,
              "Yes. It showed both his rise and the start of his fall, very complex.").
pllm:training(5700080000624,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', showed],
                    [ 'NP',
                      ['PDT', both],
                      ['NP', ['PRP$', his], ['NN', rise]],
                      ['CC', and],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', start]],
                        ['PP', ['IN', of], ['NP', ['PRP$', his], ['NN', fall]]]
                      ]
                    ],
                    [',', ','],
                    ['ADJP', ['RB', very], ['JJ', complex]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700080000624,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', showed],
                ['PDT', both],
                ['NP', ['PRP$', his], ['NN', rise]],
                ['CC', and],
                ['NP', ['DT', the], ['NN', start]],
                ['IN', of],
                ['NP', ['PRP$', his], ['NN', fall]],
                [',', ','],
                ['ADJP', ['RB', very], ['JJ', complex]],
                ['.', '.']
              ]).
pllm:training(5700080000624,
              tree_to_toks,
              [ 'Yes',
                ('.'),
                'It',
                showed,
                both,
                'his-rise',
                and,
                'the-start',
                of,
                'his-fall',
                (','),
                very,
                complex,
                ('.')
              ]).
pllm:training(5700090000625, string, "You did not think it was contrived at all?").
pllm:training(5700090000625,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['JJ', contrived]],
                              ['PP', ['IN', at], ['NP', ['DT', all]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5700090000625,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VBD', did],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['JJ', contrived]],
                ['IN', at],
                ['NP', ['DT', all]],
                ['.', ?]
              ]).
pllm:training(5700090000625,
              tree_to_toks,
              ['You', did, not, think, it, was, contrived, at, all, ?]).
pllm:training(5700100000626,
              string,
              "No, it was mean to be what it was. A story into the past, of the movies at least.").
pllm:training(5700100000626,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'ADJP',
                        ['JJ', mean],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', be],
                              [ 'SBAR',
                                ['NP', ['WP', what]],
                                ['S', ['NP', ['PRP', it]], ['VP', ['VBD', was]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'NP',
                    ['NP', ['DT', 'A'], ['NN', story]],
                    ['PP', ['IN', into], ['NP', ['DT', the], ['NN', past]]],
                    [',', ','],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNS', movies]],
                        ['ADVP', ['IN', at], ['RBS', least]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5700100000626,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', mean],
                mark('S'),
                ['TO', to],
                ['VB', be],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['.', '.'],
                mark('CORENLP'),
                ['NP', ['DT', 'A'], ['NN', story]],
                ['IN', into],
                ['NP', ['DT', the], ['NN', past]],
                [',', ','],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                ['ADVP', ['IN', at], ['RBS', least]],
                ['.', '.']
              ]).
pllm:training(5700100000626,
              tree_to_toks,
              [ 'No',
                (','),
                it,
                was,
                'ADJP',
                mean,
                to,
                be,
                what,
                it,
                was,
                ('.'),
                'A-story',
                into,
                'the-past',
                (','),
                of,
                'the-movies',
                at,
                least,
                ('.')
              ]).
pllm:training(5800010000628, string, "Have you seen the new Star Wars movies?").
pllm:training(5800010000628,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', new],
                      ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NNS', movies]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800010000628,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                [ 'NP',
                  ['DT', the],
                  ['JJ', new],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NNS', movies]
                ],
                ['.', ?]
              ]).
pllm:training(5800010000628,
              tree_to_toks,
              ['Have', you, seen, 'the-new-Star-Wars-movies', ?]).
pllm:training(5800020000629, string, "You mean The Force Awakens and Rogue One?").
pllm:training(5800020000629,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VB', mean],
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                      ['CC', and],
                      ['NP', ['NNP', 'Rogue'], ['CD', 'One']]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800020000629,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', mean],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['CC', and],
                ['NP', ['NNP', 'Rogue'], ['CD', 'One']],
                ['.', ?]
              ]).
pllm:training(5800020000629,
              tree_to_toks,
              ['You', mean, 'The-Force-Awakens', and, 'Rogue-One', ?]).
pllm:training(5800030000630, string, "Yes I thought they were great, did you?").
pllm:training(5800030000630,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['S', ['NP', ['PRP', they]], ['VP', ['AUX', were], ['ADJP', ['JJ', great]]]]
                    ]
                  ]
                ],
                [',', ','],
                ['VP', ['AUX', did], ['NP', ['PRP', you]]],
                ['.', ?]
              ]).
pllm:training(5800030000630,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', were],
                ['ADJP', ['JJ', great]],
                [',', ','],
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(5800030000630,
              tree_to_toks,
              ['Yes', 'I', thought, they, were, great, ',', did, you, ?]).
pllm:training(5800040000631,
              string,
              "I did but truthfully I saw those before I watched the first six episodes. I had to go back and watch them.").
pllm:training(5800040000631,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', did]]],
                    ['CC', but],
                    [ 'S',
                      ['ADVP', ['RB', truthfully]],
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', saw],
                        ['NP', ['DT', those]],
                        [ 'SBAR',
                          ['IN', before],
                          [ 'S',
                            ['NP', ['PRP', 'I']],
                            [ 'VP',
                              ['VBD', watched],
                              ['NP', ['DT', the], ['JJ', first], ['CD', six], ['NNS', episodes]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VP', ['VB', go], ['ADVP', ['RB', back]]],
                            ['CC', and],
                            ['VP', ['VB', watch], ['NP', ['PRP', them]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5800040000631,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['CC', but],
                mark('S'),
                ['ADVP', ['RB', truthfully]],
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['DT', those]],
                mark('SBAR'),
                ['IN', before],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['JJ', first], ['CD', six], ['NNS', episodes]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', go],
                ['ADVP', ['RB', back]],
                ['CC', and],
                ['VB', watch],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(5800040000631,
              tree_to_toks,
              [ 'I',
                did,
                but,
                truthfully,
                'I',
                saw,
                those,
                before,
                'I',
                watched,
                'the-first-six-episodes',
                ('.'),
                'I',
                had,
                to,
                go,
                back,
                and,
                watch,
                them,
                ('.')
              ]).
pllm:training(5800050000632,
              string,
              "What's your favorite of the original episodes?").
pllm:training(5800050000632,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['NN', favorite]],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['JJ', original], ['NNS', episodes]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800050000632,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['NN', favorite]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', original], ['NNS', episodes]],
                ['.', ?]
              ]).
pllm:training(5800050000632,
              tree_to_toks,
              ['What', '\'s', 'your-favorite', of, 'the-original-episodes', ?]).
pllm:training(5800060000633, string, "I'd have to say A New Hope.").
pllm:training(5800060000633,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', '\'d'],
                    [ 'VP',
                      ['VB', have],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', say], ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5800060000633,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', say],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                ['.', '.']
              ]).
pllm:training(5800060000633, tree_to_toks, ['I', '\'d', have, to, say, 'A-New-Hope', '.']).
pllm:training(5800070000634,
              string,
              "That's mine too. You know, I didn't even know Darth Vader was a cyborg.").
pllm:training(5800070000634,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['PRP', mine]], ['ADVP', ['RB', too]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'You']], ['VP', ['VB', know]]],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      ['ADVP', ['RB', even]],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                            ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', cyborg]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5800070000634,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['PRP', mine]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', know],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', even]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', cyborg]],
                ['.', '.']
              ]).
pllm:training(5800070000634,
              tree_to_toks,
              [ 'That',
                '\'s',
                mine,
                too,
                ('.'),
                'You',
                know,
                (','),
                'I',
                did,
                'n\'t',
                even,
                know,
                'Darth-Vader',
                was,
                'a-cyborg',
                ('.')
              ]).
pllm:training(5800080000635,
              string,
              "Me neither! I just learned that. He's my favorite character though.").
pllm:training(5800080000635,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NP', ['PRP', 'Me']], ['NP', ['DT', neither]], ['.', '.']],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBD', learned], ['NP', ['DT', that]]],
                    ['.', '.']
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'He']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                        ['ADVP', ['RB', though]]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(5800080000635,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['PRP', 'Me']],
                ['NP', ['DT', neither]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', learned],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', '\'s'],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(5800080000635,
              tree_to_toks,
              [ 'Me',
                neither,
                ('.'),
                'I',
                just,
                learned,
                that,
                ('.'),
                'He',
                '\'s',
                'my-favorite-character',
                though,
                ('.')
              ]).
pllm:training(5800090000636, string, "My favorite is Princess Leia.").
pllm:training(5800090000636,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'My'], ['NN', favorite]],
                  ['VP', ['VBZ', is], ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']]],
                  ['.', '.']
                ]
              ]).
pllm:training(5800090000636,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['.', '.']
              ]).
pllm:training(5800090000636, tree_to_toks, ['My-favorite', is, 'Princess-Leia', '.']).
pllm:training(5800100000637,
              string,
              "Yes it was a shock to find out she was Darth Vader's daughter.").
pllm:training(5800100000637,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['AUX', was],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', shock]],
                    [ 'SBAR',
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', find],
                            ['PRT', ['RP', out]],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', she]],
                                [ 'VP',
                                  ['AUX', was],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['POS', '\'s']],
                                    ['NN', daughter]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5800100000637,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', shock]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', find],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', was],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['POS', '\'s']],
                ['NN', daughter],
                ['.', '.']
              ]).
pllm:training(5800100000637,
              tree_to_toks,
              [ 'Yes',
                it,
                was,
                'a-shock',
                to,
                find,
                out,
                she,
                was,
                'Darth-Vader-\'s',
                daughter,
                ('.')
              ]).
pllm:training(5900010000639,
              string,
              "Ok, so I can probably guess, but what is your least favorite Star Wars movie?").
pllm:training(5900010000639,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Ok']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', can],
                  ['ADVP', ['RB', probably]],
                  [ 'VP',
                    ['VB', guess],
                    [',', ','],
                    [ 'SBAR',
                      ['CC', but],
                      ['NP', ['WP', what]],
                      [ 'S',
                        [ 'VP',
                          ['AUX', is],
                          [ 'NP',
                            ['PRP$', your],
                            ['ADJP', ['RBS', least], ['JJ', favorite]],
                            ['NNP', 'Star'],
                            ['NNP', 'Wars'],
                            ['NN', movie]
                          ]
                        ]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(5900010000639,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Ok']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['ADVP', ['RB', probably]],
                ['VB', guess],
                [',', ','],
                mark('SBAR'),
                ['CC', but],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', is],
                [ 'NP',
                  ['PRP$', your],
                  ['ADJP', ['RBS', least], ['JJ', favorite]],
                  ['NNP', 'Star'],
                  ['NNP', 'Wars'],
                  ['NN', movie]
                ],
                ['.', ?]
              ]).
pllm:training(5900010000639,
              tree_to_toks,
              [ 'Ok',
                (','),
                so,
                'I',
                can,
                probably,
                guess,
                (','),
                but,
                what,
                (is),
                'your-least-favorite-Star-Wars-movie',
                (?)
              ]).
pllm:training(5900020000640, string, "Definitely the Phantom Menace.").
pllm:training(5900020000640,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                  ['.', '.']
                ]
              ]).
pllm:training(5900020000640,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['.', '.']
              ]).
pllm:training(5900020000640, tree_to_toks, ['Definitely', 'the-Phantom-Menace', '.']).
pllm:training(5900030000641, string, "Because of Jar Jar?").
pllm:training(5900030000641,
              text_to_tree,
              [ 'FRAG',
                ['ADVP', ['IN', 'Because'], ['PP', ['IN', of], ['NP', ['NN', 'Jar'], ['NN', 'Jar']]]],
                ['.', ?]
              ]).
pllm:training(5900030000641,
              unphrasify,
              [ mark('FRAG'),
                'ADVP',
                ['IN', 'Because'],
                ['IN', of],
                ['NP', ['NN', 'Jar'], ['NN', 'Jar']],
                ['.', ?]
              ]).
pllm:training(5900030000641, tree_to_toks, ['ADVP', 'Because', of, '', ?]).
pllm:training(5900040000642,
              string,
              "Yeah, he's awful, but I thought the whole movie was a let-down after waiting so long?").
pllm:training(5900040000642,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', awful]]]
                  ],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                        [ 'SBAR',
                          [ 'S',
                            [ 'VP',
                              ['VBD', was],
                              [ 'NP',
                                ['DT', a],
                                ['S', ['VP', ['VB', let], ['HYPH', -], ['PRT', ['RP', down]]]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'PP',
                        ['IN', after],
                        ['S', ['VP', ['VBG', waiting], ['ADVP', ['RB', so], ['RB', long]]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5900040000642,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', awful]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                mark('SBAR'),
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', a], ['S', ['VP', ['VB', let], ['HYPH', -], ['PRT', ['RP', down]]]]],
                ['IN', after],
                mark('S'),
                ['VBG', waiting],
                ['ADVP', ['RB', so], ['RB', long]],
                ['.', ?]
              ]).
pllm:training(5900040000642,
              tree_to_toks,
              [ 'Yeah',
                (','),
                he,
                '\'s',
                awful,
                (','),
                but,
                'I',
                thought,
                'the-whole-movie',
                was,
                'a-let---down',
                after,
                waiting,
                so,
                long,
                (?)
              ]).
pllm:training(5900050000643, string, "Why?").
pllm:training(5900050000643,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]]).
pllm:training(5900050000643,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', 'Why']], ['.', ?]]).
pllm:training(5900050000643, tree_to_toks, ['Why', ?]).
pllm:training(5900060000644,
              string,
              "It's kinda dull, with the race and little Anakin is annoying. The only good thing is the Darth Maul fight.").
pllm:training(5900060000644,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['RB', kinda], ['JJ', dull]],
                        [',', ','],
                        ['PP', ['IN', with], ['NP', ['DT', the], ['NN', race]]]
                      ]
                    ],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['JJ', little], ['NNP', 'Anakin']],
                      ['VP', ['VBZ', is], ['ADJP', ['JJ', annoying]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', only], ['JJ', good], ['NN', thing]],
                  [ 'VP',
                    ['AUX', is],
                    [ 'S',
                      ['NP', ['DT', the], ['NNP', 'Darth']],
                      ['VP', ['VB', 'Maul'], ['NP', ['NN', fight]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900060000644,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', kinda], ['JJ', dull]],
                [',', ','],
                ['IN', with],
                ['NP', ['DT', the], ['NN', race]],
                ['CC', and],
                mark('S'),
                ['NP', ['JJ', little], ['NNP', 'Anakin']],
                ['VBZ', is],
                ['ADJP', ['JJ', annoying]],
                ['.', '.'],
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', only], ['JJ', good], ['NN', thing]],
                ['AUX', is],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['NP', ['NN', fight]],
                ['.', '.']
              ]).
pllm:training(5900060000644,
              tree_to_toks,
              [ 'It',
                '\'s',
                kinda,
                dull,
                (','),
                with,
                'the-race',
                and,
                'little-Anakin',
                (is),
                annoying,
                ('.'),
                'The-only-good-thing',
                (is),
                'the-Darth',
                'Maul',
                fight,
                ('.')
              ]).
pllm:training(5900070000645,
              string,
              "I have to agree-- I thought it was creepy there was a budding romance between Amidala and Anakin.").
pllm:training(5900070000645,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', have], ['S', ['VP', ['TO', to], ['VP', ['VB', agree]]]]]
                  ],
                  [:, -],
                  [ 'S',
                    ['LST', [:, -]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['JJ', creepy],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['EX', there]],
                                  [ 'VP',
                                    ['VBD', was],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', budding], ['NN', romance]],
                                      [ 'PP',
                                        ['IN', between],
                                        [ 'NP',
                                          ['NNP', 'Amidala'],
                                          ['CC', and],
                                          ['NNP', 'Anakin']
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900070000645,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', agree],
                [:, -],
                mark('S'),
                ['LST', [:, -]],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', creepy],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', budding], ['NN', romance]],
                ['IN', between],
                ['NP', ['NNP', 'Amidala'], ['CC', and], ['NNP', 'Anakin']],
                ['.', '.']
              ]).
pllm:training(5900070000645,
              tree_to_toks,
              [ 'I',
                have,
                to,
                agree,
                (-),
                (-),
                'I',
                thought,
                it,
                was,
                'ADJP',
                creepy,
                there,
                was,
                'a-budding-romance',
                between,
                'Amidala-and-Anakin',
                ('.')
              ]).
pllm:training(5900080000646,
              string,
              "Yeah, that kid was like 8, and she had to be at least 16 or so.").
pllm:training(5900080000646,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  [ 'S',
                    ['NP', ['DT', that], ['NN', kid]],
                    ['VP', ['VBD', was], ['PP', ['IN', like], ['NP', ['CD', '8']]]]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', she]],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'NP',
                              ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '16']]],
                              ['NP', ['QP', ['CC', or], ['RB', so]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900080000646,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                mark('S'),
                ['NP', ['DT', that], ['NN', kid]],
                ['VBD', was],
                ['IN', like],
                ['NP', ['CD', '8']],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '16']]],
                ['NP', ['QP', ['CC', or], ['RB', so]]],
                ['.', '.']
              ]).
pllm:training(5900080000646,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'that-kid',
                was,
                like,
                '8',
                (','),
                and,
                she,
                had,
                to,
                be,
                'at-least-16',
                'or-so',
                ('.')
              ]).
pllm:training(5900090000647,
              string,
              "All of the prequels under-delivered in my opinion.").
pllm:training(5900090000647,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NP', ['DT', 'All']], ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', prequels]]]],
                  [ 'VP',
                    ['ADVP', ['IN', under]],
                    ['HYPH', -],
                    ['VBN', delivered],
                    ['PP', ['IN', in], ['NP', ['PRP$', my], ['NN', opinion]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900090000647,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['DT', 'All']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['ADVP', ['IN', under]],
                ['HYPH', -],
                ['VBN', delivered],
                ['IN', in],
                ['NP', ['PRP$', my], ['NN', opinion]],
                ['.', '.']
              ]).
pllm:training(5900090000647,
              tree_to_toks,
              ['All', of, 'the-prequels', under, -, delivered, in, 'my-opinion', '.']).
pllm:training(5900100000648,
              string,
              "Yeah, the series didn't really get good again until they took control from George Lucas.").
pllm:training(5900100000648,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['DT', the], ['NN', series]],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', get],
                      ['ADJP', ['JJ', good]],
                      ['ADVP', ['RB', again]],
                      [ 'SBAR',
                        ['IN', until],
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VBD', took],
                            ['NP', ['NN', control]],
                            ['PP', ['IN', from], ['NP', ['NNP', 'George'], ['NNP', 'Lucas']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900100000648,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', the], ['NN', series]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', really]],
                ['VB', get],
                ['ADJP', ['JJ', good]],
                ['ADVP', ['RB', again]],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', took],
                ['NP', ['NN', control]],
                ['IN', from],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['.', '.']
              ]).
pllm:training(5900100000648,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'the-series',
                did,
                'n\'t',
                really,
                get,
                good,
                again,
                until,
                they,
                took,
                control,
                from,
                'George-Lucas',
                ('.')
              ]).
pllm:training(6000010000650,
              string,
              "Who is your favorite villain from Star Wars?").
pllm:training(6000010000650,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', villain]],
                      ['PP', ['IN', from], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000010000650,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', villain]],
                ['IN', from],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(6000010000650,
              tree_to_toks,
              ['Who', is, 'your-favorite-villain', from, 'Star-Wars', ?]).
pllm:training(6000020000651, string, "Darth Vader").
pllm:training(6000020000651,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['.', '.']]]).
pllm:training(6000020000651,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['.', '.']]]).
pllm:training(6000020000651, tree_to_toks, ['Darth-Vader-.']).
pllm:training(6000030000652, string, "What do you think of Darth Maul?").
pllm:training(6000030000652,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    ['PP', ['IN', of], ['NP', ['NNP', 'Darth']]],
                    ['S', ['VP', ['VB', 'Maul']]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000030000652,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['NNP', 'Darth']],
                mark('S'),
                ['VB', 'Maul'],
                ['.', ?]
              ]).
pllm:training(6000030000652, tree_to_toks, ['What', do, you, think, of, 'Darth', 'Maul', ?]).
pllm:training(6000040000653, string, "I liked him a lot.").
pllm:training(6000040000653,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['PRP', him]], ['NP-TMP', ['DT', a], ['NN', lot]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6000040000653,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', him]],
                ['NP-TMP', ['DT', a], ['NN', lot]],
                ['.', '.']
              ]).
pllm:training(6000040000653, tree_to_toks, ['I', liked, him, a, lot, '.']).
pllm:training(6000050000654, string, "I wish they put him in more movies").
pllm:training(6000050000654,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', put],
                          ['NP', ['PRP', him]],
                          ['PP', ['IN', in], ['NP', ['JJR', more], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6000050000654,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', put],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['JJR', more], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6000050000654,
              tree_to_toks,
              ['I', wish, they, put, him, in, 'more-movies', '.']).
pllm:training(6000060000655,
              string,
              "Yes. It was a mistake to kill him in the first one.").
pllm:training(6000060000655,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['AUX', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', mistake]],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', kill],
                              ['NP', ['PRP', him]],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['CD', one]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6000060000655,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', mistake]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', kill],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['CD', one]],
                ['.', '.']
              ]).
pllm:training(6000060000655,
              tree_to_toks,
              ['Yes', '.', 'It', was, 'a-mistake', to, kill, him, in, 'the-first-one', '.']).
pllm:training(6000070000656,
              string,
              "I agree. I do not think Christopher Lee worked in the second one.").
pllm:training(6000070000656,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', agree]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Christopher'], ['NNP', 'Lee']],
                            [ 'VP',
                              ['VBD', worked],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', second], ['NN', one]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6000070000656,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Christopher'], ['NNP', 'Lee']],
                ['VBD', worked],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', second], ['NN', one]],
                ['.', '.']
              ]).
pllm:training(6000070000656,
              tree_to_toks,
              [ 'I',
                agree,
                ('.'),
                'I',
                do,
                not,
                think,
                'Christopher-Lee',
                worked,
                in,
                'the-second-one',
                ('.')
              ]).
pllm:training(6000080000657, string, "What did you like about Darth Maul?").
pllm:training(6000080000657,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', like],
                    ['SBAR', ['IN', about], ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000080000657,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                mark('SBAR'),
                ['IN', about],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['.', ?]
              ]).
pllm:training(6000080000657,
              tree_to_toks,
              ['What', did, you, like, about, 'Darth', 'Maul', ?]).
pllm:training(6000090000658, string, "The Lightsaber and the paint.").
pllm:training(6000090000658,
              text_to_tree,
              [ 'FRAG',
                [ 'NP',
                  ['NP', ['DT', 'The'], ['NNP', 'Lightsaber']],
                  ['CC', and],
                  ['NP', ['DT', the], ['NN', paint]]
                ],
                ['.', '.']
              ]).
pllm:training(6000090000658,
              unphrasify,
              [ mark('FRAG'),
                ['NP', ['DT', 'The'], ['NNP', 'Lightsaber']],
                ['CC', and],
                ['NP', ['DT', the], ['NN', paint]],
                ['.', '.']
              ]).
pllm:training(6000090000658, tree_to_toks, ['The-Lightsaber', and, 'the-paint', '.']).
pllm:training(6000100000659, string, "Yes. That was very cool.").
pllm:training(6000100000659,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBD', was], ['ADJP', ['RB', very], ['JJ', cool]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6000100000659,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', was],
                ['ADJP', ['RB', very], ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(6000100000659, tree_to_toks, ['Yes', '.', 'That', was, very, cool, '.']).
pllm:training(6100010000661, string, "Do you like Star Wars?").
pllm:training(6100010000661,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(6100010000661,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(6100010000661, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(6100020000662, string, "I love it!").
pllm:training(6100020000662,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', love], ['NP', ['PRP', it]]], ['.', '.']]]).
pllm:training(6100020000662,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(6100020000662, tree_to_toks, ['I', love, it, '.']).
pllm:training(6100030000663, string, "Do you think it's realistic?").
pllm:training(6100030000663,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', realistic]]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6100030000663,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', realistic]],
                ['.', ?]
              ]).
pllm:training(6100030000663, tree_to_toks, ['Do', you, think, it, '\'s', realistic, ?]).
pllm:training(6100040000664,
              string,
              "It would be realistic if it was easier to travel faster in space").
pllm:training(6100040000664,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      ['ADJP', ['JJ', realistic]],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['ADJP', ['JJR', easier]],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', travel],
                                    ['ADVP', ['RBR', faster]],
                                    ['PP', ['IN', in], ['NP', ['NN', space]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6100040000664,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', would],
                ['VB', be],
                ['ADJP', ['JJ', realistic]],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['ADJP', ['JJR', easier]],
                mark('S'),
                ['TO', to],
                ['VB', travel],
                ['ADVP', ['RBR', faster]],
                ['IN', in],
                ['NP', ['NN', space]],
                ['.', '.']
              ]).
pllm:training(6100040000664,
              tree_to_toks,
              [ 'It',
                would,
                be,
                realistic,
                if,
                it,
                was,
                'ADJP',
                easier,
                to,
                travel,
                faster,
                in,
                space,
                ('.')
              ]).
pllm:training(6100050000665,
              string,
              "Yeah, I could see something like that happening").
pllm:training(6100050000665,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', could],
                  [ 'VP',
                    ['VB', see],
                    [ 'S',
                      ['NP', ['NP', ['NN', something]], ['PP', ['IN', like], ['NP', ['DT', that]]]],
                      ['VP', ['VBG', happening]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6100050000665,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', could],
                ['VB', see],
                mark('S'),
                ['NP', ['NN', something]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['VBG', happening],
                ['.', '.']
              ]).
pllm:training(6100050000665,
              tree_to_toks,
              ['Yeah', ',', 'I', could, see, something, like, that, happening, '.']).
pllm:training(6100060000666,
              string,
              "I think it would not be likely for there to be so many aliens").
pllm:training(6100060000666,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['MD', would],
                        ['RB', not],
                        [ 'VP',
                          ['AUX', be],
                          ['ADJP', ['JJ', likely]],
                          [ 'SBAR',
                            ['IN', for],
                            [ 'S',
                              ['NP', ['EX', there]],
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['AUX', be],
                                  ['NP', ['ADJP', ['RB', so], ['JJ', many]], ['NNS', aliens]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6100060000666,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['RB', not],
                ['AUX', be],
                ['ADJP', ['JJ', likely]],
                mark('SBAR'),
                ['IN', for],
                mark('S'),
                ['NP', ['EX', there]],
                ['TO', to],
                ['AUX', be],
                ['NP', ['ADJP', ['RB', so], ['JJ', many]], ['NNS', aliens]],
                ['.', '.']
              ]).
pllm:training(6100060000666,
              tree_to_toks,
              [ 'I',
                think,
                it,
                would,
                not,
                be,
                likely,
                for,
                there,
                to,
                be,
                'so-many-aliens',
                ('.')
              ]).
pllm:training(6100070000667, string, "There is no force.").
pllm:training(6100070000667,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  ['VP', ['VBZ', is], ['NP', ['DT', no], ['NN', force]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100070000667,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VBZ', is],
                ['NP', ['DT', no], ['NN', force]],
                ['.', '.']
              ]).
pllm:training(6100070000667, tree_to_toks, ['There', is, 'no-force', '.']).
pllm:training(6100080000668, string, "Some buildings are a bit tall").
pllm:training(6100080000668,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'Some'], ['NNS', buildings]],
                  ['VP', ['VB', are], ['ADJP', ['NP', ['DT', a], ['NN', bit]], ['JJ', tall]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100080000668,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'Some'], ['NNS', buildings]],
                ['VB', are],
                'ADJP',
                ['NP', ['DT', a], ['NN', bit]],
                ['JJ', tall],
                ['.', '.']
              ]).
pllm:training(6100080000668,
              tree_to_toks,
              ['Some-buildings', are, 'ADJP', 'a-bit', tall, '.']).
pllm:training(6100090000669, string, "It inspires me to work hard").
pllm:training(6100090000669,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', inspires],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      ['VP', ['TO', to], ['VP', ['VB', work], ['ADVP', ['RB', hard]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6100090000669,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', inspires],
                mark('S'),
                ['NP', ['PRP', me]],
                ['TO', to],
                ['VB', work],
                ['ADVP', ['RB', hard]],
                ['.', '.']
              ]).
pllm:training(6100090000669, tree_to_toks, ['It', inspires, me, to, work, hard, '.']).
pllm:training(6100100000670, string, "It inspires me too").
pllm:training(6100100000670,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBZ', inspires], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100100000670,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', inspires],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(6100100000670, tree_to_toks, ['It', inspires, me, too, '.']).
pllm:training(6200010000672,
              string,
              "Did you know that George Lucas didn't originally write Luke and Leia to be twin siblings?").
pllm:training(6200010000672,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                        [ 'VP',
                          ['VBD', did],
                          ['RB', 'n\'t'],
                          ['ADVP', ['RB', originally]],
                          [ 'VP',
                            ['VB', write],
                            ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                ['VP', ['VB', be], ['NP', ['JJ', twin], ['NNS', siblings]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6200010000672,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', originally]],
                ['VB', write],
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['JJ', twin], ['NNS', siblings]],
                ['.', ?]
              ]).
pllm:training(6200010000672,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                that,
                'George-Lucas',
                did,
                'n\'t',
                originally,
                write,
                'Luke-and-Leia',
                to,
                be,
                'twin-siblings',
                (?)
              ]).
pllm:training(6200020000673, string, "How do you know that?").
pllm:training(6200020000673,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6200020000673,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(6200020000673, tree_to_toks, ['How', do, you, know, that, ?]).
pllm:training(6200030000674,
              string,
              "I read the script for the first Star Wars. Luke was introduced as being 20 years old, and Leia was introduced as being 16.").
pllm:training(6200030000674,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', read],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', script]],
                      [ 'PP',
                        ['IN', for],
                        ['NP', ['DT', the], ['JJ', first], ['NNP', 'Star'], ['NNPS', 'Wars']]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['NNP', 'Luke']],
                      [ 'VP',
                        ['VBD', was],
                        [ 'VP',
                          ['VBN', introduced],
                          [ 'PP',
                            ['IN', as],
                            [ 'S',
                              [ 'VP',
                                ['VBG', being],
                                ['ADJP', ['NP', ['CD', '20'], ['NNS', years]], ['JJ', old]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['NNP', 'Leia']],
                      [ 'VP',
                        ['VBD', was],
                        [ 'VP',
                          ['VBN', introduced],
                          ['PP', ['IN', as], ['S', ['VP', ['VBG', being], ['NP', ['CD', '16']]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200030000674,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', read],
                ['NP', ['DT', the], ['NN', script]],
                ['IN', for],
                ['NP', ['DT', the], ['JJ', first], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', was],
                ['VBN', introduced],
                ['IN', as],
                mark('S'),
                ['VBG', being],
                'ADJP',
                ['NP', ['CD', '20'], ['NNS', years]],
                ['JJ', old],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VBD', was],
                ['VBN', introduced],
                ['IN', as],
                mark('S'),
                ['VBG', being],
                ['NP', ['CD', '16']],
                ['.', '.']
              ]).
pllm:training(6200030000674,
              tree_to_toks,
              [ 'I',
                read,
                'the-script',
                for,
                'the-first-Star-Wars',
                ('.'),
                'Luke',
                was,
                introduced,
                (as),
                being,
                'ADJP',
                '20-years',
                old,
                (','),
                and,
                'Leia',
                was,
                introduced,
                (as),
                being,
                '16',
                ('.')
              ]).
pllm:training(6200040000675,
              string,
              "So the love interest angle that they hinted at in Star Wars, that was the point originally.").
pllm:training(6200040000675,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [ 'NP-TMP',
                    ['NP', ['DT', the], ['NN', love], ['NN', interest], ['NN', angle]],
                    [ 'SBAR',
                      ['NP', ['WDT', that]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', hinted],
                          [ 'PP',
                            ['IN', at],
                            ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['VBD', was],
                    ['NP', ['DT', the], ['NN', point]],
                    ['ADVP', ['RB', originally]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6200040000675,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                'NP-TMP',
                ['NP', ['DT', the], ['NN', love], ['NN', interest], ['NN', angle]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', hinted],
                ['IN', at],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['NP', ['DT', the], ['NN', point]],
                ['ADVP', ['RB', originally]],
                ['.', '.']
              ]).
pllm:training(6200040000675,
              tree_to_toks,
              [ 'So',
                'NP-TMP',
                'the-love-interest-angle',
                that,
                they,
                hinted,
                at,
                in,
                'Star-Wars',
                (','),
                that,
                was,
                'the-point',
                originally,
                ('.')
              ]).
pllm:training(6200050000676,
              string,
              "Right. It was only after the huge success of Star Wars, and the plans for a sequel, that Lucas retconned Luke and Leia into being twins.").
pllm:training(6200050000676,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Right'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', only]],
                      [ 'PP',
                        ['IN', after],
                        [ 'NP',
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', huge], ['NN', success]],
                            ['PP', ['IN', of], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                          ],
                          [',', ','],
                          ['CC', and],
                          [ 'NP',
                            ['NP', ['DT', the], ['NNS', plans]],
                            ['PP', ['IN', for], ['NP', ['DT', a], ['NN', sequel]]]
                          ]
                        ]
                      ],
                      [',', ','],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBD', retconned],
                            ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                            [ 'PP',
                              ['IN', into],
                              ['S', ['VP', ['VBG', being], ['NP', ['NNS', twins]]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200050000676,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Right'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['ADVP', ['RB', only]],
                ['IN', after],
                ['NP', ['DT', the], ['JJ', huge], ['NN', success]],
                ['IN', of],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['CC', and],
                ['NP', ['DT', the], ['NNS', plans]],
                ['IN', for],
                ['NP', ['DT', a], ['NN', sequel]],
                [',', ','],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBD', retconned],
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                ['IN', into],
                mark('S'),
                ['VBG', being],
                ['NP', ['NNS', twins]],
                ['.', '.']
              ]).
pllm:training(6200050000676,
              tree_to_toks,
              [ 'Right',
                ('.'),
                'It',
                was,
                only,
                after,
                'the-huge-success',
                of,
                'Star-Wars',
                (','),
                and,
                'the-plans',
                for,
                'a-sequel',
                (','),
                that,
                'Lucas',
                retconned,
                'Luke-and-Leia',
                into,
                being,
                twins,
                ('.')
              ]).
pllm:training(6200060000677,
              string,
              "Actually, that was a really good storyline. I loved it in Empire and Return of the Jedi when Leia could sense Luke through the Force.").
pllm:training(6200060000677,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Actually']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBD', was],
                      ['NP', ['DT', a], ['ADJP', ['RB', really], ['JJ', good]], ['NN', storyline]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', loved],
                    ['NP', ['PRP', it]],
                    [ 'PP',
                      ['IN', in],
                      [ 'NP',
                        ['NP', ['NNP', 'Empire']],
                        ['CC', and],
                        [ 'NP',
                          ['NP', ['NN', 'Return']],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['NNP', 'Leia']],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', sense],
                            ['NP', ['NNP', 'Luke']],
                            ['PP', ['IN', through], ['NP', ['DT', the], ['NNP', 'Force']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6200060000677,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Actually']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['NP', ['DT', a], ['ADJP', ['RB', really], ['JJ', good]], ['NN', storyline]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', loved],
                ['NP', ['PRP', it]],
                ['IN', in],
                ['NP', ['NNP', 'Empire']],
                ['CC', and],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['MD', could],
                ['VB', sense],
                ['NP', ['NNP', 'Luke']],
                ['IN', through],
                ['NP', ['DT', the], ['NNP', 'Force']],
                ['.', '.']
              ]).
pllm:training(6200060000677,
              tree_to_toks,
              [ 'Actually',
                (','),
                that,
                was,
                'a-really-good-storyline',
                ('.'),
                'I',
                loved,
                it,
                in,
                'Empire',
                and,
                'Return',
                of,
                'the-Jedi',
                when,
                'Leia',
                could,
                sense,
                'Luke',
                through,
                'the-Force',
                ('.')
              ]).
pllm:training(6200070000678,
              string,
              "And in Empire, we all just thought it was the Force - not that the two of them were bonded as siblings.").
pllm:training(6200070000678,
              text_to_tree,
              [ 'S',
                ['CC', 'And'],
                ['PP', ['IN', in], ['NP', ['NNP', 'Empire']]],
                [',', ','],
                ['NP', ['NP', ['PRP', we]], ['NP', ['DT', all]]],
                ['ADVP', ['RB', just]],
                [ 'VP',
                  ['VBD', thought],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['AUX', was],
                        [ 'NP',
                          ['DT', the],
                          ['NN', 'Force-not'],
                          [ 'SBAR',
                            ['IN', that],
                            [ 'S',
                              [ 'NP',
                                ['NP', ['DT', the], ['CD', two]],
                                ['PP', ['IN', of], ['NP', ['PRP', them]]]
                              ],
                              [ 'VP',
                                ['AUX', were],
                                [ 'VP',
                                  ['VBN', bonded],
                                  ['PP', ['IN', as], ['NP', ['NNS', siblings]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6200070000678,
              unphrasify,
              [ mark('S'),
                ['CC', 'And'],
                ['IN', in],
                ['NP', ['NNP', 'Empire']],
                [',', ','],
                ['NP', ['PRP', we]],
                ['NP', ['DT', all]],
                ['ADVP', ['RB', just]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['DT', the],
                ['NN', 'Force-not'],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['CD', two]],
                ['IN', of],
                ['NP', ['PRP', them]],
                ['AUX', were],
                ['VBN', bonded],
                ['IN', as],
                ['NP', ['NNS', siblings]],
                ['.', '.']
              ]).
pllm:training(6200070000678,
              tree_to_toks,
              [ 'And',
                in,
                'Empire',
                (','),
                we,
                all,
                just,
                thought,
                it,
                was,
                the,
                'Force-not',
                that,
                'the-two',
                of,
                them,
                were,
                bonded,
                (as),
                siblings,
                ('.')
              ]).
pllm:training(6200080000679,
              string,
              "It made for an interesting love triangle, until it was revealed that the two were siblings.").
pllm:training(6200080000679,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'It']],
                [ 'VP',
                  ['VBD', made],
                  ['PP', ['IN', for], ['NP', ['DT', an], ['JJ', interesting], ['NN', love]]],
                  ['NP', ['NNP', triangle]],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', until],
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['AUX', was],
                        [ 'VP',
                          ['VBN', revealed],
                          [ 'SBAR',
                            ['IN', that],
                            [ 'S',
                              ['NP', ['DT', the], ['CD', two]],
                              ['VP', ['AUX', were], ['NP', ['NNS', siblings]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6200080000679,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', made],
                ['IN', for],
                ['NP', ['DT', an], ['JJ', interesting], ['NN', love]],
                ['NP', ['NNP', triangle]],
                [',', ','],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['VBN', revealed],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['CD', two]],
                ['AUX', were],
                ['NP', ['NNS', siblings]],
                ['.', '.']
              ]).
pllm:training(6200080000679,
              tree_to_toks,
              [ 'It',
                made,
                for,
                'an-interesting-love',
                triangle,
                (','),
                until,
                it,
                was,
                revealed,
                that,
                'the-two',
                were,
                siblings,
                ('.')
              ]).
pllm:training(6200090000680,
              string,
              "Too bad Lucas didn't stop the retconning there. The way he reworked the whole mother's death part in order to do it his new stupid way in the prequel trilogy, that was really lame.").
pllm:training(6200090000680,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['ADJP', ['RB', 'Too'], ['JJ', bad]], ['NNP', 'Lucas']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', stop],
                        ['NP', ['DT', the], ['VBG', retconning]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['NN', way]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', reworked],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJ', whole], ['NN', mother], ['POS', '\'s']],
                              ['NN', death],
                              ['NN', part]
                            ],
                            [ 'PP',
                              ['IN', in],
                              [ 'NP',
                                ['NN', order],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', do],
                                      ['NP', ['PRP', it]],
                                      [ 'NP',
                                        [ 'NP',
                                          ['PRP$', his],
                                          ['JJ', new],
                                          ['JJ', stupid],
                                          ['NN', way]
                                        ],
                                        [ 'PP',
                                          ['IN', in],
                                          [ 'NP',
                                            ['DT', the],
                                            ['NN', prequel],
                                            ['NN', trilogy]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'S',
                      ['NP', ['DT', that]],
                      ['VP', ['VBD', was], ['ADJP', ['RB', really], ['JJ', lame]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200090000680,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['ADJP', ['RB', 'Too'], ['JJ', bad]], ['NNP', 'Lucas']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', stop],
                ['NP', ['DT', the], ['VBG', retconning]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', reworked],
                ['NP', ['DT', the], ['JJ', whole], ['NN', mother], ['POS', '\'s']],
                ['NN', death],
                ['NN', part],
                ['IN', in],
                ['NN', order],
                mark('S'),
                ['TO', to],
                ['VB', do],
                ['NP', ['PRP', it]],
                ['NP', ['PRP$', his], ['JJ', new], ['JJ', stupid], ['NN', way]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', prequel], ['NN', trilogy]],
                [',', ','],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBD', was],
                ['ADJP', ['RB', really], ['JJ', lame]],
                ['.', '.']
              ]).
pllm:training(6200090000680,
              tree_to_toks,
              [ 'Too-bad-Lucas',
                did,
                'n\'t',
                stop,
                'the-retconning',
                there,
                ('.'),
                'The-way',
                he,
                reworked,
                'the-whole-mother-\'s',
                death,
                part,
                in,
                order,
                to,
                do,
                it,
                'his-new-stupid-way',
                in,
                'the-prequel-trilogy',
                (','),
                that,
                was,
                really,
                lame,
                ('.')
              ]).
pllm:training(6200100000681,
              string,
              "You won't get any argument from me there. I much prefer the backstory Leia revealed in Return of the Jedi - better than anything in the  prequel movies, yuck.").
pllm:training(6200100000681,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['MD', wo],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', get],
                        ['NP', ['DT', any], ['NN', argument]],
                        ['PP', ['IN', from], ['NP', ['PRP', me]]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', much]],
                    [ 'VP',
                      ['VB', prefer],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', backstory]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Leia']],
                            [ 'VP',
                              ['VBD', revealed],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  [ 'NP',
                                    [ 'UCP',
                                      [ 'NML',
                                        ['NML', ['NNP', 'Return']],
                                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                                      ],
                                      ['HYPH', -],
                                      [ 'ADJP',
                                        ['JJR', better],
                                        [ 'PP',
                                          ['IN', than],
                                          [ 'NP',
                                            ['NP', ['NN', anything]],
                                            [ 'PP',
                                              ['IN', in],
                                              ['NP', ['DT', the], ['NN', prequel]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ],
                                    ['NNS', movies]
                                  ],
                                  [',', ','],
                                  ['NP', ['NN', yuck]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200100000681,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['MD', wo],
                ['RB', 'n\'t'],
                ['VB', get],
                ['NP', ['DT', any], ['NN', argument]],
                ['IN', from],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', much]],
                ['VB', prefer],
                ['NP', ['DT', the], ['NN', backstory]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VBD', revealed],
                ['IN', in],
                'UCP',
                mark('NML'),
                'NML',
                ['NNP', 'Return'],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['HYPH', -],
                'ADJP',
                ['JJR', better],
                ['IN', than],
                ['NP', ['NN', anything]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', prequel]],
                ['NNS', movies],
                [',', ','],
                ['NP', ['NN', yuck]],
                ['.', '.']
              ]).
pllm:training(6200100000681,
              tree_to_toks,
              [ 'You',
                wo,
                'n\'t',
                get,
                'any-argument',
                from,
                me,
                there,
                ('.'),
                'I',
                much,
                prefer,
                'the-backstory',
                'Leia',
                revealed,
                in,
                'UCP',
                'Return',
                of,
                'the-Jedi',
                (-),
                'ADJP',
                better,
                than,
                anything,
                in,
                'the-prequel',
                movies,
                (','),
                yuck,
                ('.')
              ]).
pllm:training(6300010000683,
              string,
              "How do you think Kylo Ren and Rey are related?").
pllm:training(6300010000683,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren'], ['CC', and], ['NNP', 'Rey']],
                          ['VP', ['VB', are], ['ADJP', ['VBN', related]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300010000683,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren'], ['CC', and], ['NNP', 'Rey']],
                ['VB', are],
                ['ADJP', ['VBN', related]],
                ['.', ?]
              ]).
pllm:training(6300010000683,
              tree_to_toks,
              ['How', do, you, think, 'Kylo-Ren-and-Rey', are, related, ?]).
pllm:training(6300020000684,
              string,
              "Well I think it's obvious that they have some sort of connection. Maybe they're brother and sister.").
pllm:training(6300020000684,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['JJ', obvious]],
                            [ 'SBAR',
                              ['IN', that],
                              [ 'S',
                                ['NP', ['PRP', they]],
                                [ 'VP',
                                  ['VB', have],
                                  [ 'NP',
                                    ['NP', ['DT', some], ['NN', sort]],
                                    ['PP', ['IN', of], ['NP', ['NN', connection]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', they]],
                    ['VP', ['VB', '\'re'], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6300020000684,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', obvious]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', have],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['NN', connection]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(6300020000684,
              tree_to_toks,
              [ 'Well',
                'I',
                think,
                it,
                '\'s',
                obvious,
                that,
                they,
                have,
                'some-sort',
                of,
                connection,
                ('.'),
                'Maybe',
                they,
                '\'re',
                'brother-and-sister',
                ('.')
              ]).
pllm:training(6300030000685,
              string,
              "If they were, do you think that might soften Kylo's outlook a bit?").
pllm:training(6300030000685,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['SBAR', ['IN', 'If'], ['S', ['NP', ['PRP', they]], ['VP', ['VBD', were]]]],
                  [',', ','],
                  ['VB', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', that]],
                        [ 'VP',
                          ['MD', might],
                          [ 'VP',
                            ['VB', soften],
                            [ 'NP',
                              ['NP', ['NP', ['NNP', 'Kylo'], ['POS', '\'s']], ['NN', outlook]],
                              ['NP', ['DT', a], ['NN', bit]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300030000685,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                [',', ','],
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['MD', might],
                ['VB', soften],
                ['NP', ['NNP', 'Kylo'], ['POS', '\'s']],
                ['NN', outlook],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', ?]
              ]).
pllm:training(6300030000685,
              tree_to_toks,
              [ 'If',
                they,
                were,
                (','),
                do,
                you,
                think,
                that,
                might,
                soften,
                'Kylo-\'s',
                outlook,
                'a-bit',
                (?)
              ]).
pllm:training(6300040000686,
              string,
              "Not really... I mean look what he did to his own father!").
pllm:training(6300040000686,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['VP', ['RB', 'Not'], ['VP', ['VB', 'really.']]], [',', ','], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', mean],
                    [ 'VP',
                      ['VB', look],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', did],
                            ['PP', ['IN', to], ['NP', ['PRP$', his], ['JJ', own], ['NN', father]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300040000686,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['RB', 'Not'],
                ['VB', 'really.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                ['VB', look],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['IN', to],
                ['NP', ['PRP$', his], ['JJ', own], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(6300040000686,
              tree_to_toks,
              [ 'Not',
                'really.',
                (','),
                ('.'),
                (','),
                ('.'),
                'I',
                mean,
                look,
                what,
                he,
                did,
                to,
                'his-own-father',
                ('.')
              ]).
pllm:training(6300050000687,
              string,
              "You've got a good point there. I kind of feel like that symbolized the last of the good that was him leaving and him turning totally to the dark side.").
pllm:training(6300050000687,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['VB', '\'ve'],
                      [ 'VP',
                        ['VBN', got],
                        ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', kind], ['RB', of]],
                      [ 'VP',
                        ['VB', feel],
                        [ 'SBAR',
                          ['IN', like],
                          [ 'S',
                            ['NP', ['DT', that]],
                            [ 'VP',
                              ['VBD', symbolized],
                              [ 'NP',
                                ['NP', ['DT', the], ['JJ', last]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['NP', ['DT', the], ['JJ', good]],
                                    [ 'SBAR',
                                      ['NP', ['WDT', that]],
                                      [ 'S',
                                        [ 'VP',
                                          ['VBD', was],
                                          [ 'NP',
                                            ['NP', ['PRP', him]],
                                            ['VP', ['VBG', leaving]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', him]],
                      [ 'VP',
                        ['VBG', turning],
                        ['ADVP', ['RB', totally]],
                        ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6300050000687,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', '\'ve'],
                ['VBN', got],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VB', feel],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBD', symbolized],
                ['NP', ['DT', the], ['JJ', last]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', good]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP', him]],
                ['VBG', leaving],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', him]],
                ['VBG', turning],
                ['ADVP', ['RB', totally]],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                ['.', '.']
              ]).
pllm:training(6300050000687,
              tree_to_toks,
              [ 'You',
                '\'ve',
                got,
                'a-good-point',
                there,
                ('.'),
                'I',
                kind,
                of,
                feel,
                like,
                that,
                symbolized,
                'the-last',
                of,
                'the-good',
                that,
                was,
                him,
                leaving,
                and,
                him,
                turning,
                totally,
                to,
                'the-dark-side',
                ('.')
              ]).
pllm:training(6300060000688,
              string,
              "I'm still wondering who this Snoke character actually is.").
pllm:training(6300060000688,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    ['ADVP', ['RB', still]],
                    [ 'VP',
                      ['VBG', wondering],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          ['NP', ['DT', this], ['NNP', 'Snoke'], ['NN', character]],
                          ['ADVP', ['RB', actually]],
                          ['VP', ['VBZ', is]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300060000688,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADVP', ['RB', still]],
                ['VBG', wondering],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['DT', this], ['NNP', 'Snoke'], ['NN', character]],
                ['ADVP', ['RB', actually]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(6300060000688,
              tree_to_toks,
              ['I', '\'m', still, wondering, who, 'this-Snoke-character', actually, is, '.']).
pllm:training(6300070000689,
              string,
              "I heard a quote from the director that said he isn't any sort of sith or character we've seen before.").
pllm:training(6300070000689,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', heard],
                    ['NP', ['DT', a], ['NN', quote]],
                    [ 'PP',
                      ['IN', from],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', director]],
                        [ 'SBAR',
                          ['NP', ['WDT', that]],
                          [ 'S',
                            [ 'VP',
                              ['VBD', said],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', he]],
                                  [ 'VP',
                                    ['VBZ', is],
                                    ['RB', not],
                                    [ 'NP',
                                      [ 'NP',
                                        ['NP', ['DT', any], ['NN', sort]],
                                        [ 'PP',
                                          ['IN', of],
                                          [ 'NP',
                                            ['NN', sith],
                                            ['CC', or],
                                            ['NN', character]
                                          ]
                                        ]
                                      ],
                                      [ 'SBAR',
                                        [ 'S',
                                          ['NP', ['PRP', we]],
                                          [ 'VP',
                                            ['VB', '\'ve'],
                                            ['VP', ['VBN', seen], ['ADVP', ['RB', before]]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300070000689,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                ['NP', ['DT', a], ['NN', quote]],
                ['IN', from],
                ['NP', ['DT', the], ['NN', director]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', any], ['NN', sort]],
                ['IN', of],
                ['NP', ['NN', sith], ['CC', or], ['NN', character]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['ADVP', ['RB', before]],
                ['.', '.']
              ]).
pllm:training(6300070000689,
              tree_to_toks,
              [ 'I',
                heard,
                'a-quote',
                from,
                'the-director',
                that,
                said,
                he,
                (is),
                not,
                'any-sort',
                of,
                'sith-or-character',
                we,
                '\'ve',
                seen,
                before,
                ('.')
              ]).
pllm:training(6300080000690,
              string,
              "Is that so? Well that's a bit disappointing. I kind of liked the fan theory that said he might be Grand Moff Tarkin.").
pllm:training(6300080000690,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['VBZ', 'Is'], ['NP', ['DT', that]], ['ADVP', ['RB', so]], ['.', ?]]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['INTJ', ['UH', 'Well']],
                      ['NP', ['DT', that]],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['NP', ['DT', a], ['NN', bit]], ['JJ', disappointing]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', kind], ['RB', of]],
                      [ 'VP',
                        ['VBD', liked],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', fan], ['NN', theory]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              [ 'VP',
                                ['VBD', said],
                                [ 'SBAR',
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['MD', might],
                                      [ 'VP',
                                        ['VB', be],
                                        [ 'NP',
                                          ['NNP', 'Grand'],
                                          ['NNP', 'Moff'],
                                          ['NNP', 'Tarkin']
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(6300080000690,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['ADVP', ['RB', so]],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                'ADJP',
                ['NP', ['DT', a], ['NN', bit]],
                ['JJ', disappointing],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VBD', liked],
                ['NP', ['DT', the], ['NN', fan], ['NN', theory]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['MD', might],
                ['VB', be],
                ['NP', ['NNP', 'Grand'], ['NNP', 'Moff'], ['NNP', 'Tarkin']],
                ['.', '.']
              ]).
pllm:training(6300080000690,
              tree_to_toks,
              [ 'Is',
                that,
                so,
                (?),
                'Well',
                that,
                '\'s',
                'ADJP',
                'a-bit',
                disappointing,
                ('.'),
                'I',
                kind,
                of,
                liked,
                'the-fan-theory',
                that,
                said,
                he,
                might,
                be,
                'Grand-Moff-Tarkin',
                ('.')
              ]).
pllm:training(6300090000691,
              string,
              "But didn't Moff get blown up with the death star?").
pllm:training(6300090000691,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['VBD', did],
                  ['RB', 'n\'t'],
                  ['NP', ['NNP', 'Moff']],
                  [ 'VP',
                    ['VB', get],
                    [ 'VP',
                      ['VBN', blown],
                      ['PRT', ['RP', up]],
                      ['PP', ['IN', with], ['NP', ['DT', the], ['NN', death], ['NN', star]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300090000691,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['NP', ['NNP', 'Moff']],
                ['VB', get],
                ['VBN', blown],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['DT', the], ['NN', death], ['NN', star]],
                ['.', ?]
              ]).
pllm:training(6300090000691,
              tree_to_toks,
              ['But', did, 'n\'t', 'Moff', get, blown, up, with, 'the-death-star', ?]).
pllm:training(6300100000692,
              string,
              "I mean you never know man. In this universe, characters always some back.").
pllm:training(6300100000692,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', mean],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['ADVP', ['RB', never]],
                          ['VP', ['VB', know], ['NP', ['NN', man]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['PP', ['IN', 'In'], ['NP', ['DT', this], ['NN', universe]]],
                  [',', ','],
                  ['NP', ['NNS', characters]],
                  ['ADVP', ['RB', always]],
                  ['NP', ['DT', some]],
                  ['VP', ['VB', back]],
                  ['.', '.']
                ]
              ]).
pllm:training(6300100000692,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', never]],
                ['VB', know],
                ['NP', ['NN', man]],
                ['.', '.'],
                mark('S'),
                ['IN', 'In'],
                ['NP', ['DT', this], ['NN', universe]],
                [',', ','],
                ['NP', ['NNS', characters]],
                ['ADVP', ['RB', always]],
                ['NP', ['DT', some]],
                ['VB', back],
                ['.', '.']
              ]).
pllm:training(6300100000692,
              tree_to_toks,
              [ 'I',
                mean,
                you,
                never,
                know,
                man,
                ('.'),
                'In',
                'this-universe',
                (','),
                characters,
                always,
                some,
                back,
                ('.')
              ]).
pllm:training(6400010000694,
              string,
              "What's your favorite planet in the Star Wars universe?").
pllm:training(6400010000694,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', planet]],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['DT', the],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', universe]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6400010000694,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', planet]],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', universe]],
                ['.', ?]
              ]).
pllm:training(6400010000694,
              tree_to_toks,
              ['What', '\'s', 'your-favorite-planet', in, 'the-Star-Wars-universe', ?]).
pllm:training(6400020000695, string, "I would have to say Coruscant.").
pllm:training(6400020000695,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      ['S', ['VP', ['TO', to], ['VP', ['VB', say], ['NP', ['NNP', 'Coruscant']]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400020000695,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', say],
                ['NP', ['NNP', 'Coruscant']],
                ['.', '.']
              ]).
pllm:training(6400020000695, tree_to_toks, ['I', would, have, to, say, 'Coruscant', '.']).
pllm:training(6400030000696, string, "Why that one?").
pllm:training(6400030000696,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['WHADVP', ['WRB', 'Why']], ['S', ['NP', ['DT', that], ['NN', one]]], ['.', ?]]
              ]).
pllm:training(6400030000696,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['NP', ['DT', that], ['NN', one]],
                ['.', ?]
              ]).
pllm:training(6400030000696, tree_to_toks, ['Why', 'that-one', ?]).
pllm:training(6400040000697,
              string,
              "It just feels right, I love how it's this big bustling planet.").
pllm:training(6400040000697,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBZ', feels], ['ADJP', ['JJ', right]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', love],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['NP', ['DT', this], ['JJ', big], ['JJ', bustling], ['NN', planet]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400040000697,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', just]],
                ['VBZ', feels],
                ['ADJP', ['JJ', right]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', love],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['DT', this], ['JJ', big], ['JJ', bustling], ['NN', planet]],
                ['.', '.']
              ]).
pllm:training(6400040000697,
              tree_to_toks,
              [ 'It',
                just,
                feels,
                right,
                (','),
                'I',
                love,
                how,
                it,
                '\'s',
                'this-big-bustling-planet',
                ('.')
              ]).
pllm:training(6400050000698, string, "What do you mean?").
pllm:training(6400050000698,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', mean]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6400050000698,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['.', ?]
              ]).
pllm:training(6400050000698, tree_to_toks, ['What', do, you, mean, ?]).
pllm:training(6400060000699,
              string,
              "Well from what we've seen in the movies it's this huge sci-fi city and I believe thats pretty much all we've seen of it.  I just love the fact that it's all busy and advanced.").
pllm:training(6400060000699,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'Well']],
                    [ 'PP',
                      ['IN', from],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', we]],
                          [ 'VP',
                            ['VB', '\'ve'],
                            [ 'VP',
                              ['VBN', seen],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NNS', movies]],
                                  [ 'SBAR',
                                    [ 'S',
                                      [ 'S',
                                        ['NP', ['PRP', it]],
                                        [ 'VP',
                                          ['VBZ', '\'s'],
                                          [ 'NP',
                                            ['DT', this],
                                            ['JJ', huge],
                                            ['NML', ['NN', sci], ['HYPH', -], ['NN', fi]],
                                            ['NN', city]
                                          ]
                                        ]
                                      ],
                                      ['CC', and],
                                      [ 'S',
                                        ['NP', ['PRP', 'I']],
                                        [ 'VP',
                                          ['VB', believe],
                                          ['NP', ['NNS', thats]],
                                          ['ADVP', ['RB', pretty], ['RB', much]],
                                          [ 'NP-TMP',
                                            ['NP', ['DT', all]],
                                            [ 'SBAR',
                                              [ 'S',
                                                ['NP', ['PRP', we]],
                                                [ 'VP',
                                                  ['VB', '\'ve'],
                                                  [ 'VP',
                                                    ['VBN', seen],
                                                    ['PP', ['IN', of], ['NP', ['PRP', it]]]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VB', love],
                      ['NP', ['DT', the], ['NN', fact]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['DT', all], ['JJ', busy], ['CC', and], ['JJ', advanced]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6400060000699,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Well']],
                ['IN', from],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                mark('SBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                [ 'NP',
                  ['DT', this],
                  ['JJ', huge],
                  ['NML', ['NN', sci], ['HYPH', -], ['NN', fi]],
                  ['NN', city]
                ],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', believe],
                ['NP', ['NNS', thats]],
                ['ADVP', ['RB', pretty], ['RB', much]],
                'NP-TMP',
                ['NP', ['DT', all]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VB', love],
                ['NP', ['DT', the], ['NN', fact]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['DT', all], ['JJ', busy], ['CC', and], ['JJ', advanced]],
                ['.', '.']
              ]).
pllm:training(6400060000699,
              tree_to_toks,
              [ 'Well',
                from,
                what,
                we,
                '\'ve',
                seen,
                in,
                'the-movies',
                it,
                '\'s',
                'this-huge-sci---fi-city',
                and,
                'I',
                believe,
                thats,
                pretty,
                much,
                'NP-TMP',
                all,
                we,
                '\'ve',
                seen,
                of,
                it,
                ('.'),
                'I',
                just,
                love,
                'the-fact',
                that,
                it,
                '\'s',
                all,
                busy,
                and,
                advanced,
                ('.')
              ]).
pllm:training(6400070000700,
              string,
              "That's a good point, you'd think with how advanced all these species are that most planets would be like that.").
pllm:training(6400070000700,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', '\'d'],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', with],
                        [ 'SBAR',
                          ['WHADJP', ['WRB', how], ['JJ', advanced]],
                          [ 'S',
                            ['NP', ['PDT', all], ['DT', these], ['NNS', species]],
                            [ 'VP',
                              ['VB', are],
                              [ 'SBAR',
                                ['IN', that],
                                [ 'S',
                                  ['NP', ['JJS', most], ['NNS', planets]],
                                  [ 'VP',
                                    ['MD', would],
                                    ['VP', ['VB', be], ['PP', ['IN', like], ['NP', ['DT', that]]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400070000700,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['VB', think],
                ['IN', with],
                mark('SBAR'),
                ['WHADJP', ['WRB', how], ['JJ', advanced]],
                mark('S'),
                ['NP', ['PDT', all], ['DT', these], ['NNS', species]],
                ['VB', are],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['JJS', most], ['NNS', planets]],
                ['MD', would],
                ['VB', be],
                ['IN', like],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6400070000700,
              tree_to_toks,
              [ 'That',
                '\'s',
                'a-good-point',
                (','),
                you,
                '\'d',
                think,
                with,
                how,
                advanced,
                'all-these-species',
                are,
                that,
                'most-planets',
                would,
                be,
                like,
                that,
                ('.')
              ]).
pllm:training(6400080000701,
              string,
              "I agree I always thought it was odd when a planet felt like they were less advanced than we are.").
pllm:training(6400080000701,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', agree],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        ['ADVP', ['RB', always]],
                        [ 'VP',
                          ['VBD', thought],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['VBD', was],
                                ['ADJP', ['JJ', odd]],
                                [ 'SBAR',
                                  ['WHADVP', ['WRB', when]],
                                  [ 'S',
                                    ['NP', ['DT', a], ['NN', planet]],
                                    [ 'VP',
                                      ['VBD', felt],
                                      [ 'SBAR',
                                        ['IN', like],
                                        [ 'S',
                                          ['NP', ['PRP', they]],
                                          [ 'VP',
                                            ['VBD', were],
                                            [ 'ADJP',
                                              ['ADJP', ['RBR', less], ['JJ', advanced]],
                                              [ 'SBAR',
                                                ['IN', than],
                                                [ 'S',
                                                  ['NP', ['PRP', we]],
                                                  ['VP', ['VB', are]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400080000701,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', odd]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['DT', a], ['NN', planet]],
                ['VBD', felt],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                'ADJP',
                ['ADJP', ['RBR', less], ['JJ', advanced]],
                mark('SBAR'),
                ['IN', than],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', are],
                ['.', '.']
              ]).
pllm:training(6400080000701,
              tree_to_toks,
              [ 'I',
                agree,
                'I',
                always,
                thought,
                it,
                was,
                odd,
                when,
                'a-planet',
                felt,
                like,
                they,
                were,
                'ADJP',
                less,
                advanced,
                than,
                we,
                are,
                ('.')
              ]).
pllm:training(6400090000702,
              string,
              "I never thought about it but you make a good point.").
pllm:training(6400090000702,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', never]],
                    ['VP', ['VBD', thought], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', make], ['NP', ['DT', a], ['JJ', good], ['NN', point]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400090000702,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['VBD', thought],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', make],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(6400090000702,
              tree_to_toks,
              ['I', never, thought, about, it, but, you, make, 'a-good-point', '.']).
pllm:training(6400100000703,
              string,
              "That's why I liked it the most though some of the other planets were good too.").
pllm:training(6400100000703,
              text_to_tree,
              [ 'S',
                ['NP', ['DT', 'That']],
                [ 'VP',
                  ['AUX', '\'s'],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', why]],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', liked],
                        ['NP', ['PRP', it]],
                        ['NP', ['DT', the], ['JJS', most]],
                        [ 'SBAR',
                          ['IN', though],
                          [ 'S',
                            [ 'NP',
                              ['NP', ['DT', some]],
                              [ 'PP',
                                ['IN', of],
                                ['NP', ['DT', the], ['JJ', other], ['NNS', planets]]
                              ]
                            ],
                            ['VP', ['AUX', were], ['ADJP', ['JJ', good]], ['ADVP', ['RB', too]]]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6400100000703,
              unphrasify,
              [ mark('S'),
                ['NP', ['DT', 'That']],
                ['AUX', '\'s'],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['NP', ['DT', the], ['JJS', most]],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['DT', some]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', other], ['NNS', planets]],
                ['AUX', were],
                ['ADJP', ['JJ', good]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(6400100000703,
              tree_to_toks,
              [ 'That',
                '\'s',
                why,
                'I',
                liked,
                it,
                'the-most',
                though,
                some,
                of,
                'the-other-planets',
                were,
                good,
                too,
                ('.')
              ]).
pllm:training(6500010000705,
              string,
              "I think I saw three versions of Return of the Jedi.").
pllm:training(6500010000705,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', saw],
                          [ 'NP',
                            ['NP', ['CD', three], ['NNS', versions]],
                            [ 'PP',
                              ['IN', of],
                              [ 'NP',
                                ['NP', ['NN', 'Return']],
                                ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500010000705,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['CD', three], ['NNS', versions]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(6500010000705,
              tree_to_toks,
              ['I', think, 'I', saw, 'three-versions', of, 'Return', of, 'the-Jedi', '.']).
pllm:training(6500020000706, string, "Really? What were they?").
pllm:training(6500020000706,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                [ 'CORENLP',
                  ['SBAR', ['NP', ['WP', 'What']], ['S', ['VBD', were], ['NP', ['PRP', they]]], ['.', ?]]
                ]
              ]).
pllm:training(6500020000706,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', were],
                ['NP', ['PRP', they]],
                ['.', ?]
              ]).
pllm:training(6500020000706, tree_to_toks, ['Really', ?, 'What', were, they, ?]).
pllm:training(6500030000707,
              string,
              "The first one was the original, released in 1983.").
pllm:training(6500030000707,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', first], ['NN', one]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', original]],
                      [',', ','],
                      ['VP', ['VBN', released], ['PP', ['IN', in], ['NP', ['CD', '1983']]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500030000707,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', first], ['NN', one]],
                ['VBD', was],
                ['NP', ['DT', the], ['JJ', original]],
                [',', ','],
                ['VBN', released],
                ['IN', in],
                ['NP', ['CD', '1983']],
                ['.', '.']
              ]).
pllm:training(6500030000707,
              tree_to_toks,
              ['The-first-one', was, 'the-original', ',', released, in, '1983', '.']).
pllm:training(6500040000708, string, "And the second?").
pllm:training(6500040000708,
              text_to_tree,
              ['CORENLP', ['FRAG', ['CC', 'And'], ['NP', ['DT', the], ['JJ', second]], ['.', ?]]]).
pllm:training(6500040000708,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['CC', 'And'],
                ['NP', ['DT', the], ['JJ', second]],
                ['.', ?]
              ]).
pllm:training(6500040000708, tree_to_toks, ['And', 'the-second', ?]).
pllm:training(6500050000709,
              string,
              "There was a re-release in 1997, with a change of songs in the end.").
pllm:training(6500050000709,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', 're-release']],
                      ['PP', ['IN', in], ['NP', ['CD', '1997']]]
                    ],
                    [',', ','],
                    [ 'PP',
                      ['IN', with],
                      [ 'NP',
                        ['NP', ['DT', a], ['NN', change]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NNS', songs]],
                            ['PP', ['IN', in], ['NP', ['DT', the], ['NN', end]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500050000709,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', 're-release']],
                ['IN', in],
                ['NP', ['CD', '1997']],
                [',', ','],
                ['IN', with],
                ['NP', ['DT', a], ['NN', change]],
                ['IN', of],
                ['NP', ['NNS', songs]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.']
              ]).
pllm:training(6500050000709,
              tree_to_toks,
              [ 'There',
                was,
                'a-re-release',
                in,
                '1997',
                (','),
                with,
                'a-change',
                of,
                songs,
                in,
                'the-end',
                ('.')
              ]).
pllm:training(6500060000710, string, "Wow, I did not know that.").
pllm:training(6500060000710,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Wow']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', did], ['RB', not], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6500060000710,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Wow']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6500060000710, tree_to_toks, ['Wow', ',', 'I', did, not, know, that, '.']).
pllm:training(6500070000711,
              string,
              "The last time I saw this there was one ther change.").
pllm:training(6500070000711,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP-TMP', ['DT', 'The'], ['JJ', last], ['NN', time]],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', saw],
                    [ 'NP',
                      ['NP', ['DT', this]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBD', was],
                            ['NP', ['NP', ['CD', one]], ['NP', ['DT', ther], ['NN', change]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500070000711,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP-TMP', ['DT', 'The'], ['JJ', last], ['NN', time]],
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['DT', this]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['CD', one]],
                ['NP', ['DT', ther], ['NN', change]],
                ['.', '.']
              ]).
pllm:training(6500070000711,
              tree_to_toks,
              ['The', last, time, 'I', saw, this, there, was, one, 'ther-change', '.']).
pllm:training(6500080000712, string, "Which was?").
pllm:training(6500080000712,
              text_to_tree,
              ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which']], ['S', ['VP', ['VBD', was]]], ['.', ?]]]).
pllm:training(6500080000712,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which']],
                mark('S'),
                ['VBD', was],
                ['.', ?]
              ]).
pllm:training(6500080000712, tree_to_toks, ['Which', was, ?]).
pllm:training(6500090000713,
              string,
              "They replaced Ray Milland standing with Yoda and Obi-wan.").
pllm:training(6500090000713,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'They']],
                  [ 'VP',
                    ['VBD', replaced],
                    [ 'NP',
                      ['NP', ['NNP', 'Ray'], ['NNP', 'Milland']],
                      [ 'VP',
                        ['VBG', standing],
                        [ 'PP',
                          ['IN', with],
                          [ 'NP',
                            ['NNP', 'Yoda'],
                            ['CC', and],
                            ['NNP', 'Obi'],
                            ['HYPH', -],
                            ['NNP', wan]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500090000713,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VBD', replaced],
                ['NP', ['NNP', 'Ray'], ['NNP', 'Milland']],
                ['VBG', standing],
                ['IN', with],
                ['NP', ['NNP', 'Yoda'], ['CC', and], ['NNP', 'Obi'], ['HYPH', -], ['NNP', wan]],
                ['.', '.']
              ]).
pllm:training(6500090000713,
              tree_to_toks,
              ['They', replaced, 'Ray-Milland', standing, with, 'Yoda-and-Obi---wan', '.']).
pllm:training(6500100000714,
              string,
              "Right, they used the Anakin from Revenge of the Sith.").
pllm:training(6500100000714,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Right']],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  [ 'VP',
                    ['VBD', used],
                    ['NP', ['DT', the], ['NNP', 'Anakin']],
                    [ 'PP',
                      ['IN', from],
                      [ 'NP',
                        ['NP', ['NN', 'Revenge']],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500100000714,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Right']],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VBD', used],
                ['NP', ['DT', the], ['NNP', 'Anakin']],
                ['IN', from],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(6500100000714,
              tree_to_toks,
              ['Right', ',', they, used, 'the-Anakin', from, 'Revenge', of, 'the-Sith', '.']).
pllm:training(6600010000716,
              string,
              "Do you know much about the story throughout the Star Wars universe?").
pllm:training(6600010000716,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', know],
                  ['NP', ['JJ', much]],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', story]],
                      [ 'PP',
                        ['IN', throughout],
                        ['NP', ['DT', the], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', universe]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6600010000716,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['JJ', much]],
                ['IN', about],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', throughout],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', universe]],
                ['.', ?]
              ]).
pllm:training(6600010000716,
              tree_to_toks,
              [ 'Do',
                you,
                know,
                much,
                about,
                'the-story',
                throughout,
                'the-Star-Wars-universe',
                (?)
              ]).
pllm:training(6600020000717,
              string,
              "I really don't. I feel like it's too much to keep up with.").
pllm:training(6600020000717,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VB', do], ['RB', not]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', feel],
                      [ 'SBAR',
                        ['IN', like],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['RB', too], ['JJ', much]],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                ['VP', ['VB', keep], ['PRT', ['RP', up]], ['PP', ['IN', with]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6600020000717,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', do],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', feel],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', too], ['JJ', much]],
                mark('S'),
                ['TO', to],
                ['VB', keep],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['.', '.']
              ]).
pllm:training(6600020000717,
              tree_to_toks,
              ['I', really, do, not, '.', 'I', feel, like, it, '\'s', too, much, to, keep, up, with, '.']).
pllm:training(6600030000718,
              string,
              "As a die-hard Star Wars fan, I completely understand that.").
pllm:training(6600030000718,
              text_to_tree,
              [ 'S',
                [ 'PP',
                  ['IN', 'As'],
                  ['NP', ['DT', a], ['JJ', 'die-hard'], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', fan]]
                ],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', completely]],
                ['VP', ['VB', understand], ['NP', ['DT', that]]],
                ['.', '.']
              ]).
pllm:training(6600030000718,
              unphrasify,
              [ mark('S'),
                ['IN', 'As'],
                ['NP', ['DT', a], ['JJ', 'die-hard'], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', fan]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', completely]],
                ['VB', understand],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6600030000718,
              tree_to_toks,
              ['As', 'a-die-hard-Star-Wars-fan', ',', 'I', completely, understand, that, '.']).
pllm:training(6600040000719,
              string,
              "How are you able to keep up with everything?").
pllm:training(6600040000719,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', are],
                    ['NP', ['PRP', you]],
                    [ 'ADJP',
                      ['JJ', able],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', keep],
                            ['PRT', ['RP', up]],
                            ['PP', ['IN', with], ['NP', ['NN', everything]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6600040000719,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                'ADJP',
                ['JJ', able],
                mark('S'),
                ['TO', to],
                ['VB', keep],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['NN', everything]],
                ['.', ?]
              ]).
pllm:training(6600040000719,
              tree_to_toks,
              ['How', are, you, 'ADJP', able, to, keep, up, with, everything, ?]).
pllm:training(6600050000720,
              string,
              "The films just appeal to me. Nothing too specific.").
pllm:training(6600050000720,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['NNS', films]],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VB', appeal], ['PP', ['IN', to], ['NP', ['PRP', me]]]],
                    ['.', '.']
                  ]
                ],
                ['NP', ['NP', ['NN', nothing]], ['ADJP', ['RB', too], ['JJ', specific]], ['.', '.']]
              ]).
pllm:training(6600050000720,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NNS', films]],
                ['ADVP', ['RB', just]],
                ['VB', appeal],
                ['IN', to],
                ['NP', ['PRP', me]],
                ['.', '.'],
                ['NP', ['NN', nothing]],
                ['ADJP', ['RB', too], ['JJ', specific]],
                ['.', '.']
              ]).
pllm:training(6600050000720,
              tree_to_toks,
              ['The-films', just, appeal, to, me, '.', nothing, too, specific, '.']).
pllm:training(6600060000721, string, "You just like the movies overall?").
pllm:training(6600060000721,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', just]],
                ['VP', ['VB', like], ['NP', ['DT', the], ['NNS', movies]], ['ADVP', ['RB', overall]]],
                ['.', ?]
              ]).
pllm:training(6600060000721,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', just]],
                ['VB', like],
                ['NP', ['DT', the], ['NNS', movies]],
                ['ADVP', ['RB', overall]],
                ['.', ?]
              ]).
pllm:training(6600060000721, tree_to_toks, ['You', just, like, 'the-movies', overall, ?]).
pllm:training(6600070000722,
              string,
              "Yeah, and it's been that way since I was a child.").
pllm:training(6600070000722,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', '\'s'],
                    [ 'VP',
                      ['AUX', been],
                      ['NP', ['DT', that], ['NN', way]],
                      [ 'SBAR',
                        ['IN', since],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['AUX', was], ['NP', ['DT', a], ['NN', child]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6600070000722,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['AUX', been],
                ['NP', ['DT', that], ['NN', way]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', child]],
                ['.', '.']
              ]).
pllm:training(6600070000722,
              tree_to_toks,
              ['Yeah', ',', and, it, '\'s', been, 'that-way', since, 'I', was, 'a-child', '.']).
pllm:training(6600080000723, string, "Could you explain the story to me a bit?").
pllm:training(6600080000723,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['MD', 'Could'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', explain],
                    ['NP', ['DT', the], ['NN', story]],
                    ['PP', ['IN', to], ['NP', ['NP', ['PRP', me]], ['NP', ['DT', a], ['NN', bit]]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6600080000723,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['MD', 'Could'],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', to],
                ['NP', ['PRP', me]],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', ?]
              ]).
pllm:training(6600080000723,
              tree_to_toks,
              ['Could', you, explain, 'the-story', to, me, 'a-bit', ?]).
pllm:training(6600090000724,
              string,
              "I could, if it was simple enough to summarize 8 movies.").
pllm:training(6600090000724,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', could],
                    [ 'VP',
                      [',', ','],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['JJ', simple],
                              ['JJ', enough],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  ['VP', ['VB', summarize], ['NP', ['CD', '8'], ['NNS', movies]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6600090000724,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', could],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', simple],
                ['JJ', enough],
                mark('S'),
                ['TO', to],
                ['VB', summarize],
                ['NP', ['CD', '8'], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6600090000724,
              tree_to_toks,
              ['I', could, ',', if, it, was, 'ADJP', simple, enough, to, summarize, '8-movies', '.']).
pllm:training(6600100000725, string, "That's a lot of movies.").
pllm:training(6600100000725,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['NP', ['NP', ['DT', a], ['NN', lot]], ['PP', ['IN', of], ['NP', ['NNS', movies]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6600100000725,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6600100000725, tree_to_toks, ['That', '\'s', 'a-lot', of, movies, '.']).
pllm:training(6700010000727,
              string,
              "What did you think of Ron Howard being the new director.").
pllm:training(6700010000727,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', did],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'S',
                          ['NP', ['NNP', 'Ron'], ['NNP', 'Howard']],
                          [ 'VP',
                            ['VBG', being],
                            ['NP', ['DT', the], ['JJ', new], ['NN', director]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700010000727,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                mark('S'),
                ['NP', ['NNP', 'Ron'], ['NNP', 'Howard']],
                ['VBG', being],
                ['NP', ['DT', the], ['JJ', new], ['NN', director]],
                ['.', '.']
              ]).
pllm:training(6700010000727,
              tree_to_toks,
              ['What', did, you, think, of, 'Ron-Howard', being, 'the-new-director', '.']).
pllm:training(6700020000728, string, "For what?").
pllm:training(6700020000728,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHPP', ['IN', 'For'], ['NP', ['WP', what]]], ['.', ?]]]).
pllm:training(6700020000728,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), 'WHPP', ['IN', 'For'], ['NP', ['WP', what]], ['.', ?]]).
pllm:training(6700020000728, tree_to_toks, ['WHPP', 'For', what, ?]).
pllm:training(6700030000729, string, "The Han Solo, solo film.").
pllm:training(6700030000729,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['DT', 'The'], ['NNP', 'Han'], ['NNP', 'Solo']],
                  [',', ','],
                  ['NP', ['JJ', solo], ['NN', film]],
                  ['.', '.']
                ]
              ]).
pllm:training(6700030000729,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['DT', 'The'], ['NNP', 'Han'], ['NNP', 'Solo']],
                [',', ','],
                ['NP', ['JJ', solo], ['NN', film]],
                ['.', '.']
              ]).
pllm:training(6700030000729, tree_to_toks, ['The-Han-Solo', ',', 'solo-film', '.']).
pllm:training(6700040000730,
              string,
              "I did not know that. I think it is alright.").
pllm:training(6700040000730,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VBD', did], ['RB', not], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', is], ['ADJP', ['JJ', alright]]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6700040000730,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', alright]],
                ['.', '.']
              ]).
pllm:training(6700040000730,
              tree_to_toks,
              ['I', did, not, know, that, '.', 'I', think, it, is, alright, '.']).
pllm:training(6700050000731,
              string,
              "I wonder why JJ Abrams would not direct it?").
pllm:training(6700050000731,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', why]],
                      [ 'S',
                        ['NP', ['NNP', 'JJ'], ['NNP', 'Abrams']],
                        [ 'VP',
                          ['MD', would],
                          ['RB', not],
                          ['VP', ['VB', direct], ['NP', ['PRP', it]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6700050000731,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['NNP', 'JJ'], ['NNP', 'Abrams']],
                ['MD', would],
                ['RB', not],
                ['VB', direct],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(6700050000731,
              tree_to_toks,
              ['I', wonder, why, 'JJ-Abrams', would, not, direct, it, ?]).
pllm:training(6700060000732,
              string,
              "I would say due to the fact it will be awful.").
pllm:training(6700060000732,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', say],
                      [ 'PP',
                        ['IN', due],
                        ['IN', to],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', fact]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              ['VP', ['MD', will], ['VP', ['VB', be], ['ADJP', ['JJ', awful]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700060000732,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', say],
                ['IN', due],
                ['IN', to],
                ['NP', ['DT', the], ['NN', fact]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', will],
                ['VB', be],
                ['ADJP', ['JJ', awful]],
                ['.', '.']
              ]).
pllm:training(6700060000732,
              tree_to_toks,
              ['I', would, say, due, to, 'the-fact', it, will, be, awful, '.']).
pllm:training(6700070000733, string, "Why you say that?").
pllm:training(6700070000733,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6700070000733,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(6700070000733, tree_to_toks, ['Why', you, say, that, ?]).
pllm:training(6700080000734, string, "It does not make sense.").
pllm:training(6700080000734,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', make], ['NP', ['NN', sense]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6700080000734,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', does],
                ['RB', not],
                ['VB', make],
                ['NP', ['NN', sense]],
                ['.', '.']
              ]).
pllm:training(6700080000734, tree_to_toks, ['It', does, not, make, sense, '.']).
pllm:training(6700090000735, string, "Why not?").
pllm:training(6700090000735,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['FRAG', ['RB', not]], ['.', ?]]]).
pllm:training(6700090000735,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                'FRAG',
                ['RB', not],
                ['.', ?]
              ]).
pllm:training(6700090000735, tree_to_toks, ['Why', 'FRAG', not, ?]).
pllm:training(6700100000736, string, "We already know what happens to him.").
pllm:training(6700100000736,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'We']],
                  ['ADVP', ['RB', already]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      ['S', ['VP', ['VBZ', happens], ['PP', ['IN', to], ['NP', ['PRP', him]]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700100000736,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'We']],
                ['ADVP', ['RB', already]],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', happens],
                ['IN', to],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(6700100000736,
              tree_to_toks,
              ['We', already, know, what, happens, to, him, '.']).
pllm:training(6800010000738,
              string,
              "What's your least favorite quote in the Star Wars movieverse?").
pllm:training(6800010000738,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', '\'s'],
                  [ 'NP',
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', quote]],
                    ['PP', ['IN', in], ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']]]
                  ],
                  ['VP', ['VB', movieverse]]
                ],
                ['.', ?]
              ]).
pllm:training(6800010000738,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', quote]],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['VB', movieverse],
                ['.', ?]
              ]).
pllm:training(6800010000738,
              tree_to_toks,
              [ 'What',
                '\'s',
                'your-least-favorite-quote',
                in,
                'the-Star-Wars',
                movieverse,
                (?)
              ]).
pllm:training(6800020000739, string, "Ha, so much to choose from.").
pllm:training(6800020000739,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Ha']],
                  [',', ','],
                  ['ADVP', ['RB', so], ['RB', much]],
                  ['S', ['VP', ['TO', to], ['VP', ['VB', choose], ['PP', ['IN', from]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6800020000739,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Ha']],
                [',', ','],
                ['ADVP', ['RB', so], ['RB', much]],
                mark('S'),
                ['TO', to],
                ['VB', choose],
                ['IN', from],
                ['.', '.']
              ]).
pllm:training(6800020000739, tree_to_toks, ['Ha', ',', so, much, to, choose, from, '.']).
pllm:training(6800030000740, string, "I know, right? Lucas is NOT a writer.").
pllm:training(6800030000740,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                    [',', ','],
                    ['S', ['ADJP', ['JJ', right]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Lucas']],
                    ['VP', ['VBZ', is], ['RB', 'NOT'], ['NP', ['DT', a], ['NN', writer]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6800030000740,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                mark('S'),
                ['ADJP', ['JJ', right]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBZ', is],
                ['RB', 'NOT'],
                ['NP', ['DT', a], ['NN', writer]],
                ['.', '.']
              ]).
pllm:training(6800030000740,
              tree_to_toks,
              ['I', know, ',', right, ?, 'Lucas', is, 'NOT', 'a-writer', '.']).
pllm:training(6800040000741,
              string,
              "Probably Anakin and Padmé arguing about who loves the other one more. Obnoxious.").
pllm:training(6800040000741,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['ADVP', ['RB', 'Probably']],
                    ['NP', ['NNP', 'Anakin'], ['CC', and], ['NNP', 'Padmé']],
                    [ 'VP',
                      ['VBG', arguing],
                      [ 'PP',
                        ['IN', about],
                        [ 'SBAR',
                          ['NP', ['WP', who]],
                          [ 'S',
                            [ 'VP',
                              ['VBZ', loves],
                              [ 'NP',
                                ['DT', the],
                                ['JJ', other],
                                ['QP', ['CD', one], ['JJR', more]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                ['CORENLP', ['ADJP', ['JJ', 'Obnoxious'], ['.', '.']]]
              ]).
pllm:training(6800040000741,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Probably']],
                ['NP', ['NNP', 'Anakin'], ['CC', and], ['NNP', 'Padmé']],
                ['VBG', arguing],
                ['IN', about],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', loves],
                ['NP', ['DT', the], ['JJ', other], ['QP', ['CD', one], ['JJR', more]]],
                ['.', '.'],
                mark('CORENLP'),
                ['ADJP', ['JJ', 'Obnoxious'], ['.', '.']]
              ]).
pllm:training(6800040000741,
              tree_to_toks,
              [ 'Probably',
                'Anakin-and-Padmé',
                arguing,
                about,
                who,
                loves,
                'the-other-one-more',
                ('.'),
                'Obnoxious',
                ('.')
              ]).
pllm:training(6800050000742,
              string,
              "More than the \"sand being irritating\" because it gets everywhere?").
pllm:training(6800050000742,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  [ 'NP',
                    ['JJR', 'More'],
                    ['PP', ['IN', than], ['NP', ['DT', the], ['``', '"'], ['NN', sand]]]
                  ],
                  [ 'VP',
                    ['VBG', being],
                    [ 'NP',
                      ['NP', ['JJ', irritating]],
                      ['``', '"'],
                      [ 'SBAR',
                        ['IN', because],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          ['VP', ['VBZ', gets], ['ADVP', ['RB', everywhere]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6800050000742,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['JJR', 'More'],
                ['IN', than],
                ['NP', ['DT', the], ['``', '"'], ['NN', sand]],
                ['VBG', being],
                ['NP', ['JJ', irritating]],
                ['``', '"'],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', gets],
                ['ADVP', ['RB', everywhere]],
                ['.', ?]
              ]).
pllm:training(6800050000742,
              tree_to_toks,
              [ 'More',
                than,
                'the-"-sand',
                being,
                irritating,
                '"',
                because,
                it,
                gets,
                everywhere,
                (?)
              ]).
pllm:training(6800060000743, string, "Of course, because this is far darker.").
pllm:training(6800060000743,
              text_to_tree,
              [ 'FRAG',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course]]],
                [',', ','],
                [ 'SBAR',
                  ['IN', because],
                  [ 'S',
                    ['NP', ['DT', this]],
                    ['VP', ['AUX', is], ['ADJP', ['RB', far], ['JJR', darker]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6800060000743,
              unphrasify,
              [ mark('FRAG'),
                ['IN', 'Of'],
                ['NP', ['NN', course]],
                [',', ','],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['DT', this]],
                ['AUX', is],
                ['ADJP', ['RB', far], ['JJR', darker]],
                ['.', '.']
              ]).
pllm:training(6800060000743,
              tree_to_toks,
              ['Of', course, ',', because, this, is, far, darker, '.']).
pllm:training(6800070000744, string, "How so?").
pllm:training(6800070000744,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'How']], ['FRAG', ['ADVP', ['RB', so]]], ['.', ?]]]).
pllm:training(6800070000744,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('FRAG'),
                ['ADVP', ['RB', so]],
                ['.', ?]
              ]).
pllm:training(6800070000744, tree_to_toks, ['How', so, ?]).
pllm:training(6800080000745, string, "Age difference?").
pllm:training(6800080000745,
              text_to_tree,
              ['FRAG', ['NP', ['NN', 'Age'], ['NN', difference]], ['.', ?]]).
pllm:training(6800080000745,
              unphrasify,
              [mark('FRAG'), ['NP', ['NN', 'Age'], ['NN', difference]], ['.', ?]]).
pllm:training(6800080000745, tree_to_toks, ['Age-difference', ?]).
pllm:training(6800090000746, string, "Huh?").
pllm:training(6800090000746, text_to_tree, ['NP', ['NNP', 'Huh'], ['.', ?]]).
pllm:training(6800090000746, unphrasify, ['NP', ['NNP', 'Huh'], ['.', ?]]).
pllm:training(6800090000746, tree_to_toks, ['Huh-?']).
pllm:training(6800100000747,
              string,
              "Their relationship would be a crime in modern-day Earth. She's a queen and he's 15. That's creepy.").
pllm:training(6800100000747,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                    [ 'VP',
                      ['MD', would],
                      [ 'VP',
                        ['VB', be],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', crime]],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NML', ['JJ', modern], ['HYPH', -], ['NN', day]],
                              ['NNP', 'Earth']
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['S', ['NP', ['PRP', 'She']], ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['NN', queen]]]],
                      ['CC', and],
                      ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', '\'s'], ['NP', ['CD', '15']]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', creepy]]], ['.', '.']]
                  ]
                ]
              ]).
pllm:training(6800100000747,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                ['MD', would],
                ['VB', be],
                ['NP', ['DT', a], ['NN', crime]],
                ['IN', in],
                ['NP', ['NML', ['JJ', modern], ['HYPH', -], ['NN', day]], ['NNP', 'Earth']],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', queen]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['NP', ['CD', '15']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(6800100000747,
              tree_to_toks,
              [ 'Their-relationship',
                would,
                be,
                'a-crime',
                in,
                'modern---day-Earth',
                ('.'),
                'She',
                '\'s',
                'a-queen',
                and,
                he,
                '\'s',
                '15',
                ('.'),
                'That',
                '\'s',
                creepy,
                ('.')
              ]).
pllm:training(6900010000749,
              string,
              "I can remember watching the original three Star Wars in the 80's").
pllm:training(6900010000749,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    [ 'VP',
                      ['VB', remember],
                      [ 'S',
                        [ 'VP',
                          ['VBG', watching],
                          [ 'NP',
                            ['DT', the],
                            ['JJ', original],
                            ['NML', ['NML', ['CD', three]], ['NNP', 'Star'], ['NNPS', 'Wars']]
                          ],
                          ['PP', ['IN', in], ['NP', ['DT', the], ['CD', '80'], ['POS', '\'s']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6900010000749,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', remember],
                mark('S'),
                ['VBG', watching],
                [ 'NP',
                  ['DT', the],
                  ['JJ', original],
                  ['NML', ['NML', ['CD', three]], ['NNP', 'Star'], ['NNPS', 'Wars']]
                ],
                ['IN', in],
                ['NP', ['DT', the], ['CD', '80'], ['POS', '\'s']],
                ['.', '.']
              ]).
pllm:training(6900010000749,
              tree_to_toks,
              [ 'I',
                can,
                remember,
                watching,
                'the-original-three-Star-Wars',
                in,
                'the-80-\'s',
                ('.')
              ]).
pllm:training(6900020000750, string, "I do too It was like an event.").
pllm:training(100000000001, string, "Hey.").
pllm:training(100000000001, text_to_tree, ['NP', ['NNP', 'Hey'], ['.', '.']]).
pllm:training(100000000001, unphrasify, ['NP', ['NNP', 'Hey'], ['.', '.']]).
pllm:training(100000000001, tree_to_toks, ['Hey-.']).
pllm:training(100010000002, string, "Hi.").
pllm:training(100010000002, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(100010000002, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(100010000002, tree_to_toks, ['Hi', '.']).
pllm:training(100020000003, string, "Are you a fan of the Star Wars series?").
pllm:training(100020000003,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Are'],
                  ['NP', ['PRP', you]],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', fan]],
                    [ 'PP',
                      ['IN', of],
                      ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', series]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(100020000003,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Are'],
                ['NP', ['PRP', you]],
                ['NP', ['DT', a], ['NN', fan]],
                ['IN', of],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', series]],
                ['.', ?]
              ]).
pllm:training(100020000003,
              tree_to_toks,
              ['Are', you, 'a-fan', of, 'the-Star-Wars-series', ?]).
pllm:training(100030000004, string, "Yeah love them.").
pllm:training(100030000004,
              text_to_tree,
              ['S', ['NP', ['UH', 'Yeah']], ['VP', ['VB', love], ['NP', ['PRP', them]]], ['.', '.']]).
pllm:training(100030000004,
              unphrasify,
              [mark('S'), ['NP', ['UH', 'Yeah']], ['VB', love], ['NP', ['PRP', them]], ['.', '.']]).
pllm:training(100030000004, tree_to_toks, ['Yeah', love, them, '.']).
pllm:training(100040000005, string, "Me too.").
pllm:training(100040000005,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(100040000005,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(100040000005, tree_to_toks, ['Me', too, '.']).
pllm:training(100050000006, string, "Cool.").
pllm:training(100050000006, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Cool'], ['.', '.']]]).
pllm:training(100050000006, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Cool'], ['.', '.']]]).
pllm:training(100050000006, tree_to_toks, ['Cool', '.']).
pllm:training(100060000007, string, "Who is your least favorite character?").
pllm:training(100060000007,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(100060000007,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(100060000007,
              tree_to_toks,
              ['Who', is, 'your-least-favorite-character', ?]).
pllm:training(100070000008, string, "Without a doubt Jar Jar Binks.").
pllm:training(100070000008,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['PP', ['IN', 'Without'], ['NP', ['DT', a], ['NN', doubt]]],
                  ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                  ['.', '.']
                ]
              ]).
pllm:training(100070000008,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['IN', 'Without'],
                ['NP', ['DT', a], ['NN', doubt]],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['.', '.']
              ]).
pllm:training(100070000008, tree_to_toks, ['Without', 'a-doubt', 'Jar-Jar-Binks', '.']).
pllm:training(100080000009, string, "Oh man, same here.").
pllm:training(100080000009,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh'], ['UH', man]],
                [',', ','],
                ['NP', ['NP', ['JJ', same]], ['ADVP', ['RB', here]]],
                ['.', '.']
              ]).
pllm:training(100080000009,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh'], ['UH', man]],
                [',', ','],
                ['NP', ['JJ', same]],
                ['ADVP', ['RB', here]],
                ['.', '.']
              ]).
pllm:training(100080000009, tree_to_toks, ['Oh', man, ',', same, here, '.']).
pllm:training(100090000010, string, "Absolutely hate him.").
pllm:training(100090000010,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['ADVP', ['RB', 'Absolutely']], ['VP', ['VB', hate], ['NP', ['PRP', him]]], ['.', '.']]
              ]).
pllm:training(100090000010,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Absolutely']],
                ['VB', hate],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(100090000010, tree_to_toks, ['Absolutely', hate, him, '.']).
pllm:training(200010000012, string, "Who's you favorite Star Wars character?").
pllm:training(200010000012,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    ['NP', ['PRP', you]],
                    [ 'NP',
                      ['NP', ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NN', character]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(200010000012,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP', you]],
                ['NP', ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NN', character],
                ['.', ?]
              ]).
pllm:training(200010000012,
              tree_to_toks,
              ['Who', '\'s', you, 'favorite-Star-Wars', character, ?]).
pllm:training(200020000013, string, "Yoda, it is.").
pllm:training(200020000013,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['NNP', 'Yoda']], [',', ','], ['NP', ['PRP', it]], ['VP', ['VBZ', is]], ['.', '.']]
              ]).
pllm:training(200020000013,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(200020000013, tree_to_toks, ['Yoda', ',', it, is, '.']).
pllm:training(200030000014, string, "Don't you wish he was in the new movies?").
pllm:training(200030000014,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VB', 'Do'], ['RB', 'n\'t']]],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', new], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(200030000014,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VB', 'Do'],
                ['RB', 'n\'t'],
                ['NP', ['PRP', you]],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', new], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(200030000014,
              tree_to_toks,
              ['Do', 'n\'t', you, wish, he, was, in, 'the-new-movies', ?]).
pllm:training(200040000015, string, "Dead he is.").
pllm:training(200040000015,
              text_to_tree,
              ['CORENLP', ['S', ['ADVP', ['RB', 'Dead']], ['NP', ['PRP', he]], ['VP', ['VBZ', is]], ['.', '.']]]).
pllm:training(200040000015,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Dead']],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(200040000015, tree_to_toks, ['Dead', he, is, '.']).
pllm:training(200050000016, string, "Well, it's a movie. He could show up.").
pllm:training(200050000016,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['NN', movie]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['VP', ['MD', could], ['VP', ['VB', show], ['PRT', ['RP', up]]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(200050000016,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', movie]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['MD', could],
                ['VB', show],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(200050000016,
              tree_to_toks,
              ['Well', ',', it, '\'s', 'a-movie', '.', 'He', could, show, up, '.']).
pllm:training(200060000017, string, "Improbable that would be.").
pllm:training(200060000017,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADJP', ['JJ', 'Improbable']],
                  ['SBAR', ['NP', ['WDT', that]], ['S', ['VP', ['MD', would], ['VP', ['VB', be]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(200060000017,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADJP', ['JJ', 'Improbable']],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', would],
                ['VB', be],
                ['.', '.']
              ]).
pllm:training(200060000017, tree_to_toks, ['Improbable', that, would, be, '.']).
pllm:training(200070000018, string, "But Obi Wan was a ghost.").
pllm:training(200070000018,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['NNP', 'Obi'], ['NNP', 'Wan']],
                  ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', ghost]]],
                  ['.', '.']
                ]
              ]).
pllm:training(200070000018,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'Obi'], ['NNP', 'Wan']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', ghost]],
                ['.', '.']
              ]).
pllm:training(200070000018, tree_to_toks, ['But', 'Obi-Wan', was, 'a-ghost', '.']).
pllm:training(200080000019, string, "True that is.").
pllm:training(200080000019,
              text_to_tree,
              ['S', ['ADJP', ['JJ', 'True']], ['NP', ['DT', that]], ['VP', ['AUX', is]], ['.', '.']]).
pllm:training(200080000019,
              unphrasify,
              [mark('S'), ['ADJP', ['JJ', 'True']], ['NP', ['DT', that]], ['AUX', is], ['.', '.']]).
pllm:training(200080000019, tree_to_toks, ['True', that, is, '.']).
pllm:training(200090000020,
              string,
              "What about young Yoda? Like when he was in training?").
pllm:training(200090000020,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['NP', ['WP', 'What']],
                    ['PP', ['IN', about], ['NP', ['JJ', young], ['NNP', 'Yoda']]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'Like']],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['VBD', was], ['PP', ['IN', in], ['NP', ['NN', training]]]]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(200090000020,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['JJ', young], ['NNP', 'Yoda']],
                ['.', ?],
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Like']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['IN', in],
                ['NP', ['NN', training]],
                ['.', ?]
              ]).
pllm:training(200090000020,
              tree_to_toks,
              ['What', about, 'young-Yoda', ?, 'Like', when, he, was, in, training, ?]).
pllm:training(200100000021, string, "Yes, interesting that would be.").
pllm:training(200100000021,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'NP',
                    ['NP', ['JJ', interesting]],
                    ['SBAR', ['NP', ['WDT', that]], ['S', ['VP', ['MD', would], ['VP', ['VB', be]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(200100000021,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['JJ', interesting]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', would],
                ['VB', be],
                ['.', '.']
              ]).
pllm:training(200100000021, tree_to_toks, ['Yes', ',', interesting, that, would, be, '.']).
pllm:training(300010000023,
              string,
              "Okay, so what do you think was the worst part about the Phantom Menace?").
pllm:training(300010000023,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['INTJ', ['UH', 'Okay']],
                  [',', ','],
                  ['ADVP', ['RB', so]],
                  ['NP', ['WP', what]],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJS', worst], ['NN', part]],
                              [ 'PP',
                                ['IN', about],
                                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(300010000023,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['WP', what]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', the], ['JJS', worst], ['NN', part]],
                ['IN', about],
                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['.', ?]
              ]).
pllm:training(300010000023,
              tree_to_toks,
              [ 'Okay',
                (','),
                so,
                what,
                do,
                you,
                think,
                was,
                'the-worst-part',
                about,
                'the-Phantom-Menace',
                (?)
              ]).
pllm:training(300020000024,
              string,
              "Oh, man, just ONE worst part?  It's so hard to choose.. there's so many.").
pllm:training(300020000024,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['INTJ', ['UH', man]],
                    [',', ','],
                    ['PP', ['RB', just], ['NP', ['ADJP', ['CD', 'ONE'], ['JJS', worst]], ['NN', part]]],
                    ['.', ?]
                  ]
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['AUX', '\'s'],
                      [ 'ADJP',
                        ['RB', so],
                        ['JJ', hard],
                        ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', choose]]]]]
                      ]
                    ],
                    ['.', '.']
                  ],
                  [ 'SEQBAR',
                    ['CORENLP', ['FRAG', ['.', '.']]],
                    [ 'CORENLP',
                      [ 'S',
                        ['NP', ['EX', there]],
                        ['VP', ['VBZ', '\'s'], ['ADJP', ['RB', so], ['JJ', many]]],
                        ['.', '.']
                      ]
                    ]
                  ]
                ]
              ]).
pllm:training(300020000024,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['RB', just],
                ['NP', ['ADJP', ['CD', 'ONE'], ['JJS', worst]], ['NN', part]],
                ['.', ?],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', '\'s'],
                [ 'ADJP',
                  ['RB', so],
                  ['JJ', hard],
                  ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', choose]]]]]
                ],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', so], ['JJ', many]],
                ['.', '.']
              ]).
pllm:training(300020000024,
              tree_to_toks,
              [ 'Oh',
                (','),
                man,
                (','),
                just,
                'ONE-worst-part',
                (?),
                'It',
                '\'s',
                so,
                hard,
                to,
                choose,
                ('.'),
                ('.'),
                there,
                '\'s',
                so,
                many,
                ('.')
              ]).
pllm:training(300030000025,
              string,
              "I know, I know, but for me, it had to be the  Midi-chlorians.").
pllm:training(300030000025,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                  ['PRN', [',', ','], ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]], [',', ',']],
                  ['CC', but],
                  [ 'S',
                    ['PP', ['IN', for], ['NP', ['PRP', me]]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'NP',
                              ['NP', ['DT', the], ['NNP', 'Midi']],
                              ['PP', ['HYPH', -], ['NP', ['NNS', chlorians]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300030000025,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['IN', for],
                ['NP', ['PRP', me]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', the], ['NNP', 'Midi']],
                ['HYPH', -],
                ['NP', ['NNS', chlorians]],
                ['.', '.']
              ]).
pllm:training(300030000025,
              tree_to_toks,
              [ 'I',
                know,
                'PRN',
                (','),
                'I',
                know,
                (','),
                but,
                for,
                me,
                (','),
                it,
                had,
                to,
                be,
                'the-Midi',
                (-),
                chlorians,
                ('.')
              ]).
pllm:training(300040000026, string, "Oh, God, don't remind me of those.").
pllm:training(300040000026,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh']],
                  [',', ','],
                  ['INTJ', ['NNP', 'God']],
                  [',', ','],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', remind],
                      ['NP', ['PRP', me]],
                      ['PP', ['IN', of], ['NP', ['DT', those]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300040000026,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['NNP', 'God']],
                [',', ','],
                ['VB', do],
                ['RB', not],
                ['VB', remind],
                ['NP', ['PRP', me]],
                ['IN', of],
                ['NP', ['DT', those]],
                ['.', '.']
              ]).
pllm:training(300040000026,
              tree_to_toks,
              ['Oh', ',', 'God', ',', do, not, remind, me, of, those, '.']).
pllm:training(300050000027,
              string,
              "Yeah, i mean, first film it establishes the Force as some kind of a mystical life force like \"chi\" or something that binds the universe and then.").
pllm:training(300050000027,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', mean],
                    [',', ','],
                    [ 'S',
                      ['NP', ['JJ', first], ['NN', film]],
                      [ 'UCP',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', establishes],
                            [ 'NP',
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', 'Force']],
                                [ 'PP',
                                  ['IN', as],
                                  [ 'NP',
                                    ['NP', ['DT', some], ['NN', kind]],
                                    [ 'PP',
                                      ['IN', of],
                                      [ 'NP',
                                        [ 'NP',
                                          ['DT', a],
                                          ['JJ', mystical],
                                          ['NN', life],
                                          ['NN', force]
                                        ],
                                        [ 'PP',
                                          ['IN', like],
                                          [ 'NP',
                                            ['``', '"'],
                                            ['NN', chi],
                                            ['\'\'', '"'],
                                            ['CC', or],
                                            ['NN', something]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  ['VP', ['VBZ', binds], ['NP', ['DT', the], ['NN', universe]]]
                                ]
                              ]
                            ]
                          ]
                        ],
                        ['CC', and],
                        ['ADVP', ['RB', then]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300050000027,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', mean],
                [',', ','],
                mark('S'),
                ['NP', ['JJ', first], ['NN', film]],
                'UCP',
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', establishes],
                ['NP', ['DT', the], ['NN', 'Force']],
                ['IN', as],
                ['NP', ['DT', some], ['NN', kind]],
                ['IN', of],
                ['NP', ['DT', a], ['JJ', mystical], ['NN', life], ['NN', force]],
                ['IN', like],
                ['NP', ['``', '"'], ['NN', chi], ['\'\'', '"'], ['CC', or], ['NN', something]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', binds],
                ['NP', ['DT', the], ['NN', universe]],
                ['CC', and],
                ['ADVP', ['RB', then]],
                ['.', '.']
              ]).
pllm:training(300050000027,
              tree_to_toks,
              [ 'Yeah',
                (','),
                i,
                mean,
                (','),
                'first-film',
                'UCP',
                it,
                establishes,
                'the-Force',
                (as),
                'some-kind',
                of,
                'a-mystical-life-force',
                like,
                '"-chi-"-or-something',
                that,
                binds,
                'the-universe',
                and,
                then,
                ('.')
              ]).
pllm:training(300060000028,
              string,
              "And then it's all, \"No, it's actually just a bunch of microscopic bugs.\"").
pllm:training(300060000028,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['CC', 'And'],
                  ['ADVP', ['RB', then]],
                  ['NP', ['PRP', it]],
                  ['VP', ['AUX', '\'s'], ['NP', ['DT', all]]]
                ],
                [',', ','],
                [ 'S',
                  ['``', '``'],
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['ADVP', ['RB', actually]],
                    [ 'NP',
                      ['NP', ['RB', just], ['DT', a], ['NN', bunch]],
                      ['PP', ['IN', of], ['NP', ['JJ', microscopic], ['NNS', bugs]]]
                    ]
                  ],
                  ['.', '.'],
                  ['\'\'', '\'\'']
                ],
                ['.', '.']
              ]).
pllm:training(300060000028,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['NP', ['DT', all]],
                [',', ','],
                mark('S'),
                ['``', '``'],
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['ADVP', ['RB', actually]],
                ['NP', ['RB', just], ['DT', a], ['NN', bunch]],
                ['IN', of],
                ['NP', ['JJ', microscopic], ['NNS', bugs]],
                ['.', '.'],
                ['\'\'', '\'\''],
                ['.', '.']
              ]).
pllm:training(300060000028,
              tree_to_toks,
              [ 'And',
                then,
                it,
                '\'s',
                all,
                (','),
                '``',
                'No',
                (','),
                it,
                '\'s',
                actually,
                'just-a-bunch',
                of,
                'microscopic-bugs',
                ('.'),
                '\'\'',
                ('.')
              ]).
pllm:training(300070000029,
              string,
              "Exactly! I really don't know what Lucas was thinking on that.").
pllm:training(300070000029,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['NP', ['WP', what]],
                          [ 'S',
                            ['NP', ['NNP', 'Lucas']],
                            [ 'VP',
                              ['VBD', was],
                              ['VP', ['VBG', thinking], ['PP', ['IN', on], ['NP', ['DT', that]]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(300070000029,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBD', was],
                ['VBG', thinking],
                ['IN', on],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(300070000029,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'I',
                really,
                do,
                not,
                know,
                what,
                'Lucas',
                was,
                thinking,
                on,
                that,
                ('.')
              ]).
pllm:training(300080000030, string, "I hate to say it buuut...").
pllm:training(300080000030,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', hate],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', say], ['S', ['NP', ['PRP', it]], ['VP', ['VB', 'buuut.']], [',', ',']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', [',', ',']], ['.', '.']],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(300080000030,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hate],
                mark('S'),
                ['TO', to],
                ['VB', say],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VB', 'buuut.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(300080000030,
              tree_to_toks,
              ['I', hate, to, say, it, 'buuut.', ',', '.', ',', '.', 'FRAG', '.']).
pllm:training(300090000031, string, "Oh, go ahead.").
pllm:training(300090000031,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['INTJ', ['UH', 'Oh']], [',', ','], ['VP', ['VB', go], ['ADVP', ['RB', ahead]]], ['.', '.']]
              ]).
pllm:training(300090000031,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['VB', go],
                ['ADVP', ['RB', ahead]],
                ['.', '.']
              ]).
pllm:training(300090000031, tree_to_toks, ['Oh', ',', go, ahead, '.']).
pllm:training(300100000032,
              string,
              "I think he was just giving a giant middle finger to the audience.").
pllm:training(300100000032,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADVP', ['RB', just]],
                          [ 'VP',
                            ['VBG', giving],
                            ['NP', ['DT', a], ['JJ', giant], ['JJ', middle], ['NN', finger]],
                            ['PP', ['IN', to], ['NP', ['DT', the], ['NN', audience]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(300100000032,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                ['VBG', giving],
                ['NP', ['DT', a], ['JJ', giant], ['JJ', middle], ['NN', finger]],
                ['IN', to],
                ['NP', ['DT', the], ['NN', audience]],
                ['.', '.']
              ]).
pllm:training(300100000032,
              tree_to_toks,
              [ 'I',
                think,
                he,
                was,
                just,
                giving,
                'a-giant-middle-finger',
                to,
                'the-audience',
                ('.')
              ]).
pllm:training(400010000034, string, "who's your favorite star wars villain?").
pllm:training(400010000034,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', who]],
                [ 'S',
                  ['AUX', '\'s'],
                  ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                  ['VP', ['VBG', villain]]
                ],
                ['.', ?]
              ]).
pllm:training(400010000034,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['VBG', villain],
                ['.', ?]
              ]).
pllm:training(400010000034,
              tree_to_toks,
              [who, '\'s', 'your-favorite-star-wars', villain, ?]).
pllm:training(400020000035, string, "wow! tough choice").
pllm:training(400020000035,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', wow], ['.', '.']]],
                ['CORENLP', ['NP', ['JJ', tough], ['NN', choice], ['.', '.']]]
              ]).
pllm:training(400020000035,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', wow], ['.', '.']],
                mark('CORENLP'),
                ['NP', ['JJ', tough], ['NN', choice], ['.', '.']]
              ]).
pllm:training(400020000035, tree_to_toks, [wow, '.', 'tough-choice-.']).
pllm:training(400030000036, string, "you better not pick kylo").
pllm:training(400030000036,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RBR', better], ['RB', not]],
                  ['VP', ['VB', pick], ['NP', ['NN', kylo]]],
                  ['.', '.']
                ]
              ]).
pllm:training(400030000036,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RBR', better], ['RB', not]],
                ['VB', pick],
                ['NP', ['NN', kylo]],
                ['.', '.']
              ]).
pllm:training(400030000036, tree_to_toks, [you, better, not, pick, kylo, '.']).
pllm:training(400040000037, string, "who would pick kylo? definitely not me").
pllm:training(400040000037,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', who]],
                    ['S', ['VP', ['MD', would], ['VP', ['VB', pick], ['NP', ['NN', kylo]]]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  ['FRAG', ['ADVP', ['RB', definitely], ['RB', not]], ['NP', ['PRP', me]], ['.', '.']]
                ]
              ]).
pllm:training(400040000037,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['MD', would],
                ['VB', pick],
                ['NP', ['NN', kylo]],
                ['.', ?],
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', definitely], ['RB', not]],
                ['NP', ['PRP', me]],
                ['.', '.']
              ]).
pllm:training(400040000037,
              tree_to_toks,
              [who, would, pick, kylo, ?, definitely, not, me, '.']).
pllm:training(400050000038,
              string,
              "good. i knew there was a reason i keep you around").
pllm:training(400050000038,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['ADJP', ['JJ', good], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VBD', knew],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', reason]],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', i]],
                                  [ 'VP',
                                    ['VB', keep],
                                    ['NP', ['PRP', you]],
                                    ['ADVP', ['RB', around]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(400050000038,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['ADJP', ['JJ', good], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VBD', knew],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', reason]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', keep],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', around]],
                ['.', '.']
              ]).
pllm:training(400050000038,
              tree_to_toks,
              [good, '.', i, knew, there, was, 'a-reason', i, keep, you, around, '.']).
pllm:training(400060000039, string, "because you have good taste?").
pllm:training(400060000039,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['IN', because],
                  ['S', ['NP', ['PRP', you]], ['VP', ['AUX', have], ['NP', ['JJ', good], ['NN', taste]]]]
                ],
                ['.', ?]
              ]).
pllm:training(400060000039,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', you]],
                ['AUX', have],
                ['NP', ['JJ', good], ['NN', taste]],
                ['.', ?]
              ]).
pllm:training(400060000039, tree_to_toks, [because, you, have, 'good-taste', ?]).
pllm:training(400070000040, string, "let's get back to your taste.").
pllm:training(400070000040,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VB', let],
                    [ 'S',
                      ['NP', ['PRP', '\'s']],
                      [ 'VP',
                        ['VB', get],
                        ['ADVP', ['RB', back]],
                        ['PP', ['IN', to], ['NP', ['PRP$', your], ['NN', taste]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(400070000040,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', let],
                mark('S'),
                ['NP', ['PRP', '\'s']],
                ['VB', get],
                ['ADVP', ['RB', back]],
                ['IN', to],
                ['NP', ['PRP$', your], ['NN', taste]],
                ['.', '.']
              ]).
pllm:training(400070000040, tree_to_toks, [let, '\'s', get, back, to, 'your-taste', '.']).
pllm:training(400080000041, string, "okay okay. i guess my favorite is darth").
pllm:training(400080000041,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['INTJ', ['UH', okay]], ['INTJ', ['UH', okay]], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP$', my], ['NN', favorite]],
                        ['VP', ['AUX', is], ['NP', ['NNP', darth]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(400080000041,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', okay]],
                ['INTJ', ['UH', okay]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['AUX', is],
                ['NP', ['NNP', darth]],
                ['.', '.']
              ]).
pllm:training(400080000041,
              tree_to_toks,
              [okay, okay, '.', i, guess, 'my-favorite', is, darth, '.']).
pllm:training(400090000042, string, "cliche, but a good enough choice").
pllm:training(400090000042,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NN', cliche]],
                  [',', ','],
                  ['CC', but],
                  ['NP', ['DT', a], ['ADJP', ['JJ', good], ['JJ', enough]], ['NN', choice]],
                  ['.', '.']
                ]
              ]).
pllm:training(400090000042,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NN', cliche]],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', a], ['ADJP', ['JJ', good], ['JJ', enough]], ['NN', choice]],
                ['.', '.']
              ]).
pllm:training(400090000042, tree_to_toks, [cliche, ',', but, 'a-good-enough-choice', '.']).
pllm:training(400100000043, string, "he's classic!").
pllm:training(400100000043,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', classic]]], ['.', '.']]
              ]).
pllm:training(400100000043,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', classic]],
                ['.', '.']
              ]).
pllm:training(400100000043, tree_to_toks, [he, '\'s', classic, '.']).
pllm:training(500010000045, string, "Who is your favorite evil guy in Star Wars?").
pllm:training(500010000045,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', evil], ['NN', guy]],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(500010000045,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', evil], ['NN', guy]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(500010000045,
              tree_to_toks,
              ['Who', is, 'your-favorite-evil-guy', in, 'Star-Wars', ?]).
pllm:training(500020000046,
              string,
              "Obviously Darth Vader is the best and the original bad guy of Star Wars.").
pllm:training(500020000046,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Obviously']],
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJS', best]],
                      ['CC', and],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', original], ['JJ', bad], ['NN', guy]],
                        ['PP', ['IN', of], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500020000046,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Obviously']],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBZ', is],
                ['NP', ['DT', the], ['JJS', best]],
                ['CC', and],
                ['NP', ['DT', the], ['JJ', original], ['JJ', bad], ['NN', guy]],
                ['IN', of],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.']
              ]).
pllm:training(500020000046,
              tree_to_toks,
              [ 'Obviously',
                'Darth-Vader',
                (is),
                'the-best',
                and,
                'the-original-bad-guy',
                of,
                'Star-Wars',
                ('.')
              ]).
pllm:training(500030000047,
              string,
              "Yeah but did you know that he was supposed to be killed off in the first movie?").
pllm:training(500030000047,
              text_to_tree,
              [ 'SBAR',
                ['INTJ', ['INTJ', ['UH', 'Yeah']], ['CC', but]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['AUX', was],
                          [ 'VP',
                            ['VBN', supposed],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['AUX', be],
                                  [ 'VP',
                                    ['VBN', killed],
                                    ['PRT', ['RP', off]],
                                    [ 'PP',
                                      ['IN', in],
                                      ['NP', ['DT', the], ['JJ', first], ['NN', movie]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(500030000047,
              unphrasify,
              [ mark('SBAR'),
                ['INTJ', ['INTJ', ['UH', 'Yeah']], ['CC', but]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['VBN', supposed],
                mark('S'),
                ['TO', to],
                ['AUX', be],
                ['VBN', killed],
                ['PRT', ['RP', off]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(500030000047,
              tree_to_toks,
              [ 'Yeah',
                but,
                did,
                you,
                know,
                that,
                he,
                was,
                supposed,
                to,
                be,
                killed,
                off,
                in,
                'the-first-movie',
                (?)
              ]).
pllm:training(500040000048,
              string,
              "I can't imagine the movies without him. His voice and costume is so iconic.").
pllm:training(500040000048,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', can],
                      ['RB', not],
                      [ 'VP',
                        ['VB', imagine],
                        ['NP', ['DT', the], ['NNS', movies]],
                        ['PP', ['IN', without], ['NP', ['PRP', him]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', voice], ['CC', and], ['NN', costume]],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', so], ['JJ', iconic]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500040000048,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', imagine],
                ['NP', ['DT', the], ['NNS', movies]],
                ['IN', without],
                ['NP', ['PRP', him]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', voice], ['CC', and], ['NN', costume]],
                ['VBZ', is],
                ['ADJP', ['RB', so], ['JJ', iconic]],
                ['.', '.']
              ]).
pllm:training(500040000048,
              tree_to_toks,
              [ 'I',
                can,
                not,
                imagine,
                'the-movies',
                without,
                him,
                ('.'),
                'His-voice-and-costume',
                (is),
                so,
                iconic,
                ('.')
              ]).
pllm:training(500050000049,
              string,
              "Yeah but he is only on screen for like 12 minutes in the first movie, even though he is pretty much a main character.").
pllm:training(500050000049,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['CC', but],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', only]],
                    [ 'PP',
                      ['IN', on],
                      [ 'NP',
                        ['NP', ['NN', screen]],
                        [ 'PP',
                          ['IN', for],
                          ['INTJ', ['UH', like]],
                          [ 'NP',
                            ['NP', ['CD', '12'], ['NNS', minutes]],
                            ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['NN', movie]]]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'SBAR',
                      ['RB', even],
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBZ', is],
                          ['ADVP', ['RB', pretty], ['RB', much]],
                          ['NP', ['DT', a], ['JJ', main], ['NN', character]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500050000049,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['CC', but],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADVP', ['RB', only]],
                ['IN', on],
                ['NP', ['NN', screen]],
                ['IN', for],
                ['INTJ', ['UH', like]],
                ['NP', ['CD', '12'], ['NNS', minutes]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                [',', ','],
                mark('SBAR'),
                ['RB', even],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADVP', ['RB', pretty], ['RB', much]],
                ['NP', ['DT', a], ['JJ', main], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(500050000049,
              tree_to_toks,
              [ 'Yeah',
                but,
                he,
                (is),
                only,
                on,
                screen,
                for,
                like,
                '12-minutes',
                in,
                'the-first-movie',
                (','),
                even,
                though,
                he,
                (is),
                pretty,
                much,
                'a-main-character',
                ('.')
              ]).
pllm:training(500060000050,
              string,
              "I just learned that they guy doing the voice isn't the same guy that is actually doing the acting.").
pllm:training(500060000050,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VBD', learned],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        [ 'NP',
                          ['NP', ['NP', ['PRP', they]], ['RB', guy]],
                          ['VP', ['VBG', doing], ['NP', ['DT', the], ['NN', voice]]]
                        ],
                        [ 'VP',
                          ['VBZ', is],
                          ['RB', not],
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', same], ['NN', guy]],
                            [ 'SBAR',
                              ['NP', ['WDT', that]],
                              [ 'S',
                                [ 'VP',
                                  ['VBZ', is],
                                  ['ADVP', ['RB', actually]],
                                  ['VP', ['VBG', doing], ['NP', ['DT', the], ['NN', acting]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500060000050,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', learned],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['RB', guy],
                ['VBG', doing],
                ['NP', ['DT', the], ['NN', voice]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', the], ['JJ', same], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', is],
                ['ADVP', ['RB', actually]],
                ['VBG', doing],
                ['NP', ['DT', the], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(500060000050,
              tree_to_toks,
              [ 'I',
                just,
                learned,
                that,
                they,
                guy,
                doing,
                'the-voice',
                (is),
                not,
                'the-same-guy',
                that,
                (is),
                actually,
                doing,
                'the-acting',
                ('.')
              ]).
pllm:training(500070000051,
              string,
              "James Earl Jones does the voice, even though he isn't listed in the credits. David Prowse did the acting.").
pllm:training(500070000051,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                    [ 'VP',
                      ['VBZ', does],
                      ['NP', ['DT', the], ['NN', voice]],
                      [',', ','],
                      [ 'SBAR',
                        ['RB', even],
                        ['IN', though],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', is],
                            ['RB', not],
                            [ 'VP',
                              ['VBN', listed],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', credits]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                    ['VP', ['VBD', did], ['NP', ['DT', the], ['NN', acting]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500070000051,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                ['VBZ', does],
                ['NP', ['DT', the], ['NN', voice]],
                [',', ','],
                mark('SBAR'),
                ['RB', even],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['VBN', listed],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', credits]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                ['VBD', did],
                ['NP', ['DT', the], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(500070000051,
              tree_to_toks,
              [ 'James-Earl-Jones',
                does,
                'the-voice',
                (','),
                even,
                though,
                he,
                (is),
                not,
                listed,
                in,
                'the-credits',
                ('.'),
                'David-Prowse',
                did,
                'the-acting',
                ('.')
              ]).
pllm:training(500080000052,
              string,
              "His voice was perfect for that role!  He also did Mufasa in the Lion King.").
pllm:training(500080000052,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', voice]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'ADJP',
                        ['JJ', perfect],
                        ['PP', ['IN', for], ['NP', ['DT', that], ['NN', role]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['ADVP', ['RB', also]],
                    [ 'VP',
                      ['VBD', did],
                      ['NP', ['NNP', 'Mufasa']],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NNP', 'Lion'], ['NNP', 'King']]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(500080000052,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', voice]],
                ['VBD', was],
                'ADJP',
                ['JJ', perfect],
                ['IN', for],
                ['NP', ['DT', that], ['NN', role]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', also]],
                ['VBD', did],
                ['NP', ['NNP', 'Mufasa']],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Lion'], ['NNP', 'King']],
                ['.', '.']
              ]).
pllm:training(500080000052,
              tree_to_toks,
              [ 'His-voice',
                was,
                'ADJP',
                perfect,
                for,
                'that-role',
                ('.'),
                'He',
                also,
                did,
                'Mufasa',
                in,
                'the-Lion-King',
                ('.')
              ]).
pllm:training(500090000053,
              string,
              "Even though they played the same character, David and Earl never actually met eachother.").
pllm:training(500090000053,
              text_to_tree,
              [ 'S',
                [ 'SBAR',
                  ['RB', 'Even'],
                  ['IN', though],
                  [ 'S',
                    ['NP', ['PRP', they]],
                    ['VP', ['VBD', played], ['NP', ['DT', the], ['JJ', same], ['NN', character]]]
                  ]
                ],
                [',', ','],
                ['NP', ['NNP', 'David'], ['CC', and], ['NNP', 'Earl']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', actually]],
                ['VP', ['VBD', met], ['NP', ['NN', eachother]]],
                ['.', '.']
              ]).
pllm:training(500090000053,
              unphrasify,
              [ mark('S'),
                mark('SBAR'),
                ['RB', 'Even'],
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', played],
                ['NP', ['DT', the], ['JJ', same], ['NN', character]],
                [',', ','],
                ['NP', ['NNP', 'David'], ['CC', and], ['NNP', 'Earl']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', actually]],
                ['VBD', met],
                ['NP', ['NN', eachother]],
                ['.', '.']
              ]).
pllm:training(500090000053,
              tree_to_toks,
              [ 'Even',
                though,
                they,
                played,
                'the-same-character',
                (','),
                'David-and-Earl',
                never,
                actually,
                met,
                eachother,
                ('.')
              ]).
pllm:training(500100000054,
              string,
              "That would be so weird to be playing the same person but never meet the other half.").
pllm:training(500100000054,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      [ 'ADJP',
                        ['RB', so],
                        ['JJ', weird],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              [ 'VP',
                                ['VB', be],
                                [ 'VP',
                                  ['VBG', playing],
                                  ['NP', ['DT', the], ['JJ', same], ['NN', person]]
                                ]
                              ],
                              ['CC', but],
                              ['ADVP', ['RB', never]],
                              [ 'VP',
                                ['VB', meet],
                                ['NP', ['DT', the], ['JJ', other], ['NN', half]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(500100000054,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', be],
                'ADJP',
                ['RB', so],
                ['JJ', weird],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['VBG', playing],
                ['NP', ['DT', the], ['JJ', same], ['NN', person]],
                ['CC', but],
                ['ADVP', ['RB', never]],
                ['VB', meet],
                ['NP', ['DT', the], ['JJ', other], ['NN', half]],
                ['.', '.']
              ]).
pllm:training(500100000054,
              tree_to_toks,
              [ 'That',
                would,
                be,
                'ADJP',
                so,
                weird,
                to,
                be,
                playing,
                'the-same-person',
                but,
                never,
                meet,
                'the-other-half',
                ('.')
              ]).
pllm:training(600010000056, string, "So, I watched the Force Awakens, I am lost.").
pllm:training(600010000056,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [ 'PRN',
                    [',', ','],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', watched],
                        ['NP', ['DT', the], ['NNP', 'Force'], ['NNP', 'Awakens']]
                      ]
                    ],
                    [',', ',']
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['VP', ['VBN', lost]]],
                  ['.', '.']
                ]
              ]).
pllm:training(600010000056,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NNP', 'Awakens']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['VBN', lost],
                ['.', '.']
              ]).
pllm:training(600010000056,
              tree_to_toks,
              ['So', 'PRN', ',', 'I', watched, 'the-Force-Awakens', ',', 'I', am, lost, '.']).
pllm:training(600020000057, string, "By what? Good film.").
pllm:training(600020000057,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['WHPP', ['IN', 'By'], ['NP', ['WP', what]]], ['.', ?]]],
                ['CORENLP', ['NP', ['JJ', 'Good'], ['NN', film], ['.', '.']]]
              ]).
pllm:training(600020000057,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                'WHPP',
                ['IN', 'By'],
                ['NP', ['WP', what]],
                ['.', ?],
                mark('CORENLP'),
                ['NP', ['JJ', 'Good'], ['NN', film], ['.', '.']]
              ]).
pllm:training(600020000057, tree_to_toks, ['WHPP', 'By', what, ?, 'Good-film-.']).
pllm:training(600030000058,
              string,
              "I liked it, but was the force sleeping before?").
pllm:training(600030000058,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]],
                    [',', ','],
                    ['CC', but],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', force]],
                        ['VP', ['VBG', sleeping], ['PP', ['IN', before]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(600030000058,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                [',', ','],
                ['CC', but],
                ['VBD', was],
                ['NP', ['DT', the], ['NN', force]],
                ['VBG', sleeping],
                ['IN', before],
                ['.', ?]
              ]).
pllm:training(600030000058,
              tree_to_toks,
              ['I', liked, it, ',', but, was, 'the-force', sleeping, before, ?]).
pllm:training(600040000059,
              string,
              "No, it just means that a new Jedi had emerged.").
pllm:training(600040000059,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VBZ', means],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['DT', a], ['JJ', new], ['NNP', 'Jedi']],
                        ['VP', ['VBD', had], ['VP', ['VBN', emerged]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600040000059,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', just]],
                ['VBZ', means],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', a], ['JJ', new], ['NNP', 'Jedi']],
                ['VBD', had],
                ['VBN', emerged],
                ['.', '.']
              ]).
pllm:training(600040000059,
              tree_to_toks,
              ['No', ',', it, just, means, that, 'a-new-Jedi', had, emerged, '.']).
pllm:training(600050000060,
              string,
              "Well, if it is Rey, then why did it not wake when Klyo came into power.").
pllm:training(600050000060,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                [ 'SBAR',
                  ['IN', if],
                  [ 'S',
                    ['S', ['NP', ['PRP', it]], ['VP', ['AUX', is], ['NP', ['NNP', 'Rey']]]],
                    [',', ','],
                    ['RB', then],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', why]],
                      [ 'S',
                        ['AUX', did],
                        ['NP', ['PRP', it]],
                        ['RB', not],
                        [ 'VP',
                          ['VB', wake],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', when]],
                            [ 'S',
                              ['NP', ['NNP', 'Klyo']],
                              ['VP', ['VBD', came], ['PP', ['IN', into], ['NP', ['NN', power]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(600050000060,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', is],
                ['NP', ['NNP', 'Rey']],
                [',', ','],
                ['RB', then],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', it]],
                ['RB', not],
                ['VB', wake],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Klyo']],
                ['VBD', came],
                ['IN', into],
                ['NP', ['NN', power]],
                ['.', '.']
              ]).
pllm:training(600050000060,
              tree_to_toks,
              [ 'Well',
                (','),
                if,
                it,
                (is),
                'Rey',
                (','),
                then,
                why,
                did,
                it,
                not,
                wake,
                when,
                'Klyo',
                came,
                into,
                power,
                ('.')
              ]).
pllm:training(600060000061,
              string,
              "Klyo went to the dark side, he is not a Jedi.").
pllm:training(600060000061,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['NNP', 'Klyo']],
                    [ 'VP',
                      ['VBD', went],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', is], ['RB', not], ['NP', ['DT', a], ['NNP', 'Jedi']]],
                  ['.', '.']
                ]
              ]).
pllm:training(600060000061,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Klyo']],
                ['VBD', went],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(600060000061,
              tree_to_toks,
              ['Klyo', went, to, 'the-dark-side', ',', he, is, not, 'a-Jedi', '.']).
pllm:training(600070000062,
              string,
              "If he is not a Jedi, why was he at Jedi school.").
pllm:training(600070000062,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'SBAR',
                    ['IN', 'If'],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBZ', is], ['RB', not], ['NP', ['DT', a], ['NNP', 'Jedi']]]
                    ]
                  ],
                  [',', ','],
                  ['WHADVP', ['WRB', why]],
                  [ 'S',
                    ['VBD', was],
                    ['NP', ['PRP', he]],
                    ['PP', ['IN', at], ['NP', ['NNP', 'Jedi'], ['NN', school]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600070000062,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                [',', ','],
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP', he]],
                ['IN', at],
                ['NP', ['NNP', 'Jedi'], ['NN', school]],
                ['.', '.']
              ]).
pllm:training(600070000062,
              tree_to_toks,
              ['If', he, is, not, 'a-Jedi', ',', why, was, he, at, 'Jedi-school', '.']).
pllm:training(600080000063,
              string,
              "He was Luke's Padwan, but he turned. It has not been shown why. He is no longer Jedi, he is sith now.").
pllm:training(600080000063,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'He']],
                      [ 'VP',
                        ['VBD', was],
                        ['NP', ['NP', ['NNP', 'Luke'], ['POS', '\'s']], ['NNP', 'Padwan']]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    ['S', ['NP', ['PRP', he]], ['VP', ['VBD', turned]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['AUX', has],
                      ['RB', not],
                      [ 'VP',
                        ['AUX', been],
                        ['VP', ['VBN', shown], ['FRAG', ['WHADVP', ['WRB', why]]]]
                      ]
                    ],
                    ['.', '.']
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'S',
                        ['NP', ['PRP', 'He']],
                        [ 'VP',
                          ['VBZ', is],
                          ['ADVP', ['RB', no], ['RBR', longer]],
                          ['NP', ['NNP', 'Jedi']]
                        ]
                      ],
                      [',', ','],
                      ['NP', ['PRP', he]],
                      ['VP', ['VBZ', is], ['ADJP', ['JJ', sith]], ['ADVP', ['RB', now]]],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(600080000063,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['NP', ['NNP', 'Luke'], ['POS', '\'s']],
                ['NNP', 'Padwan'],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', turned],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', has],
                ['RB', not],
                ['AUX', been],
                ['VBN', shown],
                mark('FRAG'),
                ['WHADVP', ['WRB', why]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['ADVP', ['RB', no], ['RBR', longer]],
                ['NP', ['NNP', 'Jedi']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADJP', ['JJ', sith]],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(600080000063,
              tree_to_toks,
              [ 'He',
                was,
                'Luke-\'s',
                'Padwan',
                (','),
                but,
                he,
                turned,
                ('.'),
                'It',
                has,
                not,
                been,
                shown,
                why,
                ('.'),
                'He',
                (is),
                no,
                longer,
                'Jedi',
                (','),
                he,
                (is),
                sith,
                now,
                ('.')
              ]).
pllm:training(600090000064, string, "Wait, I thought sith was a race.").
pllm:training(600090000064,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VB', 'Wait']]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['S', ['NP', ['NN', sith]], ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', race]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(600090000064,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VB', 'Wait'],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NN', sith]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', race]],
                ['.', '.']
              ]).
pllm:training(600090000064, tree_to_toks, ['Wait', ',', 'I', thought, sith, was, 'a-race', '.']).
pllm:training(600100000065,
              string,
              "No, Vader was human, well pretty much, but went from Jedi to Sith. Like Yoda is whatever he is, but is also a Jedi.").
pllm:training(600100000065,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['NNP', 'Vader']],
                    [ 'VP',
                      [ 'VP',
                        ['VBD', was],
                        [ 'ADJP',
                          ['ADJP', ['JJ', human]],
                          [',', ','],
                          ['RB', well],
                          ['ADJP', ['RB', pretty], ['RB', much]]
                        ]
                      ],
                      [',', ','],
                      ['CC', but],
                      [ 'VP',
                        ['VBD', went],
                        ['PP', ['IN', from], ['NP', ['NNP', 'Jedi']]],
                        ['PP', ['IN', to], ['NP', ['NNP', 'Sith']]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['PP', ['IN', 'Like'], ['NP', ['NNP', 'Yoda']]],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'SBAR',
                        ['NP', ['WDT', whatever]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VP', ['VBZ', is]],
                            [',', ','],
                            ['CC', but],
                            [ 'VP',
                              ['VBZ', is],
                              ['ADVP', ['RB', also]],
                              ['NP', ['DT', a], ['NNP', 'Jedi']]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(600100000065,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['NNP', 'Vader']],
                ['VBD', was],
                [ 'ADJP',
                  ['ADJP', ['JJ', human]],
                  [',', ','],
                  ['RB', well],
                  ['ADJP', ['RB', pretty], ['RB', much]]
                ],
                [',', ','],
                ['CC', but],
                ['VBD', went],
                ['IN', from],
                ['NP', ['NNP', 'Jedi']],
                ['IN', to],
                ['NP', ['NNP', 'Sith']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['IN', 'Like'],
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', is],
                mark('SBAR'),
                ['NP', ['WDT', whatever]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                [',', ','],
                ['CC', but],
                ['VBZ', is],
                ['ADVP', ['RB', also]],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(600100000065,
              tree_to_toks,
              [ 'No',
                (','),
                'Vader',
                was,
                human,
                (','),
                well,
                pretty,
                much,
                (','),
                but,
                went,
                from,
                'Jedi',
                to,
                'Sith',
                ('.'),
                'Like',
                'Yoda',
                (is),
                whatever,
                he,
                (is),
                (','),
                but,
                (is),
                also,
                'a-Jedi',
                ('.')
              ]).
pllm:training(700010000067, string, "What is your favorite star wars movie?").
pllm:training(700010000067,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                      ['NP', ['NN', movie]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(700010000067,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['NP', ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(700010000067,
              tree_to_toks,
              ['What', is, 'your-favorite-star-wars', movie, ?]).
pllm:training(700020000068, string, "Star Wars: The Force Awakens").
pllm:training(700020000068,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  [:, :],
                  ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                  ['.', '.']
                ]
              ]).
pllm:training(700020000068,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [:, :],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.']
              ]).
pllm:training(700020000068, tree_to_toks, ['Star-Wars', :, 'The-Force-Awakens', '.']).
pllm:training(700030000069, string, "Why do you like this one the most?").
pllm:training(700030000069,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'Why']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', like],
                    ['NP', ['DT', this], ['NN', one]],
                    ['NP', ['DT', the], ['JJS', most]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(700030000069,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', this], ['NN', one]],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(700030000069, tree_to_toks, ['Why', do, you, like, 'this-one', 'the-most', ?]).
pllm:training(700040000070, string, "This movie had the most action.").
pllm:training(700040000070,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'This'], ['NN', movie]],
                  [ 'VP',
                    ['VBD', had],
                    ['NP', ['NP', ['DT', the], ['RBS', most]], ['NP', ['NN', action]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700040000070,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'This'], ['NN', movie]],
                ['VBD', had],
                ['NP', ['DT', the], ['RBS', most]],
                ['NP', ['NN', action]],
                ['.', '.']
              ]).
pllm:training(700040000070, tree_to_toks, ['This-movie', had, 'the-most', action, '.']).
pllm:training(700050000071, string, "Yes, this one was great.").
pllm:training(700050000071,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['DT', this], ['NN', one]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', great]]],
                  ['.', '.']
                ]
              ]).
pllm:training(700050000071,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['DT', this], ['NN', one]],
                ['VBD', was],
                ['ADJP', ['JJ', great]],
                ['.', '.']
              ]).
pllm:training(700050000071, tree_to_toks, ['Yes', ',', 'this-one', was, great, '.']).
pllm:training(700060000072, string, "What about you?").
pllm:training(700060000072,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', you]]], ['.', ?]]
              ]).
pllm:training(700060000072,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(700060000072, tree_to_toks, ['What', about, you, ?]).
pllm:training(700070000073,
              string,
              "I really liked the last star wars movie. It started slow but I really liked it.").
pllm:training(700070000073,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VBD', liked],
                      [ 'NP',
                        ['DT', the],
                        ['JJ', last],
                        ['NML', ['NN', star], ['NNS', wars]],
                        ['NN', movie]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'It']], ['VP', ['VBD', started], ['ADJP', ['JJ', slow]]]],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', really]],
                      ['VP', ['VBD', liked], ['NP', ['PRP', it]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(700070000073,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', last], ['NML', ['NN', star], ['NNS', wars]], ['NN', movie]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', started],
                ['ADJP', ['JJ', slow]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700070000073,
              tree_to_toks,
              [ 'I',
                really,
                liked,
                'the-last-star-wars-movie',
                ('.'),
                'It',
                started,
                slow,
                but,
                'I',
                really,
                liked,
                it,
                ('.')
              ]).
pllm:training(700080000074,
              string,
              "I haven't seen that one yet, what did you like about it.").
pllm:training(700080000074,
              text_to_tree,
              [ 'SBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', have],
                    ['RB', 'n\'t'],
                    ['VP', ['VBN', seen], ['NP', ['DT', that], ['CD', one]], ['ADVP', ['RB', yet]]]
                  ]
                ],
                [',', ','],
                ['NP', ['WP', what]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                ],
                ['.', '.']
              ]).
pllm:training(700080000074,
              unphrasify,
              [ mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', have],
                ['RB', 'n\'t'],
                ['VBN', seen],
                ['NP', ['DT', that], ['CD', one]],
                ['ADVP', ['RB', yet]],
                [',', ','],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700080000074,
              tree_to_toks,
              ['I', have, 'n\'t', seen, 'that-one', yet, ',', what, did, you, like, about, it, '.']).
pllm:training(700090000075,
              string,
              "I like how they tied all the loose ends together from the previous movie.").
pllm:training(700090000075,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', tied],
                          ['NP', ['PDT', all], ['DT', the], ['JJ', loose], ['NNS', ends]],
                          ['ADVP', ['RB', together]],
                          [ 'PP',
                            ['IN', from],
                            ['NP', ['DT', the], ['JJ', previous], ['NN', movie]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700090000075,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', tied],
                ['NP', ['PDT', all], ['DT', the], ['JJ', loose], ['NNS', ends]],
                ['ADVP', ['RB', together]],
                ['IN', from],
                ['NP', ['DT', the], ['JJ', previous], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(700090000075,
              tree_to_toks,
              [ 'I',
                like,
                how,
                they,
                tied,
                'all-the-loose-ends',
                together,
                from,
                'the-previous-movie',
                ('.')
              ]).
pllm:training(700100000076, string, "Sounds great, I can't wait until I see it.").
pllm:training(700100000076,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VBZ', 'Sounds'], ['ADJP', ['JJ', great]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    ['RB', not],
                    [ 'VP',
                      ['VB', wait],
                      [ 'SBAR',
                        ['IN', until],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', see], ['NP', ['PRP', it]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(700100000076,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Sounds'],
                ['ADJP', ['JJ', great]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', wait],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', see],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(700100000076,
              tree_to_toks,
              ['Sounds', great, ',', 'I', can, not, wait, until, 'I', see, it, '.']).
pllm:training(800010000078, string, "How come you never see Leia use the force?").
pllm:training(800010000078,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'How']],
                [ 'S',
                  ['VP', ['VB', come]],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', never]],
                  [ 'VP',
                    ['VB', see],
                    ['S', ['NP', ['NNP', 'Leia']], ['VP', ['VB', use], ['NP', ['DT', the], ['NN', force]]]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(800010000078,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', come],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', never]],
                ['VB', see],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['.', ?]
              ]).
pllm:training(800010000078,
              tree_to_toks,
              ['How', come, you, never, see, 'Leia', use, 'the-force', ?]).
pllm:training(800020000079,
              string,
              "Yeah, i've always wondered that. I mean her brother and father were both powerful force users, and yet she never uses it.").
pllm:training(800020000079,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VB', '\'ve'],
                      ['ADVP', ['RB', always]],
                      ['VP', ['VBN', wondered], ['NP', ['DT', that]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', mean],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP$', her], ['NN', brother], ['CC', and], ['NN', father]],
                            [ 'VP',
                              ['VBD', were],
                              ['RB', both],
                              ['NP', ['JJ', powerful], ['NN', force], ['NNS', users]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['ADVP', ['RB', yet]],
                      ['NP', ['PRP', she]],
                      ['ADVP', ['RB', never]],
                      ['VP', ['VBZ', uses], ['NP', ['PRP', it]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800020000079,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', '\'ve'],
                ['ADVP', ['RB', always]],
                ['VBN', wondered],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', her], ['NN', brother], ['CC', and], ['NN', father]],
                ['VBD', were],
                ['RB', both],
                ['NP', ['JJ', powerful], ['NN', force], ['NNS', users]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['ADVP', ['RB', yet]],
                ['NP', ['PRP', she]],
                ['ADVP', ['RB', never]],
                ['VBZ', uses],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(800020000079,
              tree_to_toks,
              [ 'Yeah',
                (','),
                i,
                '\'ve',
                always,
                wondered,
                that,
                ('.'),
                'I',
                mean,
                'her-brother-and-father',
                were,
                both,
                'powerful-force-users',
                (','),
                and,
                yet,
                she,
                never,
                uses,
                it,
                ('.')
              ]).
pllm:training(800030000080,
              string,
              "I thought I read that she has the power to use the force but just chooses not to.").
pllm:training(800030000080,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', thought],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', read],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              [ 'VP',
                                ['AUX', has],
                                [ 'NP',
                                  ['DT', the],
                                  ['NN', power],
                                  [ 'S',
                                    [ 'VP',
                                      ['TO', to],
                                      ['VP', ['VB', use], ['NP', ['DT', the], ['NN', force]]]
                                    ]
                                  ]
                                ]
                              ],
                              ['CC', but],
                              ['ADVP', ['RB', just]],
                              ['VP', ['VBZ', chooses], ['S', ['RB', not], ['VP', ['TO', to]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(800030000080,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', read],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', has],
                ['DT', the],
                ['NN', power],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['CC', but],
                ['ADVP', ['RB', just]],
                ['VBZ', chooses],
                mark('S'),
                ['RB', not],
                ['TO', to],
                ['.', '.']
              ]).
pllm:training(800030000080,
              tree_to_toks,
              [ 'I',
                thought,
                'I',
                read,
                that,
                she,
                has,
                the,
                power,
                to,
                use,
                'the-force',
                but,
                just,
                chooses,
                not,
                to,
                ('.')
              ]).
pllm:training(800040000081,
              string,
              "Hmm, that makes sense, but still I don't fully understand why she doesn't. It probably could have helped in the war against the Empire.").
pllm:training(800040000081,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'S',
                    ['NP', ['NNP', 'Hmm']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    ['VP', ['VBZ', makes], ['NP', ['NN', sense]]]
                  ],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['ADVP', ['RB', still]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['AUX', do],
                      ['RB', not],
                      [ 'VP',
                        ['ADVP', ['RB', fully]],
                        ['VB', understand],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', why]],
                          ['S', ['NP', ['PRP', she]], ['VP', ['AUX', does], ['RB', not]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    ['ADVP', ['RB', probably]],
                    [ 'VP',
                      ['MD', could],
                      [ 'VP',
                        ['VB', have],
                        [ 'VP',
                          ['VBN', helped],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NP', ['DT', the], ['NN', war]],
                              ['PP', ['IN', against], ['NP', ['DT', the], ['NN', 'Empire']]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800040000081,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Hmm']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', makes],
                ['NP', ['NN', sense]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['ADVP', ['RB', still]],
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['ADVP', ['RB', fully]],
                ['VB', understand],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', does],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', probably]],
                ['MD', could],
                ['VB', have],
                ['VBN', helped],
                ['IN', in],
                ['NP', ['DT', the], ['NN', war]],
                ['IN', against],
                ['NP', ['DT', the], ['NN', 'Empire']],
                ['.', '.']
              ]).
pllm:training(800040000081,
              tree_to_toks,
              [ 'Hmm',
                (','),
                that,
                makes,
                sense,
                (','),
                but,
                still,
                'I',
                do,
                not,
                fully,
                understand,
                why,
                she,
                does,
                not,
                ('.'),
                'It',
                probably,
                could,
                have,
                helped,
                in,
                'the-war',
                against,
                'the-Empire',
                ('.')
              ]).
pllm:training(800050000082,
              string,
              "Yeah, I had hoped for some dialogue related to her reluctance to use the force in the last movie, \"Force Awakens\", but no, nothing.").
pllm:training(800050000082,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', had],
                    [ 'VP',
                      ['VBN', hoped],
                      [ 'PP',
                        ['IN', for],
                        [ 'NP',
                          ['NP', ['DT', some], ['NN', dialogue]],
                          [ 'VP',
                            ['VBN', related],
                            [ 'PP',
                              ['IN', to],
                              [ 'NP',
                                ['PRP$', her],
                                ['NN', reluctance],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', use],
                                      [ 'NP',
                                        [ 'NP',
                                          ['NP', ['DT', the], ['NN', force]],
                                          [ 'PP',
                                            ['IN', in],
                                            [ 'NP',
                                              [ 'NP',
                                                ['DT', the],
                                                ['JJ', last],
                                                ['NN', movie]
                                              ],
                                              [',', ','],
                                              [ 'NP',
                                                ['\'\'', '"'],
                                                ['NNP', 'Force'],
                                                ['NNP', 'Awakens'],
                                                ['\'\'', '"']
                                              ]
                                            ]
                                          ]
                                        ],
                                        [',', ','],
                                        ['CC', but],
                                        [ 'NP',
                                          ['NP', ['DT', no]],
                                          [',', ','],
                                          ['NP', ['NN', nothing]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800050000082,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', had],
                ['VBN', hoped],
                ['IN', for],
                ['NP', ['DT', some], ['NN', dialogue]],
                ['VBN', related],
                ['IN', to],
                ['PRP$', her],
                ['NN', reluctance],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', the], ['NN', force]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', last], ['NN', movie]],
                [',', ','],
                ['NP', ['\'\'', '"'], ['NNP', 'Force'], ['NNP', 'Awakens'], ['\'\'', '"']],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', no]],
                [',', ','],
                ['NP', ['NN', nothing]],
                ['.', '.']
              ]).
pllm:training(800050000082,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                had,
                hoped,
                for,
                'some-dialogue',
                related,
                to,
                her,
                reluctance,
                to,
                use,
                'the-force',
                in,
                'the-last-movie',
                (','),
                'Force-Awakens',
                (','),
                but,
                no,
                (','),
                nothing,
                ('.')
              ]).
pllm:training(800060000083,
              string,
              "She was called a general in that movie though, so she was still very much in the war efforts, just not as a Jedi.").
pllm:training(800060000083,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'She']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBN', called],
                      [ 'NP',
                        ['NP', ['DT', a], ['JJ', general]],
                        ['PP', ['IN', in], ['NP', ['DT', that], ['NN', movie]]]
                      ],
                      ['ADVP', ['RB', though]],
                      [',', ','],
                      [ 'SBAR',
                        ['IN', so],
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['VBD', was],
                            ['ADVP', ['RB', still]],
                            [ 'ADJP',
                              ['RB', very],
                              ['JJ', much],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NN', war], ['NNS', efforts]],
                                  [',', ','],
                                  ['CONJP', ['RB', just], ['RB', not], ['IN', as]],
                                  ['NP', ['DT', a], ['NNP', 'Jedi']]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800060000083,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBD', was],
                ['VBN', called],
                ['NP', ['DT', a], ['JJ', general]],
                ['IN', in],
                ['NP', ['DT', that], ['NN', movie]],
                ['ADVP', ['RB', though]],
                [',', ','],
                mark('SBAR'),
                ['IN', so],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', was],
                ['ADVP', ['RB', still]],
                'ADJP',
                ['RB', very],
                ['JJ', much],
                ['IN', in],
                ['NP', ['DT', the], ['NN', war], ['NNS', efforts]],
                [',', ','],
                ['CONJP', ['RB', just], ['RB', not], ['IN', as]],
                ['NP', ['DT', a], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(800060000083,
              tree_to_toks,
              [ 'She',
                was,
                called,
                'a-general',
                in,
                'that-movie',
                though,
                (','),
                so,
                she,
                was,
                still,
                'ADJP',
                very,
                much,
                in,
                'the-war-efforts',
                (','),
                just,
                not,
                (as),
                'a-Jedi',
                ('.')
              ]).
pllm:training(800070000084,
              string,
              "And then her son, Ben, turns all Sith and joins the dark side. That had to have factored into her reasons to stay away from the call of the force, don't you think?").
pllm:training(800070000084,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['ADVP', ['RB', then]],
                    ['NP', ['NP', ['PRP$', her], ['NN', son]], [',', ','], ['NP', ['NNP', 'Ben']], [',', ',']],
                    [ 'VP',
                      ['VP', ['VBZ', turns], ['NP', ['DT', all], ['NNP', 'Sith']]],
                      ['CC', and],
                      ['VP', ['VBZ', joins], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'PRN',
                      [ 'S',
                        ['NP', ['DT', 'That']],
                        [ 'VP',
                          ['VBD', had],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              [ 'VP',
                                ['VB', have],
                                [ 'VP',
                                  ['VBN', factored],
                                  ['PP', ['IN', into], ['NP', ['PRP$', her], ['NNS', reasons]]],
                                  [ 'S',
                                    [ 'VP',
                                      ['TO', to],
                                      [ 'VP',
                                        ['VB', stay],
                                        ['ADVP', ['RB', away]],
                                        [ 'PP',
                                          ['IN', from],
                                          [ 'NP',
                                            ['NP', ['DT', the], ['NN', call]],
                                            [ 'PP',
                                              ['IN', of],
                                              ['NP', ['DT', the], ['NN', force]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['VB', do],
                    ['RB', not],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', think]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(800070000084,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP$', her], ['NN', son]],
                [',', ','],
                ['NP', ['NNP', 'Ben']],
                [',', ','],
                ['VBZ', turns],
                ['NP', ['DT', all], ['NNP', 'Sith']],
                ['CC', and],
                ['VBZ', joins],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                'PRN',
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', have],
                ['VBN', factored],
                ['IN', into],
                ['NP', ['PRP$', her], ['NNS', reasons]],
                mark('S'),
                ['TO', to],
                ['VB', stay],
                ['ADVP', ['RB', away]],
                ['IN', from],
                ['NP', ['DT', the], ['NN', call]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', force]],
                [',', ','],
                ['VB', do],
                ['RB', not],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['.', ?]
              ]).
pllm:training(800070000084,
              tree_to_toks,
              [ 'And',
                then,
                'her-son',
                (','),
                'Ben',
                (','),
                turns,
                'all-Sith',
                and,
                joins,
                'the-dark-side',
                ('.'),
                'PRN',
                'That',
                had,
                to,
                have,
                factored,
                into,
                'her-reasons',
                to,
                stay,
                away,
                from,
                'the-call',
                of,
                'the-force',
                (','),
                do,
                not,
                you,
                think,
                (?)
              ]).
pllm:training(800080000085,
              string,
              "Yeah, I would think so. I mean, her dad is dead, her brother ran away and her son is evil. I can see why she doesn't want anything to do with the force now, but still doesn't explain the past.").
pllm:training(800080000085,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['MD', would], ['VP', ['VB', think], ['ADVP', ['RB', so]]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', dad]],
                        ['VP', ['VBZ', is], ['ADJP', ['JJ', dead]]]
                      ],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', brother]],
                        ['VP', ['VBD', ran], ['ADVP', ['RB', away]]]
                      ],
                      ['CC', and],
                      [ 'S',
                        ['NP', ['PRP$', her], ['NN', son]],
                        ['VP', ['VBZ', is], ['ADJP', ['JJ', evil]]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', can],
                      [ 'VP',
                        ['VB', see],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', why]],
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              [ 'VP',
                                ['AUX', does],
                                ['RB', not],
                                [ 'VP',
                                  ['VB', want],
                                  [ 'NP',
                                    ['NP', ['NN', anything]],
                                    [ 'SBAR',
                                      [ 'S',
                                        [ 'VP',
                                          ['TO', to],
                                          [ 'VP',
                                            ['AUX', do],
                                            [ 'PP',
                                              ['IN', with],
                                              ['NP', ['DT', the], ['NN', force]]
                                            ],
                                            ['ADVP', ['RB', now]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ],
                              [',', ','],
                              ['CC', but],
                              ['ADVP', ['RB', still]],
                              [ 'VP',
                                ['AUX', does],
                                ['RB', not],
                                ['VP', ['VB', explain], ['NP', ['DT', the], ['NN', past]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800080000085,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', think],
                ['ADVP', ['RB', so]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', dad]],
                ['VBZ', is],
                ['ADJP', ['JJ', dead]],
                [',', ','],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', brother]],
                ['VBD', ran],
                ['ADVP', ['RB', away]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP$', her], ['NN', son]],
                ['VBZ', is],
                ['ADJP', ['JJ', evil]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', see],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', does],
                ['RB', not],
                ['VB', want],
                ['NP', ['NN', anything]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['AUX', do],
                ['IN', with],
                ['NP', ['DT', the], ['NN', force]],
                ['ADVP', ['RB', now]],
                [',', ','],
                ['CC', but],
                ['ADVP', ['RB', still]],
                ['AUX', does],
                ['RB', not],
                ['VB', explain],
                ['NP', ['DT', the], ['NN', past]],
                ['.', '.']
              ]).
pllm:training(800080000085,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                would,
                think,
                so,
                ('.'),
                'I',
                mean,
                (','),
                'her-dad',
                (is),
                dead,
                (','),
                'her-brother',
                ran,
                away,
                and,
                'her-son',
                (is),
                evil,
                ('.'),
                'I',
                can,
                see,
                why,
                she,
                does,
                not,
                want,
                anything,
                to,
                do,
                with,
                'the-force',
                now,
                (','),
                but,
                still,
                does,
                not,
                explain,
                'the-past',
                ('.')
              ]).
pllm:training(800090000086,
              string,
              "Guess we'll never know. I'm sure she had her reasons though.").
pllm:training(800090000086,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Guess'],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', we]],
                        ['VP', ['MD', '\'ll'], ['ADVP', ['RB', never]], ['VP', ['VB', know]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      [ 'ADJP',
                        ['JJ', sure],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', she]],
                            [ 'VP',
                              ['VBD', had],
                              ['NP', ['PRP$', her], ['NNS', reasons]],
                              ['ADVP', ['RB', though]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(800090000086,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['VB', 'Guess'],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['MD', '\'ll'],
                ['ADVP', ['RB', never]],
                ['VB', know],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                'ADJP',
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', had],
                ['NP', ['PRP$', her], ['NNS', reasons]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(800090000086,
              tree_to_toks,
              [ 'Guess',
                we,
                '\'ll',
                never,
                know,
                ('.'),
                'I',
                '\'m',
                'ADJP',
                sure,
                she,
                had,
                'her-reasons',
                though,
                ('.')
              ]).
pllm:training(800100000087,
              string,
              "I wonder if there's any fan fiction about that topic? I should look that up when I get home.").
pllm:training(800100000087,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', wonder],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'NP',
                              ['NP', ['DT', any], ['NN', fan], ['NN', fiction]],
                              ['PP', ['IN', about], ['NP', ['DT', that], ['NN', topic]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', should],
                    [ 'VP',
                      ['VB', look],
                      ['NP', ['DT', that]],
                      ['PRT', ['RP', up]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', get], ['ADVP', ['RB', home]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(800100000087,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['NP', ['DT', any], ['NN', fan], ['NN', fiction]],
                ['IN', about],
                ['NP', ['DT', that], ['NN', topic]],
                ['.', ?],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', should],
                ['VB', look],
                ['NP', ['DT', that]],
                ['PRT', ['RP', up]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', get],
                ['ADVP', ['RB', home]],
                ['.', '.']
              ]).
pllm:training(800100000087,
              tree_to_toks,
              [ 'I',
                wonder,
                if,
                there,
                '\'s',
                'any-fan-fiction',
                about,
                'that-topic',
                (?),
                'I',
                should,
                look,
                that,
                up,
                when,
                'I',
                get,
                home,
                ('.')
              ]).
pllm:training(900010000089, string, "Hello.").
pllm:training(900010000089, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hello'], ['.', '.']]]).
pllm:training(900010000089, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hello'], ['.', '.']]]).
pllm:training(900010000089, tree_to_toks, ['Hello', '.']).
pllm:training(900020000090, string, "Hi.").
pllm:training(900020000090, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(900020000090, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Hi'], ['.', '.']]]).
pllm:training(900020000090, tree_to_toks, ['Hi', '.']).
pllm:training(900030000091, string, "Have you seen all the star wars films?").
pllm:training(900030000091,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'S',
                      [ 'NP',
                        ['PDT', all],
                        ['DT', the],
                        ['NML', ['NN', star], ['NNS', wars]],
                        ['NNS', films]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(900030000091,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('S'),
                ['NP', ['PDT', all], ['DT', the], ['NML', ['NN', star], ['NNS', wars]], ['NNS', films]],
                ['.', ?]
              ]).
pllm:training(900030000091,
              tree_to_toks,
              ['Have', you, seen, 'all-the-star-wars-films', ?]).
pllm:training(900040000092, string, "Yes as a matter of fact I have.").
pllm:training(900040000092,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [ 'PP',
                    ['IN', as],
                    ['NP', ['NP', ['DT', a], ['NN', matter]], ['PP', ['IN', of], ['NP', ['NN', fact]]]]
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have]],
                  ['.', '.']
                ]
              ]).
pllm:training(900040000092,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['IN', as],
                ['NP', ['DT', a], ['NN', matter]],
                ['IN', of],
                ['NP', ['NN', fact]],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['.', '.']
              ]).
pllm:training(900040000092, tree_to_toks, ['Yes', as, 'a-matter', of, fact, 'I', have, '.']).
pllm:training(900050000093, string, "Cool me too.").
pllm:training(900050000093,
              text_to_tree,
              ['S', ['VP', ['VB', 'Cool'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']]).
pllm:training(900050000093,
              unphrasify,
              [mark('S'), ['VB', 'Cool'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(900050000093, tree_to_toks, ['Cool', me, too, '.']).
pllm:training(900060000094, string, "Nice.").
pllm:training(900060000094, text_to_tree, ['CORENLP', ['NP', ['NNP', 'Nice'], ['.', '.']]]).
pllm:training(900060000094, unphrasify, [mark('CORENLP'), ['NP', ['NNP', 'Nice'], ['.', '.']]]).
pllm:training(900060000094, tree_to_toks, ['Nice-.']).
pllm:training(900070000095,
              string,
              "Out of all of those do you have a least favorite?").
pllm:training(900070000095,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'WHPP',
                    ['IN', 'Out'],
                    [ 'PP',
                      ['IN', of],
                      ['NP', ['NP', ['DT', all]], ['PP', ['IN', of], ['NP', ['DT', those]]]]
                    ]
                  ],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', have],
                      ['NP', ['DT', a], ['ADJP', ['JJS', least], ['JJ', favorite]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(900070000095,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                'WHPP',
                ['IN', 'Out'],
                ['IN', of],
                ['NP', ['DT', all]],
                ['IN', of],
                ['NP', ['DT', those]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', have],
                ['NP', ['DT', a], ['ADJP', ['JJS', least], ['JJ', favorite]]],
                ['.', ?]
              ]).
pllm:training(900070000095,
              tree_to_toks,
              ['WHPP', 'Out', of, all, of, those, do, you, have, 'a-least-favorite', ?]).
pllm:training(900080000096, string, "Definitely one from the prequels.").
pllm:training(900080000096,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  ['NP', ['CD', one]],
                  ['PP', ['IN', from], ['NP', ['DT', the], ['NNS', prequels]]],
                  ['.', '.']
                ]
              ]).
pllm:training(900080000096,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['CD', one]],
                ['IN', from],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(900080000096, tree_to_toks, ['Definitely', one, from, 'the-prequels', '.']).
pllm:training(900090000097, string, "Which one?").
pllm:training(900090000097,
              text_to_tree,
              ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]]).
pllm:training(900090000097,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]).
pllm:training(900090000097, tree_to_toks, ['Which-one', ?]).
pllm:training(900100000098, string, "Probably Clone Wars.").
pllm:training(900100000098,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['ADVP', ['RB', 'Probably']], ['NP', ['NN', 'Clone'], ['NNS', 'Wars']], ['.', '.']]
              ]).
pllm:training(900100000098,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Probably']],
                ['NP', ['NN', 'Clone'], ['NNS', 'Wars']],
                ['.', '.']
              ]).
pllm:training(900100000098, tree_to_toks, ['Probably', 'Clone-Wars', '.']).
pllm:training(1000010000100,
              string,
              "Do you like the older Star Wars movies or the newer movies?").
pllm:training(1000010000100,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    [ 'NP',
                      ['DT', the],
                      ['JJR', older],
                      ['NNP', 'Star'],
                      ['NNP', 'Wars'],
                      ['NNS', movies]
                    ],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJR', newer], ['NNS', movies]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000010000100,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJR', older], ['NNP', 'Star'], ['NNP', 'Wars'], ['NNS', movies]],
                ['CC', or],
                ['NP', ['DT', the], ['JJR', newer], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(1000010000100,
              tree_to_toks,
              ['Do', you, like, 'the-older-Star-Wars-movies', or, 'the-newer-movies', ?]).
pllm:training(1000020000101,
              string,
              "I prefer the older movies.  I'm older and they were really big when I was younger.").
pllm:training(1000020000101,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', prefer], ['NP', ['DT', the], ['JJR', older], ['NNS', movies]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', '\'m'], ['ADJP', ['JJR', older]]]],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', were],
                        ['ADJP', ['RB', really], ['JJ', big]],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', when]],
                          ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', was], ['ADJP', ['JJR', younger]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000020000101,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJR', older], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADJP', ['JJR', older]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['ADJP', ['RB', really], ['JJ', big]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADJP', ['JJR', younger]],
                ['.', '.']
              ]).
pllm:training(1000020000101,
              tree_to_toks,
              [ 'I',
                prefer,
                'the-older-movies',
                ('.'),
                'I',
                '\'m',
                older,
                and,
                they,
                were,
                really,
                big,
                when,
                'I',
                was,
                younger,
                ('.')
              ]).
pllm:training(1000030000102, string, "Who's your favorite character?").
pllm:training(1000030000102,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  ['VP', ['AUX', '\'s'], ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]]]
                ],
                ['.', ?]
              ]).
pllm:training(1000030000102,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1000030000102, tree_to_toks, ['Who', '\'s', 'your-favorite-character', ?]).
pllm:training(1000040000103,
              string,
              "I really like Chewy.  He doesn't say much but gets the job done.").
pllm:training(1000040000103,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VB', like], ['NP', ['NNP', 'Chewy']]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', say], ['ADJP', ['JJ', much]]]],
                      ['CC', but],
                      [ 'VP',
                        ['VBZ', gets],
                        ['NP', ['NP', ['DT', the], ['NN', job]], ['VP', ['VBN', done]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000040000103,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['NP', ['NNP', 'Chewy']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', does],
                ['RB', not],
                ['VB', say],
                ['ADJP', ['JJ', much]],
                ['CC', but],
                ['VBZ', gets],
                ['NP', ['DT', the], ['NN', job]],
                ['VBN', done],
                ['.', '.']
              ]).
pllm:training(1000040000103,
              tree_to_toks,
              [ 'I',
                really,
                like,
                'Chewy',
                ('.'),
                'He',
                does,
                not,
                say,
                much,
                but,
                gets,
                'the-job',
                done,
                ('.')
              ]).
pllm:training(1000050000104, string, "He and Han are great together.").
pllm:training(1000050000104,
              text_to_tree,
              [ 'S',
                ['NP', ['NP', ['PRP', 'He']], ['CC', and], ['NP', ['NNP', 'Han']]],
                ['VP', ['AUX', are], ['ADJP', ['JJ', great]], ['ADVP', ['RB', together]]],
                ['.', '.']
              ]).
pllm:training(1000050000104,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'He']],
                ['CC', and],
                ['NP', ['NNP', 'Han']],
                ['AUX', are],
                ['ADJP', ['JJ', great]],
                ['ADVP', ['RB', together]],
                ['.', '.']
              ]).
pllm:training(1000050000104, tree_to_toks, ['He', and, 'Han', are, great, together, '.']).
pllm:training(1000060000105,
              string,
              "It's almost as if they can read each other's minds.").
pllm:training(1000060000105,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['ADVP', ['RB', almost]],
                    [ 'SBAR',
                      ['IN', as],
                      ['IN', if],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['MD', can],
                          [ 'VP',
                            ['VB', read],
                            [ 'NP',
                              ['NP', ['DT', each], ['JJ', other], ['POS', '\'s']],
                              ['NNS', minds]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1000060000105,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', almost]],
                mark('SBAR'),
                ['IN', as],
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['MD', can],
                ['VB', read],
                ['NP', ['DT', each], ['JJ', other], ['POS', '\'s']],
                ['NNS', minds],
                ['.', '.']
              ]).
pllm:training(1000060000105,
              tree_to_toks,
              ['It', '\'s', almost, as, if, they, can, read, 'each-other-\'s', minds, '.']).
pllm:training(1000070000106,
              string,
              "What is your favorite scene in the three older movies?").
pllm:training(1000070000106,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', scene]],
                      [ 'PP',
                        ['IN', in],
                        ['NP', ['DT', the], ['CD', three], ['JJR', older], ['NNS', movies]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000070000106,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', scene]],
                ['IN', in],
                ['NP', ['DT', the], ['CD', three], ['JJR', older], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(1000070000106,
              tree_to_toks,
              ['What', is, 'your-favorite-scene', in, 'the-three-older-movies', ?]).
pllm:training(1000080000107,
              string,
              "When Luke finds out that Vader is his father.").
pllm:training(1000080000107,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'When']],
                  [ 'S',
                    ['NP', ['NNP', 'Luke']],
                    [ 'VP',
                      ['VBZ', finds],
                      ['PRT', ['RP', out]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Vader']],
                          ['VP', ['AUX', is], ['NP', ['PRP$', his], ['NN', father]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1000080000107,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'When']],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', finds],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Vader']],
                ['AUX', is],
                ['NP', ['PRP$', his], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(1000080000107,
              tree_to_toks,
              ['When', 'Luke', finds, out, that, 'Vader', is, 'his-father', '.']).
pllm:training(1000090000108, string, "What is your least favorite character ?").
pllm:training(1000090000108,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1000090000108,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1000090000108,
              tree_to_toks,
              ['What', is, 'your-least-favorite-character', ?]).
pllm:training(1000100000109,
              string,
              "I really don't like the Sand People.  I find them really creepy.").
pllm:training(1000100000109,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    ['VP', ['VB', like], ['NP', ['DT', the], ['NNP', 'Sand'], ['NNPS', 'People']]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', find],
                      ['S', ['NP', ['PRP', them]], ['ADJP', ['RB', really], ['JJ', creepy]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1000100000109,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['AUX', do],
                ['RB', not],
                ['VB', like],
                ['NP', ['DT', the], ['NNP', 'Sand'], ['NNPS', 'People']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', find],
                mark('S'),
                ['NP', ['PRP', them]],
                ['ADJP', ['RB', really], ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(1000100000109,
              tree_to_toks,
              [ 'I',
                really,
                do,
                not,
                like,
                'the-Sand-People',
                ('.'),
                'I',
                find,
                them,
                really,
                creepy,
                ('.')
              ]).
pllm:training(1100010000111, string, "Have you seen the force awakens").
pllm:training(1100010000111,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    ['SBAR', ['S', ['NP', ['DT', the], ['NN', force]], ['VP', ['VBZ', awakens]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100010000111,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', force]],
                ['VBZ', awakens],
                ['.', '.']
              ]).
pllm:training(1100010000111, tree_to_toks, ['Have', you, seen, 'the-force', awakens, '.']).
pllm:training(1100020000112, string, "Yes").
pllm:training(1100020000112, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]]).
pllm:training(1100020000112, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Yes'], ['.', '.']]]).
pllm:training(1100020000112, tree_to_toks, ['Yes', '.']).
pllm:training(1100030000113, string, "Its my favorite star wars movie").
pllm:training(1100030000113,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['PRP$', 'Its']],
                  [ 'NP',
                    ['NP', ['PRP$', my], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                    ['NP', ['NN', movie]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100030000113,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['PRP$', 'Its']],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', star], ['NNS', wars]],
                ['NP', ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(1100030000113, tree_to_toks, ['Its', 'my-favorite-star-wars', movie, '.']).
pllm:training(1100040000114, string, "Thats one of mine too").
pllm:training(1100040000114,
              text_to_tree,
              [ 'S',
                [ 'VP',
                  ['VBZ', 'Thats'],
                  ['NP', ['NP', ['CD', one]], ['PP', ['IN', of], ['NP', ['NN', mine]]]],
                  ['ADVP', ['RB', too]]
                ],
                ['.', '.']
              ]).
pllm:training(1100040000114,
              unphrasify,
              [ mark('S'),
                ['VBZ', 'Thats'],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['NN', mine]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(1100040000114, tree_to_toks, ['Thats', one, of, mine, too, '.']).
pllm:training(1100050000115, string, "I love harrison ford in it").
pllm:training(1100050000115,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', love],
                    [ 'NP',
                      ['NP', ['NN', harrison], ['NN', ford]],
                      ['PP', ['IN', in], ['NP', ['PRP', it]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1100050000115,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['NN', harrison], ['NN', ford]],
                ['IN', in],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(1100050000115, tree_to_toks, ['I', love, 'harrison-ford', in, it, '.']).
pllm:training(1100060000116, string, "Hes makes a great hans solo").
pllm:training(1100060000116,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNS', 'Hes']],
                  ['VP', ['VBZ', makes], ['NP', ['DT', a], ['JJ', great], ['NNS', hans], ['NN', solo]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1100060000116,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNS', 'Hes']],
                ['VBZ', makes],
                ['NP', ['DT', a], ['JJ', great], ['NNS', hans], ['NN', solo]],
                ['.', '.']
              ]).
pllm:training(1100060000116, tree_to_toks, ['Hes', makes, 'a-great-hans-solo', '.']).
pllm:training(1100070000117, string, "He really does").
pllm:training(1100070000117,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['ADVP', ['RB', really]], ['VP', ['VBZ', does]], ['.', '.']]
              ]).
pllm:training(1100070000117,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', really]],
                ['VBZ', does],
                ['.', '.']
              ]).
pllm:training(1100070000117, tree_to_toks, ['He', really, does, '.']).
pllm:training(1100080000118, string, "He is a great actor").
pllm:training(1100080000118,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  ['VP', ['VBZ', is], ['NP', ['DT', a], ['JJ', great], ['NN', actor]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1100080000118,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', great], ['NN', actor]],
                ['.', '.']
              ]).
pllm:training(1100080000118, tree_to_toks, ['He', is, 'a-great-actor', '.']).
pllm:training(1100090000119, string, "Yes im glad he was in the movies").
pllm:training(1100090000119,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Yes']],
                [ 'VP',
                  ['VBZ', im],
                  [ 'ADJP',
                    ['JJ', glad],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', was], ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', movies]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1100090000119,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Yes']],
                ['VBZ', im],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(1100090000119,
              tree_to_toks,
              ['Yes', im, 'ADJP', glad, he, was, in, 'the-movies', '.']).
pllm:training(1100100000120, string, "Me too").
pllm:training(1100100000120,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(1100100000120,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(1100100000120, tree_to_toks, ['Me', too, '.']).
pllm:training(1200010000122,
              string,
              "So midichorians are basically mitochondria, right?").
pllm:training(1200010000122,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'So']],
                    ['NP', ['NNS', midichorians]],
                    [ 'VP',
                      ['VB', are],
                      ['ADVP', ['RB', basically]],
                      ['NP', ['NNS', mitochondria]]
                    ]
                  ],
                  [',', ','],
                  ['S', ['ADJP', ['JJ', right]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1200010000122,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['NNS', midichorians]],
                ['VB', are],
                ['ADVP', ['RB', basically]],
                ['NP', ['NNS', mitochondria]],
                [',', ','],
                mark('S'),
                ['ADJP', ['JJ', right]],
                ['.', ?]
              ]).
pllm:training(1200010000122,
              tree_to_toks,
              ['So', midichorians, are, basically, mitochondria, ',', right, ?]).
pllm:training(1200020000123,
              string,
              "Yeah, ugh. I guess that's not... too well-hidden.").
pllm:training(1200020000123,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['INTJ', ['UH', 'Yeah']], [',', ','], ['NP', ['NN', ugh]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        ['S', ['NP', ['DT', that]], ['VP', ['VBZ', '\'s'], ['NP', ['NN', 'not.']]], [',', ',']]
                      ]
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'FRAG',
                    ['ADJP', ['RB', too], ['ADJP', ['RB', well], ['HYPH', -], ['VBN', hidden]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200020000123,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NN', ugh]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['NN', 'not.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('FRAG'),
                ['ADJP', ['RB', too], ['ADJP', ['RB', well], ['HYPH', -], ['VBN', hidden]]],
                ['.', '.']
              ]).
pllm:training(1200020000123,
              tree_to_toks,
              ['Yeah', ',', ugh, '.', 'I', guess, that, '\'s', 'not.', ',', '.', ',', '.', too, well, -, hidden, '.']).
pllm:training(1200030000124,
              string,
              "What's the theory there? Mitochondria produce all the energy for cells, right?").
pllm:training(1200030000124,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VP', ['AUX', '\'s'], ['NP', ['DT', the], ['NN', theory]], ['ADVP', ['RB', there]]]
                  ],
                  ['.', ?]
                ],
                [ 'S',
                  ['NP', ['NNP', 'Mitochondria']],
                  [ 'VP',
                    ['VB', produce],
                    [ 'NP',
                      ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                      ['PP', ['IN', for], ['NP', ['NNS', cells]]]
                    ],
                    [',', ','],
                    ['ADVP', ['RB', right]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1200030000124,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['DT', the], ['NN', theory]],
                ['ADVP', ['RB', there]],
                ['.', ?],
                mark('S'),
                ['NP', ['NNP', 'Mitochondria']],
                ['VB', produce],
                ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                ['IN', for],
                ['NP', ['NNS', cells]],
                [',', ','],
                ['ADVP', ['RB', right]],
                ['.', ?]
              ]).
pllm:training(1200030000124,
              tree_to_toks,
              [ 'What',
                '\'s',
                'the-theory',
                there,
                (?),
                'Mitochondria',
                produce,
                'all-the-energy',
                for,
                cells,
                (','),
                right,
                (?)
              ]).
pllm:training(1200040000125,
              string,
              "Yeah, but... I don't know that this bears much scrutiny.").
pllm:training(1200040000125,
              text_to_tree,
              [ 'CORENLP',
                ['NP', ['NP', ['UH', 'Yeah']], [',', ','], ['NP', ['NML', ['NN', 'but.']], [',', ',']], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['DT', this]],
                          ['VP', ['VBZ', bears], ['NP', ['JJ', much], ['NN', scrutiny]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1200040000125,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NML', ['NN', 'but.']], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', this]],
                ['VBZ', bears],
                ['NP', ['JJ', much], ['NN', scrutiny]],
                ['.', '.']
              ]).
pllm:training(1200040000125,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'but.-',
                ('.'),
                (','),
                ('.'),
                'I',
                do,
                not,
                know,
                that,
                this,
                bears,
                'much-scrutiny',
                ('.')
              ]).
pllm:training(1200050000126,
              string,
              "Bear with me, though. So the midichlorians produce an energy that's present in everyone, but Jedi are busting with the things.").
pllm:training(1200050000126,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Bear'],
                    ['PP', ['IN', with], ['NP', ['PRP', me]]],
                    [',', ','],
                    ['ADVP', ['RB', though]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      ['NP', ['DT', the], ['NNS', midichlorians]],
                      [ 'VP',
                        ['VB', produce],
                        [ 'NP',
                          ['NP', ['DT', an], ['NN', energy]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              [ 'VP',
                                ['VBZ', '\'s'],
                                [ 'ADJP',
                                  ['JJ', present],
                                  ['PP', ['IN', in], ['NP', ['NN', everyone]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['NNP', 'Jedi']],
                      [ 'VP',
                        ['VB', are],
                        [ 'VP',
                          ['VBG', busting],
                          ['PP', ['IN', with], ['NP', ['DT', the], ['NNS', things]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200050000126,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['VB', 'Bear'],
                ['IN', with],
                ['NP', ['PRP', me]],
                [',', ','],
                ['ADVP', ['RB', though]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['DT', the], ['NNS', midichlorians]],
                ['VB', produce],
                ['NP', ['DT', an], ['NN', energy]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', '\'s'],
                'ADJP',
                ['JJ', present],
                ['IN', in],
                ['NP', ['NN', everyone]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['VBG', busting],
                ['IN', with],
                ['NP', ['DT', the], ['NNS', things]],
                ['.', '.']
              ]).
pllm:training(1200050000126,
              tree_to_toks,
              [ 'Bear',
                with,
                me,
                (','),
                though,
                ('.'),
                'So',
                'the-midichlorians',
                produce,
                'an-energy',
                that,
                '\'s',
                'ADJP',
                present,
                in,
                everyone,
                (','),
                but,
                'Jedi',
                are,
                busting,
                with,
                'the-things',
                ('.')
              ]).
pllm:training(1200060000127,
              string,
              "Okay, so... this is sounding a little like Parasite Eve now.").
pllm:training(1200060000127,
              text_to_tree,
              [ 'CORENLP',
                ['NP', ['NP', ['UH', 'Okay']], [',', ','], ['NP', ['NML', ['NN', 'so.']], [',', ',']], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['DT', this]],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'VP',
                      ['VBG', sounding],
                      ['NP', ['DT', a], ['JJ', little], ['JJ', like], ['NN', 'Parasite']],
                      ['S', ['NP', ['NNP', 'Eve']]],
                      ['ADVP', ['RB', now]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1200060000127,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['NML', ['NN', 'so.']], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['DT', this]],
                ['VBZ', is],
                ['VBG', sounding],
                ['NP', ['DT', a], ['JJ', little], ['JJ', like], ['NN', 'Parasite']],
                mark('S'),
                ['NP', ['NNP', 'Eve']],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(1200060000127,
              tree_to_toks,
              [ 'Okay',
                (','),
                'so.-',
                ('.'),
                (','),
                ('.'),
                this,
                (is),
                sounding,
                'a-little-like-Parasite',
                'Eve',
                now,
                ('.')
              ]).
pllm:training(1200070000128,
              string,
              "I guess, but -- no. I'm saying that Jedi are just pumping out this heavy aura of energy on a cellular level that, if trained, can do all kinds of wacky stuff.").
pllm:training(1200070000128,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VP', ['VB', guess]],
                      [',', ','],
                      ['CC', but],
                      ['VP', ['HYPH', -], [:, -], ['FRAG', ['UH', no]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      [ 'VP',
                        ['VBG', saying],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', 'Jedi']],
                            [ 'VP',
                              ['VB', are],
                              ['ADVP', ['RB', just]],
                              [ 'VP',
                                ['VBG', pumping],
                                ['PRT', ['RP', out]],
                                [ 'NP',
                                  ['NP', ['DT', this], ['JJ', heavy], ['NN', aura]],
                                  ['PP', ['IN', of], ['NP', ['NN', energy]]]
                                ],
                                [ 'PP',
                                  ['IN', on],
                                  [ 'NP',
                                    ['NP', ['DT', a], ['JJ', cellular], ['NN', level]],
                                    [ 'SBAR',
                                      ['NP', ['WDT', that]],
                                      [ 'S',
                                        [',', ','],
                                        ['SBAR', ['IN', if], ['S', ['VP', ['VBN', trained]]]],
                                        [',', ','],
                                        [ 'VP',
                                          ['MD', can],
                                          [ 'VP',
                                            ['VB', do],
                                            [ 'NP',
                                              ['NP', ['DT', all], ['NNS', kinds]],
                                              [ 'PP',
                                                ['IN', of],
                                                ['NP', ['JJ', wacky], ['NN', stuff]]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1200070000128,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                [',', ','],
                ['CC', but],
                ['HYPH', -],
                [:, -],
                'FRAG',
                ['UH', no],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['VBG', saying],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['ADVP', ['RB', just]],
                ['VBG', pumping],
                ['PRT', ['RP', out]],
                ['NP', ['DT', this], ['JJ', heavy], ['NN', aura]],
                ['IN', of],
                ['NP', ['NN', energy]],
                ['IN', on],
                ['NP', ['DT', a], ['JJ', cellular], ['NN', level]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['VBN', trained],
                [',', ','],
                ['MD', can],
                ['VB', do],
                ['NP', ['DT', all], ['NNS', kinds]],
                ['IN', of],
                ['NP', ['JJ', wacky], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(1200070000128,
              tree_to_toks,
              [ 'I',
                guess,
                (','),
                but,
                (-),
                (-),
                no,
                ('.'),
                'I',
                '\'m',
                saying,
                that,
                'Jedi',
                are,
                just,
                pumping,
                out,
                'this-heavy-aura',
                of,
                energy,
                on,
                'a-cellular-level',
                that,
                (','),
                if,
                trained,
                (','),
                can,
                do,
                'all-kinds',
                of,
                'wacky-stuff',
                ('.')
              ]).
pllm:training(1200080000129,
              string,
              "Okay. So... I guess that's kind of reconciling the Episode One business with the original explanation then?").
pllm:training(1200080000129,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Okay'], ['.', '.']]],
                [ 'CORENLP',
                  ['FRAG', ['NP', ['NNP', 'So.'], [',', ',']], ['.', '.']],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'NP',
                              ['NP', ['NN', kind]],
                              [ 'PP',
                                ['IN', of],
                                [ 'S',
                                  [ 'VP',
                                    ['VBG', reconciling],
                                    [ 'NP',
                                      [ 'NP',
                                        ['DT', the],
                                        ['NNP', 'Episode'],
                                        ['CD', 'One'],
                                        ['NN', business]
                                      ],
                                      [ 'PP',
                                        ['IN', with],
                                        [ 'NP',
                                          ['DT', the],
                                          ['JJ', original],
                                          ['NN', explanation]
                                        ]
                                      ]
                                    ],
                                    ['ADVP', ['RB', then]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1200080000129,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Okay'], ['.', '.']],
                mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['NNP', 'So.'], [',', ',']],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['NN', kind]],
                ['IN', of],
                mark('S'),
                ['VBG', reconciling],
                ['NP', ['DT', the], ['NNP', 'Episode'], ['CD', 'One'], ['NN', business]],
                ['IN', with],
                ['NP', ['DT', the], ['JJ', original], ['NN', explanation]],
                ['ADVP', ['RB', then]],
                ['.', ?]
              ]).
pllm:training(1200080000129,
              tree_to_toks,
              [ 'Okay',
                ('.'),
                'So.-',
                ('.'),
                (','),
                ('.'),
                'I',
                guess,
                that,
                '\'s',
                kind,
                of,
                reconciling,
                'the-Episode-One-business',
                with,
                'the-original-explanation',
                then,
                (?)
              ]).
pllm:training(1200090000130,
              string,
              "Yes, exactly! I mean, sort of. Everyone embodies the Force, and theoretically could learn to control it -- but Jedi are sort of freaks who produce way more of the Force, so when they're trained it's way more effective.").
pllm:training(1200090000130,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['FRAG', ['INTJ', ['UH', 'Yes']], [',', ','], ['ADVP', ['RB', exactly]], ['.', '.']]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['VP', ['VB', mean], [',', ','], ['ADVP', ['RB', sort], ['RB', of]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'S',
                        ['NP', ['NN', everyone]],
                        [ 'VP',
                          ['VP', ['VBZ', embodies], ['NP', ['DT', the], ['NN', 'Force']]],
                          [',', ','],
                          ['CC', and],
                          ['ADVP', ['RB', theoretically]],
                          [ 'VP',
                            ['MD', could],
                            [ 'VP',
                              ['VB', learn],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  ['VP', ['VB', control], ['NP', ['PRP', it]], [:, -]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['HYPH', -],
                      [ 'S',
                        ['CC', but],
                        ['NP', ['NNP', 'Jedi']],
                        [ 'VP',
                          ['VB', are],
                          ['ADVP', ['RB', sort], ['RB', of]],
                          [ 'NP',
                            ['NP', ['NNS', freaks]],
                            [ 'SBAR',
                              ['NP', ['WP', who]],
                              [ 'S',
                                [ 'VP',
                                  ['VB', produce],
                                  [ 'NP',
                                    ['NP', ['NP', ['NN', way]], ['JJR', more]],
                                    ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Force']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [',', ','],
                      [ 'S',
                        ['ADVP', ['RB', so]],
                        [ 'SBAR',
                          ['WHADVP', ['WRB', when]],
                          ['S', ['NP', ['PRP', they]], ['VP', ['VB', '\'re'], ['VP', ['VBN', trained]]]]
                        ],
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['ADJP', ['ADVP', ['RB', way], ['RBR', more]], ['JJ', effective]]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(1200090000130,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['ADVP', ['RB', exactly]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                ['ADVP', ['RB', sort], ['RB', of]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NN', everyone]],
                ['VBZ', embodies],
                ['NP', ['DT', the], ['NN', 'Force']],
                [',', ','],
                ['CC', and],
                ['ADVP', ['RB', theoretically]],
                ['MD', could],
                ['VB', learn],
                mark('S'),
                ['TO', to],
                ['VB', control],
                ['NP', ['PRP', it]],
                [:, -],
                ['HYPH', -],
                mark('S'),
                ['CC', but],
                ['NP', ['NNP', 'Jedi']],
                ['VB', are],
                ['ADVP', ['RB', sort], ['RB', of]],
                ['NP', ['NNS', freaks]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VB', produce],
                ['NP', ['NN', way]],
                ['JJR', more],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Force']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', so]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['VBN', trained],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['ADVP', ['RB', way], ['RBR', more]], ['JJ', effective]],
                ['.', '.']
              ]).
pllm:training(1200090000130,
              tree_to_toks,
              [ 'Yes',
                (','),
                exactly,
                ('.'),
                'I',
                mean,
                (','),
                sort,
                of,
                ('.'),
                everyone,
                embodies,
                'the-Force',
                (','),
                and,
                theoretically,
                could,
                learn,
                to,
                control,
                it,
                (-),
                (-),
                but,
                'Jedi',
                are,
                sort,
                of,
                freaks,
                who,
                produce,
                way,
                more,
                of,
                'the-Force',
                (','),
                so,
                when,
                they,
                '\'re',
                trained,
                it,
                '\'s',
                way,
                more,
                effective,
                ('.')
              ]).
pllm:training(1200100000131,
              string,
              "There's a weird class issue here, or maybe even a eugenic model, that disturbs me on a pretty deep level.").
pllm:training(1200100000131,
              text_to_tree,
              [ 'S',
                ['NP', ['EX', 'There']],
                [ 'VP',
                  ['AUX', '\'s'],
                  ['NP', ['DT', a], ['JJ', weird], ['NN', class], ['NN', issue]],
                  ['ADVP', ['RB', here]],
                  [',', ','],
                  [ 'FRAG',
                    ['CC', or],
                    ['ADVP', ['RB', maybe]],
                    [ 'NP',
                      ['NP', ['RB', even], ['DT', a], ['JJ', eugenic], ['NN', model]],
                      [',', ','],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          [ 'VP',
                            ['VBZ', disturbs],
                            ['NP', ['PRP', me]],
                            [ 'PP',
                              ['IN', on],
                              [ 'NP',
                                ['DT', a],
                                ['ADJP', ['RB', pretty], ['JJ', deep]],
                                ['NN', level]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1200100000131,
              unphrasify,
              [ mark('S'),
                ['NP', ['EX', 'There']],
                ['AUX', '\'s'],
                ['NP', ['DT', a], ['JJ', weird], ['NN', class], ['NN', issue]],
                ['ADVP', ['RB', here]],
                [',', ','],
                mark('FRAG'),
                ['CC', or],
                ['ADVP', ['RB', maybe]],
                ['NP', ['RB', even], ['DT', a], ['JJ', eugenic], ['NN', model]],
                [',', ','],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBZ', disturbs],
                ['NP', ['PRP', me]],
                ['IN', on],
                ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', deep]], ['NN', level]],
                ['.', '.']
              ]).
pllm:training(1200100000131,
              tree_to_toks,
              [ 'There',
                '\'s',
                'a-weird-class-issue',
                here,
                (','),
                or,
                maybe,
                'even-a-eugenic-model',
                (','),
                that,
                disturbs,
                me,
                on,
                'a-pretty-deep-level',
                ('.')
              ]).
pllm:training(1300010000133,
              string,
              "Imagine what it would like in the Star Wars universe. What if you're a regular guy who just finds a light saber on the ground.").
pllm:training(1300010000133,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', 'Imagine'],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', like],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['DT', the],
                                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                                  ['NN', universe]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'SBAR',
                    ['IN', if],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['AUX', '\'re'],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', regular], ['NN', guy]],
                          [ 'SBAR',
                            ['NP', ['WP', who]],
                            [ 'S',
                              [ 'VP',
                                ['ADVP', ['RB', just]],
                                ['VBZ', finds],
                                [ 'NP',
                                  ['NP', ['DT', a], ['JJ', light], ['NN', saber]],
                                  ['PP', ['IN', on], ['NP', ['DT', the], ['NN', ground]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300010000133,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Imagine'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['VB', like],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', universe]],
                ['.', '.'],
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['AUX', '\'re'],
                ['NP', ['DT', a], ['JJ', regular], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['ADVP', ['RB', just]],
                ['VBZ', finds],
                ['NP', ['DT', a], ['JJ', light], ['NN', saber]],
                ['IN', on],
                ['NP', ['DT', the], ['NN', ground]],
                ['.', '.']
              ]).
pllm:training(1300010000133,
              tree_to_toks,
              [ 'Imagine',
                what,
                it,
                would,
                like,
                in,
                'the-Star-Wars-universe',
                ('.'),
                'What',
                if,
                you,
                '\'re',
                'a-regular-guy',
                who,
                just,
                finds,
                'a-light-saber',
                on,
                'the-ground',
                ('.')
              ]).
pllm:training(1300020000134,
              string,
              "With how often the Jedi lose them, it probably happens a lot.").
pllm:training(1300020000134,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['IN', 'With'],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how], ['RB', often]],
                      [ 'S',
                        ['NP', ['DT', the], ['NNP', 'Jedi']],
                        ['VP', ['VB', lose], ['NP', ['PRP', them]]]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  ['ADVP', ['RB', probably]],
                  ['VP', ['VBZ', happens], ['NP', ['DT', a], ['NN', lot]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1300020000134,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'With'],
                mark('SBAR'),
                ['WHADVP', ['WRB', how], ['RB', often]],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['VB', lose],
                ['NP', ['PRP', them]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', probably]],
                ['VBZ', happens],
                ['NP', ['DT', a], ['NN', lot]],
                ['.', '.']
              ]).
pllm:training(1300020000134,
              tree_to_toks,
              [ 'With',
                how,
                often,
                'the-Jedi',
                lose,
                them,
                (','),
                it,
                probably,
                happens,
                'a-lot',
                ('.')
              ]).
pllm:training(1300030000135,
              string,
              "The guy probably hang it on his wall at home.").
pllm:training(1300030000135,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['NN', guy]],
                  ['ADVP', ['RB', probably]],
                  [ 'VP',
                    ['VB', hang],
                    ['NP', ['PRP', it]],
                    [ 'PP',
                      ['IN', on],
                      [ 'NP',
                        ['NP', ['PRP$', his], ['NN', wall]],
                        ['PP', ['IN', at], ['NP', ['NN', home]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300030000135,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', guy]],
                ['ADVP', ['RB', probably]],
                ['VB', hang],
                ['NP', ['PRP', it]],
                ['IN', on],
                ['NP', ['PRP$', his], ['NN', wall]],
                ['IN', at],
                ['NP', ['NN', home]],
                ['.', '.']
              ]).
pllm:training(1300030000135,
              tree_to_toks,
              ['The-guy', probably, hang, it, on, 'his-wall', at, home, '.']).
pllm:training(1300040000136,
              string,
              "He tells the girls he brings home, \"Yeah. i killed a jedi and took his saber.\"").
pllm:training(1300040000136,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', tells],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', girls]],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', brings], ['ADVP', ['RB', home]]]]
                      ]
                    ],
                    [',', ','],
                    ['INTJ', ['``', '"'], ['UH', 'Yeah']]
                  ],
                  ['.', '.']
                ],
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VP', ['VBD', killed], ['NP', ['DT', a], ['NN', jedi]]],
                    ['CC', and],
                    ['VP', ['VBD', took], ['NP', ['PRP$', his], ['NN', saber]]]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', ['``', '"']], ['.', '.']]
              ]).
pllm:training(1300040000136,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', tells],
                ['NP', ['DT', the], ['NNS', girls]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', brings],
                ['ADVP', ['RB', home]],
                [',', ','],
                ['INTJ', ['``', '"'], ['UH', 'Yeah']],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VBD', killed],
                ['NP', ['DT', a], ['NN', jedi]],
                ['CC', and],
                ['VBD', took],
                ['NP', ['PRP$', his], ['NN', saber]],
                ['.', '.'],
                mark('S'),
                ['``', '"'],
                ['.', '.']
              ]).
pllm:training(1300040000136,
              tree_to_toks,
              [ 'He',
                tells,
                'the-girls',
                he,
                brings,
                home,
                (','),
                '"',
                'Yeah',
                ('.'),
                i,
                killed,
                'a-jedi',
                and,
                took,
                'his-saber',
                ('.'),
                '"',
                ('.')
              ]).
pllm:training(1300050000137,
              string,
              "He'd probably end up lopping off an arm at some point.").
pllm:training(1300050000137,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', '\'d'],
                    ['ADVP', ['RB', probably]],
                    [ 'VP',
                      ['VB', end],
                      ['PRT', ['RP', up]],
                      [ 'S',
                        [ 'VP',
                          ['VBG', lopping],
                          ['PRT', ['RP', off]],
                          ['NP', ['DT', an], ['NN', arm]],
                          ['PP', ['IN', at], ['NP', ['DT', some], ['NN', point]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1300050000137,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', '\'d'],
                ['ADVP', ['RB', probably]],
                ['VB', end],
                ['PRT', ['RP', up]],
                mark('S'),
                ['VBG', lopping],
                ['PRT', ['RP', off]],
                ['NP', ['DT', an], ['NN', arm]],
                ['IN', at],
                ['NP', ['DT', some], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(1300050000137,
              tree_to_toks,
              ['He', '\'d', probably, end, up, lopping, off, 'an-arm', at, 'some-point', '.']).
pllm:training(1300060000138, string, "His? Or someone else's?").
pllm:training(1300060000138,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP$', 'His']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NP', ['CC', 'Or']], ['NP', ['NN', someone], ['RB', else], ['POS', '\'s']]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1300060000138,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['CC', 'Or']],
                ['NP', ['NN', someone], ['RB', else], ['POS', '\'s']],
                ['.', ?]
              ]).
pllm:training(1300060000138, tree_to_toks, ['His', ?, 'Or', 'someone-else-\'s', ?]).
pllm:training(1300070000139, string, "Depends on how drunk he is, I'd imagine.").
pllm:training(1300070000139,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    [ 'VP',
                      ['VBZ', 'Depends'],
                      [ 'PP',
                        ['IN', on],
                        [ 'SBAR',
                          ['WHADJP', ['WRB', how], ['ADJP', ['JJ', drunk]]],
                          ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', is]]]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['MD', '\'d'], ['VP', ['VB', imagine]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1300070000139,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Depends'],
                ['IN', on],
                mark('SBAR'),
                ['WHADJP', ['WRB', how], ['ADJP', ['JJ', drunk]]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', imagine],
                ['.', '.']
              ]).
pllm:training(1300070000139,
              tree_to_toks,
              ['Depends', on, how, drunk, he, is, ',', 'I', '\'d', imagine, '.']).
pllm:training(1300080000140, string, "How do you explain that to the doctor?").
pllm:training(1300080000140,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', explain],
                      ['NP', ['DT', that]],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['NN', doctor]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1300080000140,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['NP', ['DT', that]],
                ['IN', to],
                ['NP', ['DT', the], ['NN', doctor]],
                ['.', ?]
              ]).
pllm:training(1300080000140,
              tree_to_toks,
              ['How', do, you, explain, that, to, 'the-doctor', ?]).
pllm:training(1300090000141,
              string,
              "\"Dang jedi just walked up and took my arm off!\"").
pllm:training(1300090000141,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['``', '"'],
                  ['NP', ['NNP', 'Dang'], ['NNP', jedi]],
                  [ 'VP',
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBD', walked], ['PRT', ['RP', up]]],
                    ['CC', and],
                    ['VP', ['VBD', took], ['NP', ['PRP$', my], ['NN', arm]], ['PRT', ['RP', off]]]
                  ],
                  ['.', '.'],
                  ['\'\'', '"']
                ],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(1300090000141,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['``', '"'],
                ['NP', ['NNP', 'Dang'], ['NNP', jedi]],
                ['ADVP', ['RB', just]],
                ['VBD', walked],
                ['PRT', ['RP', up]],
                ['CC', and],
                ['VBD', took],
                ['NP', ['PRP$', my], ['NN', arm]],
                ['PRT', ['RP', off]],
                ['.', '.'],
                ['\'\'', '"'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(1300090000141,
              tree_to_toks,
              ['"', 'Dang-jedi', just, walked, up, and, took, 'my-arm', off, '.', '"', 'FRAG', '.']).
pllm:training(1300100000142,
              string,
              "They're all robot doctors. I don't know if they'd buy that.").
pllm:training(1300100000142,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['VP', ['VB', '\'re'], ['NP', ['DT', all], ['NN', robot], ['NNS', doctors]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['IN', if],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['VP', ['VBD', '\'d'], ['VP', ['VB', buy], ['NP', ['DT', that]]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1300100000142,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VB', '\'re'],
                ['NP', ['DT', all], ['NN', robot], ['NNS', doctors]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', '\'d'],
                ['VB', buy],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(1300100000142,
              tree_to_toks,
              [ 'They',
                '\'re',
                'all-robot-doctors',
                ('.'),
                'I',
                do,
                not,
                know,
                if,
                they,
                '\'d',
                buy,
                that,
                ('.')
              ]).
pllm:training(1400010000144,
              string,
              "What Star Wars character do you dislike the most?").
pllm:training(1400010000144,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['NP', ['WP', 'What']], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', character]],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', dislike], ['NP', ['DT', the], ['JJS', most]]]
                ],
                ['.', ?]
              ]).
pllm:training(1400010000144,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NN', character],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', dislike],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(1400010000144,
              tree_to_toks,
              ['What', 'Star-Wars', character, do, you, dislike, 'the-most', ?]).
pllm:training(1400020000145, string, "I really don't like Jar Jar Binks!").
pllm:training(1400020000145,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                [ 'VP',
                  ['AUX', do],
                  ['RB', not],
                  ['VP', ['VB', like], ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']]]
                ],
                ['.', '.']
              ]).
pllm:training(1400020000145,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['AUX', do],
                ['RB', not],
                ['VB', like],
                ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                ['.', '.']
              ]).
pllm:training(1400020000145,
              tree_to_toks,
              ['I', really, do, not, like, 'Jar-Jar-Binks', '.']).
pllm:training(1400030000146, string, "Why don't you like that character?").
pllm:training(1400030000146,
              text_to_tree,
              [ 'SBAR',
                ['WHADVP', ['WRB', 'Why']],
                [ 'S',
                  ['AUX', do],
                  ['RB', not],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['NP', ['DT', that], ['NN', character]]]
                ],
                ['.', ?]
              ]).
pllm:training(1400030000146,
              unphrasify,
              [ mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['RB', not],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', that], ['NN', character]],
                ['.', ?]
              ]).
pllm:training(1400030000146,
              tree_to_toks,
              ['Why', do, not, you, like, 'that-character', ?]).
pllm:training(1400040000147, string, "Jar Jar Binks is just really annoying!").
pllm:training(1400040000147,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', just]],
                    ['ADJP', ['RB', really], ['JJ', annoying]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400040000147,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', 'Jar'], ['NN', 'Jar'], ['NNS', 'Binks']],
                ['VBZ', is],
                ['ADVP', ['RB', just]],
                ['ADJP', ['RB', really], ['JJ', annoying]],
                ['.', '.']
              ]).
pllm:training(1400040000147,
              tree_to_toks,
              ['Jar-Jar-Binks', is, just, really, annoying, '.']).
pllm:training(1400050000148,
              string,
              "I also find Jar Jar Binks extremely annoying.").
pllm:training(1400050000148,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', also]],
                  [ 'VP',
                    ['VB', find],
                    [ 'NP',
                      ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                      ['ADJP', ['RB', extremely], ['JJ', annoying]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400050000148,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', also]],
                ['VB', find],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['ADJP', ['RB', extremely], ['JJ', annoying]],
                ['.', '.']
              ]).
pllm:training(1400050000148,
              tree_to_toks,
              ['I', also, find, 'Jar-Jar-Binks', extremely, annoying, '.']).
pllm:training(1400060000149,
              string,
              "I think they just added Jar Jar Binks as a comic relief character.").
pllm:training(1400060000149,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        ['ADVP', ['RB', just]],
                        [ 'VP',
                          ['VBD', added],
                          [ 'NP',
                            ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                            [ 'PP',
                              ['IN', as],
                              [ 'NP',
                                ['DT', a],
                                ['JJ', comic],
                                ['NN', relief],
                                ['NN', character]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400060000149,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', just]],
                ['VBD', added],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', comic], ['NN', relief], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(1400060000149,
              tree_to_toks,
              [ 'I',
                think,
                they,
                just,
                added,
                'Jar-Jar-Binks',
                (as),
                'a-comic-relief-character',
                ('.')
              ]).
pllm:training(1400070000150, string, "Yes I totally agree with you!").
pllm:training(1400070000150,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', totally]],
                  ['VP', ['VB', agree], ['PP', ['IN', with], ['NP', ['PRP', you]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1400070000150,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', totally]],
                ['VB', agree],
                ['IN', with],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(1400070000150, tree_to_toks, ['Yes', 'I', totally, agree, with, you, '.']).
pllm:training(1400080000151,
              string,
              "There are moments I found funny when I saw Jar Jar Binks on screen.").
pllm:training(1400080000151,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  [ 'VP',
                    ['VB', are],
                    [ 'NP',
                      ['NP', ['NNS', moments]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VBD', found],
                            ['ADJP', ['JJ', funny]],
                            [ 'SBAR',
                              ['WHADVP', ['WRB', when]],
                              [ 'S',
                                ['NP', ['PRP', 'I']],
                                [ 'VP',
                                  ['VBD', saw],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                                    ['PP', ['IN', on], ['NP', ['NN', screen]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400080000151,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VB', are],
                ['NP', ['NNS', moments]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', found],
                ['ADJP', ['JJ', funny]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['IN', on],
                ['NP', ['NN', screen]],
                ['.', '.']
              ]).
pllm:training(1400080000151,
              tree_to_toks,
              [ 'There',
                are,
                moments,
                'I',
                found,
                funny,
                when,
                'I',
                saw,
                'Jar-Jar-Binks',
                on,
                screen,
                ('.')
              ]).
pllm:training(1400090000152,
              string,
              "The way Jar Jar Binks says \"me\" as \"meesa\" makes me laugh.").
pllm:training(1400090000152,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['NN', way]],
                    ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']]
                  ],
                  [ 'VP',
                    ['VBZ', says],
                    ['``', '"'],
                    ['NP', ['PRP', me]],
                    ['\'\'', '"'],
                    [ 'SBAR',
                      ['IN', as],
                      [ 'S',
                        ['NP', ['``', '"'], ['NN', meesa], ['\'\'', '"']],
                        ['VP', ['VBZ', makes], ['S', ['NP', ['PRP', me]], ['VP', ['VB', laugh]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1400090000152,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', way]],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['VBZ', says],
                ['``', '"'],
                ['NP', ['PRP', me]],
                ['\'\'', '"'],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['``', '"'], ['NN', meesa], ['\'\'', '"']],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', laugh],
                ['.', '.']
              ]).
pllm:training(1400090000152,
              tree_to_toks,
              ['The-way', 'Jar-Jar-Binks', says, '"', me, '"', as, meesa, makes, me, laugh, '.']).
pllm:training(1400100000153, string, "It also makes me laugh!").
pllm:training(1400100000153,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['ADVP', ['RB', also]],
                  ['VP', ['VBZ', makes], ['S', ['NP', ['PRP', me]], ['VP', ['VB', laugh]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1400100000153,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', also]],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', laugh],
                ['.', '.']
              ]).
pllm:training(1400100000153, tree_to_toks, ['It', also, makes, me, laugh, '.']).
pllm:training(1500010000155,
              string,
              "What do you think about the Mandela Effect  concerning Star Wars?").
pllm:training(1500010000155,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'PP',
                      ['IN', about],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Mandela'], ['NN', 'Effect']],
                        ['VP', ['VBG', concerning], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1500010000155,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', about],
                ['NP', ['DT', the], ['NNP', 'Mandela'], ['NN', 'Effect']],
                ['VBG', concerning],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(1500010000155,
              tree_to_toks,
              [ 'What',
                do,
                you,
                think,
                about,
                'the-Mandela-Effect',
                concerning,
                'Star-Wars',
                (?)
              ]).
pllm:training(1500020000156,
              string,
              "I am not sure I know what you are talking about.").
pllm:training(1500020000156,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    ['RB', not],
                    [ 'ADJP',
                      ['JJ', sure],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VB', know],
                            [ 'SBAR',
                              ['NP', ['WP', what]],
                              [ 'S',
                                ['NP', ['PRP', you]],
                                [ 'VP',
                                  ['VB', are],
                                  ['VP', ['VBG', talking], ['PP', ['IN', about]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1500020000156,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['RB', not],
                'ADJP',
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', are],
                ['VBG', talking],
                ['IN', about],
                ['.', '.']
              ]).
pllm:training(1500020000156,
              tree_to_toks,
              ['I', am, not, 'ADJP', sure, 'I', know, what, you, are, talking, about, '.']).
pllm:training(1500030000157,
              string,
              "Empire Strikes Back the scene where Luke finds out Darth Vader is his dad. What is the line that Darth says?").
pllm:training(1500030000157,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['NNP', 'Empire']],
                  [ 'VP',
                    ['VBZ', 'Strikes'],
                    ['PRT', ['RP', 'Back']],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', scene]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', where]],
                        [ 'S',
                          ['NP', ['NNP', 'Luke']],
                          [ 'VP',
                            ['VBZ', finds],
                            ['PRT', ['RP', out]],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                                ['VP', ['AUX', is], ['NP', ['PRP$', his], ['NN', dad]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    [ 'VP',
                      ['AUX', is],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', line]],
                        [ 'SBAR',
                          ['NP', ['WDT', that]],
                          ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VBZ', says]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1500030000157,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['PRT', ['RP', 'Back']],
                ['NP', ['DT', the], ['NN', scene]],
                mark('SBAR'),
                ['WHADVP', ['WRB', where]],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', finds],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['AUX', is],
                ['NP', ['PRP$', his], ['NN', dad]],
                ['.', '.'],
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['NN', line]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VBZ', says],
                ['.', ?]
              ]).
pllm:training(1500030000157,
              tree_to_toks,
              [ 'Empire',
                'Strikes',
                'Back',
                'the-scene',
                where,
                'Luke',
                finds,
                out,
                'Darth-Vader',
                (is),
                'his-dad',
                ('.'),
                'What',
                (is),
                'the-line',
                that,
                'Darth',
                says,
                (?)
              ]).
pllm:training(1500040000158, string, "Luke I am your Father.").
pllm:training(1500040000158,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Luke']],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['NP', ['PRP$', your], ['NNP', 'Father']]],
                  ['.', '.']
                ]
              ]).
pllm:training(1500040000158,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NNP', 'Father']],
                ['.', '.']
              ]).
pllm:training(1500040000158, tree_to_toks, ['Luke', 'I', am, 'your-Father', '.']).
pllm:training(1500050000159,
              string,
              "Yes that's what I remember and a lot of other people as well.").
pllm:training(1500050000159,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['DT', that]],
                [ 'VP',
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['SBAR', ['NP', ['WP', what]], ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', remember]]]]
                  ],
                  ['CC', and],
                  [ 'VP',
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', lot]],
                      ['PP', ['IN', of], ['NP', ['JJ', other], ['NNS', people]]]
                    ],
                    ['ADVP', ['RB', as], ['RB', well]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1500050000159,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['CC', and],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['JJ', other], ['NNS', people]],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', '.']
              ]).
pllm:training(1500050000159,
              tree_to_toks,
              [ 'Yes',
                that,
                '\'s',
                what,
                'I',
                remember,
                and,
                'a-lot',
                of,
                'other-people',
                (as),
                well,
                ('.')
              ]).
pllm:training(1500060000160, string, "So what are you saying? That it's wrong?").
pllm:training(1500060000160,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['RB', 'So'],
                    ['NP', ['WP', what]],
                    ['S', ['VB', are], ['NP', ['PRP', you]], ['VP', ['VBG', saying]]],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['NP', ['DT', 'That']],
                  ['NP', ['PRP', it]],
                  ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', wrong]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1500060000160,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['RB', 'So'],
                ['NP', ['WP', what]],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                ['VBG', saying],
                ['.', ?],
                mark('S'),
                ['NP', ['DT', 'That']],
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', wrong]],
                ['.', ?]
              ]).
pllm:training(1500060000160,
              tree_to_toks,
              ['So', what, are, you, saying, ?, 'That', it, '\'s', wrong, ?]).
pllm:training(1500070000161,
              string,
              "According to some fans they insist he \"No, I am your father\" not Luke I am your father.").
pllm:training(1500070000161,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['VBG', 'According'],
                    [ 'PP',
                      ['IN', to],
                      [ 'NP',
                        ['NP', ['DT', some], ['NNS', fans]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VB', insist],
                              ['NP', ['PRP', he]],
                              ['``', '"'],
                              [ 'S',
                                ['INTJ', ['UH', 'No']],
                                [',', ','],
                                ['NP', ['PRP', 'I']],
                                [ 'VP',
                                  ['VB', am],
                                  [ 'NP',
                                    ['NP', ['PRP$', your], ['NN', father]],
                                    ['\'\'', '"'],
                                    ['PP', ['RB', not], ['NP', ['NNP', 'Luke']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', am], ['NP', ['PRP$', your], ['NN', father]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1500070000161,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBG', 'According'],
                ['IN', to],
                ['NP', ['DT', some], ['NNS', fans]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', insist],
                ['NP', ['PRP', he]],
                ['``', '"'],
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NN', father]],
                ['\'\'', '"'],
                ['RB', not],
                ['NP', ['NNP', 'Luke']],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(1500070000161,
              tree_to_toks,
              [ 'According',
                to,
                'some-fans',
                they,
                insist,
                he,
                '"',
                'No',
                (','),
                'I',
                am,
                'your-father',
                '"',
                not,
                'Luke',
                'I',
                am,
                'your-father',
                ('.')
              ]).
pllm:training(1500080000162,
              string,
              "What? I may not be as big of a nerd about Star Wars as you are but i know Luke is right.").
pllm:training(1500080000162,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WP', 'What']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', may],
                        ['RB', not],
                        [ 'VP',
                          ['VB', be],
                          [ 'ADJP',
                            ['RB', as],
                            ['JJ', big],
                            [ 'PP',
                              ['IN', of],
                              [ 'NP',
                                ['NP', ['DT', a], ['NN', nerd]],
                                ['PP', ['IN', about], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                              ]
                            ]
                          ],
                          ['SBAR', ['IN', as], ['S', ['NP', ['PRP', you]], ['VP', ['VB', are]]]]
                        ]
                      ]
                    ],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', i]],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          ['S', ['NP', ['NNP', 'Luke']], ['VP', ['VBZ', is], ['ADJP', ['JJ', right]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1500080000162,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', may],
                ['RB', not],
                ['VB', be],
                'ADJP',
                ['RB', as],
                ['JJ', big],
                ['IN', of],
                ['NP', ['DT', a], ['NN', nerd]],
                ['IN', about],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', are],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', is],
                ['ADJP', ['JJ', right]],
                ['.', '.']
              ]).
pllm:training(1500080000162,
              tree_to_toks,
              [ 'What',
                (?),
                'I',
                may,
                not,
                be,
                'ADJP',
                (as),
                big,
                of,
                'a-nerd',
                about,
                'Star-Wars',
                (as),
                you,
                are,
                but,
                i,
                know,
                'Luke',
                (is),
                right,
                ('.')
              ]).
pllm:training(1500090000163,
              string,
              "Yes there are interviews of James Earl Jones back in the day and when asked to quote that scene he says Luke.").
pllm:training(1500090000163,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['EX', there]],
                  [ 'VP',
                    ['VB', are],
                    [ 'UCP',
                      [ 'NP',
                        ['NP', ['NNS', interviews]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                            [ 'ADVP',
                              ['RB', back],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NN', day]]]
                            ]
                          ]
                        ]
                      ],
                      ['CC', and],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          [ 'VP',
                            ['VBN', asked],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['VB', quote],
                                  [ 'NP',
                                    ['NP', ['DT', that], ['NN', scene]],
                                    [ 'SBAR',
                                      [ 'S',
                                        ['NP', ['PRP', he]],
                                        ['VP', ['VBZ', says], ['NP', ['NNP', 'Luke']]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1500090000163,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['EX', there]],
                ['VB', are],
                'UCP',
                ['NP', ['NNS', interviews]],
                ['IN', of],
                ['NP', ['NNP', 'James'], ['NNP', 'Earl'], ['NNP', 'Jones']],
                'ADVP',
                ['RB', back],
                ['IN', in],
                ['NP', ['DT', the], ['NN', day]],
                ['CC', and],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['VBN', asked],
                mark('S'),
                ['TO', to],
                ['VB', quote],
                ['NP', ['DT', that], ['NN', scene]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', says],
                ['NP', ['NNP', 'Luke']],
                ['.', '.']
              ]).
pllm:training(1500090000163,
              tree_to_toks,
              [ 'Yes',
                there,
                are,
                'UCP',
                interviews,
                of,
                'James-Earl-Jones',
                'ADVP',
                back,
                in,
                'the-day',
                and,
                when,
                asked,
                to,
                quote,
                'that-scene',
                he,
                says,
                'Luke',
                ('.')
              ]).
pllm:training(1500100000164,
              string,
              "Who would know better than him? That's really weird.").
pllm:training(1500100000164,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'Who']],
                    [ 'S',
                      [ 'VP',
                        ['MD', would],
                        [ 'VP',
                          ['VB', know],
                          ['NP', ['JJR', better]],
                          ['PP', ['IN', than], ['NP', ['PRP', him]]]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['RB', really], ['JJ', weird]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1500100000164,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['MD', would],
                ['VB', know],
                ['NP', ['JJR', better]],
                ['IN', than],
                ['NP', ['PRP', him]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', really], ['JJ', weird]],
                ['.', '.']
              ]).
pllm:training(1500100000164,
              tree_to_toks,
              ['Who', would, know, better, than, him, ?, 'That', '\'s', really, weird, '.']).
pllm:training(1600010000166,
              string,
              "Did you actually watch the original Star Wars when it was originally released?").
pllm:training(1600010000166,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', actually]],
                  [ 'VP',
                    ['VB', watch],
                    ['NP', ['DT', the], ['JJ', original], ['NNP', 'Star'], ['NNPS', 'Wars']],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADVP', ['RB', originally]],
                          ['VP', ['VBN', released]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600010000166,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', actually]],
                ['VB', watch],
                ['NP', ['DT', the], ['JJ', original], ['NNP', 'Star'], ['NNPS', 'Wars']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', originally]],
                ['VBN', released],
                ['.', ?]
              ]).
pllm:training(1600010000166,
              tree_to_toks,
              [ 'Did',
                you,
                actually,
                watch,
                'the-original-Star-Wars',
                when,
                it,
                was,
                originally,
                released,
                (?)
              ]).
pllm:training(1600020000167, string, "Yes I was seven years old in 1977.").
pllm:training(1600020000167,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADJP', ['NP', ['CD', seven], ['NNS', years]], ['JJ', old]],
                    ['PP', ['IN', in], ['NP', ['CD', '1977']]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600020000167,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['NP', ['CD', seven], ['NNS', years]],
                ['JJ', old],
                ['IN', in],
                ['NP', ['CD', '1977']],
                ['.', '.']
              ]).
pllm:training(1600020000167,
              tree_to_toks,
              ['Yes', 'I', was, 'ADJP', 'seven-years', old, in, '1977', '.']).
pllm:training(1600030000168, string, "Did you go by yourself?").
pllm:training(1600030000168,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', go], ['PP', ['IN', by], ['NP', ['PRP', yourself]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1600030000168,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', go],
                ['IN', by],
                ['NP', ['PRP', yourself]],
                ['.', ?]
              ]).
pllm:training(1600030000168, tree_to_toks, ['Did', you, go, by, yourself, ?]).
pllm:training(1600040000169,
              string,
              "No I went with one of my older sisters and my twin sister.").
pllm:training(1600040000169,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', went],
                    [ 'PP',
                      ['IN', with],
                      [ 'NP',
                        ['NP', ['CD', one]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['PRP$', my], ['JJR', older], ['NNS', sisters]],
                            ['CC', and],
                            ['NP', ['PRP$', my], ['JJ', twin], ['NN', sister]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600040000169,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                ['NP', ['PRP', 'I']],
                ['VBD', went],
                ['IN', with],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['PRP$', my], ['JJR', older], ['NNS', sisters]],
                ['CC', and],
                ['NP', ['PRP$', my], ['JJ', twin], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(1600040000169,
              tree_to_toks,
              ['No', 'I', went, with, one, of, 'my-older-sisters', and, 'my-twin-sister', '.']).
pllm:training(1600050000170, string, "Do you really remember the whole movie?").
pllm:training(1600050000170,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['ADVP', ['RB', really]],
                    ['VB', remember],
                    ['NP', ['DT', the], ['JJ', whole], ['NN', movie]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600050000170,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', really]],
                ['VB', remember],
                ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(1600050000170,
              tree_to_toks,
              ['Do', you, really, remember, 'the-whole-movie', ?]).
pllm:training(1600060000171,
              string,
              "Well first of all we got there a little late; but the first thing I remember seeing was Darth Vader on a ship walking among dead bodies.").
pllm:training(1600060000171,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Well'], ['RB', first], ['PP', ['IN', of], ['NP', ['DT', all]]]],
                ['NP', ['PRP', we]],
                [ 'VP',
                  ['VBD', got],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['EX', there]],
                      ['ADJP', ['DT', a], ['RB', little], ['JJ', late]],
                      [ 'S',
                        ['CC', but],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', first], ['NN', thing]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', 'I']],
                              ['VP', ['VB', remember], ['VP', ['VBG', seeing]]]
                            ]
                          ]
                        ],
                        [ 'VP',
                          ['AUX', was],
                          ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                          [ 'PP',
                            ['IN', on],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', ship]],
                              [ 'VP',
                                ['VBG', walking],
                                ['PP', ['IN', among], ['NP', ['JJ', dead], ['NNS', bodies]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1600060000171,
              unphrasify,
              [ mark('S'),
                'ADVP',
                ['RB', 'Well'],
                ['RB', first],
                ['IN', of],
                ['NP', ['DT', all]],
                ['NP', ['PRP', we]],
                ['VBD', got],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['ADJP', ['DT', a], ['RB', little], ['JJ', late]],
                mark('S'),
                ['CC', but],
                ['NP', ['DT', the], ['JJ', first], ['NN', thing]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['VBG', seeing],
                ['AUX', was],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['IN', on],
                ['NP', ['DT', a], ['NN', ship]],
                ['VBG', walking],
                ['IN', among],
                ['NP', ['JJ', dead], ['NNS', bodies]],
                ['.', '.']
              ]).
pllm:training(1600060000171,
              tree_to_toks,
              [ 'ADVP',
                'Well',
                first,
                of,
                all,
                we,
                got,
                there,
                a,
                little,
                late,
                but,
                'the-first-thing',
                'I',
                remember,
                seeing,
                was,
                'Darth-Vader',
                on,
                'a-ship',
                walking,
                among,
                'dead-bodies',
                ('.')
              ]).
pllm:training(1600070000172,
              string,
              "I would say you missed about the first ten minutes of the movie then.").
pllm:training(1600070000172,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['VB', say],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', you]],
                        [ 'VP',
                          ['VBD', missed],
                          [ 'PP',
                            ['IN', about],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJ', first], ['CD', ten], ['NNS', minutes]],
                              ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                            ]
                          ],
                          ['ADVP', ['RB', then]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1600070000172,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', say],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', missed],
                ['IN', about],
                ['NP', ['DT', the], ['JJ', first], ['CD', ten], ['NNS', minutes]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['ADVP', ['RB', then]],
                ['.', '.']
              ]).
pllm:training(1600070000172,
              tree_to_toks,
              [ 'I',
                would,
                say,
                you,
                missed,
                about,
                'the-first-ten-minutes',
                of,
                'the-movie',
                then,
                ('.')
              ]).
pllm:training(1600080000173,
              string,
              "The other scene I remember is the one when Han Solo comes back after everyone believes he's gone.").
pllm:training(1600080000173,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['JJ', other], ['NN', scene]],
                    ['SBAR', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', remember]]]]
                  ],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['DT', the], ['CD', one]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                          [ 'VP',
                            ['VBZ', comes],
                            [ 'SBAR',
                              ['ADVP', ['RB', back]],
                              ['IN', after],
                              [ 'S',
                                ['NP', ['NN', everyone]],
                                [ 'VP',
                                  ['VBZ', believes],
                                  [ 'SBAR',
                                    [ 'S',
                                      ['NP', ['PRP', he]],
                                      ['VP', ['VBZ', '\'s'], ['VP', ['VBN', gone]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600080000173,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', other], ['NN', scene]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['VBZ', is],
                ['NP', ['DT', the], ['CD', one]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['VBZ', comes],
                mark('SBAR'),
                ['ADVP', ['RB', back]],
                ['IN', after],
                mark('S'),
                ['NP', ['NN', everyone]],
                ['VBZ', believes],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['VBN', gone],
                ['.', '.']
              ]).
pllm:training(1600080000173,
              tree_to_toks,
              [ 'The-other-scene',
                'I',
                remember,
                (is),
                'the-one',
                when,
                'Han-Solo',
                comes,
                back,
                after,
                everyone,
                believes,
                he,
                '\'s',
                gone,
                ('.')
              ]).
pllm:training(1600090000174, string, "Is that a the end of the movie?").
pllm:training(1600090000174,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBZ', 'Is'],
                  ['NP', ['DT', that]],
                  [ 'NP',
                    ['NP', ['DT', a], ['DT', the], ['NN', end]],
                    ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(1600090000174,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['NP', ['DT', a], ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(1600090000174, tree_to_toks, ['Is', that, 'a-the-end', of, 'the-movie', ?]).
pllm:training(1600100000175,
              string,
              "Almost at the end of the movie, Darth Vader is about to shoot Luke's ship but Han saves him by shooting Darth's ship.").
pllm:training(1600100000175,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    [ 'ADVP',
                      ['RB', 'Almost'],
                      [ 'PP',
                        ['IN', at],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', end]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'ADJP',
                        ['RB', about],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', shoot],
                              ['NP', ['NP', ['NNP', 'Luke'], ['POS', '\'s']], ['NN', ship]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['NNP', 'Han']],
                    [ 'VP',
                      ['VBZ', saves],
                      ['NP', ['PRP', him]],
                      [ 'PP',
                        ['IN', by],
                        [ 'S',
                          [ 'VP',
                            ['VBG', shooting],
                            ['NP', ['NP', ['NNP', 'Darth'], ['POS', '\'s']], ['NN', ship]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1600100000175,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                'ADVP',
                ['RB', 'Almost'],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                [',', ','],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBZ', is],
                'ADJP',
                ['RB', about],
                mark('S'),
                ['TO', to],
                ['VB', shoot],
                ['NP', ['NNP', 'Luke'], ['POS', '\'s']],
                ['NN', ship],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Han']],
                ['VBZ', saves],
                ['NP', ['PRP', him]],
                ['IN', by],
                mark('S'),
                ['VBG', shooting],
                ['NP', ['NNP', 'Darth'], ['POS', '\'s']],
                ['NN', ship],
                ['.', '.']
              ]).
pllm:training(1600100000175,
              tree_to_toks,
              [ 'ADVP',
                'Almost',
                at,
                'the-end',
                of,
                'the-movie',
                (','),
                'Darth-Vader',
                (is),
                'ADJP',
                about,
                to,
                shoot,
                'Luke-\'s',
                ship,
                but,
                'Han',
                saves,
                him,
                by,
                shooting,
                'Darth-\'s',
                ship,
                ('.')
              ]).
pllm:training(1700010000177,
              string,
              "I'm still bitter about George Lucas re-editing the middle three movies.").
pllm:training(1700010000177,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    ['ADVP', ['RB', still]],
                    [ 'ADJP',
                      ['JJ', bitter],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBG', 're-editing'],
                            ['NP', ['DT', the], ['JJ', middle], ['CD', three], ['NNS', movies]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700010000177,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADVP', ['RB', still]],
                'ADJP',
                ['JJ', bitter],
                ['IN', about],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBG', 're-editing'],
                ['NP', ['DT', the], ['JJ', middle], ['CD', three], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(1700010000177,
              tree_to_toks,
              [ 'I',
                '\'m',
                still,
                'ADJP',
                bitter,
                about,
                'George-Lucas',
                're-editing',
                'the-middle-three-movies',
                ('.')
              ]).
pllm:training(1700020000178,
              string,
              "I don't blame you.  I don't think they added anything.").
pllm:training(1700020000178,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', do], ['RB', not], ['VP', ['VB', blame], ['NP', ['PRP', you]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['VP', ['VBD', added], ['NP', ['NN', anything]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1700020000178,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', blame],
                ['NP', ['PRP', you]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', added],
                ['NP', ['NN', anything]],
                ['.', '.']
              ]).
pllm:training(1700020000178,
              tree_to_toks,
              ['I', do, not, blame, you, '.', 'I', do, not, think, they, added, anything, '.']).
pllm:training(1700030000179,
              string,
              "The worst part was at the end of Return of the Jedi.").
pllm:training(1700030000179,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJS', worst], ['NN', part]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'PP',
                      ['IN', at],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', end]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NN', 'Return']],
                            ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700030000179,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJS', worst], ['NN', part]],
                ['VBD', was],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(1700030000179,
              tree_to_toks,
              ['The-worst-part', was, at, 'the-end', of, 'Return', of, 'the-Jedi', '.']).
pllm:training(1700040000180, string, "Oh, when he put in Hayden Christensen?").
pllm:training(1700040000180,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                [ 'SBAR',
                  ['WHADVP', ['WRB', when]],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', put],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Hayden'], ['NNP', 'Christensen']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1700040000180,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', put],
                ['IN', in],
                ['NP', ['NNP', 'Hayden'], ['NNP', 'Christensen']],
                ['.', ?]
              ]).
pllm:training(1700040000180,
              tree_to_toks,
              ['Oh', ',', when, he, put, in, 'Hayden-Christensen', ?]).
pllm:training(1700050000181, string, "Yeah - I never wanted to see him again.").
pllm:training(1700050000181,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', -],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', never]],
                  [ 'VP',
                    ['VBD', wanted],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', see], ['NP', ['PRP', him]], ['ADVP', ['RB', again]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700050000181,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', -],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['PRP', him]],
                ['ADVP', ['RB', again]],
                ['.', '.']
              ]).
pllm:training(1700050000181,
              tree_to_toks,
              ['Yeah', -, 'I', never, wanted, to, see, him, again, '.']).
pllm:training(1700060000182,
              string,
              "Same here - he drained all the energy out of the room.").
pllm:training(1700060000182,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NP', ['JJ', 'Same'], ['RB', here]], ['PP', ['HYPH', -], ['NP', ['PRP', he]]]],
                  [ 'VP',
                    ['VBD', drained],
                    ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                    ['PP', ['IN', out], ['PP', ['IN', of], ['NP', ['DT', the], ['NN', room]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700060000182,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['JJ', 'Same'], ['RB', here]],
                ['HYPH', -],
                ['NP', ['PRP', he]],
                ['VBD', drained],
                ['NP', ['PDT', all], ['DT', the], ['NN', energy]],
                ['IN', out],
                ['IN', of],
                ['NP', ['DT', the], ['NN', room]],
                ['.', '.']
              ]).
pllm:training(1700060000182,
              tree_to_toks,
              ['Same-here', -, he, drained, 'all-the-energy', out, of, 'the-room', '.']).
pllm:training(1700070000183,
              string,
              "Plus, they changed the music at the end.  I liked the original song better.").
pllm:training(1700070000183,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'Plus'],
                    [',', ','],
                    ['NP', ['PRP', they]],
                    [ 'VP',
                      ['VBD', changed],
                      ['NP', ['DT', the], ['NN', music]],
                      ['PP', ['IN', at], ['NP', ['DT', the], ['NN', end]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', liked],
                      ['NP', ['DT', the], ['JJ', original], ['NN', song]],
                      ['ADVP', ['RBR', better]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1700070000183,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['CC', 'Plus'],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VBD', changed],
                ['NP', ['DT', the], ['NN', music]],
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', original], ['NN', song]],
                ['ADVP', ['RBR', better]],
                ['.', '.']
              ]).
pllm:training(1700070000183,
              tree_to_toks,
              [ 'Plus',
                (','),
                they,
                changed,
                'the-music',
                at,
                'the-end',
                ('.'),
                'I',
                liked,
                'the-original-song',
                better,
                ('.')
              ]).
pllm:training(1700080000184, string, "You actually liked that song?  Ha!").
pllm:training(1700080000184,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    ['ADVP', ['RB', actually]],
                    ['VP', ['VBD', liked], ['SBAR', ['IN', that], ['FRAG', ['NP', ['NN', song]]]]],
                    ['.', ?]
                  ]
                ],
                ['CORENLP', ['INTJ', ['UH', 'Ha'], ['.', '.']]]
              ]).
pllm:training(1700080000184,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', actually]],
                ['VBD', liked],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NN', song]],
                ['.', ?],
                mark('CORENLP'),
                ['INTJ', ['UH', 'Ha'], ['.', '.']]
              ]).
pllm:training(1700080000184,
              tree_to_toks,
              ['You', actually, liked, that, song, ?, 'Ha', '.']).
pllm:training(1700090000185,
              string,
              "In my defense, I was five when the original came out.").
pllm:training(1700090000185,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['PP', ['IN', 'In'], ['NP', ['PRP$', my], ['NN', defense]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['CD', five]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['DT', the], ['JJ', original]],
                          ['VP', ['VBD', came], ['PRT', ['RP', out]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1700090000185,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'In'],
                ['NP', ['PRP$', my], ['NN', defense]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['NP', ['CD', five]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['DT', the], ['JJ', original]],
                ['VBD', came],
                ['PRT', ['RP', out]],
                ['.', '.']
              ]).
pllm:training(1700090000185,
              tree_to_toks,
              ['In', 'my-defense', ',', 'I', was, five, when, 'the-original', came, out, '.']).
pllm:training(1700100000186,
              string,
              "Now I have something new to hold against you.").
pllm:training(1700100000186,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Now']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', have],
                  [ 'NP',
                    ['NP', ['NN', something]],
                    [ 'ADJP',
                      ['JJ', new],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', hold], ['PP', ['IN', against], ['NP', ['PRP', you]]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1700100000186,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Now']],
                ['NP', ['PRP', 'I']],
                ['AUX', have],
                ['NP', ['NN', something]],
                'ADJP',
                ['JJ', new],
                mark('S'),
                ['TO', to],
                ['VB', hold],
                ['IN', against],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(1700100000186,
              tree_to_toks,
              ['Now', 'I', have, something, 'ADJP', new, to, hold, against, you, '.']).
pllm:training(1800010000188,
              string,
              "If you watched all of the movies, which order would you view them?").
pllm:training(1800010000188,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'SBAR',
                    ['IN', 'If'],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VBD', watched],
                        [ 'NP',
                          ['NP', ['DT', all]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['WDT', which], ['NN', order]],
                  ['S', ['MD', would], ['NP', ['PRP', you]], ['VP', ['VB', view], ['NP', ['PRP', them]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(1800010000188,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', watched],
                ['NP', ['DT', all]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                [',', ','],
                ['NP', ['WDT', which], ['NN', order]],
                mark('S'),
                ['MD', would],
                ['NP', ['PRP', you]],
                ['VB', view],
                ['NP', ['PRP', them]],
                ['.', ?]
              ]).
pllm:training(1800010000188,
              tree_to_toks,
              [ 'If',
                you,
                watched,
                all,
                of,
                'the-movies',
                (','),
                'which-order',
                would,
                you,
                view,
                them,
                (?)
              ]).
pllm:training(1800020000189,
              string,
              "Ah, that's a highly debated question.  I guess I would go chronologically.").
pllm:training(1800020000189,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Ah']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['DT', a],
                        ['ADJP', ['RB', highly], ['VBN', debated]],
                        ['NN', question]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', guess],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['MD', would],
                            ['VP', ['VB', go], ['ADVP', ['RB', chronologically]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800020000189,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Ah']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['ADJP', ['RB', highly], ['VBN', debated]], ['NN', question]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', go],
                ['ADVP', ['RB', chronologically]],
                ['.', '.']
              ]).
pllm:training(1800020000189,
              tree_to_toks,
              [ 'Ah',
                (','),
                that,
                '\'s',
                'a-highly-debated-question',
                ('.'),
                'I',
                guess,
                'I',
                would,
                go,
                chronologically,
                ('.')
              ]).
pllm:training(1800030000190, string, "Really?  Interesting.").
pllm:training(1800030000190,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                ['CORENLP', ['NP', ['JJ', 'Interesting'], ['.', '.']]]
              ]).
pllm:training(1800030000190,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                ['NP', ['JJ', 'Interesting'], ['.', '.']]
              ]).
pllm:training(1800030000190, tree_to_toks, ['Really', ?, 'Interesting-.']).
pllm:training(1800040000191,
              string,
              "Yeah.  I think I would want to see the rise and fall of Anakin before I watched the stories of his children.").
pllm:training(1800040000191,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', want],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', see],
                                    [ 'NP',
                                      [ 'NP',
                                        ['DT', the],
                                        ['NN', rise],
                                        ['CC', and],
                                        ['NN', fall]
                                      ],
                                      ['PP', ['IN', of], ['NP', ['NNP', 'Anakin']]]
                                    ],
                                    [ 'SBAR',
                                      ['IN', before],
                                      [ 'S',
                                        ['NP', ['PRP', 'I']],
                                        [ 'VP',
                                          ['VBD', watched],
                                          [ 'NP',
                                            ['NP', ['DT', the], ['NNS', stories]],
                                            [ 'PP',
                                              ['IN', of],
                                              ['NP', ['PRP$', his], ['NNS', children]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800040000191,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', want],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['DT', the], ['NN', rise], ['CC', and], ['NN', fall]],
                ['IN', of],
                ['NP', ['NNP', 'Anakin']],
                mark('SBAR'),
                ['IN', before],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['NNS', stories]],
                ['IN', of],
                ['NP', ['PRP$', his], ['NNS', children]],
                ['.', '.']
              ]).
pllm:training(1800040000191,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'I',
                think,
                'I',
                would,
                want,
                to,
                see,
                'the-rise-and-fall',
                of,
                'Anakin',
                before,
                'I',
                watched,
                'the-stories',
                of,
                'his-children',
                ('.')
              ]).
pllm:training(1800050000192,
              string,
              "See, now I'm more apt to go in order of release.").
pllm:training(1800050000192,
              text_to_tree,
              [ 'S',
                ['INTJ', ['VB', 'See']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', '\'m'],
                  [ 'ADJP',
                    ['RBR', more],
                    ['JJ', apt],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', go],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NP', ['NN', order]],
                              ['PP', ['IN', of], ['NP', ['NN', release]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1800050000192,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['VB', 'See']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['PRP', 'I']],
                ['AUX', '\'m'],
                'ADJP',
                ['RBR', more],
                ['JJ', apt],
                mark('S'),
                ['TO', to],
                ['VB', go],
                ['IN', in],
                ['NP', ['NN', order]],
                ['IN', of],
                ['NP', ['NN', release]],
                ['.', '.']
              ]).
pllm:training(1800050000192,
              tree_to_toks,
              ['See', ',', now, 'I', '\'m', 'ADJP', more, apt, to, go, in, order, of, release, '.']).
pllm:training(1800060000193, string, "Really?").
pllm:training(1800060000193, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(1800060000193, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(1800060000193, tree_to_toks, ['Really', ?]).
pllm:training(1800070000194,
              string,
              "Yes.  So, I would stars with Star Wars, then Empire Strikes Back, then Return of the Jedi, then I would...").
pllm:training(1800070000194,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      [',', ','],
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', would],
                        [ 'VP',
                          ['NP', ['NNS', stars]],
                          ['PP', ['IN', with], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'S',
                      ['ADVP', ['RB', then]],
                      ['NP', ['NNP', 'Empire']],
                      [ 'VP',
                        ['VBZ', 'Strikes'],
                        [ 'NP',
                          [ 'NP',
                            ['NML', ['ADVP', ['RB', 'Back']], [',', ','], ['ADVP', ['RB', then]]],
                            ['NNP', 'Return']
                          ],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['S', ['ADVP', ['RB', then]], ['NP', ['PRP', 'I']], ['VP', ['VB', 'would.']]],
                    [',', ','],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  ['FRAG', ['.', '.']]
                ]
              ]).
pllm:training(1800070000194,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['NP', ['NNS', stars]],
                ['IN', with],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', then]],
                ['NP', ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                [ 'NP',
                  ['NML', ['ADVP', ['RB', 'Back']], [',', ','], ['ADVP', ['RB', then]]],
                  ['NNP', 'Return']
                ],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', 'I']],
                ['VB', 'would.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(1800070000194,
              tree_to_toks,
              [ 'Yes',
                ('.'),
                'So',
                (','),
                'I',
                would,
                stars,
                with,
                'Star-Wars',
                (','),
                then,
                'Empire',
                'Strikes',
                'Back--then-Return',
                of,
                'the-Jedi',
                (','),
                then,
                'I',
                'would.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(1800080000195,
              string,
              "I get it.  Then you would move on to Episodes 1, 2, and 3.").
pllm:training(1800080000195,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', get], ['NP', ['PRP', it]]], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Then']],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', move],
                      ['ADVP', ['RB', on]],
                      [ 'PP',
                        ['TO', to],
                        [ 'NP',
                          ['NP', ['NNS', 'Episodes']],
                          ['CD', '1'],
                          [',', ','],
                          ['CD', '2'],
                          [',', ','],
                          ['CC', and],
                          ['CD', '3']
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1800080000195,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', get],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Then']],
                ['NP', ['PRP', you]],
                ['MD', would],
                ['VB', move],
                ['ADVP', ['RB', on]],
                ['TO', to],
                ['NP', ['NNS', 'Episodes']],
                ['CD', '1'],
                [',', ','],
                ['CD', '2'],
                [',', ','],
                ['CC', and],
                ['CD', '3'],
                ['.', '.']
              ]).
pllm:training(1800080000195,
              tree_to_toks,
              ['I', get, it, '.', 'Then', you, would, move, on, to, 'Episodes', '1', ',', '2', ',', and, '3', '.']).
pllm:training(1800090000196,
              string,
              "Exactly.  And then I'd finish with The Force Awakens and Rogue One.").
pllm:training(1800090000196,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['ADVP', ['RB', then]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', '\'d'],
                      [ 'VP',
                        ['VB', finish],
                        [ 'PP',
                          ['IN', with],
                          [ 'NP',
                            ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                            ['CC', and],
                            ['NP', ['NNP', 'Rogue'], ['CD', 'One']]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(1800090000196,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['ADVP', ['RB', then]],
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', finish],
                ['IN', with],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['CC', and],
                ['NP', ['NNP', 'Rogue'], ['CD', 'One']],
                ['.', '.']
              ]).
pllm:training(1800090000196,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'And',
                then,
                'I',
                '\'d',
                finish,
                with,
                'The-Force-Awakens',
                and,
                'Rogue-One',
                ('.')
              ]).
pllm:training(1800100000197,
              string,
              "Well, luckily there is no wrong way to watch the series.").
pllm:training(1800100000197,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['ADVP', ['RB', luckily]],
                ['NP', ['EX', there]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['DT', no], ['JJ', wrong], ['NN', way]],
                    [ 'SBAR',
                      [ 'S',
                        ['VP', ['TO', to], ['VP', ['VB', watch], ['NP', ['DT', the], ['NN', series]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(1800100000197,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['ADVP', ['RB', luckily]],
                ['NP', ['EX', there]],
                ['AUX', is],
                ['NP', ['DT', no], ['JJ', wrong], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', watch],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(1800100000197,
              tree_to_toks,
              ['Well', ',', luckily, there, is, 'no-wrong-way', to, watch, 'the-series', '.']).
pllm:training(1900010000199,
              string,
              "Who is your favorite character in Star Wars?").
pllm:training(1900010000199,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(1900010000199,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(1900010000199,
              tree_to_toks,
              ['Who', is, 'your-favorite-character', in, 'Star-Wars', ?]).
pllm:training(1900020000200, string, "I like C-3PO.").
pllm:training(1900020000200,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['VP', ['VB', like], ['FRAG', ['X', ['SYM', 'C']], [:, -], ['NP', ['CD', '3'], ['NN', 'PO']]]],
                ['.', '.']
              ]).
pllm:training(1900020000200,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('FRAG'),
                ['X', ['SYM', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NN', 'PO']],
                ['.', '.']
              ]).
pllm:training(1900020000200, tree_to_toks, ['I', like, 'C', -, '3-PO', '.']).
pllm:training(1900030000201,
              string,
              "He is really good. Which movie is he the best in?").
pllm:training(1900030000201,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', really], ['JJ', good]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WDT', 'Which'], ['NN', movie]],
                    [ 'S',
                      ['VBZ', is],
                      ['NP', ['PRP', he]],
                      ['PP', ['NP', ['DT', the], ['JJS', best]], ['IN', in]]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(1900030000201,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['ADJP', ['RB', really], ['JJ', good]],
                ['.', '.'],
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', movie]],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP', he]],
                ['NP', ['DT', the], ['JJS', best]],
                ['IN', in],
                ['.', ?]
              ]).
pllm:training(1900030000201,
              tree_to_toks,
              ['He', is, really, good, '.', 'Which-movie', is, he, 'the-best', in, ?]).
pllm:training(1900040000202, string, "He is awesome in the first movie.").
pllm:training(1900040000202,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'ADJP',
                      ['JJ', awesome],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['NN', movie]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900040000202,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                'ADJP',
                ['JJ', awesome],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(1900040000202,
              tree_to_toks,
              ['He', is, 'ADJP', awesome, in, 'the-first-movie', '.']).
pllm:training(1900050000203,
              string,
              "Yeah, they really developed his character well.").
pllm:training(1900050000203,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['VBD', developed],
                    ['NP', ['PRP$', his], ['NN', character]],
                    ['ADVP', ['RB', well]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900050000203,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', really]],
                ['VBD', developed],
                ['NP', ['PRP$', his], ['NN', character]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(1900050000203,
              tree_to_toks,
              ['Yeah', ',', they, really, developed, 'his-character', well, '.']).
pllm:training(1900060000204, string, "Do you like R2-D2 as well?").
pllm:training(1900060000204,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NN', 'R2-D2']], ['ADVP', ['RB', as], ['RB', well]]],
                ['.', ?]
              ]).
pllm:training(1900060000204,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NN', 'R2-D2']],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', ?]
              ]).
pllm:training(1900060000204, tree_to_toks, ['Do', you, like, 'R2-D2', as, well, ?]).
pllm:training(1900070000205, string, "Yes, he is really funny.").
pllm:training(1900070000205,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', is], ['ADJP', ['RB', really], ['JJ', funny]]],
                  ['.', '.']
                ]
              ]).
pllm:training(1900070000205,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['ADJP', ['RB', really], ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(1900070000205, tree_to_toks, ['Yes', ',', he, is, really, funny, '.']).
pllm:training(1900080000206, string, "Did you like him in the prequels?").
pllm:training(1900080000206,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['PRP', him]],
                  ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', prequels]]]
                ],
                ['.', ?]
              ]).
pllm:training(1900080000206,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', ?]
              ]).
pllm:training(1900080000206, tree_to_toks, ['Did', you, like, him, in, 'the-prequels', ?]).
pllm:training(1900090000207,
              string,
              "No, it was just a little strange to see him there.").
pllm:training(1900090000207,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', just]],
                    ['ADJP', ['NP', ['DT', a], ['JJ', little]], ['JJ', strange]],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        ['VP', ['VB', see], ['NP', ['PRP', him]], ['ADVP', ['RB', there]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900090000207,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJ', strange],
                mark('S'),
                ['TO', to],
                ['VB', see],
                ['NP', ['PRP', him]],
                ['ADVP', ['RB', there]],
                ['.', '.']
              ]).
pllm:training(1900090000207,
              tree_to_toks,
              ['No', ',', it, was, just, 'ADJP', 'a-little', strange, to, see, him, there, '.']).
pllm:training(1900100000208,
              string,
              "Yeah, he should have just been in the originals.").
pllm:training(1900100000208,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['MD', should],
                    [ 'VP',
                      ['VB', have],
                      ['ADVP', ['RB', just]],
                      [ 'VP',
                        ['VBN', been],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', originals]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(1900100000208,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['MD', should],
                ['VB', have],
                ['ADVP', ['RB', just]],
                ['VBN', been],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(1900100000208,
              tree_to_toks,
              ['Yeah', ',', he, should, have, just, been, in, 'the-originals', '.']).
pllm:training(2000010000210,
              string,
              "Did you know Jabba the Hut was supposed to be furry?").
pllm:training(2000010000210,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'NP',
                      ['NP', ['NNP', 'Jabba']],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', the], ['NNP', 'Hut']],
                          [ 'VP',
                            ['VBD', was],
                            [ 'VP',
                              ['VBN', supposed],
                              ['S', ['VP', ['TO', to], ['VP', ['VB', be], ['ADJP', ['JJ', furry]]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2000010000210,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['NNP', 'Jabba']],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VBD', was],
                ['VBN', supposed],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['ADJP', ['JJ', furry]],
                ['.', ?]
              ]).
pllm:training(2000010000210,
              tree_to_toks,
              ['Did', you, know, 'Jabba', 'the-Hut', was, supposed, to, be, furry, ?]).
pllm:training(2000020000211, string, "Huh?  You're making that up.").
pllm:training(2000020000211,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Huh'], ['.', ?]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['VB', '\'re'],
                      ['VP', ['VBG', making], ['NP', ['DT', that]], ['PRT', ['RP', up]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2000020000211,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Huh'], ['.', ?]],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', '\'re'],
                ['VBG', making],
                ['NP', ['DT', that]],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(2000020000211, tree_to_toks, ['Huh-?', 'You', '\'re', making, that, up, '.']).
pllm:training(2000030000212,
              string,
              "No, I'm serious.  He was originally written as a furry character.").
pllm:training(2000030000212,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', '\'m'], ['ADJP', ['JJ', serious]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', originally]],
                      [ 'VP',
                        ['VBN', written],
                        ['PP', ['IN', as], ['NP', ['DT', a], ['JJ', furry], ['NN', character]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2000030000212,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADJP', ['JJ', serious]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADVP', ['RB', originally]],
                ['VBN', written],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', furry], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(2000030000212,
              tree_to_toks,
              [ 'No',
                (','),
                'I',
                '\'m',
                serious,
                ('.'),
                'He',
                was,
                originally,
                written,
                (as),
                'a-furry-character',
                ('.')
              ]).
pllm:training(2000040000213, string, "I just can't even picture that.").
pllm:training(2000040000213,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                [ 'VP',
                  ['MD', can],
                  ['RB', not],
                  ['ADVP', ['RB', even]],
                  ['VP', ['VB', picture], ['NP', ['DT', that]]]
                ],
                ['.', '.']
              ]).
pllm:training(2000040000213,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['MD', can],
                ['RB', not],
                ['ADVP', ['RB', even]],
                ['VB', picture],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(2000040000213, tree_to_toks, ['I', just, can, not, even, picture, that, '.']).
pllm:training(2000050000214,
              string,
              "Yeah, I guess the idea got dumped because they didn't think he'd be scary enough.").
pllm:training(2000050000214,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', guess],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['DT', the], ['NN', idea]],
                      [ 'VP',
                        ['VBD', got],
                        [ 'VP',
                          ['VBN', dumped],
                          [ 'SBAR',
                            ['IN', because],
                            [ 'S',
                              ['NP', ['PRP', they]],
                              [ 'VP',
                                ['AUX', did],
                                ['RB', 'n\'t'],
                                [ 'VP',
                                  ['VB', think],
                                  [ 'SBAR',
                                    [ 'S',
                                      ['NP', ['PRP', he]],
                                      [ 'VP',
                                        ['MD', '\'d'],
                                        [ 'VP',
                                          ['AUX', be],
                                          ['ADJP', ['JJ', scary]],
                                          ['ADVP', ['RB', enough]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2000050000214,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', idea]],
                ['VBD', got],
                ['VBN', dumped],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', did],
                ['RB', 'n\'t'],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['MD', '\'d'],
                ['AUX', be],
                ['ADJP', ['JJ', scary]],
                ['ADVP', ['RB', enough]],
                ['.', '.']
              ]).
pllm:training(2000050000214,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                guess,
                'the-idea',
                got,
                dumped,
                because,
                they,
                did,
                'n\'t',
                think,
                he,
                '\'d',
                be,
                scary,
                enough,
                ('.')
              ]).
pllm:training(2000060000215,
              string,
              "Jabba is pretty ugly looking with his pasty skin and what not.").
pllm:training(2000060000215,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Jabba']],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADJP', ['RB', pretty], ['JJ', ugly]],
                    [ 'S',
                      [ 'VP',
                        [ 'VP',
                          ['VBG', looking],
                          ['PP', ['IN', with], ['NP', ['PRP$', his], ['JJ', pasty], ['NN', skin]]]
                        ],
                        ['CC', and],
                        ['NP', ['WP', what], ['RB', not]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000060000215,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Jabba']],
                ['VBZ', is],
                ['ADJP', ['RB', pretty], ['JJ', ugly]],
                mark('S'),
                ['VBG', looking],
                ['IN', with],
                ['NP', ['PRP$', his], ['JJ', pasty], ['NN', skin]],
                ['CC', and],
                ['NP', ['WP', what], ['RB', not]],
                ['.', '.']
              ]).
pllm:training(2000060000215,
              tree_to_toks,
              [ 'Jabba',
                (is),
                pretty,
                ugly,
                looking,
                with,
                'his-pasty-skin',
                and,
                'what-not',
                ('.')
              ]).
pllm:training(2000070000216,
              string,
              "If he was furry, you'd just want to pet him, not hurt him.").
pllm:training(2000070000216,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'If'],
                    ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', furry]]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', '\'d'],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VB', want],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VP', ['VB', pet], ['NP', ['PRP', him]]],
                            [',', ','],
                            ['RB', not],
                            ['VP', ['VB', hurt], ['NP', ['PRP', him]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000070000216,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', furry]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['ADVP', ['RB', just]],
                ['VB', want],
                mark('S'),
                ['TO', to],
                ['VB', pet],
                ['NP', ['PRP', him]],
                [',', ','],
                ['RB', not],
                ['VB', hurt],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(2000070000216,
              tree_to_toks,
              ['If', he, was, furry, ',', you, '\'d', just, want, to, pet, him, ',', not, hurt, him, '.']).
pllm:training(2000080000217,
              string,
              "That would have been an odd dynamic for the series.").
pllm:training(2000080000217,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      [ 'VP',
                        ['VBN', been],
                        [ 'NP',
                          ['NP', ['DT', an], ['JJ', odd], ['NN', dynamic]],
                          ['PP', ['IN', for], ['NP', ['DT', the], ['NN', series]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000080000217,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', have],
                ['VBN', been],
                ['NP', ['DT', an], ['JJ', odd], ['NN', dynamic]],
                ['IN', for],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(2000080000217,
              tree_to_toks,
              ['That', would, have, been, 'an-odd-dynamic', for, 'the-series', '.']).
pllm:training(2000090000218, string, "I'm glad George Lucas came to his senses.").
pllm:training(2000090000218,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    [ 'ADJP',
                      ['JJ', glad],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBD', came],
                            ['PP', ['IN', to], ['NP', ['PRP$', his], ['NNS', senses]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2000090000218,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', came],
                ['IN', to],
                ['NP', ['PRP$', his], ['NNS', senses]],
                ['.', '.']
              ]).
pllm:training(2000090000218,
              tree_to_toks,
              ['I', '\'m', 'ADJP', glad, 'George-Lucas', came, to, 'his-senses', '.']).
pllm:training(2000100000219, string, "At least he did about something!").
pllm:training(2000100000219,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['IN', 'At'], ['JJS', least]],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBD', did], ['PP', ['IN', about], ['NP', ['NN', something]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2000100000219,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['IN', 'At'], ['JJS', least]],
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['IN', about],
                ['NP', ['NN', something]],
                ['.', '.']
              ]).
pllm:training(2000100000219, tree_to_toks, ['At', least, he, did, about, something, '.']).
pllm:training(2100010000221, string, "Have you ever seen Red Letter Media?").
pllm:training(2100010000221,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  ['ADVP', ['RB', ever]],
                  ['VP', ['VBN', seen], ['NP', ['NNP', 'Red'], ['NNP', 'Letter'], ['NNP', 'Media']]],
                  ['.', ?]
                ]
              ]).
pllm:training(2100010000221,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', ever]],
                ['VBN', seen],
                ['NP', ['NNP', 'Red'], ['NNP', 'Letter'], ['NNP', 'Media']],
                ['.', ?]
              ]).
pllm:training(2100010000221,
              tree_to_toks,
              ['Have', you, ever, seen, 'Red-Letter-Media', ?]).
pllm:training(2100020000222, string, "I don't know think so.. what's it about?").
pllm:training(2100020000222,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      ['VP', ['VB', know], ['S', ['VP', ['VB', think], ['ADVP', ['RB', so]]]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  ['CORENLP', ['FRAG', ['.', '.']]],
                  [ 'SBAR',
                    ['NP', ['WP', what]],
                    ['S', ['AUX', '\'s'], ['NP', ['PRP', it]], ['VP', ['ADVP', ['RB', about]]]],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(2100020000222,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                mark('S'),
                ['VB', think],
                ['ADVP', ['RB', so]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP', it]],
                ['ADVP', ['RB', about]],
                ['.', ?]
              ]).
pllm:training(2100020000222,
              tree_to_toks,
              ['I', do, not, know, think, so, '.', '.', what, '\'s', it, about, ?]).
pllm:training(2100030000223,
              string,
              "It's this guy who does reviews on Youtube.  One of the things he's most famous for it this several of his Star Wars movie reviews, including the Phantom Menace.").
pllm:training(2100030000223,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['NP', ['DT', this], ['NN', guy]],
                        [ 'SBAR',
                          ['NP', ['WP', who]],
                          [ 'S',
                            [ 'VP',
                              ['VBZ', does],
                              [ 'NP',
                                ['NP', ['NNS', reviews]],
                                ['PP', ['IN', on], ['NP', ['NNP', 'Youtube']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  [ 'NP',
                    ['NP', ['CD', 'One']],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNS', things]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', he]],
                            [ 'VP',
                              ['AUX', '\'s'],
                              [ 'ADJP',
                                ['RBS', most],
                                ['JJ', famous],
                                ['PP', ['IN', for], ['NP', ['PRP', it]]]
                              ],
                              [ 'ADVP',
                                ['DT', this],
                                ['JJ', several],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['PRP$', his],
                                    ['NNP', 'Star'],
                                    ['NNP', 'Wars'],
                                    ['NN', movie]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [ 'VP',
                    ['VBZ', reviews],
                    [',', ','],
                    [ 'PP',
                      ['VBG', including],
                      ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100030000223,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['NP', ['DT', this], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', does],
                ['NP', ['NNS', reviews]],
                ['IN', on],
                ['NP', ['NNP', 'Youtube']],
                ['.', '.'],
                mark('S'),
                ['NP', ['CD', 'One']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', things]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', '\'s'],
                'ADJP',
                ['RBS', most],
                ['JJ', famous],
                ['IN', for],
                ['NP', ['PRP', it]],
                'ADVP',
                ['DT', this],
                ['JJ', several],
                ['IN', of],
                ['NP', ['PRP$', his], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['VBZ', reviews],
                [',', ','],
                ['VBG', including],
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                ['.', '.']
              ]).
pllm:training(2100030000223,
              tree_to_toks,
              [ 'It',
                '\'s',
                'this-guy',
                who,
                does,
                reviews,
                on,
                'Youtube',
                ('.'),
                'One',
                of,
                'the-things',
                he,
                '\'s',
                'ADJP',
                most,
                famous,
                for,
                it,
                'ADVP',
                this,
                several,
                of,
                'his-Star-Wars-movie',
                reviews,
                (','),
                including,
                'the-Phantom-Menace',
                ('.')
              ]).
pllm:training(2100040000224, string, "No, I haven't.").
pllm:training(2100040000224,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', 'n\'t']],
                  ['.', '.']
                ]
              ]).
pllm:training(2100040000224,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', 'n\'t'],
                ['.', '.']
              ]).
pllm:training(2100040000224, tree_to_toks, ['No', ',', 'I', have, 'n\'t', '.']).
pllm:training(2100050000225,
              string,
              "Oh, man, it is HILARIOUS!  I mean, he doesn't just nitpick things, but he offers a lot of really wise insight while pretending to be this deranged old guy.").
pllm:training(2100050000225,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['INTJ', ['UH', man]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', is], ['ADJP', ['JJ', 'HILARIOUS']]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                    [ 'PRN',
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBZ', does],
                          ['RB', not],
                          ['ADVP', ['RB', just]],
                          ['VP', ['VB', nitpick], ['NP', ['NNS', things]]]
                        ]
                      ],
                      [',', ',']
                    ],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      [ 'VP',
                        ['VBZ', offers],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', lot]],
                          [ 'PP',
                            ['IN', of],
                            ['NP', ['ADJP', ['RB', really], ['JJ', wise]], ['NN', insight]]
                          ]
                        ],
                        [ 'PP',
                          ['IN', while],
                          [ 'S',
                            [ 'VP',
                              ['VBG', pretending],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', be],
                                    [ 'NP',
                                      ['DT', this],
                                      ['ADJP', ['VBN', deranged], ['JJ', old]],
                                      ['NN', guy]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100050000225,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', 'HILARIOUS']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['ADVP', ['RB', just]],
                ['VB', nitpick],
                ['NP', ['NNS', things]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', offers],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['ADJP', ['RB', really], ['JJ', wise]], ['NN', insight]],
                ['IN', while],
                mark('S'),
                ['VBG', pretending],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', this], ['ADJP', ['VBN', deranged], ['JJ', old]], ['NN', guy]],
                ['.', '.']
              ]).
pllm:training(2100050000225,
              tree_to_toks,
              [ 'Oh',
                (','),
                man,
                (','),
                it,
                (is),
                'HILARIOUS',
                ('.'),
                'I',
                mean,
                'PRN',
                (','),
                he,
                does,
                not,
                just,
                nitpick,
                things,
                (','),
                but,
                he,
                offers,
                'a-lot',
                of,
                'really-wise-insight',
                while,
                pretending,
                to,
                be,
                'this-deranged-old-guy',
                ('.')
              ]).
pllm:training(2100060000226, string, "Oh, man, it's sounds pretty funny.").
pllm:training(2100060000226,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh']],
                  [',', ','],
                  ['INTJ', ['UH', man]],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['VP', ['VBZ', sounds], ['ADJP', ['RB', pretty], ['JJ', funny]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100060000226,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['INTJ', ['UH', man]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['VBZ', sounds],
                ['ADJP', ['RB', pretty], ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(2100060000226,
              tree_to_toks,
              ['Oh', ',', man, ',', it, '\'s', sounds, pretty, funny, '.']).
pllm:training(2100070000227,
              string,
              "It is.  You'll have to look it up.  I mean, he points out things like, there's no real protagonist in the movie.").
pllm:training(2100070000227,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', is]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'You']],
                      [ 'VP',
                        ['MD', '\'ll'],
                        [ 'VP',
                          ['VB', have],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', look], ['NP', ['PRP', it]], ['PRT', ['RP', up]]]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', mean],
                      [ 'PRN',
                        [',', ','],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', points],
                            ['PRT', ['RP', out]],
                            ['SBAR', ['S', ['NP', ['NNS', things]], ['VP', ['VB', like]]]]
                          ]
                        ],
                        [',', ',']
                      ],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['AUX', '\'s'],
                            [ 'NP',
                              ['NP', ['DT', no], ['JJ', real], ['NN', protagonist]],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['NN', movie]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100070000227,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['MD', '\'ll'],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', look],
                ['NP', ['PRP', it]],
                ['PRT', ['RP', up]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                'PRN',
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', points],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', things]],
                ['VB', like],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['AUX', '\'s'],
                ['NP', ['DT', no], ['JJ', real], ['NN', protagonist]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(2100070000227,
              tree_to_toks,
              [ 'It',
                (is),
                ('.'),
                'You',
                '\'ll',
                have,
                to,
                look,
                it,
                up,
                ('.'),
                'I',
                mean,
                'PRN',
                (','),
                he,
                points,
                out,
                things,
                like,
                (','),
                there,
                '\'s',
                'no-real-protagonist',
                in,
                'the-movie',
                ('.')
              ]).
pllm:training(2100080000228, string, "Uh.. isn't that Anakin?").
pllm:training(2100080000228,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Uh'], ['.', '.']]],
                [ 'SEQBAR',
                  ['CORENLP', ['FRAG', ['.', '.']]],
                  [ 'CORENLP',
                    [ 'S',
                      [ 'VP',
                        ['VBZ', is],
                        ['RB', not],
                        ['SBAR', ['IN', that], ['FRAG', ['NP', ['NNP', 'Anakin']]]]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(2100080000228,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Uh'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VBZ', is],
                ['RB', not],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NNP', 'Anakin']],
                ['.', ?]
              ]).
pllm:training(2100080000228, tree_to_toks, ['Uh', '.', '.', is, not, that, 'Anakin', ?]).
pllm:training(2100090000229,
              string,
              "No, not really.  I mean, he doesn't show up until about the middle of the film, and pretty much affects the story only by accident.").
pllm:training(2100090000229,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['ADVP', ['RB', not], ['RB', really]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', mean]]],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      [ 'VP',
                        ['VBZ', does],
                        ['RB', not],
                        [ 'VP',
                          ['VB', show],
                          ['PRT', ['RP', up]],
                          [ 'PP',
                            ['IN', until],
                            [ 'PP',
                              ['IN', about],
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', middle]],
                                ['PP', ['IN', of], ['NP', ['DT', the], ['NN', film]]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [',', ','],
                      ['CC', and],
                      ['ADVP', ['RB', pretty], ['RB', much]],
                      [ 'VP',
                        ['VBZ', affects],
                        ['NP', ['DT', the], ['NN', story]],
                        ['ADVP', ['RB', only]],
                        ['PP', ['IN', by], ['NP', ['NN', accident]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2100090000229,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['ADVP', ['RB', not], ['RB', really]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['VB', show],
                ['PRT', ['RP', up]],
                ['IN', until],
                ['IN', about],
                ['NP', ['DT', the], ['NN', middle]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', film]],
                [',', ','],
                ['CC', and],
                ['ADVP', ['RB', pretty], ['RB', much]],
                ['VBZ', affects],
                ['NP', ['DT', the], ['NN', story]],
                ['ADVP', ['RB', only]],
                ['IN', by],
                ['NP', ['NN', accident]],
                ['.', '.']
              ]).
pllm:training(2100090000229,
              tree_to_toks,
              [ 'No',
                (','),
                not,
                really,
                ('.'),
                'I',
                mean,
                (','),
                he,
                does,
                not,
                show,
                up,
                until,
                about,
                'the-middle',
                of,
                'the-film',
                (','),
                and,
                pretty,
                much,
                affects,
                'the-story',
                only,
                by,
                accident,
                ('.')
              ]).
pllm:training(2100100000230,
              string,
              "Oh, yeah, I remember that.  He just hits a few buttons and the ship takes off on it's own.").
pllm:training(2100100000230,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], [',', ','], ['UH', yeah]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', remember], ['NP', ['DT', that]]],
                  ['.', '.']
                ],
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBZ', hits], ['NP', ['DT', a], ['JJ', few], ['NNS', buttons]]]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['DT', the], ['NN', ship]],
                    [ 'VP',
                      ['VBZ', takes],
                      ['PRT', ['RP', off]],
                      [ 'SBAR',
                        ['IN', on],
                        ['S', ['NP', ['PRP', it]], ['VP', ['AUX', '\'s'], ['VP', ['VB', own]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2100100000230,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], [',', ','], ['UH', yeah]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', remember],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', just]],
                ['VBZ', hits],
                ['NP', ['DT', a], ['JJ', few], ['NNS', buttons]],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', the], ['NN', ship]],
                ['VBZ', takes],
                ['PRT', ['RP', off]],
                mark('SBAR'),
                ['IN', on],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['VB', own],
                ['.', '.']
              ]).
pllm:training(2100100000230,
              tree_to_toks,
              [ 'Oh',
                (','),
                yeah,
                (','),
                'I',
                remember,
                that,
                ('.'),
                'He',
                just,
                hits,
                'a-few-buttons',
                and,
                'the-ship',
                takes,
                off,
                on,
                it,
                '\'s',
                own,
                ('.')
              ]).
pllm:training(2200010000232, string, "Do you like Star Wars?").
pllm:training(2200010000232,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(2200010000232,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(2200010000232, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(2200020000233,
              string,
              "Of course, but I like the old ones the best.").
pllm:training(2200020000233,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course]]],
                [',', ','],
                ['CC', but],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    ['NP', ['DT', the], ['JJ', old], ['NNS', ones]],
                    ['NP', ['DT', the], ['JJS', best]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2200020000233,
              unphrasify,
              [ mark('S'),
                ['IN', 'Of'],
                ['NP', ['NN', course]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', old], ['NNS', ones]],
                ['NP', ['DT', the], ['JJS', best]],
                ['.', '.']
              ]).
pllm:training(2200020000233,
              tree_to_toks,
              ['Of', course, ',', but, 'I', like, 'the-old-ones', 'the-best', '.']).
pllm:training(2200030000234,
              string,
              "The old movies made or the oldest storyline?").
pllm:training(2200030000234,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', old], ['NNS', movies]],
                  [ 'VP',
                    ['VP', ['VBN', made]],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJS', oldest], ['NN', storyline]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2200030000234,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', old], ['NNS', movies]],
                ['VBN', made],
                ['CC', or],
                ['NP', ['DT', the], ['JJS', oldest], ['NN', storyline]],
                ['.', ?]
              ]).
pllm:training(2200030000234,
              tree_to_toks,
              ['The-old-movies', made, or, 'the-oldest-storyline', ?]).
pllm:training(2200040000235,
              string,
              "The older movies. The ones with Harrison Ford and Leia.").
pllm:training(2200040000235,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NP', ['DT', 'The'], ['JJR', older], ['NNS', movies]], ['.', '.']],
                [ 'CORENLP',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['NNS', ones]],
                    [ 'PP',
                      ['IN', with],
                      ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['CC', and], ['NNP', 'Leia']]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200040000235,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['DT', 'The'], ['JJR', older], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                ['NP', ['DT', 'The'], ['NNS', ones]],
                ['IN', with],
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['CC', and], ['NNP', 'Leia']],
                ['.', '.']
              ]).
pllm:training(2200040000235,
              tree_to_toks,
              ['The-older-movies', '.', 'The-ones', with, 'Harrison-Ford-and-Leia', '.']).
pllm:training(2200050000236,
              string,
              "Yea. I would have to agree. Although, the ones coming out now are doing pretty good in the box office.").
pllm:training(2200050000236,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Yea'], ['.', '.']],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['MD', would],
                        ['VP', ['VB', have], ['S', ['VP', ['TO', to], ['VP', ['VB', agree]]]]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'S',
                    ['ADVP', ['IN', 'Although']],
                    [',', ','],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', ones]],
                      ['VP', ['VBG', coming], ['PRT', ['RP', out]], ['ADVP', ['RB', now]]]
                    ],
                    [ 'VP',
                      ['AUX', are],
                      [ 'VP',
                        ['VBG', doing],
                        ['ADJP', ['RB', pretty], ['JJ', good]],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['NN', box], ['NN', office]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200050000236,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Yea'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', agree],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['IN', 'Although']],
                [',', ','],
                ['NP', ['DT', the], ['NNS', ones]],
                ['VBG', coming],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', now]],
                ['AUX', are],
                ['VBG', doing],
                ['ADJP', ['RB', pretty], ['JJ', good]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', box], ['NN', office]],
                ['.', '.']
              ]).
pllm:training(2200050000236,
              tree_to_toks,
              [ 'Yea-.',
                'I',
                would,
                have,
                to,
                agree,
                ('.'),
                'Although',
                (','),
                'the-ones',
                coming,
                out,
                now,
                are,
                doing,
                pretty,
                good,
                in,
                'the-box-office',
                ('.')
              ]).
pllm:training(2200060000237,
              string,
              "Agreed. But George Lucas made his name off of those old movies.").
pllm:training(2200060000237,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['VP', ['VBN', 'Agreed']], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                    [ 'VP',
                      ['VBD', made],
                      ['NP', ['PRP$', his], ['NN', name]],
                      ['PRT', ['IN', off]],
                      ['PP', ['IN', of], ['NP', ['DT', those], ['JJ', old], ['NNS', movies]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200060000237,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VBN', 'Agreed'],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', made],
                ['NP', ['PRP$', his], ['NN', name]],
                ['PRT', ['IN', off]],
                ['IN', of],
                ['NP', ['DT', those], ['JJ', old], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2200060000237,
              tree_to_toks,
              [ 'Agreed',
                ('.'),
                'But',
                'George-Lucas',
                made,
                'his-name',
                off,
                of,
                'those-old-movies',
                ('.')
              ]).
pllm:training(2200070000238,
              string,
              "That's true. They kind of messed up on those middle movies with Jar Jar Binks and the likes.").
pllm:training(2200070000238,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['ADVP', ['RB', kind], ['RB', of]],
                    [ 'VP',
                      ['VBN', messed],
                      ['PRT', ['RP', up]],
                      [ 'PP',
                        ['IN', on],
                        [ 'NP',
                          ['NP', ['DT', those], ['JJ', middle], ['NNS', movies]],
                          [ 'PP',
                            ['IN', with],
                            [ 'NP',
                              ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                              ['CC', and],
                              ['NP', ['DT', the], ['NNS', likes]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200070000238,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VBN', messed],
                ['PRT', ['RP', up]],
                ['IN', on],
                ['NP', ['DT', those], ['JJ', middle], ['NNS', movies]],
                ['IN', with],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar'], ['NNPS', 'Binks']],
                ['CC', and],
                ['NP', ['DT', the], ['NNS', likes]],
                ['.', '.']
              ]).
pllm:training(2200070000238,
              tree_to_toks,
              [ 'That',
                '\'s',
                true,
                ('.'),
                'They',
                kind,
                of,
                messed,
                up,
                on,
                'those-middle-movies',
                with,
                'Jar-Jar-Binks',
                and,
                'the-likes',
                ('.')
              ]).
pllm:training(2200080000239,
              string,
              "Exactly. I am glad they are back to their winning ways.").
pllm:training(2200080000239,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      [ 'ADJP',
                        ['JJ', glad],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VB', are],
                              ['ADVP', ['RB', back]],
                              [ 'PP',
                                ['IN', to],
                                ['NP', ['PRP$', their], ['VBG', winning], ['NNS', ways]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200080000239,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['ADVP', ['RB', back]],
                ['IN', to],
                ['NP', ['PRP$', their], ['VBG', winning], ['NNS', ways]],
                ['.', '.']
              ]).
pllm:training(2200080000239,
              tree_to_toks,
              ['Exactly', '.', 'I', am, 'ADJP', glad, they, are, back, to, 'their-winning-ways', '.']).
pllm:training(2200090000240,
              string,
              "Me too. So many people love Star Wars. It is nice to see them do good movies.").
pllm:training(2200090000240,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['ADVP', ['RB', 'So']],
                      ['NP', ['JJ', many], ['NNS', people]],
                      ['VP', ['VB', love], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'ADJP',
                          ['JJ', nice],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              [ 'VP',
                                ['VB', see],
                                [ 'S',
                                  ['NP', ['PRP', them]],
                                  ['VP', ['VB', do], ['NP', ['JJ', good], ['NNS', movies]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2200090000240,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                ['NP', ['JJ', many], ['NNS', people]],
                ['VB', love],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                'ADJP',
                ['JJ', nice],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('S'),
                ['NP', ['PRP', them]],
                ['VB', do],
                ['NP', ['JJ', good], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2200090000240,
              tree_to_toks,
              [ 'Me',
                too,
                ('.'),
                'So',
                'many-people',
                love,
                'Star-Wars',
                ('.'),
                'It',
                (is),
                'ADJP',
                nice,
                to,
                see,
                them,
                do,
                'good-movies',
                ('.')
              ]).
pllm:training(2200100000241, string, "Yep. And they make more money too.").
pllm:training(2200100000241,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NNP', 'Yep'], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['NP', ['PRP', they]],
                    ['VP', ['VB', make], ['NP', ['JJR', more], ['NN', money]], ['ADVP', ['RB', too]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2200100000241,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['NNP', 'Yep'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', they]],
                ['VB', make],
                ['NP', ['JJR', more], ['NN', money]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(2200100000241,
              tree_to_toks,
              ['Yep-.', 'And', they, make, 'more-money', too, '.']).
pllm:training(2300010000243,
              string,
              "I just came back from Seeing The Force Awakens. I don't understand why people think that Rey is a Mary Sue.").
pllm:training(2300010000243,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VBD', came],
                      ['ADVP', ['RB', back]],
                      [ 'PP',
                        ['IN', from],
                        [ 'S',
                          [ 'VP',
                            ['VBG', 'Seeing'],
                            ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', understand],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', why]],
                        [ 'S',
                          ['NP', ['NNS', people]],
                          [ 'VP',
                            ['VB', think],
                            [ 'SBAR',
                              ['IN', that],
                              [ 'S',
                                ['NP', ['NNP', 'Rey']],
                                ['VP', ['AUX', is], ['NP', ['DT', a], ['NNP', 'Mary'], ['VB', 'Sue']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300010000243,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', came],
                ['ADVP', ['RB', back]],
                ['IN', from],
                mark('S'),
                ['VBG', 'Seeing'],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['VB', understand],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', think],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['AUX', is],
                ['NP', ['DT', a], ['NNP', 'Mary'], ['VB', 'Sue']],
                ['.', '.']
              ]).
pllm:training(2300010000243,
              tree_to_toks,
              [ 'I',
                just,
                came,
                back,
                from,
                'Seeing',
                'The-Force-Awakens',
                ('.'),
                'I',
                do,
                not,
                understand,
                why,
                people,
                think,
                that,
                'Rey',
                (is),
                'a-Mary-Sue',
                ('.')
              ]).
pllm:training(2300020000244,
              string,
              "Because she can do everything so easily, without any training.").
pllm:training(2300020000244,
              text_to_tree,
              [ 'FRAG',
                [ 'SBAR',
                  ['IN', 'Because'],
                  [ 'S',
                    ['NP', ['PRP', she]],
                    [ 'VP',
                      ['MD', can],
                      [ 'VP',
                        ['AUX', do],
                        ['NP', ['NN', everything]],
                        ['ADVP', ['RB', so], ['RB', easily]],
                        [',', ','],
                        ['PP', ['IN', without], ['NP', ['DT', any], ['NN', training]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2300020000244,
              unphrasify,
              [ mark('FRAG'),
                mark('SBAR'),
                ['IN', 'Because'],
                mark('S'),
                ['NP', ['PRP', she]],
                ['MD', can],
                ['AUX', do],
                ['NP', ['NN', everything]],
                ['ADVP', ['RB', so], ['RB', easily]],
                [',', ','],
                ['IN', without],
                ['NP', ['DT', any], ['NN', training]],
                ['.', '.']
              ]).
pllm:training(2300020000244,
              tree_to_toks,
              [ 'Because',
                she,
                can,
                do,
                everything,
                so,
                easily,
                (','),
                without,
                'any-training',
                ('.')
              ]).
pllm:training(2300030000245,
              string,
              "Yes, she did everything so quickly and so easily, like she was following some sort of quick and easy path.").
pllm:training(2300030000245,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', she]],
                  [ 'VP',
                    ['VBD', did],
                    ['NP', ['NN', everything]],
                    [ 'ADVP',
                      ['ADVP', ['RB', so], ['RB', quickly]],
                      ['CC', and],
                      ['ADVP', ['RB', so], ['RB', easily]]
                    ],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', like],
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBD', was],
                          [ 'VP',
                            ['VBG', following],
                            [ 'NP',
                              ['NP', ['DT', some], ['NN', sort]],
                              [ 'PP',
                                ['IN', of],
                                [ 'NP',
                                  ['ADJP', ['JJ', quick], ['CC', and], ['JJ', easy]],
                                  ['NN', path]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300030000245,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', she]],
                ['VBD', did],
                ['NP', ['NN', everything]],
                [ 'ADVP',
                  ['ADVP', ['RB', so], ['RB', quickly]],
                  ['CC', and],
                  ['ADVP', ['RB', so], ['RB', easily]]
                ],
                [',', ','],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', was],
                ['VBG', following],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['ADJP', ['JJ', quick], ['CC', and], ['JJ', easy]], ['NN', path]],
                ['.', '.']
              ]).
pllm:training(2300030000245,
              tree_to_toks,
              [ 'Yes',
                (','),
                she,
                did,
                everything,
                so,
                quickly,
                and,
                so,
                easily,
                (','),
                like,
                she,
                was,
                following,
                'some-sort',
                of,
                'quick-and-easy-path',
                ('.')
              ]).
pllm:training(2300040000246, string, "You think she's going Dark Side?").
pllm:training(2300040000246,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['VP', ['VBG', going], ['NP', ['JJ', 'Dark'], ['NN', 'Side']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2300040000246,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['VBG', going],
                ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                ['.', ?]
              ]).
pllm:training(2300040000246, tree_to_toks, ['You', think, she, '\'s', going, 'Dark-Side', ?]).
pllm:training(2300050000247,
              string,
              "Just watch it.  She's a huge ball of anger, and she uses the Force when he's angry, it's classic Dark Side.").
pllm:training(2300050000247,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['ADVP', ['RB', 'Just']], ['VP', ['VB', watch], ['NP', ['PRP', it]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'She']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', huge], ['NN', ball]],
                          ['PP', ['IN', of], ['NP', ['NN', anger]]]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', she]],
                      [ 'VP',
                        ['VBZ', uses],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', 'Force']],
                          [ 'SBAR',
                            [ 'S',
                              [ 'SBAR',
                                ['WHADVP', ['WRB', when]],
                                [ 'S',
                                  ['NP', ['PRP', he]],
                                  ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', angry]]]
                                ]
                              ],
                              [',', ','],
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['VBZ', '\'s'],
                                ['NP', ['JJ', classic], ['JJ', 'Dark'], ['NN', 'Side']]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2300050000247,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Just']],
                ['VB', watch],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', huge], ['NN', ball]],
                ['IN', of],
                ['NP', ['NN', anger]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', uses],
                ['NP', ['DT', the], ['NN', 'Force']],
                mark('SBAR'),
                mark('S'),
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', angry]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['JJ', classic], ['JJ', 'Dark'], ['NN', 'Side']],
                ['.', '.']
              ]).
pllm:training(2300050000247,
              tree_to_toks,
              [ 'Just',
                watch,
                it,
                ('.'),
                'She',
                '\'s',
                'a-huge-ball',
                of,
                anger,
                (','),
                and,
                she,
                uses,
                'the-Force',
                when,
                he,
                '\'s',
                angry,
                (','),
                it,
                '\'s',
                'classic-Dark-Side',
                ('.')
              ]).
pllm:training(2300060000248, string, "I don't think that's the intent.").
pllm:training(2300060000248,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          ['VP', ['VBZ', '\'s'], ['NP', ['DT', the], ['NN', intent]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300060000248,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['NN', intent]],
                ['.', '.']
              ]).
pllm:training(2300060000248,
              tree_to_toks,
              ['I', do, not, think, that, '\'s', 'the-intent', '.']).
pllm:training(2300070000249,
              string,
              "Maybe it wasn't, but the signs are there.  She doesn't start beating Kylo until she's angry. That's Dark Side right there.").
pllm:training(2300070000249,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['ADVP', ['RB', 'Maybe']],
                      ['NP', ['PRP', it]],
                      ['VP', ['VBD', was], ['RB', 'n\'t']]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['DT', the], ['NNS', signs]],
                      ['VP', ['VB', are], ['ADVP', ['RB', there]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'She']],
                      [ 'VP',
                        ['VBZ', does],
                        ['RB', not],
                        [ 'VP',
                          ['VB', start],
                          ['S', ['VP', ['VBG', beating], ['NP', ['NNP', 'Kylo']]]],
                          [ 'SBAR',
                            ['IN', until],
                            ['S', ['NP', ['PRP', she]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', angry]]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['DT', 'That']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                        ['ADVP', ['RB', right], ['RB', there]]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2300070000249,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['RB', 'n\'t'],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['DT', the], ['NNS', signs]],
                ['VB', are],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', does],
                ['RB', not],
                ['VB', start],
                mark('S'),
                ['VBG', beating],
                ['NP', ['NNP', 'Kylo']],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', angry]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['JJ', 'Dark'], ['NN', 'Side']],
                ['ADVP', ['RB', right], ['RB', there]],
                ['.', '.']
              ]).
pllm:training(2300070000249,
              tree_to_toks,
              [ 'Maybe',
                it,
                was,
                'n\'t',
                (','),
                but,
                'the-signs',
                are,
                there,
                ('.'),
                'She',
                does,
                not,
                start,
                beating,
                'Kylo',
                until,
                she,
                '\'s',
                angry,
                ('.'),
                'That',
                '\'s',
                'Dark-Side',
                right,
                there,
                ('.')
              ]).
pllm:training(2300080000250,
              string,
              "That's a good point.  Rey is flirting with the Dark Side.  I don't think the guys at Disney are that subtle, either.").
pllm:training(2300080000250,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['NNP', 'Rey']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'VP',
                          ['VBG', flirting],
                          ['PP', ['IN', with], ['NP', ['DT', the], ['NNP', 'Dark'], ['NN', 'Side']]]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', do],
                        ['RB', not],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              [ 'NP',
                                ['NP', ['DT', the], ['NNS', guys]],
                                ['PP', ['IN', at], ['NP', ['NNP', 'Disney']]]
                              ],
                              [ 'VP',
                                ['VB', are],
                                ['ADVP', ['IN', that]],
                                ['ADJP', ['JJ', subtle]],
                                [',', ','],
                                ['ADVP', ['RB', either]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2300080000250,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['VBZ', is],
                ['VBG', flirting],
                ['IN', with],
                ['NP', ['DT', the], ['NNP', 'Dark'], ['NN', 'Side']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NNS', guys]],
                ['IN', at],
                ['NP', ['NNP', 'Disney']],
                ['VB', are],
                ['ADVP', ['IN', that]],
                ['ADJP', ['JJ', subtle]],
                [',', ','],
                ['ADVP', ['RB', either]],
                ['.', '.']
              ]).
pllm:training(2300080000250,
              tree_to_toks,
              [ 'That',
                '\'s',
                'a-good-point',
                ('.'),
                'Rey',
                (is),
                flirting,
                with,
                'the-Dark-Side',
                ('.'),
                'I',
                do,
                not,
                think,
                'the-guys',
                at,
                'Disney',
                are,
                that,
                subtle,
                (','),
                either,
                ('.')
              ]).
pllm:training(2300090000251,
              string,
              "True. It's possible that they completely missed the point.  I wouldn't put that past them. But that's why we have death of the author.").
pllm:training(2300090000251,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['JJ', 'True'], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['JJ', possible]],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            ['ADVP', ['RB', completely]],
                            ['VP', ['VBD', missed], ['NP', ['DT', the], ['NN', point]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'SEQBAR',
                    [ 'CORENLP',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['MD', would],
                          ['RB', 'n\'t'],
                          [ 'VP',
                            ['VB', put],
                            ['NP', ['DT', that]],
                            ['PP', ['IN', past], ['NP', ['PRP', them]]]
                          ]
                        ],
                        ['.', '.']
                      ]
                    ],
                    [ 'CORENLP',
                      [ 'S',
                        ['CC', 'But'],
                        ['NP', ['DT', that]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', why]],
                            [ 'S',
                              ['NP', ['PRP', we]],
                              [ 'VP',
                                ['VB', have],
                                [ 'NP',
                                  ['NP', ['NN', death]],
                                  ['PP', ['IN', of], ['NP', ['DT', the], ['NN', author]]]
                                ]
                              ]
                            ]
                          ]
                        ],
                        ['.', '.']
                      ]
                    ]
                  ]
                ]
              ]).
pllm:training(2300090000251,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['JJ', 'True'], ['.', '.']],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', possible]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', completely]],
                ['VBD', missed],
                ['NP', ['DT', the], ['NN', point]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['RB', 'n\'t'],
                ['VB', put],
                ['NP', ['DT', that]],
                ['IN', past],
                ['NP', ['PRP', them]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', have],
                ['NP', ['NN', death]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', author]],
                ['.', '.']
              ]).
pllm:training(2300090000251,
              tree_to_toks,
              [ 'True',
                ('.'),
                'It',
                '\'s',
                possible,
                that,
                they,
                completely,
                missed,
                'the-point',
                ('.'),
                'I',
                would,
                'n\'t',
                put,
                that,
                past,
                them,
                ('.'),
                'But',
                that,
                '\'s',
                why,
                we,
                have,
                death,
                of,
                'the-author',
                ('.')
              ]).
pllm:training(2300100000252,
              string,
              "I bet the next movie completely fails to confirm your idea.").
pllm:training(2300100000252,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', bet],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                        ['ADVP', ['RB', completely]],
                        [ 'VP',
                          ['VBZ', fails],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', confirm], ['NP', ['PRP$', your], ['NN', idea]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2300100000252,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', bet],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                ['ADVP', ['RB', completely]],
                ['VBZ', fails],
                mark('S'),
                ['TO', to],
                ['VB', confirm],
                ['NP', ['PRP$', your], ['NN', idea]],
                ['.', '.']
              ]).
pllm:training(2300100000252,
              tree_to_toks,
              ['I', bet, 'the-next-movie', completely, fails, to, confirm, 'your-idea', '.']).
pllm:training(2400010000254,
              string,
              "I heard they got a new director for Episode VIII.").
pllm:training(2400010000254,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', heard],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', got],
                        [ 'NP',
                          ['NP', ['DT', a], ['JJ', new], ['NN', director]],
                          ['PP', ['IN', for], ['NP', ['NN', 'Episode'], ['NNS', 'VIII']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2400010000254,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', got],
                ['NP', ['DT', a], ['JJ', new], ['NN', director]],
                ['IN', for],
                ['NP', ['NN', 'Episode'], ['NNS', 'VIII']],
                ['.', '.']
              ]).
pllm:training(2400010000254,
              tree_to_toks,
              ['I', heard, they, got, 'a-new-director', for, 'Episode-VIII', '.']).
pllm:training(2400020000255, string, "Really?").
pllm:training(2400020000255, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(2400020000255, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(2400020000255, tree_to_toks, ['Really', ?]).
pllm:training(2400030000256, string, "Yup.").
pllm:training(2400030000256, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Yup'], ['.', '.']]]).
pllm:training(2400030000256, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Yup'], ['.', '.']]]).
pllm:training(2400030000256, tree_to_toks, ['Yup', '.']).
pllm:training(2400040000257, string, "But Abrams did such a great job.").
pllm:training(2400040000257,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['NNP', 'Abrams']],
                  ['VP', ['VBD', did], ['NP', ['PDT', such], ['DT', a], ['JJ', great], ['NN', job]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2400040000257,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['NNP', 'Abrams']],
                ['VBD', did],
                ['NP', ['PDT', such], ['DT', a], ['JJ', great], ['NN', job]],
                ['.', '.']
              ]).
pllm:training(2400040000257, tree_to_toks, ['But', 'Abrams', did, 'such-a-great-job', '.']).
pllm:training(2400050000258, string, "He usually does.").
pllm:training(2400050000258,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['ADVP', ['RB', usually]], ['VP', ['VBZ', does]], ['.', '.']]
              ]).
pllm:training(2400050000258,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['ADVP', ['RB', usually]],
                ['VBZ', does],
                ['.', '.']
              ]).
pllm:training(2400050000258, tree_to_toks, ['He', usually, does, '.']).
pllm:training(2400060000259, string, "Guess they just wanted to change it up.").
pllm:training(2400060000259,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VB', 'Guess'],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        ['ADVP', ['RB', just]],
                        [ 'VP',
                          ['VBD', wanted],
                          [ 'S',
                            [ 'VP',
                              ['TO', to],
                              ['VP', ['VB', change], ['NP', ['PRP', it]], ['PRT', ['RP', up]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400060000259,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Guess'],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', just]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', change],
                ['NP', ['PRP', it]],
                ['PRT', ['RP', up]],
                ['.', '.']
              ]).
pllm:training(2400060000259,
              tree_to_toks,
              ['Guess', they, just, wanted, to, change, it, up, '.']).
pllm:training(2400070000260, string, "I guess. I hope it's as good as the first.").
pllm:training(2400070000260,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', guess]], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', hope],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['AUX', '\'s'],
                          [ 'ADJP',
                            ['ADJP', ['RB', as], ['JJ', good]],
                            ['PP', ['IN', as], ['NP', ['DT', the], ['JJ', first]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400070000260,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hope],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                'ADJP',
                ['ADJP', ['RB', as], ['JJ', good]],
                ['IN', as],
                ['NP', ['DT', the], ['JJ', first]],
                ['.', '.']
              ]).
pllm:training(2400070000260,
              tree_to_toks,
              ['I', guess, '.', 'I', hope, it, '\'s', 'ADJP', as, good, as, 'the-first', '.']).
pllm:training(2400080000261, string, "We'll find out soon.").
pllm:training(2400080000261,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'We']],
                  ['VP', ['MD', '\'ll'], ['VP', ['VB', find], ['PRT', ['RP', out]], ['ADVP', ['RB', soon]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2400080000261,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'We']],
                ['MD', '\'ll'],
                ['VB', find],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', soon]],
                ['.', '.']
              ]).
pllm:training(2400080000261, tree_to_toks, ['We', '\'ll', find, out, soon, '.']).
pllm:training(2400090000262,
              string,
              "He didn't direct the last Star Trek either.").
pllm:training(2400090000262,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    [ 'VP',
                      ['VB', direct],
                      ['NP', ['DT', the], ['JJ', last], ['NNP', 'Star'], ['NNP', 'Trek']],
                      ['ADVP', ['RB', either]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2400090000262,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', direct],
                ['NP', ['DT', the], ['JJ', last], ['NNP', 'Star'], ['NNP', 'Trek']],
                ['ADVP', ['RB', either]],
                ['.', '.']
              ]).
pllm:training(2400090000262,
              tree_to_toks,
              ['He', did, 'n\'t', direct, 'the-last-Star-Trek', either, '.']).
pllm:training(2400100000263, string, "What is up with these studios?!").
pllm:training(2400100000263,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    [ 'VP',
                      ['AUX', is],
                      ['PRT', ['RP', up]],
                      ['PP', ['IN', with], ['NP', ['DT', these], ['NNS', studios]]]
                    ]
                  ],
                  ['.', ?]
                ],
                ['CORENLP', ['FRAG', ['.', '.']]]
              ]).
pllm:training(2400100000263,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', is],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['DT', these], ['NNS', studios]],
                ['.', ?],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(2400100000263,
              tree_to_toks,
              ['What', is, up, with, 'these-studios', ?, 'FRAG', '.']).
pllm:training(2500010000265, string, "Did you like the new Star Wars movie?").
pllm:training(2500010000265,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]]
                ],
                ['.', ?]
              ]).
pllm:training(2500010000265,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(2500010000265,
              tree_to_toks,
              ['Did', you, like, 'the-new-Star-Wars-movie', ?]).
pllm:training(2500020000266, string, "I don't know, I have not seen it.").
pllm:training(2500020000266,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', know]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', not], ['VP', ['VBN', seen], ['NP', ['PRP', it]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2500020000266,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', not],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(2500020000266,
              tree_to_toks,
              ['I', do, not, know, ',', 'I', have, not, seen, it, '.']).
pllm:training(2500030000267,
              string,
              "Haven't seen it? It is like the most watched movie in forever. Why haven't you seen it?").
pllm:training(2500030000267,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['VP', ['VB', 'Have'], ['RB', 'n\'t'], ['VP', ['VBN', seen], ['NP', ['PRP', it]]]],
                    ['.', ?]
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', is],
                        [ 'PP',
                          ['IN', like],
                          [ 'NP',
                            [ 'NP',
                              ['DT', the],
                              ['ADJP', ['RBS', most], ['VBN', watched]],
                              ['NN', movie]
                            ],
                            ['PP', ['IN', in], ['ADVP', ['RB', forever]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'SBAR',
                      ['WHADVP', ['WRB', 'Why']],
                      [ 'S',
                        ['VB', have],
                        ['RB', 'n\'t'],
                        ['NP', ['PRP', you]],
                        ['VP', ['VBN', seen], ['NP', ['PRP', it]]]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(2500030000267,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['RB', 'n\'t'],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', is],
                ['IN', like],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['VBN', watched]], ['NN', movie]],
                ['IN', in],
                ['ADVP', ['RB', forever]],
                ['.', '.'],
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', have],
                ['RB', 'n\'t'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(2500030000267,
              tree_to_toks,
              [ 'Have',
                'n\'t',
                seen,
                it,
                (?),
                'It',
                (is),
                like,
                'the-most-watched-movie',
                in,
                forever,
                ('.'),
                'Why',
                have,
                'n\'t',
                you,
                seen,
                it,
                (?)
              ]).
pllm:training(2500040000268,
              string,
              "I am not really interested in new movies. They always try to explain things that should be left to the imagination.").
pllm:training(2500040000268,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      ['RB', not],
                      [ 'ADJP',
                        ['RB', really],
                        ['JJ', interested],
                        ['PP', ['IN', in], ['NP', ['JJ', new], ['NNS', movies]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'They']],
                    ['ADVP', ['RB', always]],
                    [ 'VP',
                      ['VB', try],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', explain],
                            [ 'NP',
                              ['NP', ['NNS', things]],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  [ 'VP',
                                    ['MD', should],
                                    [ 'VP',
                                      ['VB', be],
                                      [ 'VP',
                                        ['VBN', left],
                                        [ 'PP',
                                          ['IN', to],
                                          ['NP', ['DT', the], ['NN', imagination]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2500040000268,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['RB', not],
                'ADJP',
                ['RB', really],
                ['JJ', interested],
                ['IN', in],
                ['NP', ['JJ', new], ['NNS', movies]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['ADVP', ['RB', always]],
                ['VB', try],
                mark('S'),
                ['TO', to],
                ['VB', explain],
                ['NP', ['NNS', things]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['MD', should],
                ['VB', be],
                ['VBN', left],
                ['IN', to],
                ['NP', ['DT', the], ['NN', imagination]],
                ['.', '.']
              ]).
pllm:training(2500040000268,
              tree_to_toks,
              [ 'I',
                am,
                not,
                'ADJP',
                really,
                interested,
                in,
                'new-movies',
                ('.'),
                'They',
                always,
                try,
                to,
                explain,
                things,
                that,
                should,
                be,
                left,
                to,
                'the-imagination',
                ('.')
              ]).
pllm:training(2500050000269, string, "I don't understand, can you explain?").
pllm:training(2500050000269,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', understand]]]],
                  [',', ','],
                  ['S', ['MD', can], ['NP', ['PRP', you]], ['VP', ['VB', explain]]],
                  ['.', ?]
                ]
              ]).
pllm:training(2500050000269,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', understand],
                [',', ','],
                mark('S'),
                ['MD', can],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['.', ?]
              ]).
pllm:training(2500050000269,
              tree_to_toks,
              ['I', do, not, understand, ',', can, you, explain, ?]).
pllm:training(2500060000270,
              string,
              "Well I think that the Phantom Menace was a waste of a movie since they used the whole build up of the movie over explained Darth Vader so it took away all imaginations for him.").
pllm:training(2500060000270,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Well']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    ['IN', that],
                    [ 'S',
                      ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                      [ 'VP',
                        ['AUX', was],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', waste]],
                          ['PP', ['IN', of], ['NP', ['DT', a], ['NN', movie]]]
                        ],
                        [ 'SBAR',
                          ['IN', since],
                          [ 'S',
                            ['NP', ['PRP', they]],
                            [ 'VP',
                              ['VBD', used],
                              [ 'S',
                                ['NP', ['DT', the], ['NN', whole]],
                                [ 'VP',
                                  ['VB', build],
                                  ['PRT', ['RP', up]],
                                  [ 'PP',
                                    ['IN', of],
                                    [ 'NP',
                                      ['NP', ['DT', the], ['NN', movie]],
                                      [ 'VP',
                                        ['ADVP', ['RB', over]],
                                        ['VBD', explained],
                                        ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                                        [ 'SBAR',
                                          ['IN', so],
                                          [ 'S',
                                            ['NP', ['PRP', it]],
                                            [ 'VP',
                                              ['VBD', took],
                                              ['PRT', ['RP', away]],
                                              [ 'NP',
                                                [ 'NP',
                                                  ['DT', all],
                                                  ['NNS', imaginations]
                                                ],
                                                ['PP', ['IN', for], ['NP', ['PRP', him]]]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500060000270,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Well']],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', waste]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', movie]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', used],
                mark('S'),
                ['NP', ['DT', the], ['NN', whole]],
                ['VB', build],
                ['PRT', ['RP', up]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['ADVP', ['RB', over]],
                ['VBD', explained],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                mark('SBAR'),
                ['IN', so],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', took],
                ['PRT', ['RP', away]],
                ['NP', ['DT', all], ['NNS', imaginations]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(2500060000270,
              tree_to_toks,
              [ 'Well',
                'I',
                think,
                that,
                'the-Phantom-Menace',
                was,
                'a-waste',
                of,
                'a-movie',
                since,
                they,
                used,
                'the-whole',
                build,
                up,
                of,
                'the-movie',
                over,
                explained,
                'Darth-Vader',
                so,
                it,
                took,
                away,
                'all-imaginations',
                for,
                him,
                ('.')
              ]).
pllm:training(2500070000271,
              string,
              "I liked the Phantom Menace, I thought it was a good story line.").
pllm:training(2500070000271,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VBD', liked],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                    [',', ','],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', thought],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['AUX', was],
                                ['NP', ['DT', a], ['JJ', good], ['NN', story], ['NN', line]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500070000271,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['JJ', 'Phantom'], ['NN', 'Menace']],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['JJ', good], ['NN', story], ['NN', line]],
                ['.', '.']
              ]).
pllm:training(2500070000271,
              tree_to_toks,
              [ 'I',
                liked,
                'the-Phantom-Menace',
                (','),
                'I',
                thought,
                it,
                was,
                'a-good-story-line',
                ('.')
              ]).
pllm:training(2500080000272,
              string,
              "Story line yes but it changed the whole dynamic of the movies for me.").
pllm:training(2500080000272,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['NN', 'Story']], ['VP', ['VB', line], ['INTJ', ['UH', yes]]]],
                ['CC', but],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', changed],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', whole], ['NN', dynamic]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', movies]],
                          ['PP', ['IN', for], ['NP', ['PRP', me]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2500080000272,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NN', 'Story']],
                ['VB', line],
                ['INTJ', ['UH', yes]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', changed],
                ['NP', ['DT', the], ['JJ', whole], ['NN', dynamic]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                ['IN', for],
                ['NP', ['PRP', me]],
                ['.', '.']
              ]).
pllm:training(2500080000272,
              tree_to_toks,
              [ 'Story',
                line,
                yes,
                but,
                it,
                changed,
                'the-whole-dynamic',
                of,
                'the-movies',
                for,
                me,
                ('.')
              ]).
pllm:training(2500090000273, string, "Change the dynamic how?").
pllm:training(2500090000273,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VP', ['VB', 'Change'], ['NP', ['DT', the], ['JJ', dynamic]], ['ADVP', ['WRB', how]]],
                  ['.', ?]
                ]
              ]).
pllm:training(2500090000273,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Change'],
                ['NP', ['DT', the], ['JJ', dynamic]],
                ['ADVP', ['WRB', how]],
                ['.', ?]
              ]).
pllm:training(2500090000273, tree_to_toks, ['Change', 'the-dynamic', how, ?]).
pllm:training(2500100000274,
              string,
              "It began to explain Darth Vader and at the end I actually felt a little pity for him. Prior to that Darth Vader was a true villain. One should not have any sympathy for a villain.").
pllm:training(2500100000274,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', began],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', explain], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['PP', ['IN', at], ['NP', ['DT', the], ['NN', end]]],
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', actually]],
                    [ 'VP',
                      ['VBD', felt],
                      [ 'NP',
                        ['NP', ['DT', a], ['JJ', little], ['NN', pity]],
                        ['PP', ['IN', for], ['NP', ['PRP', him]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['ADVP', ['RB', 'Prior'], ['PP', ['IN', to], ['NP', ['DT', that]]]],
                      ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                      ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', true], ['NN', villain]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'One']],
                      [ 'VP',
                        ['MD', should],
                        ['RB', not],
                        [ 'VP',
                          ['VB', have],
                          [ 'NP',
                            ['NP', ['DT', any], ['NN', sympathy]],
                            ['PP', ['IN', for], ['NP', ['DT', a], ['NN', villain]]]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(2500100000274,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', began],
                mark('S'),
                ['TO', to],
                ['VB', explain],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['CC', and],
                mark('S'),
                ['IN', at],
                ['NP', ['DT', the], ['NN', end]],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', actually]],
                ['VBD', felt],
                ['NP', ['DT', a], ['JJ', little], ['NN', pity]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                'ADVP',
                ['RB', 'Prior'],
                ['IN', to],
                ['NP', ['DT', that]],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', true], ['NN', villain]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'One']],
                ['MD', should],
                ['RB', not],
                ['VB', have],
                ['NP', ['DT', any], ['NN', sympathy]],
                ['IN', for],
                ['NP', ['DT', a], ['NN', villain]],
                ['.', '.']
              ]).
pllm:training(2500100000274,
              tree_to_toks,
              [ 'It',
                began,
                to,
                explain,
                'Darth-Vader',
                and,
                at,
                'the-end',
                'I',
                actually,
                felt,
                'a-little-pity',
                for,
                him,
                ('.'),
                'ADVP',
                'Prior',
                to,
                that,
                'Darth-Vader',
                was,
                'a-true-villain',
                ('.'),
                'One',
                should,
                not,
                have,
                'any-sympathy',
                for,
                'a-villain',
                ('.')
              ]).
pllm:training(2600010000276, string, "What movies do you like").
pllm:training(2600010000276,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WDT', 'What'], ['NNS', movies]],
                ['S', ['AUX', do], ['NP', ['PRP', you]], ['VP', ['VB', like]]],
                ['.', '.']
              ]).
pllm:training(2600010000276,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WDT', 'What'], ['NNS', movies]],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['.', '.']
              ]).
pllm:training(2600010000276, tree_to_toks, ['What-movies', do, you, like, '.']).
pllm:training(2600020000277, string, "My favorite is star wars").
pllm:training(2600020000277,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'My'], ['NN', favorite]],
                  ['VP', ['VBZ', is], ['NP', ['NN', star], ['NNS', wars]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600020000277,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(2600020000277, tree_to_toks, ['My-favorite', is, 'star-wars', '.']).
pllm:training(2600030000278, string, "I love star wars").
pllm:training(2600030000278,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', love], ['NP', ['NN', star], ['NNS', wars]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600030000278,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(2600030000278, tree_to_toks, ['I', love, 'star-wars', '.']).
pllm:training(2600040000279, string, "Me too").
pllm:training(2600040000279,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(2600040000279,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(2600040000279, tree_to_toks, ['Me', too, '.']).
pllm:training(2600050000280, string, "They are great movies").
pllm:training(2600050000280,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'They']],
                  ['VP', ['VB', are], ['NP', ['JJ', great], ['NNS', movies]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600050000280,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VB', are],
                ['NP', ['JJ', great], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2600050000280, tree_to_toks, ['They', are, 'great-movies', '.']).
pllm:training(2600060000281, string, "I liked the comics better").
pllm:training(2600060000281,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', liked],
                    ['S', ['NP', ['DT', the], ['NNS', comics]], ['ADJP', ['JJR', better]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2600060000281,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                mark('S'),
                ['NP', ['DT', the], ['NNS', comics]],
                ['ADJP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(2600060000281, tree_to_toks, ['I', liked, 'the-comics', better, '.']).
pllm:training(2600070000282, string, "Me too").
pllm:training(2600070000282,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(2600070000282,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(2600070000282, tree_to_toks, ['Me', too, '.']).
pllm:training(2600080000283, string, "But the movies were okay").
pllm:training(2600080000283,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['NP', ['DT', the], ['NNS', movies]],
                  ['VP', ['VBD', were], ['ADJP', ['JJ', okay]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2600080000283,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', the], ['NNS', movies]],
                ['VBD', were],
                ['ADJP', ['JJ', okay]],
                ['.', '.']
              ]).
pllm:training(2600080000283, tree_to_toks, ['But', 'the-movies', were, okay, '.']).
pllm:training(2600090000284, string, "Yes they were").
pllm:training(2600090000284,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['INTJ', ['UH', 'Yes']], ['NP', ['PRP', they]], ['VP', ['VBD', were]], ['.', '.']]
              ]).
pllm:training(2600090000284,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['.', '.']
              ]).
pllm:training(2600090000284, tree_to_toks, ['Yes', they, were, '.']).
pllm:training(2600100000285, string, "Nice talking to you").
pllm:training(2600100000285,
              text_to_tree,
              [ 'S',
                ['NP', ['JJ', 'Nice']],
                ['VP', ['VBG', talking], ['PP', ['TO', to], ['NP', ['PRP', you]]]],
                ['.', '.']
              ]).
pllm:training(2600100000285,
              unphrasify,
              [ mark('S'),
                ['NP', ['JJ', 'Nice']],
                ['VBG', talking],
                ['TO', to],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(2600100000285, tree_to_toks, ['Nice', talking, to, you, '.']).
pllm:training(2700010000287,
              string,
              "Do you prefer the original trilogy or the prequels?").
pllm:training(2700010000287,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', prefer],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                      ['CC', or],
                      ['NP', ['DT', the], ['NNS', prequels]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2700010000287,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                ['CC', or],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', ?]
              ]).
pllm:training(2700010000287,
              tree_to_toks,
              ['Do', you, prefer, 'the-original-trilogy', or, 'the-prequels', ?]).
pllm:training(2700020000288,
              string,
              "I definitely like the originals more but I really like Revenge of the Sith.").
pllm:training(2700020000288,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', definitely]],
                    [ 'VP',
                      ['VB', like],
                      ['NP', ['DT', the], ['NNS', originals]],
                      ['ADVP', ['RBR', more]]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', like],
                      [ 'NP',
                        ['NP', ['NN', 'Revenge']],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700020000288,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', definitely]],
                ['VB', like],
                ['NP', ['DT', the], ['NNS', originals]],
                ['ADVP', ['RBR', more]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(2700020000288,
              tree_to_toks,
              [ 'I',
                definitely,
                like,
                'the-originals',
                more,
                but,
                'I',
                really,
                like,
                'Revenge',
                of,
                'the-Sith',
                ('.')
              ]).
pllm:training(2700030000289,
              string,
              "I do too, it is probably my third favorite movie.").
pllm:training(2700030000289,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['PRP', 'I']], ['VP', ['AUX', do], ['ADVP', ['RB', too]]]],
                [',', ','],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', probably]],
                    ['NP', ['PRP$', my], ['JJ', third], ['JJ', favorite], ['NN', movie]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2700030000289,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['ADVP', ['RB', too]],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', is],
                ['ADVP', ['RB', probably]],
                ['NP', ['PRP$', my], ['JJ', third], ['JJ', favorite], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(2700030000289,
              tree_to_toks,
              ['I', do, too, ',', it, is, probably, 'my-third-favorite-movie', '.']).
pllm:training(2700040000290,
              string,
              "What's your favorite? Mine is The Empire Strikes Back").
pllm:training(2700040000290,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'What']],
                    ['S', ['VBZ', '\'s'], ['NP', ['PRP$', your], ['JJ', favorite]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'Mine']],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                          ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2700040000290,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Mine']],
                ['VBZ', is],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', '.']
              ]).
pllm:training(2700040000290,
              tree_to_toks,
              ['What', '\'s', 'your-favorite', ?, 'Mine', is, 'The-Empire', 'Strikes', 'Back', '.']).
pllm:training(2700050000291,
              string,
              "My favorite is actually A New Hope, but Empire comes next.").
pllm:training(2700050000291,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP$', 'My'], ['NN', favorite]],
                    [ 'VP',
                      ['VBZ', is],
                      ['ADVP', ['RB', actually]],
                      ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]
                    ]
                  ],
                  [',', ','],
                  ['CC', but],
                  ['S', ['NP', ['NNP', 'Empire']], ['VP', ['VBZ', comes], ['ADVP', ['RB', next]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2700050000291,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['ADVP', ['RB', actually]],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['NNP', 'Empire']],
                ['VBZ', comes],
                ['ADVP', ['RB', next]],
                ['.', '.']
              ]).
pllm:training(2700050000291,
              tree_to_toks,
              ['My-favorite', is, actually, 'A-New-Hope', ',', but, 'Empire', comes, next, '.']).
pllm:training(2700060000292,
              string,
              "Do you like the new movie at all, I thought it was alright but not great.").
pllm:training(2700060000292,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['JJ', new], ['NN', movie]],
                  ['ADVP', ['IN', at], ['DT', all]],
                  [',', ','],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', thought],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', it]],
                            [ 'VP',
                              ['AUX', was],
                              ['ADJP', ['JJ', alright], ['CC', but], ['RB', not], ['JJ', great]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2700060000292,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJ', new], ['NN', movie]],
                ['ADVP', ['IN', at], ['DT', all]],
                [',', ','],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['ADJP', ['JJ', alright], ['CC', but], ['RB', not], ['JJ', great]],
                ['.', '.']
              ]).
pllm:training(2700060000292,
              tree_to_toks,
              [ 'Do',
                you,
                like,
                'the-new-movie',
                at,
                all,
                (','),
                'I',
                thought,
                it,
                was,
                alright,
                but,
                not,
                great,
                ('.')
              ]).
pllm:training(2700070000293,
              string,
              "I liked it but thought it was only better than The Phantom Menace and Attack of the Clones.").
pllm:training(2700070000293,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]],
                    ['CC', but],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['ADJP', ['RB', only], ['JJR', better]],
                              [ 'PP',
                                ['IN', than],
                                [ 'NP',
                                  ['NP', ['DT', 'The'], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                                  ['CC', and],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Attack']],
                                    ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', 'Clones']]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700070000293,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['CC', but],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['ADJP', ['RB', only], ['JJR', better]],
                ['IN', than],
                ['NP', ['DT', 'The'], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['CC', and],
                ['NP', ['NNP', 'Attack']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', 'Clones']],
                ['.', '.']
              ]).
pllm:training(2700070000293,
              tree_to_toks,
              [ 'I',
                liked,
                it,
                but,
                thought,
                it,
                was,
                'ADJP',
                only,
                better,
                than,
                'The-Phantom-Menace',
                and,
                'Attack',
                of,
                'the-Clones',
                ('.')
              ]).
pllm:training(2700080000294,
              string,
              "I could agree with that, it was trying too hard to be the originals.").
pllm:training(2700080000294,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', could],
                      ['VP', ['VB', agree], ['PP', ['IN', with], ['NP', ['DT', that]]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBG', trying],
                      [ 'ADJP',
                        ['RB', too],
                        ['JJ', hard],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            ['VP', ['VB', be], ['NP', ['DT', the], ['NNS', originals]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700080000294,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', could],
                ['VB', agree],
                ['IN', with],
                ['NP', ['DT', that]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['VBG', trying],
                'ADJP',
                ['RB', too],
                ['JJ', hard],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(2700080000294,
              tree_to_toks,
              [ 'I',
                could,
                agree,
                with,
                that,
                (','),
                it,
                was,
                trying,
                'ADJP',
                too,
                hard,
                to,
                be,
                'the-originals',
                ('.')
              ]).
pllm:training(2700090000295,
              string,
              "I think that's true, and it didn't have any real significant moments besides Hans ending.").
pllm:training(2700090000295,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['SBAR', ['S', ['NP', ['DT', that]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]]]]
                    ]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', have],
                        [ 'NP',
                          [ 'NP',
                            ['DT', any],
                            ['JJ', real],
                            ['JJ', significant],
                            ['NNS', moments]
                          ],
                          [ 'PP',
                            ['IN', besides],
                            ['NP', ['NP', ['NNP', 'Hans']], ['VP', ['VBG', ending]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700090000295,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', have],
                ['NP', ['DT', any], ['JJ', real], ['JJ', significant], ['NNS', moments]],
                ['IN', besides],
                ['NP', ['NNP', 'Hans']],
                ['VBG', ending],
                ['.', '.']
              ]).
pllm:training(2700090000295,
              tree_to_toks,
              [ 'I',
                think,
                that,
                '\'s',
                true,
                (','),
                and,
                it,
                did,
                'n\'t',
                have,
                'any-real-significant-moments',
                besides,
                'Hans',
                ending,
                ('.')
              ]).
pllm:training(2700100000296,
              string,
              "Yeah, I do look forward to the next movies though.").
pllm:training(2700100000296,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', do],
                    [ 'VP',
                      ['VB', look],
                      ['ADVP', ['RB', forward]],
                      ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', next], ['NNS', movies]]],
                      ['ADVP', ['RB', though]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2700100000296,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['VB', look],
                ['ADVP', ['RB', forward]],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', next], ['NNS', movies]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(2700100000296,
              tree_to_toks,
              ['Yeah', ',', 'I', do, look, forward, to, 'the-next-movies', though, '.']).
pllm:training(2800010000298,
              string,
              "Who do you think would win in a lightsaber battle, Luke or Rey?").
pllm:training(2800010000298,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['MD', would],
                            [ 'VP',
                              ['VB', win],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', a], ['NN', lightsaber], ['NN', battle]],
                                  [',', ','],
                                  ['NP', ['NNP', 'Luke']],
                                  ['CC', or],
                                  ['NP', ['NNP', 'Rey']]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2800010000298,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['MD', would],
                ['VB', win],
                ['IN', in],
                ['NP', ['DT', a], ['NN', lightsaber], ['NN', battle]],
                [',', ','],
                ['NP', ['NNP', 'Luke']],
                ['CC', or],
                ['NP', ['NNP', 'Rey']],
                ['.', ?]
              ]).
pllm:training(2800010000298,
              tree_to_toks,
              [ 'Who',
                do,
                you,
                think,
                would,
                win,
                in,
                'a-lightsaber-battle',
                (','),
                'Luke',
                or,
                'Rey',
                (?)
              ]).
pllm:training(2800020000299, string, "Obviously Rey.").
pllm:training(2800020000299,
              text_to_tree,
              ['CORENLP', ['FRAG', ['ADVP', ['RB', 'Obviously']], ['NP', ['NNP', 'Rey']], ['.', '.']]]).
pllm:training(2800020000299,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Obviously']],
                ['NP', ['NNP', 'Rey']],
                ['.', '.']
              ]).
pllm:training(2800020000299, tree_to_toks, ['Obviously', 'Rey', '.']).
pllm:training(2800030000300, string, "Why? Luke has more practice.").
pllm:training(2800030000300,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Luke']],
                    ['VP', ['VBZ', has], ['NP', ['JJR', more], ['NN', practice]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2800030000300,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBZ', has],
                ['NP', ['JJR', more], ['NN', practice]],
                ['.', '.']
              ]).
pllm:training(2800030000300, tree_to_toks, ['Why', ?, 'Luke', has, 'more-practice', '.']).
pllm:training(2800040000301,
              string,
              "Luke is also older, and Rey is already good without learning anything.").
pllm:training(2800040000301,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['NP', ['NNP', 'Luke']],
                  ['VP', ['AUX', is], ['ADVP', ['RB', also]], ['ADJP', ['JJR', older]]]
                ],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['NNP', 'Rey']],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', already]],
                    ['ADJP', ['JJ', good]],
                    [ 'PP',
                      ['IN', without],
                      ['S', ['VP', ['VBG', learning], ['NP', ['NN', anything]]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2800040000301,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['AUX', is],
                ['ADVP', ['RB', also]],
                ['ADJP', ['JJR', older]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['NNP', 'Rey']],
                ['AUX', is],
                ['ADVP', ['RB', already]],
                ['ADJP', ['JJ', good]],
                ['IN', without],
                mark('S'),
                ['VBG', learning],
                ['NP', ['NN', anything]],
                ['.', '.']
              ]).
pllm:training(2800040000301,
              tree_to_toks,
              [ 'Luke',
                (is),
                also,
                older,
                (','),
                and,
                'Rey',
                (is),
                already,
                good,
                without,
                learning,
                anything,
                ('.')
              ]).
pllm:training(2800050000302, string, "True. Still, I think Luke would win.").
pllm:training(2800050000302,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['JJ', 'True'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Still']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['SBAR', ['S', ['NP', ['NNP', 'Luke']], ['VP', ['MD', would], ['VP', ['VB', win]]]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(2800050000302,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['JJ', 'True'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Still']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['MD', would],
                ['VB', win],
                ['.', '.']
              ]).
pllm:training(2800050000302,
              tree_to_toks,
              ['True', '.', 'Still', ',', 'I', think, 'Luke', would, win, '.']).
pllm:training(2800060000303, string, "Actually, we're both wrong.").
pllm:training(2800060000303,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Actually']],
                  [',', ','],
                  ['NP', ['PRP', we]],
                  ['VP', ['VB', '\'re'], ['NP', ['DT', both], ['NN', wrong]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2800060000303,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Actually']],
                [',', ','],
                ['NP', ['PRP', we]],
                ['VB', '\'re'],
                ['NP', ['DT', both], ['NN', wrong]],
                ['.', '.']
              ]).
pllm:training(2800060000303, tree_to_toks, ['Actually', ',', we, '\'re', 'both-wrong', '.']).
pllm:training(2800070000304, string, "Why?").
pllm:training(2800070000304,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]]).
pllm:training(2800070000304,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', 'Why']], ['.', ?]]).
pllm:training(2800070000304, tree_to_toks, ['Why', ?]).
pllm:training(2800080000305, string, "Yoda wins, obviously.").
pllm:training(2800080000305,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Yoda']],
                  ['VP', ['VBZ', wins], [',', ','], ['ADVP', ['RB', obviously]]],
                  ['.', '.']
                ]
              ]).
pllm:training(2800080000305,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', wins],
                [',', ','],
                ['ADVP', ['RB', obviously]],
                ['.', '.']
              ]).
pllm:training(2800080000305, tree_to_toks, ['Yoda', wins, ',', obviously, '.']).
pllm:training(2800090000306, string, "That's true.").
pllm:training(2800090000306,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
              ]).
pllm:training(2800090000306,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.']
              ]).
pllm:training(2800090000306, tree_to_toks, ['That', '\'s', true, '.']).
pllm:training(2800100000307, string, "Yoda always wins.").
pllm:training(2800100000307,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['NNP', 'Yoda']], ['ADVP', ['RB', always]], ['VP', ['VBZ', wins]], ['.', '.']]
              ]).
pllm:training(2800100000307,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['ADVP', ['RB', always]],
                ['VBZ', wins],
                ['.', '.']
              ]).
pllm:training(2800100000307, tree_to_toks, ['Yoda', always, wins, '.']).
pllm:training(2900010000309,
              string,
              "Okay, what was one of the biggest shocks in Stars Wars?").
pllm:training(2900010000309,
              text_to_tree,
              [ 'SBAR',
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['WP', what]],
                [ 'S',
                  [ 'VP',
                    ['AUX', was],
                    [ 'NP',
                      ['NP', ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJS', biggest], ['NNS', shocks]],
                          ['PP', ['IN', in], ['NP', ['NNP', 'Stars'], ['NNPS', 'Wars']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(2900010000309,
              unphrasify,
              [ mark('SBAR'),
                ['INTJ', ['UH', 'Okay']],
                [',', ','],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', was],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['JJS', biggest], ['NNS', shocks]],
                ['IN', in],
                ['NP', ['NNP', 'Stars'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(2900010000309,
              tree_to_toks,
              ['Okay', ',', what, was, one, of, 'the-biggest-shocks', in, 'Stars-Wars', ?]).
pllm:training(2900020000310, string, "What do you mean by biggest shock?").
pllm:training(2900020000310,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', mean], ['PP', ['IN', by], ['NP', ['JJS', biggest], ['NN', shock]]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(2900020000310,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['IN', by],
                ['NP', ['JJS', biggest], ['NN', shock]],
                ['.', ?]
              ]).
pllm:training(2900020000310,
              tree_to_toks,
              ['What', do, you, mean, by, 'biggest-shock', ?]).
pllm:training(2900030000311,
              string,
              "I mean, the most shocking or unexpected revealation in the movies.").
pllm:training(2900030000311,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', mean],
                    [',', ','],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        [ 'ADJP',
                          ['RBS', most],
                          ['JJ', shocking],
                          ['CC', or],
                          ['JJ', unexpected]
                        ],
                        ['NN', revealation]
                      ],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NNS', movies]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900030000311,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                [',', ','],
                [ 'NP',
                  ['DT', the],
                  ['ADJP', ['RBS', most], ['JJ', shocking], ['CC', or], ['JJ', unexpected]],
                  ['NN', revealation]
                ],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(2900030000311,
              tree_to_toks,
              [ 'I',
                mean,
                (','),
                'the-most-shocking-or-unexpected-revealation',
                in,
                'the-movies',
                ('.')
              ]).
pllm:training(2900040000312,
              string,
              "Well, the whole \"Luke, I am your Father\" was a doozy when you first learned it.").
pllm:training(2900040000312,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well']],
                  [',', ','],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', whole]],
                    ['``', '"'],
                    [ 'S',
                      ['NP', ['NNP', 'Luke']],
                      [',', ','],
                      ['NP', ['PRP', 'I']],
                      ['VP', ['VB', am], ['NP', ['PRP$', your], ['NNP', 'Father']]]
                    ],
                    ['\'\'', '"']
                  ],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', doozy]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['ADVP', ['RB', first]],
                          ['VP', ['VBD', learned], ['NP', ['PRP', it]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900040000312,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['DT', the], ['JJ', whole]],
                ['``', '"'],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['NP', ['PRP$', your], ['NNP', 'Father']],
                ['\'\'', '"'],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', doozy]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', first]],
                ['VBD', learned],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(2900040000312,
              tree_to_toks,
              [ 'Well',
                (','),
                'the-whole',
                '"',
                'Luke',
                (','),
                'I',
                am,
                'your-Father',
                '"',
                was,
                'a-doozy',
                when,
                you,
                first,
                learned,
                it,
                ('.')
              ]).
pllm:training(2900050000313,
              string,
              "Yes, it was definitley not something you'd see coming.").
pllm:training(2900050000313,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', definitley]],
                    [ 'NP',
                      ['NP', ['RB', not], ['NN', something]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['VP', ['MD', '\'d'], ['VP', ['VB', see], ['S', ['VP', ['VBG', coming]]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900050000313,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADVP', ['RB', definitley]],
                ['NP', ['RB', not], ['NN', something]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['VB', see],
                mark('S'),
                ['VBG', coming],
                ['.', '.']
              ]).
pllm:training(2900050000313,
              tree_to_toks,
              ['Yes', ',', it, was, definitley, 'not-something', you, '\'d', see, coming, '.']).
pllm:training(2900060000314,
              string,
              "Them there's the whole Luke and Leia are brother and sister thing.").
pllm:training(2900060000314,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'Them']],
                  ['NP', ['EX', there]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', whole],
                      [ 'NML',
                        [ 'S',
                          ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                          ['VP', ['VB', are], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]]
                        ]
                      ],
                      ['NN', thing]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900060000314,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Them']],
                ['NP', ['EX', there]],
                ['VBZ', '\'s'],
                ['DT', the],
                ['JJ', whole],
                mark('NML'),
                mark('S'),
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                ['VB', are],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['NN', thing],
                ['.', '.']
              ]).
pllm:training(2900060000314,
              tree_to_toks,
              [ 'Them',
                there,
                '\'s',
                the,
                whole,
                'Luke-and-Leia',
                are,
                'brother-and-sister',
                thing,
                ('.')
              ]).
pllm:training(2900070000315,
              string,
              "Oh, don't remind me, makes the whole kiss on Hoth a bit akward.").
pllm:training(2900070000315,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['S', ['VP', ['AUX', do], ['RB', not], ['VP', ['VB', remind], ['NP', ['PRP', me]]]]],
                [',', ','],
                [ 'VP',
                  ['VBZ', makes],
                  [ 'S',
                    ['NP', ['DT', the], ['NN', whole]],
                    [ 'VP',
                      ['VB', kiss],
                      ['PP', ['IN', on], ['NP', ['NNP', 'Hoth']]],
                      ['ADVP', ['NP', ['DT', a], ['NN', bit]], ['RB', akward]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(2900070000315,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                mark('S'),
                ['AUX', do],
                ['RB', not],
                ['VB', remind],
                ['NP', ['PRP', me]],
                [',', ','],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['DT', the], ['NN', whole]],
                ['VB', kiss],
                ['IN', on],
                ['NP', ['NNP', 'Hoth']],
                'ADVP',
                ['NP', ['DT', a], ['NN', bit]],
                ['RB', akward],
                ['.', '.']
              ]).
pllm:training(2900070000315,
              tree_to_toks,
              [ 'Oh',
                (','),
                do,
                not,
                remind,
                me,
                (','),
                makes,
                'the-whole',
                kiss,
                on,
                'Hoth',
                'ADVP',
                'a-bit',
                akward,
                ('.')
              ]).
pllm:training(2900080000316,
              string,
              "Yeah, goes from \" You lucky so and so\" to \" I hear banjos, run!\"").
pllm:training(2900080000316,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  [ 'VP',
                    ['VBZ', goes],
                    [ 'PP',
                      ['IN', from],
                      ['``', '"'],
                      [ 'NP',
                        [ 'NP',
                          ['NP', ['PRP', 'You']],
                          ['ADJP', ['JJ', lucky], ['ADVP', ['RB', so], ['CC', and], ['RB', so]]]
                        ],
                        ['``', '"'],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              [ 'SBAR',
                                ['``', '"'],
                                [ 'S',
                                  ['NP', ['PRP', 'I']],
                                  ['VP', ['VB', hear], ['NP', ['NNS', banjos]]]
                                ]
                              ],
                              [',', ','],
                              ['VP', ['VB', run]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.'],
                  ['\'\'', '"']
                ],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(2900080000316,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['VBZ', goes],
                ['IN', from],
                ['``', '"'],
                ['NP', ['PRP', 'You']],
                ['ADJP', ['JJ', lucky], ['ADVP', ['RB', so], ['CC', and], ['RB', so]]],
                ['``', '"'],
                mark('S'),
                ['TO', to],
                mark('SBAR'),
                ['``', '"'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', hear],
                ['NP', ['NNS', banjos]],
                [',', ','],
                ['VB', run],
                ['.', '.'],
                ['\'\'', '"'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(2900080000316,
              tree_to_toks,
              [ 'Yeah',
                (','),
                goes,
                from,
                '"',
                'You',
                lucky,
                so,
                and,
                so,
                '"',
                to,
                '"',
                'I',
                hear,
                banjos,
                (','),
                run,
                ('.'),
                '"',
                'FRAG',
                ('.')
              ]).
pllm:training(2900090000317,
              string,
              "Other than that, I can't think of any more real shocking revealtions.").
pllm:training(2900090000317,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['PP', ['JJ', 'Other'], ['PP', ['IN', than], ['NP', ['DT', that]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', any],
                          ['ADJP', ['JJR', more]],
                          ['JJ', real],
                          ['JJ', shocking],
                          ['NNS', revealtions]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900090000317,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['JJ', 'Other'],
                ['IN', than],
                ['NP', ['DT', that]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', think],
                ['IN', of],
                [ 'NP',
                  ['DT', any],
                  ['ADJP', ['JJR', more]],
                  ['JJ', real],
                  ['JJ', shocking],
                  ['NNS', revealtions]
                ],
                ['.', '.']
              ]).
pllm:training(2900090000317,
              tree_to_toks,
              [ 'Other',
                than,
                that,
                (','),
                'I',
                can,
                not,
                think,
                of,
                'any-more-real-shocking-revealtions',
                ('.')
              ]).
pllm:training(2900100000318,
              string,
              "Neither can I, since with the prequels we all knew where we were going in the end.").
pllm:training(2900100000318,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'Neither']],
                  [ 'VP',
                    ['MD', can],
                    [ 'VP',
                      ['NP', ['PRP', 'I']],
                      [',', ','],
                      [ 'PP',
                        ['IN', since],
                        ['IN', with],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', prequels]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', we]],
                              ['ADVP', ['DT', all]],
                              [ 'VP',
                                ['VBD', knew],
                                [ 'SBAR',
                                  ['WHADVP', ['WRB', where]],
                                  [ 'S',
                                    ['NP', ['PRP', we]],
                                    [ 'VP',
                                      ['VBD', were],
                                      [ 'VP',
                                        ['VBG', going],
                                        ['PP', ['IN', in], ['NP', ['DT', the], ['NN', end]]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(2900100000318,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'Neither']],
                ['MD', can],
                ['NP', ['PRP', 'I']],
                [',', ','],
                ['IN', since],
                ['IN', with],
                ['NP', ['DT', the], ['NNS', prequels]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['ADVP', ['DT', all]],
                ['VBD', knew],
                mark('SBAR'),
                ['WHADVP', ['WRB', where]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VBD', were],
                ['VBG', going],
                ['IN', in],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.']
              ]).
pllm:training(2900100000318,
              tree_to_toks,
              [ 'Neither',
                can,
                'I',
                (','),
                since,
                with,
                'the-prequels',
                we,
                all,
                knew,
                where,
                we,
                were,
                going,
                in,
                'the-end',
                ('.')
              ]).
pllm:training(3000010000320,
              string,
              "Do you prefer the new Star wars, the old Star Wars or the ones in the middle?").
pllm:training(3000010000320,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', prefer],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNS', wars]],
                    [',', ','],
                    ['NP', ['DT', the], ['JJ', old], ['NNP', 'Star'], ['NNPS', 'Wars']],
                    ['CC', or],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', ones]],
                      ['PP', ['IN', in], ['NP', ['DT', the], ['NN', middle]]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3000010000320,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', prefer],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNS', wars]],
                [',', ','],
                ['NP', ['DT', the], ['JJ', old], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['CC', or],
                ['NP', ['DT', the], ['NNS', ones]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', middle]],
                ['.', ?]
              ]).
pllm:training(3000010000320,
              tree_to_toks,
              [ 'Do',
                you,
                prefer,
                'the-new-Star-wars',
                (','),
                'the-old-Star-Wars',
                or,
                'the-ones',
                in,
                'the-middle',
                (?)
              ]).
pllm:training(3000020000321,
              string,
              "I think the old star wars, Luke, Leai and Hans, are best.").
pllm:training(3000020000321,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', old], ['NN', star], ['NNS', wars]],
                          [',', ','],
                          ['NP', ['NNP', 'Luke'], [',', ','], ['NNP', 'Leai'], ['CC', and], ['NNP', 'Hans']],
                          [',', ',']
                        ],
                        ['VP', ['VB', are], ['ADJP', ['JJS', best]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000020000321,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', old], ['NN', star], ['NNS', wars]],
                [',', ','],
                ['NP', ['NNP', 'Luke'], [',', ','], ['NNP', 'Leai'], ['CC', and], ['NNP', 'Hans']],
                [',', ','],
                ['VB', are],
                ['ADJP', ['JJS', best]],
                ['.', '.']
              ]).
pllm:training(3000020000321,
              tree_to_toks,
              ['I', think, 'the-old-star-wars', ',', 'Luke--Leai-and-Hans', ',', are, best, '.']).
pllm:training(3000030000322, string, "They had a good bit of story to dig into.").
pllm:training(3000030000322,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'They']],
                [ 'VP',
                  ['AUX', had],
                  [ 'NP',
                    ['NP', ['DT', a], ['JJ', good], ['NN', bit]],
                    ['PP', ['IN', of], ['NP', ['NN', story]]],
                    ['SBAR', ['S', ['VP', ['TO', to], ['VP', ['VB', dig], ['PP', ['IN', into]]]]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3000030000322,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'They']],
                ['AUX', had],
                ['NP', ['DT', a], ['JJ', good], ['NN', bit]],
                ['IN', of],
                ['NP', ['NN', story]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', dig],
                ['IN', into],
                ['.', '.']
              ]).
pllm:training(3000030000322,
              tree_to_toks,
              ['They', had, 'a-good-bit', of, story, to, dig, into, '.']).
pllm:training(3000040000323,
              string,
              "It was the relationships, like Han and Leai, the slow burn into love.").
pllm:training(3000040000323,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', was],
                    ['NP', ['DT', the], ['NNS', relationships]],
                    [',', ','],
                    ['PP', ['IN', like], ['NP', ['NNP', 'Han'], ['CC', and], ['NNP', 'Leai']]],
                    [',', ','],
                    [ 'S',
                      ['NP', ['DT', the], ['JJ', slow]],
                      ['VP', ['VB', burn], ['PP', ['IN', into], ['NP', ['NN', love]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000040000323,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['NP', ['DT', the], ['NNS', relationships]],
                [',', ','],
                ['IN', like],
                ['NP', ['NNP', 'Han'], ['CC', and], ['NNP', 'Leai']],
                [',', ','],
                mark('S'),
                ['NP', ['DT', the], ['JJ', slow]],
                ['VB', burn],
                ['IN', into],
                ['NP', ['NN', love]],
                ['.', '.']
              ]).
pllm:training(3000040000323,
              tree_to_toks,
              [ 'It',
                was,
                'the-relationships',
                (','),
                like,
                'Han-and-Leai',
                (','),
                'the-slow',
                burn,
                into,
                love,
                ('.')
              ]).
pllm:training(3000050000324,
              string,
              "Their relationship really played out well, I was invested.").
pllm:training(3000050000324,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VBD', played], ['PRT', ['RP', out]], ['ADVP', ['RB', well]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', was], ['VP', ['VBN', invested]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3000050000324,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                ['ADVP', ['RB', really]],
                ['VBD', played],
                ['PRT', ['RP', out]],
                ['ADVP', ['RB', well]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBN', invested],
                ['.', '.']
              ]).
pllm:training(3000050000324,
              tree_to_toks,
              ['Their-relationship', really, played, out, well, ',', 'I', was, invested, '.']).
pllm:training(3000060000325,
              string,
              "The witty come back between the two always made me smile, like they really did like one another.").
pllm:training(3000060000325,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    ['NP', ['DT', 'The'], ['JJ', witty]],
                    [ 'SBAR',
                      [ 'S',
                        [ 'VP',
                          ['VB', come],
                          ['ADVP', ['RB', back]],
                          ['PP', ['IN', between], ['NP', ['DT', the], ['CD', two]]]
                        ]
                      ]
                    ]
                  ],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VBD', made],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      [ 'VP',
                        ['VB', smile],
                        [',', ','],
                        [ 'S',
                          ['INTJ', ['UH', like]],
                          ['NP', ['PRP', they]],
                          ['ADVP', ['RB', really]],
                          [ 'VP',
                            ['VBD', did],
                            ['PP', ['IN', like], ['NP', ['CD', one], ['DT', another]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000060000325,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', witty]],
                mark('SBAR'),
                mark('S'),
                ['VB', come],
                ['ADVP', ['RB', back]],
                ['IN', between],
                ['NP', ['DT', the], ['CD', two]],
                ['ADVP', ['RB', always]],
                ['VBD', made],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', smile],
                [',', ','],
                mark('S'),
                ['INTJ', ['UH', like]],
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', really]],
                ['VBD', did],
                ['IN', like],
                ['NP', ['CD', one], ['DT', another]],
                ['.', '.']
              ]).
pllm:training(3000060000325,
              tree_to_toks,
              [ 'The-witty',
                come,
                back,
                between,
                'the-two',
                always,
                made,
                me,
                smile,
                (','),
                like,
                they,
                really,
                did,
                like,
                'one-another',
                ('.')
              ]).
pllm:training(3000070000326, string, "I like that they came from world apart.").
pllm:training(3000070000326,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', like],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', came],
                          ['PP', ['IN', from], ['NP', ['NN', world]]],
                          ['ADVP', ['RB', apart]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000070000326,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', like],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', came],
                ['IN', from],
                ['NP', ['NN', world]],
                ['ADVP', ['RB', apart]],
                ['.', '.']
              ]).
pllm:training(3000070000326,
              tree_to_toks,
              ['I', like, that, they, came, from, world, apart, '.']).
pllm:training(3000080000327,
              string,
              "Yes, he was a bit of a scoundrel and her a princess, it was a wrong side of the tracks love.").
pllm:training(3000080000327,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['INTJ', ['UH', 'Yes']],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', bit]],
                          ['PP', ['IN', of], ['NP', ['DT', a], ['NN', scoundrel]]]
                        ],
                        ['CC', and],
                        ['NP', ['PRP$', her], ['NP', ['DT', a], ['NN', princess]]]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', wrong], ['NN', side]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', tracks]],
                          ['SBAR', ['S', ['VP', ['VB', love]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000080000327,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', bit]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', scoundrel]],
                ['CC', and],
                ['PRP$', her],
                ['NP', ['DT', a], ['NN', princess]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', wrong], ['NN', side]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', tracks]],
                mark('SBAR'),
                mark('S'),
                ['VB', love],
                ['.', '.']
              ]).
pllm:training(3000080000327,
              tree_to_toks,
              [ 'Yes',
                (','),
                he,
                was,
                'a-bit',
                of,
                'a-scoundrel',
                and,
                her,
                'a-princess',
                (','),
                it,
                was,
                'a-wrong-side',
                of,
                'the-tracks',
                love,
                ('.')
              ]).
pllm:training(3000090000328,
              string,
              "Did you like the part when he was about to be frozen and she said she loved him.").
pllm:training(3000090000328,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  ['NP', ['DT', the], ['NN', part]],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', when]],
                    [ 'S',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['AUX', was],
                          [ 'VP',
                            ['IN', about],
                            ['S', ['VP', ['TO', to], ['VP', ['AUX', be], ['VP', ['VBN', frozen]]]]]
                          ]
                        ]
                      ],
                      ['CC', and],
                      [ 'S',
                        ['NP', ['PRP', she]],
                        [ 'VP',
                          ['VBD', said],
                          [ 'SBAR',
                            ['S', ['NP', ['PRP', she]], ['VP', ['VBD', loved], ['NP', ['PRP', him]]]]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3000090000328,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', part]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', about],
                mark('S'),
                ['TO', to],
                ['AUX', be],
                ['VBN', frozen],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', loved],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3000090000328,
              tree_to_toks,
              [ 'Did',
                you,
                like,
                'the-part',
                when,
                he,
                was,
                about,
                to,
                be,
                frozen,
                and,
                she,
                said,
                she,
                loved,
                him,
                ('.')
              ]).
pllm:training(3000100000329, string, "And he said, \"I know\", got me everytime.").
pllm:training(3000100000329,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'And'],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    [ 'VP',
                      ['VBD', said],
                      [',', ','],
                      ['``', '"'],
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                      ['\'\'', '"']
                    ],
                    [',', ','],
                    ['VP', ['VBD', got], ['NP', ['PRP', me]], ['NP-TMP', ['NN', everytime]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3000100000329,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', he]],
                ['VBD', said],
                [',', ','],
                ['``', '"'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                ['\'\'', '"'],
                [',', ','],
                ['VBD', got],
                ['NP', ['PRP', me]],
                ['NP-TMP', ['NN', everytime]],
                ['.', '.']
              ]).
pllm:training(3000100000329,
              tree_to_toks,
              ['And', he, said, ',', '"', 'I', know, '"', ',', got, me, everytime, '.']).
pllm:training(3100010000331, string, "Did you like the role of Anakin Skywalker?").
pllm:training(3100010000331,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', role]],
                    ['PP', ['IN', of], ['NP', ['NNP', 'Anakin'], ['NNP', 'Skywalker']]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3100010000331,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', role]],
                ['IN', of],
                ['NP', ['NNP', 'Anakin'], ['NNP', 'Skywalker']],
                ['.', ?]
              ]).
pllm:training(3100010000331,
              tree_to_toks,
              ['Did', you, like, 'the-role', of, 'Anakin-Skywalker', ?]).
pllm:training(3100020000332, string, "I loved the story behind him.").
pllm:training(3100020000332,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', loved],
                    ['NP', ['DT', the], ['NN', story]],
                    ['PP', ['IN', behind], ['NP', ['PRP', him]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100020000332,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', loved],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', behind],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3100020000332, tree_to_toks, ['I', loved, 'the-story', behind, him, '.']).
pllm:training(3100030000333,
              string,
              "Yeah but did you love the way he was played.").
pllm:training(3100030000333,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah'], ['FRAG', ['CC', but]]],
                  ['VBD', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', love],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', way]],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['VP', ['VBN', played]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100030000333,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah'], ['FRAG', ['CC', but]]],
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', love],
                ['NP', ['DT', the], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['VBN', played],
                ['.', '.']
              ]).
pllm:training(3100030000333,
              tree_to_toks,
              ['Yeah', but, did, you, love, 'the-way', he, was, played, '.']).
pllm:training(3100040000334,
              string,
              "I thought it could have had room for improvement.").
pllm:training(3100040000334,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', have],
                            [ 'VP',
                              ['VBN', had],
                              [ 'NP',
                                ['NP', ['NN', room]],
                                ['PP', ['IN', for], ['NP', ['NN', improvement]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100040000334,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', could],
                ['VB', have],
                ['VBN', had],
                ['NP', ['NN', room]],
                ['IN', for],
                ['NP', ['NN', improvement]],
                ['.', '.']
              ]).
pllm:training(3100040000334,
              tree_to_toks,
              ['I', thought, it, could, have, had, room, for, improvement, '.']).
pllm:training(3100050000335, string, "How about Natalie Portman's character").
pllm:training(3100050000335,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['NNP', 'Natalie'], ['NNP', 'Portman'], ['POS', '\'s']],
                      ['NN', character]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100050000335,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['WHADVP', ['WRB', 'How']],
                ['IN', about],
                ['NP', ['NNP', 'Natalie'], ['NNP', 'Portman'], ['POS', '\'s']],
                ['NN', character],
                ['.', '.']
              ]).
pllm:training(3100050000335,
              tree_to_toks,
              ['How', about, 'Natalie-Portman-\'s', character, '.']).
pllm:training(3100060000336, string, "She did a great job as a ruler.").
pllm:training(3100060000336,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'She']],
                [ 'VP',
                  ['AUX', did],
                  [ 'NP',
                    ['NP', ['DT', a], ['JJ', great], ['NN', job]],
                    ['PP', ['IN', as], ['NP', ['DT', a], ['NN', ruler]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3100060000336,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'She']],
                ['AUX', did],
                ['NP', ['DT', a], ['JJ', great], ['NN', job]],
                ['IN', as],
                ['NP', ['DT', a], ['NN', ruler]],
                ['.', '.']
              ]).
pllm:training(3100060000336, tree_to_toks, ['She', did, 'a-great-job', as, 'a-ruler', '.']).
pllm:training(3100070000337, string, "I think it was good too").
pllm:training(3100070000337,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBD', was], ['ADJP', ['JJ', good], ['RB', too]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100070000337,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', good], ['RB', too]],
                ['.', '.']
              ]).
pllm:training(3100070000337, tree_to_toks, ['I', think, it, was, good, too, '.']).
pllm:training(3100080000338, string, "I just think people dont love the prequels").
pllm:training(3100080000338,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['NNS', people]],
                        [ 'VP',
                          ['VB', do],
                          ['RB', nt],
                          ['VP', ['VB', love], ['NP', ['DT', the], ['NNS', prequels]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100080000338,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', do],
                ['RB', nt],
                ['VB', love],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(3100080000338,
              tree_to_toks,
              ['I', just, think, people, do, nt, love, 'the-prequels', '.']).
pllm:training(3100090000339,
              string,
              "I always caution against going backwards in a film.").
pllm:training(3100090000339,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VB', caution],
                    [ 'PP',
                      ['IN', against],
                      [ 'S',
                        [ 'VP',
                          ['VBG', going],
                          ['ADVP', ['RB', backwards]],
                          ['PP', ['IN', in], ['NP', ['DT', a], ['NN', film]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3100090000339,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VB', caution],
                ['IN', against],
                mark('S'),
                ['VBG', going],
                ['ADVP', ['RB', backwards]],
                ['IN', in],
                ['NP', ['DT', a], ['NN', film]],
                ['.', '.']
              ]).
pllm:training(3100090000339,
              tree_to_toks,
              ['I', always, caution, against, going, backwards, in, 'a-film', '.']).
pllm:training(3100100000340,
              string,
              "Im glad the franchise is going forward now.").
pllm:training(3100100000340,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['VP', ['VBG', 'Im'], ['ADJP', ['JJ', glad]], ['NP', ['DT', the], ['NN', franchise]]]
                ],
                [ 'VP',
                  ['AUX', is],
                  ['VP', ['VBG', going], ['ADVP', ['RB', forward]], ['ADVP', ['RB', now]]]
                ],
                ['.', '.']
              ]).
pllm:training(3100100000340,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['VBG', 'Im'],
                ['ADJP', ['JJ', glad]],
                ['NP', ['DT', the], ['NN', franchise]],
                ['AUX', is],
                ['VBG', going],
                ['ADVP', ['RB', forward]],
                ['ADVP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(3100100000340,
              tree_to_toks,
              ['Im', glad, 'the-franchise', is, going, forward, now, '.']).
pllm:training(3200010000342,
              string,
              "What do you think of the latest Star Wars Movie?").
pllm:training(3200010000342,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['JJS', latest]],
                          ['NP', ['NNP', 'Star'], ['NNPS', 'Wars'], ['NNP', 'Movie']]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3200010000342,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['JJS', latest]],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars'], ['NNP', 'Movie']],
                ['.', ?]
              ]).
pllm:training(3200010000342,
              tree_to_toks,
              ['What', do, you, think, of, 'the-latest', 'Star-Wars-Movie', ?]).
pllm:training(3200020000343,
              string,
              "I really liked it, how do you think the next one will be?").
pllm:training(3200020000343,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VBD', liked], ['NP', ['PRP', it]]]
                  ],
                  [',', ','],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', how]],
                    [ 'S',
                      ['VB', do],
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['DT', the], ['JJ', next], ['NN', one]],
                            ['VP', ['MD', will], ['VP', ['VB', be]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3200020000343,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                [',', ','],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', next], ['NN', one]],
                ['MD', will],
                ['VB', be],
                ['.', ?]
              ]).
pllm:training(3200020000343,
              tree_to_toks,
              ['I', really, liked, it, ',', how, do, you, think, 'the-next-one', will, be, ?]).
pllm:training(3200030000344, string, "Well I really hope it turns out better.").
pllm:training(3200030000344,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well']],
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  [ 'VP',
                    ['VB', hope],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBZ', turns], ['PRT', ['RP', out]], ['NP', ['JJR', better]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200030000344,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', hope],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', turns],
                ['PRT', ['RP', out]],
                ['NP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(3200030000344,
              tree_to_toks,
              ['Well', 'I', really, hope, it, turns, out, better, '.']).
pllm:training(3200040000345, string, "Yea me too.").
pllm:training(3200040000345,
              text_to_tree,
              ['S', ['VP', ['VB', 'Yea'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']]).
pllm:training(3200040000345,
              unphrasify,
              [mark('S'), ['VB', 'Yea'], ['NP', ['PRP', me]], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(3200040000345, tree_to_toks, ['Yea', me, too, '.']).
pllm:training(3200050000346,
              string,
              "Personally I thought the last one that came out was a little week.").
pllm:training(3200050000346,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Personally']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['DT', the], ['JJ', last], ['NN', one]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            ['S', ['VP', ['VBD', came], ['PRT', ['RP', out]]]]
                          ]
                        ],
                        ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', little], ['NN', week]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200050000346,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Personally']],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', last], ['NN', one]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', came],
                ['PRT', ['RP', out]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', little], ['NN', week]],
                ['.', '.']
              ]).
pllm:training(3200050000346,
              tree_to_toks,
              [ 'Personally',
                'I',
                thought,
                'the-last-one',
                that,
                came,
                out,
                was,
                'a-little-week',
                ('.')
              ]).
pllm:training(3200060000347, string, "Why do you think that?").
pllm:training(3200060000347,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', think], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(3200060000347,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(3200060000347, tree_to_toks, ['Why', do, you, think, that, ?]).
pllm:training(3200070000348,
              string,
              "Because they didn't really explain things all that well.").
pllm:training(3200070000348,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'Because'],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['VBD', did],
                        ['RB', 'n\'t'],
                        ['ADVP', ['RB', really]],
                        [ 'VP',
                          ['VB', explain],
                          ['NP', ['NNS', things]],
                          ['SBAR', ['NP', ['NP', ['DT', all]], ['WHPP', ['WDT', that]]]]
                        ]
                      ]
                    ]
                  ],
                  ['ADVP', ['RB', well]],
                  ['.', '.']
                ]
              ]).
pllm:training(3200070000348,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'Because'],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', really]],
                ['VB', explain],
                ['NP', ['NNS', things]],
                mark('SBAR'),
                ['NP', ['DT', all]],
                ['WHPP', ['WDT', that]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(3200070000348,
              tree_to_toks,
              ['Because', they, did, 'n\'t', really, explain, things, all, that, well, '.']).
pllm:training(3200080000349,
              string,
              "Isn't that what they're suppose to do? Make you wonder?").
pllm:training(3200080000349,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['AUX', 'Is'],
                  ['RB', 'n\'t'],
                  [ 'NP',
                    ['NP', ['DT', that]],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['AUX', '\'re'],
                          ['VP', ['VB', suppose], ['S', ['VP', ['TO', to], ['VP', ['AUX', do]]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ],
                [ 'CORENLP',
                  ['S', ['VP', ['VB', 'Make'], ['S', ['NP', ['PRP', you]], ['VP', ['VB', wonder]]]], ['.', ?]]
                ]
              ]).
pllm:training(3200080000349,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['AUX', 'Is'],
                ['RB', 'n\'t'],
                ['NP', ['DT', that]],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', '\'re'],
                ['VB', suppose],
                mark('S'),
                ['TO', to],
                ['AUX', do],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Make'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', wonder],
                ['.', ?]
              ]).
pllm:training(3200080000349,
              tree_to_toks,
              ['Is', 'n\'t', that, what, they, '\'re', suppose, to, do, ?, 'Make', you, wonder, ?]).
pllm:training(3200090000350,
              string,
              "Yea, but I would have liked to have seen a bit more than what the ending gave.").
pllm:training(3200090000350,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yea']],
                  [',', ','],
                  ['CC', but],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      [ 'VP',
                        ['VBN', liked],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', have],
                              [ 'VP',
                                ['VBN', seen],
                                ['NP', ['NP', ['DT', a], ['NN', bit]], ['JJR', more]],
                                [ 'PP',
                                  ['IN', than],
                                  [ 'SBAR',
                                    ['NP', ['WP', what]],
                                    [ 'S',
                                      ['NP', ['NP', ['DT', the]], ['VP', ['VBG', ending]]],
                                      ['VP', ['VBD', gave]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200090000350,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                ['VBN', liked],
                mark('S'),
                ['TO', to],
                ['VB', have],
                ['VBN', seen],
                ['NP', ['DT', a], ['NN', bit]],
                ['JJR', more],
                ['IN', than],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', the]],
                ['VBG', ending],
                ['VBD', gave],
                ['.', '.']
              ]).
pllm:training(3200090000350,
              tree_to_toks,
              [ 'Yea',
                (','),
                but,
                'I',
                would,
                have,
                liked,
                to,
                have,
                seen,
                'a-bit',
                more,
                than,
                what,
                the,
                ending,
                gave,
                ('.')
              ]).
pllm:training(3200100000351, string, "Yea that would have been nice.").
pllm:training(3200100000351,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yea']],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['MD', would],
                    ['VP', ['VB', have], ['VP', ['VBN', been], ['ADJP', ['JJ', nice]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3200100000351,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yea']],
                ['NP', ['DT', that]],
                ['MD', would],
                ['VB', have],
                ['VBN', been],
                ['ADJP', ['JJ', nice]],
                ['.', '.']
              ]).
pllm:training(3200100000351, tree_to_toks, ['Yea', that, would, have, been, nice, '.']).
pllm:training(3300010000353,
              string,
              "I was so excited about the first new Star Wars Movie.").
pllm:training(3300010000353,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'ADJP',
                      ['RB', so],
                      ['JJ', excited],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['DT', the],
                          ['JJ', first],
                          ['JJ', new],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', 'Movie']
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300010000353,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['RB', so],
                ['JJ', excited],
                ['IN', about],
                [ 'NP',
                  ['DT', the],
                  ['JJ', first],
                  ['JJ', new],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', 'Movie']
                ],
                ['.', '.']
              ]).
pllm:training(3300010000353,
              tree_to_toks,
              ['I', was, 'ADJP', so, excited, about, 'the-first-new-Star-Wars-Movie', '.']).
pllm:training(3300020000354, string, "Why is that?").
pllm:training(3300020000354,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['WHADVP', ['WRB', 'Why']], ['S', ['VBZ', is], ['NP', ['DT', that]]], ['.', ?]]
              ]).
pllm:training(3300020000354,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(3300020000354, tree_to_toks, ['Why', is, that, ?]).
pllm:training(3300030000355, string, "There were several reasons, not just one.").
pllm:training(3300030000355,
              text_to_tree,
              [ 'S',
                ['NP', ['EX', 'There']],
                [ 'VP',
                  ['AUX', were],
                  [ 'NP',
                    ['NP', ['JJ', several], ['NNS', reasons]],
                    [',', ','],
                    ['CONJP', ['RB', not], ['RB', just]],
                    ['NP', ['CD', one]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3300030000355,
              unphrasify,
              [ mark('S'),
                ['NP', ['EX', 'There']],
                ['AUX', were],
                ['NP', ['JJ', several], ['NNS', reasons]],
                [',', ','],
                ['CONJP', ['RB', not], ['RB', just]],
                ['NP', ['CD', one]],
                ['.', '.']
              ]).
pllm:training(3300030000355,
              tree_to_toks,
              ['There', were, 'several-reasons', ',', not, just, one, '.']).
pllm:training(3300040000356, string, "Such as?").
pllm:training(3300040000356,
              text_to_tree,
              ['CORENLP', ['FRAG', ['NP', ['JJ', 'Such']], ['PP', ['IN', as]], ['.', ?]]]).
pllm:training(3300040000356,
              unphrasify,
              [mark('CORENLP'), mark('FRAG'), ['NP', ['JJ', 'Such']], ['IN', as], ['.', ?]]).
pllm:training(3300040000356, tree_to_toks, ['Such', as, ?]).
pllm:training(3300050000357,
              string,
              "I was excited about the stars that I remembered from childhood being a part of them.").
pllm:training(3300050000357,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'ADJP',
                      ['JJ', excited],
                      [ 'PP',
                        ['IN', about],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', stars]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              ['NP', ['PRP', 'I']],
                              [ 'VP',
                                ['VBD', remembered],
                                ['PP', ['IN', from], ['NP', ['NN', childhood]]],
                                [ 'S',
                                  [ 'VP',
                                    ['VBG', being],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', part]],
                                      ['PP', ['IN', of], ['NP', ['PRP', them]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300050000357,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                'ADJP',
                ['JJ', excited],
                ['IN', about],
                ['NP', ['DT', the], ['NNS', stars]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', remembered],
                ['IN', from],
                ['NP', ['NN', childhood]],
                mark('S'),
                ['VBG', being],
                ['NP', ['DT', a], ['NN', part]],
                ['IN', of],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(3300050000357,
              tree_to_toks,
              [ 'I',
                was,
                'ADJP',
                excited,
                about,
                'the-stars',
                that,
                'I',
                remembered,
                from,
                childhood,
                being,
                'a-part',
                of,
                them,
                ('.')
              ]).
pllm:training(3300060000358,
              string,
              "I enjoyed this also, though I am much younger than you.").
pllm:training(3300060000358,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', enjoyed],
                    ['NP', ['DT', this]],
                    ['ADVP', ['RB', also]],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', am],
                          [ 'ADJP',
                            ['ADJP', ['JJ', much], ['JJR', younger]],
                            ['PP', ['IN', than], ['NP', ['PRP', you]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300060000358,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', enjoyed],
                ['NP', ['DT', this]],
                ['ADVP', ['RB', also]],
                [',', ','],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['ADJP', ['JJ', much], ['JJR', younger]],
                ['IN', than],
                ['NP', ['PRP', you]],
                ['.', '.']
              ]).
pllm:training(3300060000358,
              tree_to_toks,
              ['I', enjoyed, this, also, ',', though, 'I', am, 'ADJP', much, younger, than, you, '.']).
pllm:training(3300070000359,
              string,
              "Why do you have to remind me of this? Princess Leia was my favorite.").
pllm:training(3300070000359,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['WHADVP', ['WRB', 'Why']],
                    [ 'S',
                      ['VB', do],
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        ['VB', have],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', remind],
                              ['NP', ['PRP', me]],
                              ['PP', ['IN', of], ['NP', ['DT', this]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                    ['VP', ['VBD', was], ['NP', ['PRP$', my], ['NN', favorite]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3300070000359,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', remind],
                ['NP', ['PRP', me]],
                ['IN', of],
                ['NP', ['DT', this]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['VBD', was],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['.', '.']
              ]).
pllm:training(3300070000359,
              tree_to_toks,
              [ 'Why',
                do,
                you,
                have,
                to,
                remind,
                me,
                of,
                this,
                (?),
                'Princess-Leia',
                was,
                'my-favorite',
                ('.')
              ]).
pllm:training(3300080000360,
              string,
              "I enjoyed her too, and it's too bad that she won't be around for the premiere of the next movie.").
pllm:training(3300080000360,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VBD', enjoyed], ['NP', ['PRP$', her]], ['ADVP', ['RB', too]]]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADJP', ['RB', too], ['JJ', bad]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['MD', wo],
                            ['RB', 'n\'t'],
                            [ 'VP',
                              ['VB', be],
                              ['ADVP', ['RB', around]],
                              [ 'PP',
                                ['IN', for],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NN', premiere]],
                                  [ 'PP',
                                    ['IN', of],
                                    ['NP', ['DT', the], ['JJ', next], ['NN', movie]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300080000360,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', enjoyed],
                ['NP', ['PRP$', her]],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', too], ['JJ', bad]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', she]],
                ['MD', wo],
                ['RB', 'n\'t'],
                ['VB', be],
                ['ADVP', ['RB', around]],
                ['IN', for],
                ['NP', ['DT', the], ['NN', premiere]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', next], ['NN', movie]],
                ['.', '.']
              ]).
pllm:training(3300080000360,
              tree_to_toks,
              [ 'I',
                enjoyed,
                her,
                too,
                (','),
                and,
                it,
                '\'s',
                too,
                bad,
                that,
                she,
                wo,
                'n\'t',
                be,
                around,
                for,
                'the-premiere',
                of,
                'the-next-movie',
                ('.')
              ]).
pllm:training(3300090000361,
              string,
              "Yes, I cried when I heard about Carrie Fisher's death.").
pllm:training(3300090000361,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', cried],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', heard],
                          [ 'PP',
                            ['IN', about],
                            [ 'NP',
                              ['NP', ['NNP', 'Carrie'], ['NNP', 'Fisher'], ['POS', '\'s']],
                              ['NN', death]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3300090000361,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', cried],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                ['IN', about],
                ['NP', ['NNP', 'Carrie'], ['NNP', 'Fisher'], ['POS', '\'s']],
                ['NN', death],
                ['.', '.']
              ]).
pllm:training(3300090000361,
              tree_to_toks,
              ['Yes', ',', 'I', cried, when, 'I', heard, about, 'Carrie-Fisher-\'s', death, '.']).
pllm:training(3300100000362, string, "She was an inspiration.").
pllm:training(3300100000362,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'She']],
                  ['VP', ['VBD', was], ['NP', ['DT', an], ['NN', inspiration]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3300100000362,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBD', was],
                ['NP', ['DT', an], ['NN', inspiration]],
                ['.', '.']
              ]).
pllm:training(3300100000362, tree_to_toks, ['She', was, 'an-inspiration', '.']).
pllm:training(3400010000364, string, "Do you like Star Wars?").
pllm:training(3400010000364,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(3400010000364,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(3400010000364, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(3400020000365, string, "It's okay").
pllm:training(3400020000365,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', okay]]], ['.', '.']]]).
pllm:training(3400020000365,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', okay]],
                ['.', '.']
              ]).
pllm:training(3400020000365, tree_to_toks, ['It', '\'s', okay, '.']).
pllm:training(3400030000366, string, "What did you like about it").
pllm:training(3400030000366,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                ],
                ['.', '.']
              ]).
pllm:training(3400030000366,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(3400030000366, tree_to_toks, ['What', did, you, like, about, it, '.']).
pllm:training(3400040000367, string, "the space battles").
pllm:training(3400040000367,
              text_to_tree,
              ['S', ['NP', ['DT', the], ['NN', space]], ['VP', ['VBZ', battles]], ['.', '.']]).
pllm:training(3400040000367,
              unphrasify,
              [mark('S'), ['NP', ['DT', the], ['NN', space]], ['VBZ', battles], ['.', '.']]).
pllm:training(3400040000367, tree_to_toks, ['the-space', battles, '.']).
pllm:training(3400050000368, string, "I liked Jar Jar").
pllm:training(3400050000368,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['NNP', 'Jar'], ['NNP', 'Jar']]],
                  ['.', '.']
                ]
              ]).
pllm:training(3400050000368,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['NNP', 'Jar'], ['NNP', 'Jar']],
                ['.', '.']
              ]).
pllm:training(3400050000368, tree_to_toks, ['I', liked, '', '.']).
pllm:training(3400060000369, string, "He wasn't a popular character").
pllm:training(3400060000369,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', was],
                    ['RB', 'n\'t'],
                    ['NP', ['DT', a], ['JJ', popular], ['NN', character]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400060000369,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['RB', 'n\'t'],
                ['NP', ['DT', a], ['JJ', popular], ['NN', character]],
                ['.', '.']
              ]).
pllm:training(3400060000369, tree_to_toks, ['He', was, 'n\'t', 'a-popular-character', '.']).
pllm:training(3400070000370, string, "I thought he was funny").
pllm:training(3400070000370,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    ['SBAR', ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', funny]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400070000370,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(3400070000370, tree_to_toks, ['I', thought, he, was, funny, '.']).
pllm:training(3400080000371, string, "He was too goofy").
pllm:training(3400080000371,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  ['VP', ['VBD', was], ['ADJP', ['RB', too], ['JJ', goofy]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3400080000371,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADJP', ['RB', too], ['JJ', goofy]],
                ['.', '.']
              ]).
pllm:training(3400080000371, tree_to_toks, ['He', was, too, goofy, '.']).
pllm:training(3400090000372, string, "He was a bad as a  senator").
pllm:training(3400090000372,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', bad]],
                      ['PP', ['IN', as], ['NP', ['DT', a], ['NN', senator]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3400090000372,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', bad]],
                ['IN', as],
                ['NP', ['DT', a], ['NN', senator]],
                ['.', '.']
              ]).
pllm:training(3400090000372, tree_to_toks, ['He', was, 'a-bad', as, 'a-senator', '.']).
pllm:training(3400100000373, string, "That's true").
pllm:training(3400100000373,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', true]]], ['.', '.']]
              ]).
pllm:training(3400100000373,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', true]],
                ['.', '.']
              ]).
pllm:training(3400100000373, tree_to_toks, ['That', '\'s', true, '.']).
pllm:training(3500010000375,
              string,
              "Who is the greatest Sith? Other than Vader, that's too easy.").
pllm:training(3500010000375,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'SBAR',
                    ['NP', ['WP', 'Who']],
                    [ 'S',
                      ['VBZ', is],
                      ['NP', ['NP', ['DT', the], ['JJS', greatest]], ['NP', ['NNP', 'Sith']]]
                    ],
                    ['.', ?]
                  ]
                ],
                [ 'S',
                  ['S', ['ADJP', ['JJ', 'Other'], ['PP', ['IN', than], ['NP', ['NNP', 'Vader']]]]],
                  [',', ','],
                  ['NP', ['DT', that]],
                  ['VP', ['AUX', '\'s'], ['ADJP', ['RB', too], ['JJ', easy]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3500010000375,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['DT', the], ['JJS', greatest]],
                ['NP', ['NNP', 'Sith']],
                ['.', ?],
                mark('S'),
                mark('S'),
                'ADJP',
                ['JJ', 'Other'],
                ['IN', than],
                ['NP', ['NNP', 'Vader']],
                [',', ','],
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                ['ADJP', ['RB', too], ['JJ', easy]],
                ['.', '.']
              ]).
pllm:training(3500010000375,
              tree_to_toks,
              [ 'Who',
                (is),
                'the-greatest',
                'Sith',
                (?),
                'ADJP',
                'Other',
                than,
                'Vader',
                (','),
                that,
                '\'s',
                too,
                easy,
                ('.')
              ]).
pllm:training(3500020000376, string, "Darth Maul is my favorite.").
pllm:training(3500020000376,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]],
                ['VP', ['AUX', is], ['NP', ['PRP$', my], ['NN', favorite]]],
                ['.', '.']
              ]).
pllm:training(3500020000376,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['AUX', is],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['.', '.']
              ]).
pllm:training(3500020000376, tree_to_toks, ['Darth', 'Maul', is, 'my-favorite', '.']).
pllm:training(3500030000377,
              string,
              "He's not that powerful in the force though. His skill is all sword play.").
pllm:training(3500030000377,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['AUX', '\'s'],
                    ['RB', not],
                    ['NP', ['DT', that], ['JJ', powerful]],
                    ['PP', ['IN', in], ['NP', ['DT', the], ['NN', force]]],
                    ['ADVP', ['IN', though]]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'His'], ['NN', skill]],
                    ['VP', ['VBZ', is], ['NP', ['DT', all], ['NN', sword], ['NN', play]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3500030000377,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['AUX', '\'s'],
                ['RB', not],
                ['NP', ['DT', that], ['JJ', powerful]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', force]],
                ['ADVP', ['IN', though]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['NN', skill]],
                ['VBZ', is],
                ['NP', ['DT', all], ['NN', sword], ['NN', play]],
                ['.', '.']
              ]).
pllm:training(3500030000377,
              tree_to_toks,
              [ 'He',
                '\'s',
                not,
                'that-powerful',
                in,
                'the-force',
                though,
                ('.'),
                'His-skill',
                (is),
                'all-sword-play',
                ('.')
              ]).
pllm:training(3500040000378,
              string,
              "I don't agree. It would take incredible force powers to master his double sword.").
pllm:training(3500040000378,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['RB', not], ['VP', ['VB', agree]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['MD', would],
                      [ 'VP',
                        ['VB', take],
                        ['NP', ['JJ', incredible], ['NN', force], ['NNS', powers]],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', master],
                              ['NP', ['PRP$', his], ['JJ', double], ['NN', sword]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3500040000378,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', agree],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', would],
                ['VB', take],
                ['NP', ['JJ', incredible], ['NN', force], ['NNS', powers]],
                mark('S'),
                ['TO', to],
                ['VB', master],
                ['NP', ['PRP$', his], ['JJ', double], ['NN', sword]],
                ['.', '.']
              ]).
pllm:training(3500040000378,
              tree_to_toks,
              [ 'I',
                do,
                not,
                agree,
                ('.'),
                'It',
                would,
                take,
                'incredible-force-powers',
                to,
                master,
                'his-double-sword',
                ('.')
              ]).
pllm:training(3500050000379,
              string,
              "Maybe, but he doesn't seem to use any other force techniques with any regularity.").
pllm:training(3500050000379,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Maybe']],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', does],
                      ['RB', not],
                      [ 'VP',
                        ['VB', seem],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', use],
                              [ 'NP',
                                ['DT', any],
                                ['JJ', other],
                                ['NN', force],
                                ['NNS', techniques]
                              ],
                              ['PP', ['IN', with], ['NP', ['DT', any], ['NN', regularity]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3500050000379,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Maybe']],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', does],
                ['RB', not],
                ['VB', seem],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['NP', ['DT', any], ['JJ', other], ['NN', force], ['NNS', techniques]],
                ['IN', with],
                ['NP', ['DT', any], ['NN', regularity]],
                ['.', '.']
              ]).
pllm:training(3500050000379,
              tree_to_toks,
              [ 'Maybe',
                (','),
                but,
                he,
                does,
                not,
                seem,
                to,
                use,
                'any-other-force-techniques',
                with,
                'any-regularity',
                ('.')
              ]).
pllm:training(3500060000380, string, "Like what?").
pllm:training(3500060000380,
              text_to_tree,
              ['CORENLP', ['SBAR', ['INTJ', ['UH', 'Like']], ['NP', ['WP', what]], ['.', ?]]]).
pllm:training(3500060000380,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['INTJ', ['UH', 'Like']], ['NP', ['WP', what]], ['.', ?]]).
pllm:training(3500060000380, tree_to_toks, ['Like', what, ?]).
pllm:training(3500070000381,
              string,
              "Force push, force choke, force jump, things like that.").
pllm:training(3500070000381,
              text_to_tree,
              [ 'S',
                [ 'VP',
                  ['VB', 'Force'],
                  [ 'S',
                    [ 'VP',
                      ['VB', push],
                      [',', ','],
                      ['INTJ', ['VB', force], ['VB', choke]],
                      [',', ','],
                      [ 'NP',
                        ['NP', ['NN', force], ['NN', jump]],
                        [',', ','],
                        ['NP', ['NP', ['NNS', things]], ['PP', ['IN', like], ['NP', ['DT', that]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3500070000381,
              unphrasify,
              [ mark('S'),
                ['VB', 'Force'],
                mark('S'),
                ['VB', push],
                [',', ','],
                ['INTJ', ['VB', force], ['VB', choke]],
                [',', ','],
                ['NP', ['NN', force], ['NN', jump]],
                [',', ','],
                ['NP', ['NNS', things]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(3500070000381,
              tree_to_toks,
              ['Force', push, ',', force, choke, ',', 'force-jump', ',', things, like, that, '.']).
pllm:training(3500080000382, string, "Does anyone other than Darth Vader?").
pllm:training(3500080000382,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'VP',
                    ['VBZ', 'Does'],
                    ['NP', ['NN', anyone], ['JJ', other]],
                    ['PP', ['IN', than], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3500080000382,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Does'],
                ['NP', ['NN', anyone], ['JJ', other]],
                ['IN', than],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['.', ?]
              ]).
pllm:training(3500080000382,
              tree_to_toks,
              ['Does', 'anyone-other', than, 'Darth-Vader', ?]).
pllm:training(3500090000383,
              string,
              "Kylo Ren uses force moves quite a bit. Remember when he stopped that laser blast in mid-air?").
pllm:training(3500090000383,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren']],
                    [ 'VP',
                      ['VBZ', uses],
                      ['NP', ['NN', force], ['NNS', moves]],
                      ['ADVP', ['RB', quite], ['NP', ['DT', a], ['NN', bit]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', 'Remember'],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', stopped],
                            ['NP', ['DT', that], ['NN', laser], ['NN', blast]],
                            ['PP', ['IN', in], ['NP', ['NN', 'mid-air']]]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(3500090000383,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren']],
                ['VBZ', uses],
                ['NP', ['NN', force], ['NNS', moves]],
                'ADVP',
                ['RB', quite],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Remember'],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', stopped],
                ['NP', ['DT', that], ['NN', laser], ['NN', blast]],
                ['IN', in],
                ['NP', ['NN', 'mid-air']],
                ['.', ?]
              ]).
pllm:training(3500090000383,
              tree_to_toks,
              [ 'Kylo-Ren',
                uses,
                'force-moves',
                'ADVP',
                quite,
                'a-bit',
                ('.'),
                'Remember',
                when,
                he,
                stopped,
                'that-laser-blast',
                in,
                'mid-air',
                (?)
              ]).
pllm:training(3500100000384,
              string,
              "That was cool. Do you think he is more powerful than Vader?").
pllm:training(3500100000384,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['NP', ['DT', 'That']], ['VP', ['VBD', was], ['ADJP', ['JJ', cool]]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['VB', 'Do'],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBZ', is],
                            [ 'ADJP',
                              ['ADJP', ['RBR', more], ['JJ', powerful]],
                              ['PP', ['IN', than], ['NP', ['NNP', 'Vader']]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(3500100000384,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', was],
                ['ADJP', ['JJ', cool]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                'ADJP',
                ['ADJP', ['RBR', more], ['JJ', powerful]],
                ['IN', than],
                ['NP', ['NNP', 'Vader']],
                ['.', ?]
              ]).
pllm:training(3500100000384,
              tree_to_toks,
              [ 'That',
                was,
                cool,
                ('.'),
                'Do',
                you,
                think,
                he,
                (is),
                'ADJP',
                more,
                powerful,
                than,
                'Vader',
                (?)
              ]).
pllm:training(3600010000386,
              string,
              "Did you know one of the actors is banned from Star Wars events?").
pllm:training(3600010000386,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      [ 'S',
                        [ 'NP',
                          ['NP', ['CD', one]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', actors]]]
                        ],
                        [ 'VP',
                          ['VBZ', is],
                          [ 'VP',
                            ['VBN', banned],
                            [ 'PP',
                              ['IN', from],
                              ['NP', ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', events]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3600010000386,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', actors]],
                ['VBZ', is],
                ['VBN', banned],
                ['IN', from],
                ['NP', ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', events]],
                ['.', ?]
              ]).
pllm:training(3600010000386,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                one,
                of,
                'the-actors',
                (is),
                banned,
                from,
                'Star-Wars-events',
                (?)
              ]).
pllm:training(3600020000387, string, "Really?  That seems strange and bizarre.").
pllm:training(3600020000387,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', seems], ['ADJP', ['JJ', strange], ['CC', and], ['JJ', bizarre]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3600020000387,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', seems],
                ['ADJP', ['JJ', strange], ['CC', and], ['JJ', bizarre]],
                ['.', '.']
              ]).
pllm:training(3600020000387,
              tree_to_toks,
              ['Really', ?, 'That', seems, strange, and, bizarre, '.']).
pllm:training(3600030000388,
              string,
              "Yeah.  Apparently, George Lucas doesn't like him and think he's annoying?").
pllm:training(3600030000388,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Apparently']],
                  [',', ','],
                  ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                  [ 'VP',
                    ['AUX', does],
                    ['RB', not],
                    [ 'VP',
                      ['VP', ['VB', like], ['NP', ['PRP', him]]],
                      ['CC', and],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          ['S', ['NP', ['PRP', he]], ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', annoying]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3600030000388,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('S'),
                ['ADVP', ['RB', 'Apparently']],
                [',', ','],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['AUX', does],
                ['RB', not],
                ['VB', like],
                ['NP', ['PRP', him]],
                ['CC', and],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', annoying]],
                ['.', ?]
              ]).
pllm:training(3600030000388,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'Apparently',
                (','),
                'George-Lucas',
                does,
                not,
                like,
                him,
                and,
                think,
                he,
                '\'s',
                annoying,
                (?)
              ]).
pllm:training(3600040000389, string, "Harrison Ford?  Mark Hamill?").
pllm:training(3600040000389,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', ?]]],
                ['CORENLP', ['NP', ['NNP', 'Mark'], ['NNP', 'Hamill'], ['.', ?]]]
              ]).
pllm:training(3600040000389,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', ?]],
                mark('CORENLP'),
                ['NP', ['NNP', 'Mark'], ['NNP', 'Hamill'], ['.', ?]]
              ]).
pllm:training(3600040000389, tree_to_toks, ['Harrison-Ford-?', 'Mark-Hamill-?']).
pllm:training(3600050000390,
              string,
              "No, it's actually the guy who played Darth Vader in the original movies.").
pllm:training(3600050000390,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'No']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['ADVP', ['RB', actually]],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', guy]],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          [ 'VP',
                            ['VBD', played],
                            [ 'NP',
                              ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                              [ 'PP',
                                ['IN', in],
                                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600050000390,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', actually]],
                ['NP', ['DT', the], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(3600050000390,
              tree_to_toks,
              [ 'No',
                (','),
                it,
                '\'s',
                actually,
                'the-guy',
                who,
                played,
                'Darth-Vader',
                in,
                'the-original-movies',
                ('.')
              ]).
pllm:training(3600060000391,
              string,
              "Oh, I know who you're talking about.  I think his name is David Prowse.").
pllm:training(3600060000391,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Oh']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['VP', ['VB', '\'re'], ['VP', ['VBG', talking], ['PP', ['IN', about]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP$', his], ['NN', name]],
                          ['VP', ['VBZ', is], ['NP', ['NNP', 'David'], ['NNP', 'Prowse']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3600060000391,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', '\'re'],
                ['VBG', talking],
                ['IN', about],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP$', his], ['NN', name]],
                ['VBZ', is],
                ['NP', ['NNP', 'David'], ['NNP', 'Prowse']],
                ['.', '.']
              ]).
pllm:training(3600060000391,
              tree_to_toks,
              [ 'Oh',
                (','),
                'I',
                know,
                who,
                you,
                '\'re',
                talking,
                about,
                ('.'),
                'I',
                think,
                'his-name',
                (is),
                'David-Prowse',
                ('.')
              ]).
pllm:training(3600070000392,
              string,
              "Since he didn't voice Vader, I guess they don't seem inclined to stick up for him.").
pllm:training(3600070000392,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', 'Since'],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBD', did], ['RB', 'n\'t'], ['VP', ['VB', voice], ['NP', ['NNP', 'Vader']]]]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VB', do],
                          ['RB', not],
                          [ 'VP',
                            ['VB', seem],
                            [ 'ADJP',
                              ['JJ', inclined],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', stick],
                                    ['PRT', ['RP', up]],
                                    ['PP', ['IN', for], ['NP', ['PRP', him]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600070000392,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'Since'],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', voice],
                ['NP', ['NNP', 'Vader']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', seem],
                'ADJP',
                ['JJ', inclined],
                mark('S'),
                ['TO', to],
                ['VB', stick],
                ['PRT', ['RP', up]],
                ['IN', for],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3600070000392,
              tree_to_toks,
              [ 'Since',
                he,
                did,
                'n\'t',
                voice,
                'Vader',
                (','),
                'I',
                guess,
                they,
                do,
                not,
                seem,
                'ADJP',
                inclined,
                to,
                stick,
                up,
                for,
                him,
                ('.')
              ]).
pllm:training(3600080000393,
              string,
              "Well, anyway can play Vader so they don't need to kiss up to him.").
pllm:training(3600080000393,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Well'], [',', ','], ['UH', anyway]],
                  ['PRN', ['SINV', ['VP', ['MD', can], ['VP', ['VB', play]]], ['NP', ['NNP', 'Vader']]]],
                  ['ADVP', ['RB', so]],
                  ['NP', ['PRP', they]],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', need],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', kiss],
                            ['PRT', ['RP', up]],
                            ['PP', ['IN', to], ['NP', ['PRP', him]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600080000393,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well'], [',', ','], ['UH', anyway]],
                'PRN',
                mark('SINV'),
                ['MD', can],
                ['VB', play],
                ['NP', ['NNP', 'Vader']],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', need],
                mark('S'),
                ['TO', to],
                ['VB', kiss],
                ['PRT', ['RP', up]],
                ['IN', to],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(3600080000393,
              tree_to_toks,
              [ 'Well',
                (','),
                anyway,
                'PRN',
                can,
                play,
                'Vader',
                so,
                they,
                do,
                not,
                need,
                to,
                kiss,
                up,
                to,
                him,
                ('.')
              ]).
pllm:training(3600090000394,
              string,
              "He's the one actor you would never be able to spot since his most famous role called for him wearing a mask.").
pllm:training(3600090000394,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['DT', the], ['CD', one], ['NN', actor]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          [ 'VP',
                            ['MD', would],
                            ['ADVP', ['RB', never]],
                            [ 'VP',
                              ['VB', be],
                              [ 'ADJP',
                                ['JJ', able],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', spot],
                                      [ 'PP',
                                        ['IN', since],
                                        [ 'NP',
                                          [ 'NP',
                                            ['PRP$', his],
                                            ['ADJP', ['RBS', most], ['JJ', famous]],
                                            ['NN', role]
                                          ],
                                          [ 'VP',
                                            ['VBN', called],
                                            [ 'PP',
                                              ['IN', for],
                                              [ 'S',
                                                ['NP', ['PRP', him]],
                                                [ 'VP',
                                                  ['VBG', wearing],
                                                  ['NP', ['DT', a], ['NN', mask]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600090000394,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['CD', one], ['NN', actor]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', would],
                ['ADVP', ['RB', never]],
                ['VB', be],
                'ADJP',
                ['JJ', able],
                mark('S'),
                ['TO', to],
                ['VB', spot],
                ['IN', since],
                ['NP', ['PRP$', his], ['ADJP', ['RBS', most], ['JJ', famous]], ['NN', role]],
                ['VBN', called],
                ['IN', for],
                mark('S'),
                ['NP', ['PRP', him]],
                ['VBG', wearing],
                ['NP', ['DT', a], ['NN', mask]],
                ['.', '.']
              ]).
pllm:training(3600090000394,
              tree_to_toks,
              [ 'He',
                '\'s',
                'the-one-actor',
                you,
                would,
                never,
                be,
                'ADJP',
                able,
                to,
                spot,
                since,
                'his-most-famous-role',
                called,
                for,
                him,
                wearing,
                'a-mask',
                ('.')
              ]).
pllm:training(3600100000395, string, "That's gotta be a strange feeling.").
pllm:training(3600100000395,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'VP',
                      ['VBN', got],
                      [ 'S',
                        [ 'VP',
                          ['TO', ta],
                          ['VP', ['VB', be], ['NP', ['DT', a], ['JJ', strange], ['NN', feeling]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3600100000395,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['VBN', got],
                mark('S'),
                ['TO', ta],
                ['VB', be],
                ['NP', ['DT', a], ['JJ', strange], ['NN', feeling]],
                ['.', '.']
              ]).
pllm:training(3600100000395,
              tree_to_toks,
              ['That', '\'s', got, ta, be, 'a-strange-feeling', '.']).
pllm:training(3700010000397,
              string,
              "The only one of the prequel Star Wars movies I really like is Revenge of the Sith.").
pllm:training(3700010000397,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP',
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['JJ', only], ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', the],
                          ['NN', prequel],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NNS', movies]
                        ]
                      ]
                    ],
                    ['SBAR', ['S', ['NP', ['PRP', 'I']], ['ADVP', ['RB', really]], ['VP', ['VB', like]]]]
                  ],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['NN', 'Revenge']],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3700010000397,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', only], ['CD', one]],
                ['IN', of],
                [ 'NP',
                  ['DT', the],
                  ['NN', prequel],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NNS', movies]
                ],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', like],
                ['VBZ', is],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(3700010000397,
              tree_to_toks,
              [ 'The-only-one',
                of,
                'the-prequel-Star-Wars-movies',
                'I',
                really,
                like,
                (is),
                'Revenge',
                of,
                'the-Sith',
                ('.')
              ]).
pllm:training(3700020000398, string, "Is that the third one?").
pllm:training(3700020000398,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBZ', 'Is'],
                  ['NP', ['DT', that]],
                  ['NP', ['DT', the], ['JJ', third], ['NN', one]],
                  ['.', ?]
                ]
              ]).
pllm:training(3700020000398,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['NP', ['DT', the], ['JJ', third], ['NN', one]],
                ['.', ?]
              ]).
pllm:training(3700020000398, tree_to_toks, ['Is', that, 'the-third-one', ?]).
pllm:training(3700030000399, string, "Yeah. It's the climax of the prequels.").
pllm:training(3700030000399,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', climax]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', prequels]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700030000399,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['NP', ['DT', the], ['NN', climax]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(3700030000399,
              tree_to_toks,
              ['Yeah', '.', 'It', '\'s', 'the-climax', of, 'the-prequels', '.']).
pllm:training(3700040000400,
              string,
              "Why do you like that one? I never even got around to seeing it.").
pllm:training(3700040000400,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  [ 'S',
                    ['AUX', do],
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', like], ['NP', ['DT', that], ['NN', one]]]
                  ],
                  ['.', ?]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', never]],
                    ['ADVP', ['RB', even]],
                    [ 'VP',
                      ['VBD', got],
                      ['ADVP', ['RB', around]],
                      ['PP', ['IN', to], ['S', ['VP', ['VBG', seeing], ['NP', ['PRP', it]]]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700040000400,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', that], ['NN', one]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['ADVP', ['RB', even]],
                ['VBD', got],
                ['ADVP', ['RB', around]],
                ['IN', to],
                mark('S'),
                ['VBG', seeing],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(3700040000400,
              tree_to_toks,
              [ 'Why',
                do,
                you,
                like,
                'that-one',
                (?),
                'I',
                never,
                even,
                got,
                around,
                to,
                seeing,
                it,
                ('.')
              ]).
pllm:training(3700050000401,
              string,
              "Well, I can understand that. The second one is very bad.").
pllm:training(3700050000401,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    ['VP', ['MD', can], ['VP', ['VB', understand], ['NP', ['DT', that]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', second], ['NN', one]],
                    ['VP', ['VBZ', is], ['ADJP', ['RB', very], ['JJ', bad]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700050000401,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', understand],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', second], ['NN', one]],
                ['VBZ', is],
                ['ADJP', ['RB', very], ['JJ', bad]],
                ['.', '.']
              ]).
pllm:training(3700050000401,
              tree_to_toks,
              ['Well', ',', 'I', can, understand, that, '.', 'The-second-one', is, very, bad, '.']).
pllm:training(3700060000402,
              string,
              "It's just so slow, and the twists come out of nowhere.").
pllm:training(3700060000402,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['AUX', '\'s'], ['ADVP', ['RB', just]], ['ADJP', ['RB', so], ['JJ', slow]]]
                ],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['DT', the], ['NNS', twists]],
                  ['VP', ['VB', come], ['PP', ['IN', out], ['PP', ['IN', of], ['NP', ['RB', nowhere]]]]]
                ],
                ['.', '.']
              ]).
pllm:training(3700060000402,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', '\'s'],
                ['ADVP', ['RB', just]],
                ['ADJP', ['RB', so], ['JJ', slow]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', the], ['NNS', twists]],
                ['VB', come],
                ['IN', out],
                ['IN', of],
                ['NP', ['RB', nowhere]],
                ['.', '.']
              ]).
pllm:training(3700060000402,
              tree_to_toks,
              ['It', '\'s', just, so, slow, ',', and, 'the-twists', come, out, of, nowhere, '.']).
pllm:training(3700070000403,
              string,
              "The first one, too, felt a bit unnecessary. And the explanation for what the force is doesn't help.").
pllm:training(3700070000403,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', first], ['CD', one]],
                    [',', ','],
                    ['ADVP', ['RB', too]],
                    [',', ','],
                    [ 'VP',
                      ['VBD', felt],
                      ['S', ['NP', ['DT', a], ['NN', bit]], ['ADJP', ['JJ', unnecessary]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', explanation]],
                      [ 'PP',
                        ['IN', for],
                        [ 'SBAR',
                          ['NP', ['WP', what]],
                          ['S', ['NP', ['DT', the], ['NN', force]], ['VP', ['VBZ', is]]]
                        ]
                      ]
                    ],
                    ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', help]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700070000403,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', first], ['CD', one]],
                [',', ','],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['VBD', felt],
                mark('S'),
                ['NP', ['DT', a], ['NN', bit]],
                ['ADJP', ['JJ', unnecessary]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['DT', the], ['NN', explanation]],
                ['IN', for],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', the], ['NN', force]],
                ['VBZ', is],
                ['VBZ', does],
                ['RB', not],
                ['VB', help],
                ['.', '.']
              ]).
pllm:training(3700070000403,
              tree_to_toks,
              [ 'The-first-one',
                (','),
                too,
                (','),
                felt,
                'a-bit',
                unnecessary,
                ('.'),
                'And',
                'the-explanation',
                for,
                what,
                'the-force',
                (is),
                does,
                not,
                help,
                ('.')
              ]).
pllm:training(3700080000404,
              string,
              "Yeah, that was rough. It made it feel less mystical.").
pllm:training(3700080000404,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    ['VP', ['VBD', was], ['ADJP', ['JJ', rough]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', made],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VB', feel], ['ADJP', ['RBR', less], ['JJ', mystical]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700080000404,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['ADJP', ['JJ', rough]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', made],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VB', feel],
                ['ADJP', ['RBR', less], ['JJ', mystical]],
                ['.', '.']
              ]).
pllm:training(3700080000404,
              tree_to_toks,
              ['Yeah', ',', that, was, rough, '.', 'It', made, it, feel, less, mystical, '.']).
pllm:training(3700090000405,
              string,
              "The third one, though, it helps you understand who Anakin is. And he's really the protagonist of the series.").
pllm:training(3700090000405,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['JJ', third], ['CD', one]],
                    [',', ','],
                    ['ADVP', ['RB', though]],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', helps],
                      [ 'S',
                        ['NP', ['PRP', you]],
                        [ 'VP',
                          ['VB', understand],
                          [ 'SBAR',
                            ['NP', ['WP', who]],
                            ['S', ['NP', ['NNP', 'Anakin']], ['VP', ['VBZ', is]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'And'],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADVP', ['RB', really]],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', protagonist]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NN', series]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3700090000405,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', third], ['CD', one]],
                [',', ','],
                ['ADVP', ['RB', though]],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', helps],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', understand],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['NNP', 'Anakin']],
                ['VBZ', is],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'And'],
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', really]],
                ['NP', ['DT', the], ['NN', protagonist]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', series]],
                ['.', '.']
              ]).
pllm:training(3700090000405,
              tree_to_toks,
              [ 'The-third-one',
                (','),
                though,
                (','),
                it,
                helps,
                you,
                understand,
                who,
                'Anakin',
                (is),
                ('.'),
                'And',
                he,
                '\'s',
                really,
                'the-protagonist',
                of,
                'the-series',
                ('.')
              ]).
pllm:training(3700100000406, string, "I've never thought of it that way.").
pllm:training(3700100000406,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'ve'],
                    ['ADVP', ['RB', never]],
                    [ 'VP',
                      ['VBN', thought],
                      ['PP', ['IN', of], ['NP', ['NP', ['PRP', it]], ['NP', ['DT', that], ['NN', way]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3700100000406,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['ADVP', ['RB', never]],
                ['VBN', thought],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['NP', ['DT', that], ['NN', way]],
                ['.', '.']
              ]).
pllm:training(3700100000406,
              tree_to_toks,
              ['I', '\'ve', never, thought, of, it, 'that-way', '.']).
pllm:training(3800010000408,
              string,
              "Have you seen the original Star Wars trilogy?").
pllm:training(3800010000408,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', original],
                      ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NN', trilogy]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3800010000408,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                [ 'NP',
                  ['DT', the],
                  ['JJ', original],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', trilogy]
                ],
                ['.', ?]
              ]).
pllm:training(3800010000408,
              tree_to_toks,
              ['Have', you, seen, 'the-original-Star-Wars-trilogy', ?]).
pllm:training(3800020000409,
              string,
              "Yes, my favorite was The Empire Strikes Back.  I really liked when Luke went to Dagoba!").
pllm:training(3800020000409,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yes']],
                    [',', ','],
                    ['NP', ['PRP$', my], ['NN', favorite]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'NP',
                        ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                        ['SBAR', ['S', ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VBD', liked],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NNP', 'Luke']],
                          ['VP', ['VBD', went], ['PP', ['IN', to], ['NP', ['NNP', 'Dagoba']]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800020000409,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP$', my], ['NN', favorite]],
                ['VBD', was],
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                mark('SBAR'),
                mark('S'),
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', liked],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', went],
                ['IN', to],
                ['NP', ['NNP', 'Dagoba']],
                ['.', '.']
              ]).
pllm:training(3800020000409,
              tree_to_toks,
              [ 'Yes',
                (','),
                'my-favorite',
                was,
                'The-Empire',
                'Strikes',
                'Back',
                ('.'),
                'I',
                really,
                liked,
                when,
                'Luke',
                went,
                to,
                'Dagoba',
                ('.')
              ]).
pllm:training(3800030000410,
              string,
              "Yeah, Yoda is one of my favorite characters.").
pllm:training(3800030000410,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['NNP', 'Yoda']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['CD', one]],
                      [ 'PP',
                        ['IN', of],
                        ['NP', ['PRP$', my], ['JJ', favorite], ['NNS', characters]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800030000410,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['NNP', 'Yoda']],
                ['VBZ', is],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NNS', characters]],
                ['.', '.']
              ]).
pllm:training(3800030000410,
              tree_to_toks,
              ['Yeah', ',', 'Yoda', is, one, of, 'my-favorite-characters', '.']).
pllm:training(3800040000411,
              string,
              "It was really cool when he got the x-wing out of the swamp after Luke failed to from a lack of faith.").
pllm:training(3800040000411,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADJP', ['RB', really], ['JJ', cool]],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', got],
                          ['NP', ['DT', the], ['NN', 'x-wing']],
                          [ 'PP',
                            ['IN', out],
                            ['IN', of],
                            [ 'NP',
                              ['DT', the],
                              [ 'NML',
                                [ 'S',
                                  [ 'VP',
                                    ['VB', swamp],
                                    [ 'SBAR',
                                      ['IN', after],
                                      [ 'S',
                                        ['NP', ['NNP', 'Luke']],
                                        [ 'VP',
                                          ['VBD', failed],
                                          ['S', ['VP', ['TO', to]]],
                                          [ 'PP',
                                            ['IN', from],
                                            [ 'NP',
                                              ['NP', ['DT', a], ['NN', lack]],
                                              ['PP', ['IN', of], ['NP', ['NN', faith]]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800040000411,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['ADJP', ['RB', really], ['JJ', cool]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['NP', ['DT', the], ['NN', 'x-wing']],
                ['IN', out],
                ['IN', of],
                ['DT', the],
                mark('NML'),
                mark('S'),
                ['VB', swamp],
                mark('SBAR'),
                ['IN', after],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', failed],
                mark('S'),
                ['TO', to],
                ['IN', from],
                ['NP', ['DT', a], ['NN', lack]],
                ['IN', of],
                ['NP', ['NN', faith]],
                ['.', '.']
              ]).
pllm:training(3800040000411,
              tree_to_toks,
              [ 'It',
                was,
                really,
                cool,
                when,
                he,
                got,
                'the-x-wing',
                out,
                of,
                the,
                swamp,
                after,
                'Luke',
                failed,
                to,
                from,
                'a-lack',
                of,
                faith,
                ('.')
              ]).
pllm:training(3800050000412,
              string,
              "I think Yoda must have been one of the most powerful jedi.").
pllm:training(3800050000412,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['NNP', 'Yoda']],
                        [ 'VP',
                          ['MD', must],
                          [ 'VP',
                            ['VB', have],
                            [ 'VP',
                              ['VBN', been],
                              [ 'NP',
                                ['NP', ['CD', one]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['DT', the],
                                    ['ADJP', ['RBS', most], ['JJ', powerful]],
                                    ['NN', jedi]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3800050000412,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Yoda']],
                ['MD', must],
                ['VB', have],
                ['VBN', been],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', powerful]], ['NN', jedi]],
                ['.', '.']
              ]).
pllm:training(3800050000412,
              tree_to_toks,
              ['I', think, 'Yoda', must, have, been, one, of, 'the-most-powerful-jedi', '.']).
pllm:training(3800060000413,
              string,
              "Me too, though I think Obi-wan Kenobi was becoming nearly as wise.  Especially after all his time on Tatooine.").
pllm:training(3800060000413,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'Me']],
                  [ 'VP',
                    ['ADVP', ['RB', too]],
                    [',', ','],
                    [ 'SBAR',
                      ['IN', though],
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['NNP', 'Obi-wan'], ['NNP', 'Kenobi']],
                              [ 'VP',
                                ['AUX', was],
                                [ 'VP',
                                  ['VBG', becoming],
                                  ['ADJP', ['RB', nearly], ['RB', as], ['JJ', wise]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'FRAG',
                    ['ADVP', ['RB', 'Especially']],
                    ['ADVP', ['RB', after], ['RB', all]],
                    [ 'NP',
                      ['NP', ['PRP$', his], ['NN', time]],
                      ['PP', ['IN', on], ['NP', ['NNP', 'Tatooine']]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800060000413,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                [',', ','],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Obi-wan'], ['NNP', 'Kenobi']],
                ['AUX', was],
                ['VBG', becoming],
                ['ADJP', ['RB', nearly], ['RB', as], ['JJ', wise]],
                ['.', '.'],
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Especially']],
                ['ADVP', ['RB', after], ['RB', all]],
                ['NP', ['PRP$', his], ['NN', time]],
                ['IN', on],
                ['NP', ['NNP', 'Tatooine']],
                ['.', '.']
              ]).
pllm:training(3800060000413,
              tree_to_toks,
              [ 'Me',
                too,
                (','),
                though,
                'I',
                think,
                'Obi-wan-Kenobi',
                was,
                becoming,
                nearly,
                (as),
                wise,
                ('.'),
                'Especially',
                after,
                all,
                'his-time',
                on,
                'Tatooine',
                ('.')
              ]).
pllm:training(3800070000414,
              string,
              "Do you think he really didn't recognize R2-D2 and C-3P0 in A New Hope?").
pllm:training(3800070000414,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['ADVP', ['RB', really]],
                      [ 'VP',
                        ['AUX', did],
                        ['RB', 'n\'t'],
                        [ 'VP',
                          ['VB', recognize],
                          [ 'NP',
                            ['NP', ['NN', 'R2-D2'], ['CC', and], ['NN', 'C']],
                            [:, -],
                            ['NP', ['CD', '3'], ['NNP', 'P0']]
                          ],
                          ['PP', ['IN', in], ['NP', ['DT', 'A'], ['JJ', 'New'], ['NN', 'Hope']]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3800070000414,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', really]],
                ['AUX', did],
                ['RB', 'n\'t'],
                ['VB', recognize],
                ['NP', ['NN', 'R2-D2'], ['CC', and], ['NN', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NNP', 'P0']],
                ['IN', in],
                ['NP', ['DT', 'A'], ['JJ', 'New'], ['NN', 'Hope']],
                ['.', ?]
              ]).
pllm:training(3800070000414,
              tree_to_toks,
              [ 'Do',
                you,
                think,
                he,
                really,
                did,
                'n\'t',
                recognize,
                'R2-D2-and-C',
                (-),
                '3-P0',
                in,
                'A-New-Hope',
                (?)
              ]).
pllm:training(3800080000415,
              string,
              "It does seem kind of strange, but I suppose it had been nearly 20 years since he had last seen them.  Maybe he figured they had been sent to the spice mines of Kessel already (or at least 3P0.").
pllm:training(3800080000415,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', does],
                        [ 'S',
                          [ 'VP',
                            ['VB', seem],
                            ['ADJP', ['ADVP', ['RB', kind], ['RB', of]], ['JJ', strange]]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', but],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', suppose],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', it]],
                            [ 'VP',
                              ['VBD', had],
                              [ 'VP',
                                ['VBN', been],
                                ['NP', ['QP', ['RB', nearly], ['CD', '20']], ['NNS', years]],
                                [ 'SBAR',
                                  ['IN', since],
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['VBD', had],
                                      ['ADVP', ['JJ', last]],
                                      ['VP', ['VBN', seen], ['NP', ['PRP', them]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', figured],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VBD', had],
                            [ 'VP',
                              ['VBN', been],
                              [ 'VP',
                                ['VBN', sent],
                                [ 'PP',
                                  ['IN', to],
                                  [ 'NP',
                                    [ 'NP',
                                      ['NP', ['DT', the], ['NN', spice], ['NNS', mines]],
                                      ['PP', ['IN', of], ['NP', ['NNP', 'Kessel']]],
                                      ['ADVP', ['RB', already]]
                                    ],
                                    ['-LRB-', '-LRB-'],
                                    ['CC', or],
                                    [ 'NP',
                                      ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '3']],
                                      ['NN', 'P0']
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800080000415,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', does],
                mark('S'),
                ['VB', seem],
                ['ADJP', ['ADVP', ['RB', kind], ['RB', of]], ['JJ', strange]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', had],
                ['VBN', been],
                ['NP', ['QP', ['RB', nearly], ['CD', '20']], ['NNS', years]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', had],
                ['ADVP', ['JJ', last]],
                ['VBN', seen],
                ['NP', ['PRP', them]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', he]],
                ['VBD', figured],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', had],
                ['VBN', been],
                ['VBN', sent],
                ['IN', to],
                ['NP', ['DT', the], ['NN', spice], ['NNS', mines]],
                ['IN', of],
                ['NP', ['NNP', 'Kessel']],
                ['ADVP', ['RB', already]],
                ['-LRB-', '-LRB-'],
                ['CC', or],
                ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '3']], ['NN', 'P0']],
                ['.', '.']
              ]).
pllm:training(3800080000415,
              tree_to_toks,
              [ 'It',
                does,
                seem,
                kind,
                of,
                strange,
                (','),
                but,
                'I',
                suppose,
                it,
                had,
                been,
                'nearly-20-years',
                since,
                he,
                had,
                last,
                seen,
                them,
                ('.'),
                'Maybe',
                he,
                figured,
                they,
                had,
                been,
                sent,
                to,
                'the-spice-mines',
                of,
                'Kessel',
                already,
                '-LRB-',
                or,
                'at-least-3-P0',
                ('.')
              ]).
pllm:training(3800090000416,
              string,
              "It is rather a wonder that 3P0 survived as long as he had.  He must have had a ton of luck, or caused endless trouble for R2.").
pllm:training(3800090000416,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['AUX', is],
                    ['ADVP', ['RB', rather]],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', wonder]],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          ['NP', ['NNP', '3'], ['NNP', 'P0']],
                          [ 'VP',
                            ['VBD', survived],
                            [ 'ADVP',
                              ['ADVP', ['RB', as], ['RB', long]],
                              ['SBAR', ['IN', as], ['S', ['NP', ['PRP', he]], ['VP', ['AUX', had]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'He']],
                    [ 'VP',
                      ['MD', must],
                      [ 'VP',
                        ['VB', have],
                        [ 'VP',
                          [ 'VP',
                            ['VBN', had],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', ton]],
                              ['PP', ['IN', of], ['NP', ['NN', luck]]]
                            ]
                          ],
                          [',', ','],
                          ['CC', or],
                          [ 'VP',
                            ['VBN', caused],
                            ['NP', ['JJ', endless], ['NN', trouble]],
                            ['PP', ['IN', for], ['NP', ['NN', 'R2']]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3800090000416,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', is],
                ['ADVP', ['RB', rather]],
                ['NP', ['DT', a], ['NN', wonder]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', '3'], ['NNP', 'P0']],
                ['VBD', survived],
                'ADVP',
                ['ADVP', ['RB', as], ['RB', long]],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', had],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['MD', must],
                ['VB', have],
                ['VBN', had],
                ['NP', ['DT', a], ['NN', ton]],
                ['IN', of],
                ['NP', ['NN', luck]],
                [',', ','],
                ['CC', or],
                ['VBN', caused],
                ['NP', ['JJ', endless], ['NN', trouble]],
                ['IN', for],
                ['NP', ['NN', 'R2']],
                ['.', '.']
              ]).
pllm:training(3800090000416,
              tree_to_toks,
              [ 'It',
                (is),
                rather,
                'a-wonder',
                that,
                '3-P0',
                survived,
                'ADVP',
                (as),
                long,
                (as),
                he,
                had,
                ('.'),
                'He',
                must,
                have,
                had,
                'a-ton',
                of,
                luck,
                (','),
                or,
                caused,
                'endless-trouble',
                for,
                'R2',
                ('.')
              ]).
pllm:training(3800100000417,
              string,
              "Yeah, I'm leaning more toward the endless trouble...").
pllm:training(3800100000417,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    [ 'VP',
                      ['VBG', leaning],
                      [ 'PP',
                        ['ADVP', ['RBR', more]],
                        ['IN', toward],
                        ['NP', ['DT', the], ['JJ', endless], ['NN', 'trouble.']],
                        [',', ',']
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                ['S', ['VP', [',', ',']], ['.', '.']],
                ['FRAG', ['.', '.']]
              ]).
pllm:training(3800100000417,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['VBG', leaning],
                ['ADVP', ['RBR', more]],
                ['IN', toward],
                ['NP', ['DT', the], ['JJ', endless], ['NN', 'trouble.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(3800100000417,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'I',
                '\'m',
                leaning,
                more,
                toward,
                'the-endless-trouble.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(3900010000419,
              string,
              "Did you know the podracers engines are based off of real jet engines?").
pllm:training(3900010000419,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'NP',
                      ['NP', ['DT', the], ['NNS', podracers]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNS', engines]],
                          [ 'VP',
                            ['VB', are],
                            [ 'VP',
                              ['VBN', based],
                              ['PRT', ['IN', off]],
                              [ 'PP',
                                ['IN', of],
                                ['NP', ['NML', ['JJ', real], ['NN', jet]], ['NNS', engines]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3900010000419,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['DT', the], ['NNS', podracers]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNS', engines]],
                ['VB', are],
                ['VBN', based],
                ['PRT', ['IN', off]],
                ['IN', of],
                ['NP', ['NML', ['JJ', real], ['NN', jet]], ['NNS', engines]],
                ['.', ?]
              ]).
pllm:training(3900010000419,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                'the-podracers',
                engines,
                are,
                based,
                off,
                of,
                'real-jet-engines',
                (?)
              ]).
pllm:training(3900020000420,
              string,
              "I didn't, is that what they actually look like?").
pllm:training(3900020000420,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VP', ['AUX', did], ['RB', 'n\'t']],
                  [',', ','],
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['DT', that]],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', they]],
                          ['ADVP', ['RB', actually]],
                          ['VP', ['VB', look], ['PP', ['IN', like]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(3900020000420,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', did],
                ['RB', 'n\'t'],
                [',', ','],
                ['AUX', is],
                ['NP', ['DT', that]],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['ADVP', ['RB', actually]],
                ['VB', look],
                ['IN', like],
                ['.', ?]
              ]).
pllm:training(3900020000420,
              tree_to_toks,
              ['I', did, 'n\'t', ',', is, that, what, they, actually, look, like, ?]).
pllm:training(3900030000421,
              string,
              "Yes, if you look at a picture of a jet engine and compare it to anakins podracer they are exactly alike.").
pllm:training(3900030000421,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', if],
                    [ 'S',
                      ['NP', ['PRP', you]],
                      [ 'VP',
                        [ 'VP',
                          ['VB', look],
                          [ 'PP',
                            ['IN', at],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', picture]],
                              ['PP', ['IN', of], ['NP', ['DT', a], ['NN', jet], ['NN', engine]]]
                            ]
                          ]
                        ],
                        ['CC', and],
                        [ 'VP',
                          ['VB', compare],
                          ['NP', ['PRP', it]],
                          ['PP', ['IN', to], ['NP', ['NNS', anakins], ['NN', podracer]]]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', are], ['ADVP', ['RB', exactly]], ['ADVP', ['RB', alike]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3900030000421,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', look],
                ['IN', at],
                ['NP', ['DT', a], ['NN', picture]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', jet], ['NN', engine]],
                ['CC', and],
                ['VB', compare],
                ['NP', ['PRP', it]],
                ['IN', to],
                ['NP', ['NNS', anakins], ['NN', podracer]],
                ['NP', ['PRP', they]],
                ['VB', are],
                ['ADVP', ['RB', exactly]],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(3900030000421,
              tree_to_toks,
              [ 'Yes',
                (','),
                if,
                you,
                look,
                at,
                'a-picture',
                of,
                'a-jet-engine',
                and,
                compare,
                it,
                to,
                'anakins-podracer',
                they,
                are,
                exactly,
                alike,
                ('.')
              ]).
pllm:training(3900040000422,
              string,
              "Another fun fact is the guy who played Darth Maul also appears without his evil makeup in another scene.").
pllm:training(3900040000422,
              text_to_tree,
              [ 'S',
                ['NP', ['DT', 'Another'], ['NN', fun], ['NN', fact]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', guy]],
                    [ 'SBAR',
                      ['NP', ['WP', who]],
                      [ 'S',
                        [ 'VP',
                          ['VBD', played],
                          [ 'S',
                            ['NP', ['NNP', 'Darth']],
                            [ 'VP',
                              ['VB', 'Maul'],
                              ['ADVP', ['RB', also]],
                              ['NP', ['NNS', appears]],
                              [ 'PP',
                                ['IN', without],
                                [ 'NP',
                                  ['NP', ['PRP$', his], ['JJ', evil], ['NN', makeup]],
                                  ['PP', ['IN', in], ['NP', ['DT', another], ['NN', scene]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3900040000422,
              unphrasify,
              [ mark('S'),
                ['NP', ['DT', 'Another'], ['NN', fun], ['NN', fact]],
                ['AUX', is],
                ['NP', ['DT', the], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['ADVP', ['RB', also]],
                ['NP', ['NNS', appears]],
                ['IN', without],
                ['NP', ['PRP$', his], ['JJ', evil], ['NN', makeup]],
                ['IN', in],
                ['NP', ['DT', another], ['NN', scene]],
                ['.', '.']
              ]).
pllm:training(3900040000422,
              tree_to_toks,
              [ 'Another-fun-fact',
                (is),
                'the-guy',
                who,
                played,
                'Darth',
                'Maul',
                also,
                appears,
                without,
                'his-evil-makeup',
                in,
                'another-scene',
                ('.')
              ]).
pllm:training(3900050000423,
              string,
              "Which one? I'm not even sure I'd know what he looked like without the makeup.").
pllm:training(3900050000423,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which'], ['NN', one]], ['.', ?]]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'m'],
                      ['RB', not],
                      [ 'ADJP',
                        ['RB', even],
                        ['JJ', sure],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['PRP', 'I']],
                            [ 'VP',
                              ['MD', '\'d'],
                              [ 'VP',
                                ['VB', know],
                                [ 'SBAR',
                                  ['NP', ['WP', what]],
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['VBD', looked],
                                      [ 'PP',
                                        ['IN', like],
                                        [ 'PP',
                                          ['IN', without],
                                          ['NP', ['DT', the], ['NN', makeup]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(3900050000423,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', one]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['RB', not],
                'ADJP',
                ['RB', even],
                ['JJ', sure],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', looked],
                ['IN', like],
                ['IN', without],
                ['NP', ['DT', the], ['NN', makeup]],
                ['.', '.']
              ]).
pllm:training(3900050000423,
              tree_to_toks,
              [ 'Which-one',
                (?),
                'I',
                '\'m',
                not,
                'ADJP',
                even,
                sure,
                'I',
                '\'d',
                know,
                what,
                he,
                looked,
                like,
                without,
                'the-makeup',
                ('.')
              ]).
pllm:training(3900060000424,
              string,
              "He is one of the Naboo soldiers who is helping Padme get to her throne room in Theed.").
pllm:training(3900060000424,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', is],
                    [ 'NP',
                      [ 'NP',
                        ['NP', ['CD', one]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Naboo'], ['NNS', soldiers]]]
                      ],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          [ 'VP',
                            ['VBZ', is],
                            [ 'VP',
                              ['VBG', helping],
                              [ 'S',
                                ['NP', ['NNP', 'Padme']],
                                [ 'VP',
                                  ['VB', get],
                                  [ 'PP',
                                    ['IN', to],
                                    ['NP', ['PRP$', her], ['NN', throne], ['NN', room]]
                                  ],
                                  ['PP', ['IN', in], ['NP', ['NNP', 'Theed']]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3900060000424,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', is],
                ['NP', ['CD', one]],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Naboo'], ['NNS', soldiers]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', is],
                ['VBG', helping],
                mark('S'),
                ['NP', ['NNP', 'Padme']],
                ['VB', get],
                ['IN', to],
                ['NP', ['PRP$', her], ['NN', throne], ['NN', room]],
                ['IN', in],
                ['NP', ['NNP', 'Theed']],
                ['.', '.']
              ]).
pllm:training(3900060000424,
              tree_to_toks,
              [ 'He',
                (is),
                one,
                of,
                'the-Naboo-soldiers',
                who,
                (is),
                helping,
                'Padme',
                get,
                to,
                'her-throne-room',
                in,
                'Theed',
                ('.')
              ]).
pllm:training(3900070000425, string, "Oh wow, that's cool!").
pllm:training(3900070000425,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], ['UH', wow]],
                  [',', ','],
                  ['NP', ['DT', that]],
                  ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', cool]]],
                  ['.', '.']
                ]
              ]).
pllm:training(3900070000425,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], ['UH', wow]],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(3900070000425, tree_to_toks, ['Oh', wow, ',', that, '\'s', cool, '.']).
pllm:training(3900080000426,
              string,
              "The guy who played Darth Maul is named Ray Park, he is a professional stunt man and fight choreographer.").
pllm:training(3900080000426,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'NP-TMP',
                    ['NP', ['DT', 'The'], ['NN', guy]],
                    [ 'SBAR',
                      ['NP', ['WP', who]],
                      [ 'S',
                        [ 'VP',
                          ['VBD', played],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['NNP', 'Darth'], ['NNP', 'Maul']],
                              [ 'VP',
                                ['VBZ', is],
                                ['VP', ['VBN', named], ['NP', ['NNP', 'Ray'], ['NNP', 'Park']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    [ 'VP',
                      ['VBZ', is],
                      ['NP', ['DT', a], ['JJ', professional], ['NN', stunt], ['NN', man]]
                    ],
                    ['CC', and],
                    ['VP', ['VB', fight], ['NP', ['NN', choreographer]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(3900080000426,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                'NP-TMP',
                ['NP', ['DT', 'The'], ['NN', guy]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', played],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Maul']],
                ['VBZ', is],
                ['VBN', named],
                ['NP', ['NNP', 'Ray'], ['NNP', 'Park']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', professional], ['NN', stunt], ['NN', man]],
                ['CC', and],
                ['VB', fight],
                ['NP', ['NN', choreographer]],
                ['.', '.']
              ]).
pllm:training(3900080000426,
              tree_to_toks,
              [ 'NP-TMP',
                'The-guy',
                who,
                played,
                'Darth-Maul',
                (is),
                named,
                'Ray-Park',
                (','),
                he,
                (is),
                'a-professional-stunt-man',
                and,
                fight,
                choreographer,
                ('.')
              ]).
pllm:training(3900090000427, string, "Does he still do sword fights?").
pllm:training(3900090000427,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['VBZ', 'Does'],
                    ['NP', ['PRP', he]],
                    ['ADVP', ['RB', still]],
                    ['VP', ['VB', do], ['NP', ['NN', sword], ['NNS', fights]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(3900090000427,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Does'],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', still]],
                ['VB', do],
                ['NP', ['NN', sword], ['NNS', fights]],
                ['.', ?]
              ]).
pllm:training(3900090000427, tree_to_toks, ['Does', he, still, do, 'sword-fights', ?]).
pllm:training(3900100000428,
              string,
              "He does, he still works in movies today sometimes and he even does his Darth Maul routine at Star Wars events for fans.").
pllm:training(3900100000428,
              text_to_tree,
              [ 'S',
                ['S', ['NP', ['PRP', 'He']], ['VP', ['AUX', does]]],
                [',', ','],
                [ 'S',
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', still]],
                  [ 'VP',
                    ['VBZ', works],
                    ['PP', ['IN', in], ['NP', ['NNS', movies]]],
                    ['NP', ['NN', today]],
                    ['ADVP', ['RB', sometimes]]
                  ]
                ],
                ['CC', and],
                [ 'S',
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', even]],
                  [ 'VP',
                    ['AUX', does],
                    [ 'S',
                      ['NP', ['PRP$', his], ['NNP', 'Darth']],
                      [ 'VP',
                        ['VB', 'Maul'],
                        [ 'NP',
                          [ 'NP',
                            [ 'ADJP',
                              ['JJ', routine],
                              ['PP', ['IN', at], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                            ],
                            ['NNS', events]
                          ],
                          ['PP', ['IN', for], ['NP', ['NNS', fans]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(3900100000428,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['AUX', does],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', still]],
                ['VBZ', works],
                ['IN', in],
                ['NP', ['NNS', movies]],
                ['NP', ['NN', today]],
                ['ADVP', ['RB', sometimes]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', even]],
                ['AUX', does],
                mark('S'),
                ['NP', ['PRP$', his], ['NNP', 'Darth']],
                ['VB', 'Maul'],
                'ADJP',
                ['JJ', routine],
                ['IN', at],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NNS', events],
                ['IN', for],
                ['NP', ['NNS', fans]],
                ['.', '.']
              ]).
pllm:training(3900100000428,
              tree_to_toks,
              [ 'He',
                does,
                (','),
                he,
                still,
                works,
                in,
                movies,
                today,
                sometimes,
                and,
                he,
                even,
                does,
                'his-Darth',
                'Maul',
                'ADJP',
                routine,
                at,
                'Star-Wars',
                events,
                for,
                fans,
                ('.')
              ]).
pllm:training(4000010000430,
              string,
              "What do you think of the connection between rae and kylo?").
pllm:training(4000010000430,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', connection]],
                          ['PP', ['IN', between], ['NP', ['NN', rae], ['CC', and], ['NN', kylo]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4000010000430,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['NN', connection]],
                ['IN', between],
                ['NP', ['NN', rae], ['CC', and], ['NN', kylo]],
                ['.', ?]
              ]).
pllm:training(4000010000430,
              tree_to_toks,
              ['What', do, you, think, of, 'the-connection', between, 'rae-and-kylo', ?]).
pllm:training(4000020000431,
              string,
              "I am convinced they are brother and sister.").
pllm:training(4000020000431,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    [ 'ADJP',
                      ['JJ', convinced],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          ['VP', ['VB', are], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000020000431,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', convinced],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(4000020000431,
              tree_to_toks,
              ['I', am, 'ADJP', convinced, they, are, 'brother-and-sister', '.']).
pllm:training(4000030000432,
              string,
              "I was wondering that as well. But the actors don't look anything alike.").
pllm:training(4000030000432,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', was],
                      [ 'VP',
                        ['VBG', wondering],
                        ['NP', ['DT', that]],
                        ['ADVP', ['RB', as], ['RB', well]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['DT', the], ['NNS', actors]],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      ['VP', ['VB', look], ['NP', ['NN', anything]], ['ADVP', ['RB', alike]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000030000432,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBG', wondering],
                ['NP', ['DT', that]],
                ['ADVP', ['RB', as], ['RB', well]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['DT', the], ['NNS', actors]],
                ['VB', do],
                ['RB', not],
                ['VB', look],
                ['NP', ['NN', anything]],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(4000030000432,
              tree_to_toks,
              [ 'I',
                was,
                wondering,
                that,
                (as),
                well,
                ('.'),
                'But',
                'the-actors',
                do,
                not,
                look,
                anything,
                alike,
                ('.')
              ]).
pllm:training(4000040000433,
              string,
              "Driver and Ridley both have dark features. Also not mandatory to look alike.").
pllm:training(4000040000433,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NP', ['NN', 'Driver']], ['CC', and], ['NP', ['NNP', 'Ridley']]],
                    ['DT', both],
                    ['VP', ['VB', have], ['NP', ['JJ', dark], ['NNS', features]]],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['ADVP', ['RB', 'Also']],
                  ['RB', not],
                  [ 'VP',
                    ['JJ', mandatory],
                    ['S', ['VP', ['TO', to], ['VP', ['VB', look], ['ADVP', ['RB', alike]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000040000433,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', 'Driver']],
                ['CC', and],
                ['NP', ['NNP', 'Ridley']],
                ['DT', both],
                ['VB', have],
                ['NP', ['JJ', dark], ['NNS', features]],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Also']],
                ['RB', not],
                ['JJ', mandatory],
                mark('S'),
                ['TO', to],
                ['VB', look],
                ['ADVP', ['RB', alike]],
                ['.', '.']
              ]).
pllm:training(4000040000433,
              tree_to_toks,
              [ 'Driver',
                and,
                'Ridley',
                both,
                have,
                'dark-features',
                ('.'),
                'Also',
                not,
                mandatory,
                to,
                look,
                alike,
                ('.')
              ]).
pllm:training(4000050000434,
              string,
              "I suppose that is true, luke and leia were twins and looked entirely different.").
pllm:training(4000050000434,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', suppose],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['DT', that]],
                          ['VP', ['VBZ', is], ['ADJP', ['JJ', true], [',', ','], ['JJ', luke]]]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['NN', leia]],
                    [ 'VP',
                      ['VP', ['VBD', were], ['NP', ['NNS', twins]]],
                      ['CC', and],
                      ['VP', ['VBD', looked], ['ADJP', ['RB', entirely], ['JJ', different]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4000050000434,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', is],
                ['ADJP', ['JJ', true], [',', ','], ['JJ', luke]],
                ['CC', and],
                mark('S'),
                ['NP', ['NN', leia]],
                ['VBD', were],
                ['NP', ['NNS', twins]],
                ['CC', and],
                ['VBD', looked],
                ['ADJP', ['RB', entirely], ['JJ', different]],
                ['.', '.']
              ]).
pllm:training(4000050000434,
              tree_to_toks,
              [ 'I',
                suppose,
                that,
                (is),
                true,
                (','),
                luke,
                and,
                leia,
                were,
                twins,
                and,
                looked,
                entirely,
                different,
                ('.')
              ]).
pllm:training(4000060000435,
              string,
              "Exactly. I am excited to see what will be revealed next, Like what is going on with luke now?").
pllm:training(4000060000435,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Exactly']], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', am],
                      [ 'ADJP',
                        ['JJ', excited],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', see],
                              [ 'SBAR',
                                ['NP', ['WP', what]],
                                [ 'S',
                                  [ 'VP',
                                    ['MD', will],
                                    [ 'VP',
                                      ['VB', be],
                                      [ 'VP',
                                        ['VBN', revealed],
                                        ['ADVP', ['RB', next]],
                                        [',', ','],
                                        [ 'PP',
                                          ['IN', 'Like'],
                                          [ 'SBAR',
                                            ['NP', ['WP', what]],
                                            [ 'S',
                                              [ 'VP',
                                                ['VBZ', is],
                                                [ 'VP',
                                                  ['VBG', going],
                                                  ['PRT', ['RP', on]],
                                                  [ 'PP',
                                                    ['IN', with],
                                                    ['NP', ['NN', luke]]
                                                  ],
                                                  ['ADVP', ['RB', now]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4000060000435,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Exactly']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', excited],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['MD', will],
                ['VB', be],
                ['VBN', revealed],
                ['ADVP', ['RB', next]],
                [',', ','],
                ['IN', 'Like'],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', is],
                ['VBG', going],
                ['PRT', ['RP', on]],
                ['IN', with],
                ['NP', ['NN', luke]],
                ['ADVP', ['RB', now]],
                ['.', ?]
              ]).
pllm:training(4000060000435,
              tree_to_toks,
              [ 'Exactly',
                ('.'),
                'I',
                am,
                'ADJP',
                excited,
                to,
                see,
                what,
                will,
                be,
                revealed,
                next,
                (','),
                'Like',
                what,
                (is),
                going,
                on,
                with,
                luke,
                now,
                (?)
              ]).
pllm:training(4000070000436,
              string,
              "It seems like he is somewhat like the original movies obi wan kenobi, hermit like in style.").
pllm:training(4000070000436,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'It']],
                [ 'VP',
                  ['VBZ', seems],
                  [ 'SBAR',
                    ['IN', like],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      [ 'VP',
                        ['AUX', is],
                        [ 'PP',
                          ['RB', somewhat],
                          ['IN', like],
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                            ['VP', ['VBG', obi], ['NP', ['JJ', wan], ['NNS', kenobi]]],
                            [',', ','],
                            [ 'VP',
                              ['VBN', hermit],
                              ['PP', ['IN', like], ['PP', ['IN', in], ['NP', ['NN', style]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4000070000436,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', seems],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', is],
                ['RB', somewhat],
                ['IN', like],
                ['NP', ['DT', the], ['JJ', original], ['NNS', movies]],
                ['VBG', obi],
                ['NP', ['JJ', wan], ['NNS', kenobi]],
                [',', ','],
                ['VBN', hermit],
                ['IN', like],
                ['IN', in],
                ['NP', ['NN', style]],
                ['.', '.']
              ]).
pllm:training(4000070000436,
              tree_to_toks,
              [ 'It',
                seems,
                like,
                he,
                (is),
                somewhat,
                like,
                'the-original-movies',
                obi,
                'wan-kenobi',
                (','),
                hermit,
                like,
                in,
                style,
                ('.')
              ]).
pllm:training(4000080000437,
              string,
              "That is a similarity there between luke now and obi wan. I love both those characters.").
pllm:training(4000080000437,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', similarity]],
                      ['ADVP', ['RB', there]],
                      [ 'PP',
                        ['IN', between],
                        [ 'NP',
                          ['NP', ['RB', luke], ['RB', now]],
                          ['CC', and],
                          ['NP', ['JJ', obi], ['NN', wan]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', love], ['NP', ['PDT', both], ['DT', those], ['NNS', characters]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000080000437,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['AUX', is],
                ['NP', ['DT', a], ['NN', similarity]],
                ['ADVP', ['RB', there]],
                ['IN', between],
                ['NP', ['RB', luke], ['RB', now]],
                ['CC', and],
                ['NP', ['JJ', obi], ['NN', wan]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['PDT', both], ['DT', those], ['NNS', characters]],
                ['.', '.']
              ]).
pllm:training(4000080000437,
              tree_to_toks,
              [ 'That',
                (is),
                'a-similarity',
                there,
                between,
                'luke-now',
                and,
                'obi-wan',
                ('.'),
                'I',
                love,
                'both-those-characters',
                ('.')
              ]).
pllm:training(4000090000438,
              string,
              "Me too. so iconic and classic. I am so happy they brought mark hamill back.").
pllm:training(4000090000438,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'FRAG',
                      ['ADJP', ['RB', so], ['JJ', iconic], ['CC', and], ['JJ', classic]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', am],
                        [ 'ADJP',
                          ['RB', so],
                          ['JJ', happy],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', they]],
                              [ 'VP',
                                ['VBD', brought],
                                ['NP', ['NN', mark], ['NN', hamill]],
                                ['ADVP', ['RB', back]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(4000090000438,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'Me']],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADJP', ['RB', so], ['JJ', iconic], ['CC', and], ['JJ', classic]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['RB', so],
                ['JJ', happy],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', brought],
                ['NP', ['NN', mark], ['NN', hamill]],
                ['ADVP', ['RB', back]],
                ['.', '.']
              ]).
pllm:training(4000090000438,
              tree_to_toks,
              [ 'Me',
                too,
                ('.'),
                so,
                iconic,
                and,
                classic,
                ('.'),
                'I',
                am,
                'ADJP',
                so,
                happy,
                they,
                brought,
                'mark-hamill',
                back,
                ('.')
              ]).
pllm:training(4000100000439,
              string,
              "Ya me too. I was so sad when ford's han solo was killed off.").
pllm:training(4000100000439,
              text_to_tree,
              [ 'SEQBAR',
                ['S', ['NP', ['PRP', 'Ya']], ['VP', ['NP', ['PRP', me]], ['ADVP', ['RB', too]]], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADJP', ['RB', so], ['JJ', sad]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['NP', ['NN', ford], ['POS', '\'s']], ['NNP', han], ['NN', solo]],
                          ['VP', ['VBD', was], ['VP', ['VBN', killed], ['PRT', ['RP', off]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4000100000439,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'Ya']],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADJP', ['RB', so], ['JJ', sad]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NN', ford], ['POS', '\'s']],
                ['NNP', han],
                ['NN', solo],
                ['VBD', was],
                ['VBN', killed],
                ['PRT', ['RP', off]],
                ['.', '.']
              ]).
pllm:training(4000100000439,
              tree_to_toks,
              [ 'Ya',
                me,
                too,
                ('.'),
                'I',
                was,
                so,
                sad,
                when,
                'ford-\'s',
                han,
                solo,
                was,
                killed,
                off,
                ('.')
              ]).
pllm:training(4100010000441, string, "What was your favorite Star Wars Movie?").
pllm:training(4100010000441,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NP', ['NNP', 'Movie']]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4100010000441,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NP', ['NNP', 'Movie']],
                ['.', ?]
              ]).
pllm:training(4100010000441,
              tree_to_toks,
              ['What', was, 'your-favorite-Star-Wars', 'Movie', ?]).
pllm:training(4100020000442, string, "Return of the Jedi, you?").
pllm:training(4100020000442,
              text_to_tree,
              [ 'NP',
                ['NP', ['NP', ['NN', 'Return']], ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(4100020000442,
              unphrasify,
              [ ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                [',', ','],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(4100020000442, tree_to_toks, ['Return', of, 'the-Jedi', ',', you, ?]).
pllm:training(4100030000443, string, "I, for one, loved The Force Awakens.").
pllm:training(4100030000443,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [',', ','],
                  ['PP', ['IN', for], ['NP', ['CD', one]]],
                  [',', ','],
                  ['VP', ['VBD', loved], ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']]],
                  ['.', '.']
                ]
              ]).
pllm:training(4100030000443,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                [',', ','],
                ['IN', for],
                ['NP', ['CD', one]],
                [',', ','],
                ['VBD', loved],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['.', '.']
              ]).
pllm:training(4100030000443,
              tree_to_toks,
              ['I', ',', for, one, ',', loved, 'The-Force-Awakens', '.']).
pllm:training(4100040000444,
              string,
              "Yea, but there is nothing quite like the originals.").
pllm:training(4100040000444,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['EX', there]],
                [ 'VP',
                  ['AUX', is],
                  [ 'NP',
                    ['NP', ['NN', nothing]],
                    ['PP', ['RB', quite], ['IN', like], ['NP', ['DT', the], ['NNS', originals]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4100040000444,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Yea']],
                [',', ','],
                ['CC', but],
                ['NP', ['EX', there]],
                ['AUX', is],
                ['NP', ['NN', nothing]],
                ['RB', quite],
                ['IN', like],
                ['NP', ['DT', the], ['NNS', originals]],
                ['.', '.']
              ]).
pllm:training(4100040000444,
              tree_to_toks,
              ['Yea', ',', but, there, is, nothing, quite, like, 'the-originals', '.']).
pllm:training(4100050000445,
              string,
              "Of course not, but the special effects are way different now, I enjoy those.").
pllm:training(4100050000445,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course], ['RB', not]]],
                [',', ','],
                ['CC', but],
                [ 'S',
                  ['NP', ['DT', the], ['JJ', special], ['NNS', effects]],
                  [ 'VP',
                    ['AUX', are],
                    ['ADJP', ['RB', way], ['JJ', different]],
                    ['ADVP', ['RB', now]]
                  ]
                ],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VP', ['VB', enjoy], ['NP', ['DT', those]]],
                ['.', '.']
              ]).
pllm:training(4100050000445,
              unphrasify,
              [ mark('S'),
                ['IN', 'Of'],
                ['NP', ['NN', course], ['RB', not]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['DT', the], ['JJ', special], ['NNS', effects]],
                ['AUX', are],
                ['ADJP', ['RB', way], ['JJ', different]],
                ['ADVP', ['RB', now]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', enjoy],
                ['NP', ['DT', those]],
                ['.', '.']
              ]).
pllm:training(4100050000445,
              tree_to_toks,
              [ 'Of',
                'course-not',
                (','),
                but,
                'the-special-effects',
                are,
                way,
                different,
                now,
                (','),
                'I',
                enjoy,
                those,
                ('.')
              ]).
pllm:training(4100060000446,
              string,
              "What about the plot lines, the character development?").
pllm:training(4100060000446,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', plot], ['NNS', lines]],
                      [',', ','],
                      ['NP', ['DT', the], ['NN', character], ['NN', development]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4100060000446,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['DT', the], ['NN', plot], ['NNS', lines]],
                [',', ','],
                ['NP', ['DT', the], ['NN', character], ['NN', development]],
                ['.', ?]
              ]).
pllm:training(4100060000446,
              tree_to_toks,
              ['What', about, 'the-plot-lines', ',', 'the-character-development', ?]).
pllm:training(4100070000447, string, "What about it?").
pllm:training(4100070000447,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', it]]], ['.', ?]]
              ]).
pllm:training(4100070000447,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(4100070000447, tree_to_toks, ['What', about, it, ?]).
pllm:training(4100080000448,
              string,
              "The newer movies just don't capture the same magic the original trilogy did.").
pllm:training(4100080000448,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJR', newer], ['NNS', movies]],
                  ['ADVP', ['RB', just]],
                  [ 'VP',
                    ['VB', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', capture],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same], ['NN', magic]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                            ['VP', ['VBD', did]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4100080000448,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJR', newer], ['NNS', movies]],
                ['ADVP', ['RB', just]],
                ['VB', do],
                ['RB', not],
                ['VB', capture],
                ['NP', ['DT', the], ['JJ', same], ['NN', magic]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['JJ', original], ['NN', trilogy]],
                ['VBD', did],
                ['.', '.']
              ]).
pllm:training(4100080000448,
              tree_to_toks,
              [ 'The-newer-movies',
                just,
                do,
                not,
                capture,
                'the-same-magic',
                'the-original-trilogy',
                did,
                ('.')
              ]).
pllm:training(4100090000449,
              string,
              "Yes they do! Don't you think they covered the gaping hole of the death stars weakness int he last movie?").
pllm:training(4100090000449,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['INTJ', ['UH', 'Yes']], ['NP', ['PRP', they]], ['VP', ['VB', do]], ['.', '.']]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['S', ['VP', ['VB', 'Do'], ['RB', 'n\'t']]],
                      ['S', ['NP', ['PRP', you]], ['VP', ['VB', think], ['NP', ['PRP', they]]]]
                    ],
                    [ 'S',
                      [ 'VP',
                        ['VBD', covered],
                        [ 'NP',
                          ['NP', ['DT', the], ['VBG', gaping], ['NN', hole]],
                          [ 'PP',
                            ['IN', of],
                            [ 'NP',
                              ['NP', ['DT', the], ['NN', death], ['NNS', stars]],
                              ['NP', ['NN', weakness], ['NN', int]]
                            ]
                          ]
                        ]
                      ],
                      ['NP', ['PRP', he]],
                      ['ADVP', ['RB', last]],
                      ['NP', ['NN', movie]],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(4100090000449,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', they]],
                ['VB', do],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                mark('S'),
                ['VB', 'Do'],
                ['RB', 'n\'t'],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', think],
                ['NP', ['PRP', they]],
                mark('S'),
                ['VBD', covered],
                ['NP', ['DT', the], ['VBG', gaping], ['NN', hole]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', death], ['NNS', stars]],
                ['NP', ['NN', weakness], ['NN', int]],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', last]],
                ['NP', ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(4100090000449,
              tree_to_toks,
              [ 'Yes',
                they,
                do,
                ('.'),
                'Do',
                'n\'t',
                you,
                think,
                they,
                covered,
                'the-gaping-hole',
                of,
                'the-death-stars',
                'weakness-int',
                he,
                last,
                movie,
                (?)
              ]).
pllm:training(4100100000450,
              string,
              "Yes, because they had to. Just like they had to kill Han Solo.").
pllm:training(4100100000450,
              text_to_tree,
              [ 'SEQBAR',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', because],
                    ['S', ['NP', ['PRP', they]], ['VP', ['AUX', had], ['S', ['VP', ['TO', to]]]]]
                  ],
                  ['.', '.']
                ],
                [ 'FRAG',
                  ['ADVP', ['RB', 'Just']],
                  [ 'SBAR',
                    ['IN', like],
                    [ 'S',
                      ['NP', ['PRP', they]],
                      [ 'VP',
                        ['AUX', had],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            ['VP', ['VB', kill], ['NP', ['NNP', 'Han'], ['NNP', 'Solo']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4100100000450,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', had],
                mark('S'),
                ['TO', to],
                ['.', '.'],
                mark('FRAG'),
                ['ADVP', ['RB', 'Just']],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', had],
                mark('S'),
                ['TO', to],
                ['VB', kill],
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['.', '.']
              ]).
pllm:training(4100100000450,
              tree_to_toks,
              [ 'Yes',
                (','),
                because,
                they,
                had,
                to,
                ('.'),
                'Just',
                like,
                they,
                had,
                to,
                kill,
                'Han-Solo',
                ('.')
              ]).
pllm:training(4200010000452, string, "Who played Luke Skywalker?").
pllm:training(4200010000452,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', played], ['NP', ['NNP', 'Luke'], ['NNP', 'Skywalker']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200010000452,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Luke'], ['NNP', 'Skywalker']],
                ['.', ?]
              ]).
pllm:training(4200010000452, tree_to_toks, ['Who', played, 'Luke-Skywalker', ?]).
pllm:training(4200020000453, string, "Mark Hammil").
pllm:training(4200020000453,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Mark'], ['NNP', 'Hammil'], ['.', '.']]]).
pllm:training(4200020000453,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Mark'], ['NNP', 'Hammil'], ['.', '.']]]).
pllm:training(4200020000453, tree_to_toks, ['Mark-Hammil-.']).
pllm:training(4200030000454, string, "Who played Han Solo?").
pllm:training(4200030000454,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', played], ['NP', ['NNP', 'Han'], ['NNP', 'Solo']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200030000454,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', played],
                ['NP', ['NNP', 'Han'], ['NNP', 'Solo']],
                ['.', ?]
              ]).
pllm:training(4200030000454, tree_to_toks, ['Who', played, 'Han-Solo', ?]).
pllm:training(4200040000455, string, "Harrison Ford").
pllm:training(4200040000455,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', '.']]]).
pllm:training(4200040000455,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['.', '.']]]).
pllm:training(4200040000455, tree_to_toks, ['Harrison-Ford-.']).
pllm:training(4200050000456, string, "Was this Harrison Ford's first film?").
pllm:training(4200050000456,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Was'],
                  ['NP', ['DT', this]],
                  [ 'NP',
                    ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['POS', '\'s']],
                    ['NP', ['JJ', first], ['NN', film]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4200050000456,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Was'],
                ['NP', ['DT', this]],
                ['NP', ['NNP', 'Harrison'], ['NNP', 'Ford'], ['POS', '\'s']],
                ['NP', ['JJ', first], ['NN', film]],
                ['.', ?]
              ]).
pllm:training(4200050000456,
              tree_to_toks,
              ['Was', this, 'Harrison-Ford-\'s', 'first-film', ?]).
pllm:training(4200060000457, string, "No").
pllm:training(4200060000457, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'No'], ['.', '.']]]).
pllm:training(4200060000457, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'No'], ['.', '.']]]).
pllm:training(4200060000457, tree_to_toks, ['No', '.']).
pllm:training(4200070000458, string, "Who directed Star Wars?").
pllm:training(4200070000458,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VP', ['VBD', directed], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200070000458,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', directed],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(4200070000458, tree_to_toks, ['Who', directed, 'Star-Wars', ?]).
pllm:training(4200080000459, string, "George Lucas").
pllm:training(4200080000459,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'George'], ['NNP', 'Lucas'], ['.', '.']]]).
pllm:training(4200080000459,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'George'], ['NNP', 'Lucas'], ['.', '.']]]).
pllm:training(4200080000459, tree_to_toks, ['George-Lucas-.']).
pllm:training(4200090000460, string, "Who was the producer?").
pllm:training(4200090000460,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  ['S', ['VBD', was], ['NP', ['DT', the], ['NN', producer]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4200090000460,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', the], ['NN', producer]],
                ['.', ?]
              ]).
pllm:training(4200090000460, tree_to_toks, ['Who', was, 'the-producer', ?]).
pllm:training(4200100000461, string, "Gary Kurtz").
pllm:training(4200100000461,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Gary'], ['NNP', 'Kurtz'], ['.', '.']]]).
pllm:training(4200100000461,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Gary'], ['NNP', 'Kurtz'], ['.', '.']]]).
pllm:training(4200100000461, tree_to_toks, ['Gary-Kurtz-.']).
pllm:training(4300010000463,
              string,
              "Why didn't the Wookie get a medal in A New Hope?").
pllm:training(4300010000463,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  [ 'S',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    ['NP', ['DT', the], ['NNP', 'Wookie']],
                    [ 'VP',
                      ['VB', get],
                      ['NP', ['DT', a], ['NN', medal]],
                      ['PP', ['IN', in], ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4300010000463,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VBD', did],
                ['RB', 'n\'t'],
                ['NP', ['DT', the], ['NNP', 'Wookie']],
                ['VB', get],
                ['NP', ['DT', a], ['NN', medal]],
                ['IN', in],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                ['.', ?]
              ]).
pllm:training(4300010000463,
              tree_to_toks,
              ['Why', did, 'n\'t', 'the-Wookie', get, 'a-medal', in, 'A-New-Hope', ?]).
pllm:training(4300020000464, string, "What are you talking about?").
pllm:training(4300020000464,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', are],
                    ['NP', ['PRP', you]],
                    ['VP', ['VBG', talking], ['PP', ['IN', about]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4300020000464,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                ['VBG', talking],
                ['IN', about],
                ['.', ?]
              ]).
pllm:training(4300020000464, tree_to_toks, ['What', are, you, talking, about, ?]).
pllm:training(4300030000465,
              string,
              "At the end of the movie everone gets a medal but Chewy.").
pllm:training(4300030000465,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'PP',
                    ['IN', 'At'],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', end]],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['NN', movie]]]
                    ]
                  ],
                  ['NP', ['NN', everone]],
                  [ 'VP',
                    ['VBZ', gets],
                    ['NP', ['NP', ['DT', a], ['NN', medal]], ['PP', ['CC', but], ['NP', ['NNP', 'Chewy']]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300030000465,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['IN', 'At'],
                ['NP', ['DT', the], ['NN', end]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', movie]],
                ['NP', ['NN', everone]],
                ['VBZ', gets],
                ['NP', ['DT', a], ['NN', medal]],
                ['CC', but],
                ['NP', ['NNP', 'Chewy']],
                ['.', '.']
              ]).
pllm:training(4300030000465,
              tree_to_toks,
              ['At', 'the-end', of, 'the-movie', everone, gets, 'a-medal', but, 'Chewy', '.']).
pllm:training(4300040000466, string, "Huh, I had no idea.").
pllm:training(4300040000466,
              text_to_tree,
              [ 'S',
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VP', ['AUX', had], ['NP', ['DT', no], ['NN', idea]]],
                ['.', '.']
              ]).
pllm:training(4300040000466,
              unphrasify,
              [ mark('S'),
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['AUX', had],
                ['NP', ['DT', no], ['NN', idea]],
                ['.', '.']
              ]).
pllm:training(4300040000466, tree_to_toks, ['Huh', ',', 'I', had, 'no-idea', '.']).
pllm:training(4300050000467, string, "Weird, huh?").
pllm:training(4300050000467,
              text_to_tree,
              ['FRAG', ['ADJP', ['JJ', 'Weird']], [',', ','], ['NP', ['NNP', huh]], ['.', ?]]).
pllm:training(4300050000467,
              unphrasify,
              [mark('FRAG'), ['ADJP', ['JJ', 'Weird']], [',', ','], ['NP', ['NNP', huh]], ['.', ?]]).
pllm:training(4300050000467, tree_to_toks, ['Weird', ',', huh, ?]).
pllm:training(4300060000468,
              string,
              "Maybe nobody wanted to get close enough to present him.").
pllm:training(4300060000468,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'Maybe']],
                  ['NP', ['NN', nobody]],
                  [ 'VP',
                    ['VBD', wanted],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', get],
                          [ 'ADJP',
                            ['JJ', close],
                            ['JJ', enough],
                            ['S', ['VP', ['TO', to], ['VP', ['VB', present], ['NP', ['PRP', him]]]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300060000468,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['NN', nobody]],
                ['VBD', wanted],
                mark('S'),
                ['TO', to],
                ['VB', get],
                'ADJP',
                ['JJ', close],
                ['JJ', enough],
                mark('S'),
                ['TO', to],
                ['VB', present],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(4300060000468,
              tree_to_toks,
              ['Maybe', nobody, wanted, to, get, 'ADJP', close, enough, to, present, him, '.']).
pllm:training(4300070000469, string, "It was Leia though.").
pllm:training(4300070000469,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBD', was], ['NP', ['NNP', 'Leia']], ['ADVP', ['RB', though]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4300070000469,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['NP', ['NNP', 'Leia']],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(4300070000469, tree_to_toks, ['It', was, 'Leia', though, '.']).
pllm:training(4300080000470, string, "I haven't a clue.").
pllm:training(4300080000470,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', have], ['RB', 'n\'t'], ['VP', ['NP', ['DT', a], ['NN', clue]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4300080000470,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', have],
                ['RB', 'n\'t'],
                ['NP', ['DT', a], ['NN', clue]],
                ['.', '.']
              ]).
pllm:training(4300080000470, tree_to_toks, ['I', have, 'n\'t', 'a-clue', '.']).
pllm:training(4300090000471,
              string,
              "It's been bugging me for the last 30 years or so.").
pllm:training(4300090000471,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'VP',
                      ['VBN', been],
                      [ 'VP',
                        ['VBG', bugging],
                        ['NP', ['PRP', me]],
                        [ 'UCP',
                          [ 'PP',
                            ['IN', for],
                            ['NP', ['DT', the], ['JJ', last], ['CD', '30'], ['NNS', years]]
                          ],
                          ['CC', or],
                          ['ADVP', ['RB', so]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4300090000471,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['VBN', been],
                ['VBG', bugging],
                ['NP', ['PRP', me]],
                'UCP',
                ['IN', for],
                ['NP', ['DT', the], ['JJ', last], ['CD', '30'], ['NNS', years]],
                ['CC', or],
                ['ADVP', ['RB', so]],
                ['.', '.']
              ]).
pllm:training(4300090000471,
              tree_to_toks,
              ['It', '\'s', been, bugging, me, 'UCP', for, 'the-last-30-years', or, so, '.']).
pllm:training(4300100000472, string, "Oh, Lord!").
pllm:training(4300100000472,
              text_to_tree,
              ['CORENLP', ['FRAG', ['INTJ', ['UH', 'Oh']], [',', ','], ['NP', ['NNP', 'Lord']], ['.', '.']]]).
pllm:training(4300100000472,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                ['NP', ['NNP', 'Lord']],
                ['.', '.']
              ]).
pllm:training(4300100000472, tree_to_toks, ['Oh', ',', 'Lord', '.']).
pllm:training(4400010000474,
              string,
              "What did you think of Jabba the Hut in the Star Wars movies?").
pllm:training(4400010000474,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', did],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      ['PP', ['IN', of], ['NP', ['NNP', 'Jabba']]],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Hut']],
                        [ 'PP',
                          ['IN', in],
                          [ 'NP',
                            ['DT', the],
                            ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                            ['NNS', movies]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4400010000474,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', movies]],
                ['.', ?]
              ]).
pllm:training(4400010000474,
              tree_to_toks,
              ['What', did, you, think, of, 'Jabba', 'the-Hut', in, 'the-Star-Wars-movies', ?]).
pllm:training(4400020000475, string, "I thought that he was creepy.").
pllm:training(4400020000475,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['IN', that],
                      ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', creepy]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400020000475,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(4400020000475, tree_to_toks, ['I', thought, that, he, was, creepy, '.']).
pllm:training(4400030000476, string, "Me too!").
pllm:training(4400030000476,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]]).
pllm:training(4400030000476,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'Me']], ['ADVP', ['RB', too]], ['.', '.']]).
pllm:training(4400030000476, tree_to_toks, ['Me', too, '.']).
pllm:training(4400040000477, string, "I wish he had some sort of clothes on.").
pllm:training(4400040000477,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', had],
                          [ 'NP',
                            ['NP', ['DT', some], ['NN', sort]],
                            ['PP', ['IN', of], ['NP', ['NNS', clothes]]]
                          ],
                          ['PP', ['IN', on]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400040000477,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', had],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['NNS', clothes]],
                ['IN', on],
                ['.', '.']
              ]).
pllm:training(4400040000477,
              tree_to_toks,
              ['I', wish, he, had, 'some-sort', of, clothes, on, '.']).
pllm:training(4400050000478, string, "That would of made everything better.").
pllm:training(4400050000478,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      [ 'PP',
                        ['IN', of],
                        [ 'S',
                          [ 'VP',
                            ['VBN', made],
                            ['NP', ['NN', everything]],
                            ['S', ['ADJP', ['JJR', better]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400050000478,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['IN', of],
                mark('S'),
                ['VBN', made],
                ['NP', ['NN', everything]],
                mark('S'),
                ['ADJP', ['JJR', better]],
                ['.', '.']
              ]).
pllm:training(4400050000478,
              tree_to_toks,
              ['That', would, of, made, everything, better, '.']).
pllm:training(4400060000479,
              string,
              "I was also freaked out when he made Princess Leia his slave.").
pllm:training(4400060000479,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    ['ADVP', ['RB', also]],
                    [ 'VP',
                      ['VBN', freaked],
                      ['PRT', ['RP', out]],
                      [ 'SBAR',
                        ['WHADVP', ['WRB', when]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', made],
                            ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                            ['NP', ['PRP$', his], ['NN', slave]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400060000479,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['ADVP', ['RB', also]],
                ['VBN', freaked],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', made],
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['NP', ['PRP$', his], ['NN', slave]],
                ['.', '.']
              ]).
pllm:training(4400060000479,
              tree_to_toks,
              ['I', was, also, freaked, out, when, he, made, 'Princess-Leia', 'his-slave', '.']).
pllm:training(4400070000480, string, "I really hated that part!").
pllm:training(4400070000480,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', really]],
                  ['VP', ['VBD', hated], ['SBAR', ['IN', that], ['FRAG', ['NP', ['NN', part]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4400070000480,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VBD', hated],
                mark('SBAR'),
                ['IN', that],
                mark('FRAG'),
                ['NP', ['NN', part]],
                ['.', '.']
              ]).
pllm:training(4400070000480, tree_to_toks, ['I', really, hated, that, part, '.']).
pllm:training(4400080000481,
              string,
              "Yeah, I am glad that Princess Leia got her revenge.").
pllm:training(4400080000481,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', am],
                    [ 'ADJP',
                      ['JJ', glad],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                          ['VP', ['VBD', got], ['NP', ['PRP$', her], ['NN', revenge]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4400080000481,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                'ADJP',
                ['JJ', glad],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['VBD', got],
                ['NP', ['PRP$', her], ['NN', revenge]],
                ['.', '.']
              ]).
pllm:training(4400080000481,
              tree_to_toks,
              ['Yeah', ',', 'I', am, 'ADJP', glad, that, 'Princess-Leia', got, 'her-revenge', '.']).
pllm:training(4400090000482, string, "In my opinion, Jabba the Hut deserved it.").
pllm:training(4400090000482,
              text_to_tree,
              [ 'S',
                ['PP', ['IN', 'In'], ['NP', ['PRP$', my], ['NN', opinion]]],
                [',', ','],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VP', ['VBD', deserved], ['NP', ['PRP', it]]],
                ['.', '.']
              ]).
pllm:training(4400090000482,
              unphrasify,
              [ mark('S'),
                ['IN', 'In'],
                ['NP', ['PRP$', my], ['NN', opinion]],
                [',', ','],
                ['NP', ['NNP', 'Jabba']],
                ['NP', ['DT', the], ['NNP', 'Hut']],
                ['VBD', deserved],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(4400090000482,
              tree_to_toks,
              ['In', 'my-opinion', ',', 'Jabba', 'the-Hut', deserved, it, '.']).
pllm:training(4400100000483, string, "Yes, he so did!").
pllm:training(4400100000483,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['ADVP', ['RB', so]],
                  ['VP', ['VBD', did]],
                  ['.', '.']
                ]
              ]).
pllm:training(4400100000483,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['ADVP', ['RB', so]],
                ['VBD', did],
                ['.', '.']
              ]).
pllm:training(4400100000483, tree_to_toks, ['Yes', ',', he, so, did, '.']).
pllm:training(4500010000485,
              string,
              "Which of the Star Wars droids is your favorite?").
pllm:training(4500010000485,
              text_to_tree,
              [ 'SBAR',
                [ 'NP',
                  ['NP', ['WDT', 'Which']],
                  ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']]],
                  ['NNS', droids]
                ],
                ['S', ['VP', ['AUX', is], ['NP', ['PRP$', your], ['NN', favorite]]]],
                ['.', ?]
              ]).
pllm:training(4500010000485,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WDT', 'Which']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['NNS', droids],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['NN', favorite]],
                ['.', ?]
              ]).
pllm:training(4500010000485,
              tree_to_toks,
              ['Which', of, 'the-Star-Wars', droids, is, 'your-favorite', ?]).
pllm:training(4500020000486, string, "Doesn't everyone love R2-D2?").
pllm:training(4500020000486,
              text_to_tree,
              [ 'S',
                ['AUX', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['NN', everyone]],
                ['VP', ['VB', love], ['NP', ['NN', 'R2-D2']]],
                ['.', ?]
              ]).
pllm:training(4500020000486,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['NN', everyone]],
                ['VB', love],
                ['NP', ['NN', 'R2-D2']],
                ['.', ?]
              ]).
pllm:training(4500020000486, tree_to_toks, ['Does', 'n\'t', everyone, love, 'R2-D2', ?]).
pllm:training(4500030000487,
              string,
              "Yes, although I think C-3PO is my favorite?").
pllm:training(4500030000487,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                [ 'SBAR',
                  ['IN', although],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NP', ['SYM', 'C']], [:, -], ['NP', ['CD', '3'], ['NNS', 'PO']]],
                          ['VP', ['AUX', is], ['NP', ['PRP$', my], ['JJ', favorite]]]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(4500030000487,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                mark('SBAR'),
                ['IN', although],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['SYM', 'C']],
                [:, -],
                ['NP', ['CD', '3'], ['NNS', 'PO']],
                ['AUX', is],
                ['NP', ['PRP$', my], ['JJ', favorite]],
                ['.', ?]
              ]).
pllm:training(4500030000487,
              tree_to_toks,
              ['Yes', ',', although, 'I', think, 'C', -, '3-PO', is, 'my-favorite', ?]).
pllm:training(4500040000488,
              string,
              "I always found him a little too prim and proper.").
pllm:training(4500040000488,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                [ 'VP',
                  ['VBD', found],
                  [ 'S',
                    ['NP', ['PRP', him]],
                    [ 'ADJP',
                      ['NP', ['DT', a], ['RB', little]],
                      ['RB', too],
                      ['JJ', prim],
                      ['CC', and],
                      ['JJ', proper]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4500040000488,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', found],
                mark('S'),
                ['NP', ['PRP', him]],
                'ADJP',
                ['NP', ['DT', a], ['RB', little]],
                ['RB', too],
                ['JJ', prim],
                ['CC', and],
                ['JJ', proper],
                ['.', '.']
              ]).
pllm:training(4500040000488,
              tree_to_toks,
              ['I', always, found, him, 'ADJP', 'a-little', too, prim, and, proper, '.']).
pllm:training(4500050000489, string, "Yes, the accent can be annoying sometime.").
pllm:training(4500050000489,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['DT', the], ['NN', accent]],
                  [ 'VP',
                    ['MD', can],
                    ['VP', ['VB', be], ['ADJP', ['JJ', annoying]], ['ADVP', ['RB', sometime]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500050000489,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['DT', the], ['NN', accent]],
                ['MD', can],
                ['VB', be],
                ['ADJP', ['JJ', annoying]],
                ['ADVP', ['RB', sometime]],
                ['.', '.']
              ]).
pllm:training(4500050000489,
              tree_to_toks,
              ['Yes', ',', 'the-accent', can, be, annoying, sometime, '.']).
pllm:training(4500060000490,
              string,
              "Not just that, but the whole idea of a protocol droid.").
pllm:training(4500060000490,
              text_to_tree,
              [ 'S',
                [ 'NP',
                  ['RB', 'Not'],
                  ['RB', just],
                  ['NP', ['DT', that]],
                  [',', ','],
                  ['CC', but],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', whole], ['NN', idea]],
                    ['PP', ['IN', of], ['NP', ['DT', a], ['NN', protocol]]]
                  ]
                ],
                ['VP', ['VBD', droid]],
                ['.', '.']
              ]).
pllm:training(4500060000490,
              unphrasify,
              [ mark('S'),
                ['RB', 'Not'],
                ['RB', just],
                ['NP', ['DT', that]],
                [',', ','],
                ['CC', but],
                ['NP', ['DT', the], ['JJ', whole], ['NN', idea]],
                ['IN', of],
                ['NP', ['DT', a], ['NN', protocol]],
                ['VBD', droid],
                ['.', '.']
              ]).
pllm:training(4500060000490,
              tree_to_toks,
              ['Not', just, that, ',', but, 'the-whole-idea', of, 'a-protocol', droid, '.']).
pllm:training(4500070000491,
              string,
              "Yes.    Why would a child like Annakin build such a thing?").
pllm:training(4500070000491,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'SBAR',
                    ['WHADVP', ['WRB', 'Why']],
                    [ 'S',
                      ['MD', would],
                      [ 'NP',
                        ['NP', ['DT', a], ['NN', child]],
                        ['PP', ['IN', like], ['NP', ['NNP', 'Annakin']]]
                      ],
                      ['VP', ['VB', build], ['NP', ['PDT', such], ['DT', a], ['NN', thing]]]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4500070000491,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['MD', would],
                ['NP', ['DT', a], ['NN', child]],
                ['IN', like],
                ['NP', ['NNP', 'Annakin']],
                ['VB', build],
                ['NP', ['PDT', such], ['DT', a], ['NN', thing]],
                ['.', ?]
              ]).
pllm:training(4500070000491,
              tree_to_toks,
              ['Yes', '.', 'Why', would, 'a-child', like, 'Annakin', build, 'such-a-thing', ?]).
pllm:training(4500080000492,
              string,
              "Maybe it was a kit that he was working from.").
pllm:training(4500080000492,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['AUX', was],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', kit]],
                    [ 'SBAR',
                      ['NP', ['WDT', that]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', was], ['VP', ['VBG', working], ['PP', ['IN', from]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4500080000492,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', kit]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['VBG', working],
                ['IN', from],
                ['.', '.']
              ]).
pllm:training(4500080000492,
              tree_to_toks,
              ['Maybe', it, was, 'a-kit', that, he, was, working, from, '.']).
pllm:training(4500090000493,
              string,
              "Perhaps.     Maybe best to not take that part of the series too literally.").
pllm:training(4500090000493,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['ADVP', ['RB', 'Perhaps']], ['.', '.']]],
                [ 'S',
                  ['ADVP', ['RB', 'Maybe']],
                  ['NP', ['JJS', best]],
                  [ 'VP',
                    ['TO', to],
                    ['RB', not],
                    [ 'VP',
                      ['VB', take],
                      [ 'NP',
                        ['NP', ['DT', that], ['NN', part]],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NN', series]]]
                      ],
                      ['ADVP', ['RB', too], ['RB', literally]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500090000493,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Perhaps']],
                ['.', '.'],
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['JJS', best]],
                ['TO', to],
                ['RB', not],
                ['VB', take],
                ['NP', ['DT', that], ['NN', part]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', series]],
                ['ADVP', ['RB', too], ['RB', literally]],
                ['.', '.']
              ]).
pllm:training(4500090000493,
              tree_to_toks,
              [ 'Perhaps',
                ('.'),
                'Maybe',
                best,
                to,
                not,
                take,
                'that-part',
                of,
                'the-series',
                too,
                literally,
                ('.')
              ]).
pllm:training(4500100000494, string, "Yes, it is just a space fantasy!").
pllm:training(4500100000494,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['VBZ', is],
                    ['ADVP', ['RB', just]],
                    ['NP', ['DT', a], ['NN', space], ['NN', fantasy]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4500100000494,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADVP', ['RB', just]],
                ['NP', ['DT', a], ['NN', space], ['NN', fantasy]],
                ['.', '.']
              ]).
pllm:training(4500100000494, tree_to_toks, ['Yes', ',', it, is, just, 'a-space-fantasy', '.']).
pllm:training(4600010000496,
              string,
              "Who is the most mysterious person in Star Wars?").
pllm:training(4600010000496,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        ['ADJP', ['RBS', most], ['JJ', mysterious]],
                        ['NN', person]
                      ],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(4600010000496,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', mysterious]], ['NN', person]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(4600010000496,
              tree_to_toks,
              ['Who', is, 'the-most-mysterious-person', in, 'Star-Wars', ?]).
pllm:training(4600020000497, string, "I think Boba Fett").
pllm:training(4600020000497,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', think], ['NP', ['NNP', 'Boba'], ['NNP', 'Fett']]],
                  ['.', '.']
                ]
              ]).
pllm:training(4600020000497,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                ['NP', ['NNP', 'Boba'], ['NNP', 'Fett']],
                ['.', '.']
              ]).
pllm:training(4600020000497, tree_to_toks, ['I', think, 'Boba-Fett', '.']).
pllm:training(4600030000498, string, "Why do you say that?").
pllm:training(4600030000498,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4600030000498,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(4600030000498, tree_to_toks, ['Why', do, you, say, that, ?]).
pllm:training(4600040000499,
              string,
              "Maybe I don't know the plot inside and out but I dont know his background!").
pllm:training(4600040000499,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', know],
                        ['NP', ['DT', the], ['NN', plot]],
                        ['ADVP', ['RB', inside], ['CC', and], ['RB', out]]
                      ]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', nt],
                      ['VP', ['VB', know], ['NP', ['PRP$', his], ['NN', background]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4600040000499,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', the], ['NN', plot]],
                ['ADVP', ['RB', inside], ['CC', and], ['RB', out]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', nt],
                ['VB', know],
                ['NP', ['PRP$', his], ['NN', background]],
                ['.', '.']
              ]).
pllm:training(4600040000499,
              tree_to_toks,
              [ 'Maybe',
                'I',
                do,
                not,
                know,
                'the-plot',
                inside,
                and,
                out,
                but,
                'I',
                do,
                nt,
                know,
                'his-background',
                ('.')
              ]).
pllm:training(4600050000500, string, "Doesn't he have a kid or something too?").
pllm:training(4600050000500,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['VP', ['VBZ', 'Does'], ['RB', 'n\'t']]],
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['VB', have],
                    ['NP', ['DT', a], ['NN', kid], ['CC', or], ['NN', something]],
                    ['ADVP', ['RB', too]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4600050000500,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['VBZ', 'Does'],
                ['RB', 'n\'t'],
                ['NP', ['PRP', he]],
                ['VB', have],
                ['NP', ['DT', a], ['NN', kid], ['CC', or], ['NN', something]],
                ['ADVP', ['RB', too]],
                ['.', ?]
              ]).
pllm:training(4600050000500,
              tree_to_toks,
              ['Does', 'n\'t', he, have, 'a-kid-or-something', too, ?]).
pllm:training(4600060000501,
              string,
              "Yeah I wonder what his name is and what he is up to now!").
pllm:training(4600060000501,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', wonder],
                  [ 'SBAR',
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      ['S', ['NP', ['PRP$', his], ['NN', name]], ['VP', ['AUX', is]]]
                    ],
                    ['CC', and],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        ['VP', ['AUX', is], ['PP', ['IN', up], ['PP', ['TO', to], ['NP', ['RB', now]]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4600060000501,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP$', his], ['NN', name]],
                ['AUX', is],
                ['CC', and],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', is],
                ['IN', up],
                ['TO', to],
                ['NP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(4600060000501,
              tree_to_toks,
              ['Yeah', 'I', wonder, what, 'his-name', is, and, what, he, is, up, to, now, '.']).
pllm:training(4600070000502, string, "Who else is mysterious?").
pllm:training(4600070000502,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who'], ['RB', else]],
                  ['S', ['VBZ', is], ['ADJP', ['JJ', mysterious]]],
                  ['.', ?]
                ]
              ]).
pllm:training(4600070000502,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who'], ['RB', else]],
                mark('S'),
                ['VBZ', is],
                ['ADJP', ['JJ', mysterious]],
                ['.', ?]
              ]).
pllm:training(4600070000502, tree_to_toks, ['Who-else', is, mysterious, ?]).
pllm:training(4600080000503, string, "I would like to know more about Darth Maul").
pllm:training(4600080000503,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['VB', like],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', know],
                          [ 'NP',
                            ['NP', ['JJR', more]],
                            [ 'SBAR',
                              ['IN', about],
                              ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4600080000503,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', like],
                mark('S'),
                ['TO', to],
                ['VB', know],
                ['NP', ['JJR', more]],
                mark('SBAR'),
                ['IN', about],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['.', '.']
              ]).
pllm:training(4600080000503,
              tree_to_toks,
              ['I', would, like, to, know, more, about, 'Darth', 'Maul', '.']).
pllm:training(4600090000504, string, "What about him?").
pllm:training(4600090000504,
              text_to_tree,
              [ 'CORENLP',
                ['FRAG', ['NP', ['WP', 'What']], ['PP', ['IN', about], ['NP', ['PRP', him]]], ['.', ?]]
              ]).
pllm:training(4600090000504,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['IN', about],
                ['NP', ['PRP', him]],
                ['.', ?]
              ]).
pllm:training(4600090000504, tree_to_toks, ['What', about, him, ?]).
pllm:training(4600100000505, string, "How he got such a cool lightsaber!").
pllm:training(4600100000505,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', got],
                      ['NP', ['PDT', such], ['DT', a], ['JJ', cool], ['NN', lightsaber]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4600100000505,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['NP', ['PDT', such], ['DT', a], ['JJ', cool], ['NN', lightsaber]],
                ['.', '.']
              ]).
pllm:training(4600100000505,
              tree_to_toks,
              ['How', he, got, 'such-a-cool-lightsaber', '.']).
pllm:training(4700010000507,
              string,
              "Have you seen Star Wars, The Empire Strikes Back?").
pllm:training(4700010000507,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'S',
                      ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      [',', ','],
                      ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                      ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700010000507,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                mark('S'),
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['DT', 'The'], ['NNP', 'Empire']],
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', ?]
              ]).
pllm:training(4700010000507,
              tree_to_toks,
              ['Have', you, seen, 'Star-Wars', ',', 'The-Empire', 'Strikes', 'Back', ?]).
pllm:training(4700020000508, string, "Yes, I've seen it many times.").
pllm:training(4700020000508,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'ve'],
                    [ 'VP',
                      ['VBN', seen],
                      ['NP', ['PRP', it]],
                      ['NP-TMP', ['JJ', many], ['NNS', times]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700020000508,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['NP', ['PRP', it]],
                ['NP-TMP', ['JJ', many], ['NNS', times]],
                ['.', '.']
              ]).
pllm:training(4700020000508, tree_to_toks, ['Yes', ',', 'I', '\'ve', seen, it, many, times, '.']).
pllm:training(4700030000509,
              string,
              "Who is your favorite character in the Empire Strikes Back?").
pllm:training(4700030000509,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'Who']],
                  [ 'S',
                    ['VBZ', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNP', 'Empire']],
                          ['SBAR', ['S', ['VP', ['VBZ', 'Strikes'], ['ADVP', ['RB', 'Back']]]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700030000509,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', character]],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Empire']],
                mark('SBAR'),
                mark('S'),
                ['VBZ', 'Strikes'],
                ['ADVP', ['RB', 'Back']],
                ['.', ?]
              ]).
pllm:training(4700030000509,
              tree_to_toks,
              ['Who', is, 'your-favorite-character', in, 'the-Empire', 'Strikes', 'Back', ?]).
pllm:training(4700040000510,
              string,
              "Definitely Yoda, my favorite character of any science-fiction movie.").
pllm:training(4700040000510,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  [ 'NP',
                    ['NP', ['NNP', 'Yoda']],
                    [',', ','],
                    [ 'NP',
                      ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', any],
                          ['NML', ['NN', science], ['HYPH', -], ['NN', fiction]],
                          ['NN', movie]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700040000510,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['NNP', 'Yoda']],
                [',', ','],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                ['IN', of],
                [ 'NP',
                  ['DT', any],
                  ['NML', ['NN', science], ['HYPH', -], ['NN', fiction]],
                  ['NN', movie]
                ],
                ['.', '.']
              ]).
pllm:training(4700040000510,
              tree_to_toks,
              [ 'Definitely',
                'Yoda',
                (','),
                'my-favorite-character',
                of,
                'any-science---fiction-movie',
                ('.')
              ]).
pllm:training(4700050000511, string, "What your favorite thing about Yoda?").
pllm:training(4700050000511,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['NP', ['WP', 'What']],
                  [ 'NP',
                    ['NP', ['PRP$', your], ['JJ', favorite], ['NN', thing]],
                    ['PP', ['IN', about], ['NP', ['NNP', 'Yoda']]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700050000511,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['NP', ['WP', 'What']],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', thing]],
                ['IN', about],
                ['NP', ['NNP', 'Yoda']],
                ['.', ?]
              ]).
pllm:training(4700050000511,
              tree_to_toks,
              ['What', 'your-favorite-thing', about, 'Yoda', ?]).
pllm:training(4700060000512, string, "His facial expressions, they're funny.").
pllm:training(4700060000512,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'His'], ['JJ', facial], ['NNS', expressions]],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', '\'re'], ['ADJP', ['JJ', funny]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4700060000512,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'His'], ['JJ', facial], ['NNS', expressions]],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['ADJP', ['JJ', funny]],
                ['.', '.']
              ]).
pllm:training(4700060000512,
              tree_to_toks,
              ['His-facial-expressions', ',', they, '\'re', funny, '.']).
pllm:training(4700070000513,
              string,
              "I always wondered how they made his costume so realistic.").
pllm:training(4700070000513,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['ADVP', ['RB', always]],
                  [ 'VP',
                    ['VBD', wondered],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', made],
                          ['NP', ['PRP$', his], ['NN', costume]],
                          ['S', ['ADJP', ['RB', so], ['JJ', realistic]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700070000513,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', wondered],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', made],
                ['NP', ['PRP$', his], ['NN', costume]],
                mark('S'),
                ['ADJP', ['RB', so], ['JJ', realistic]],
                ['.', '.']
              ]).
pllm:training(4700070000513,
              tree_to_toks,
              ['I', always, wondered, how, they, made, 'his-costume', so, realistic, '.']).
pllm:training(4700080000514,
              string,
              "I wonder if there was a real person inside?").
pllm:training(4700080000514,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['IN', if],
                      [ 'S',
                        ['NP', ['EX', there]],
                        [ 'VP',
                          ['VBD', was],
                          ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                          ['ADVP', ['RB', inside]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4700080000514,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                ['ADVP', ['RB', inside]],
                ['.', ?]
              ]).
pllm:training(4700080000514,
              tree_to_toks,
              ['I', wonder, if, there, was, 'a-real-person', inside, ?]).
pllm:training(4700090000515,
              string,
              "Darth Vader definitely had a real person inside.").
pllm:training(4700090000515,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  ['ADVP', ['RB', definitely]],
                  [ 'VP',
                    ['VBD', had],
                    ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                    ['ADVP', ['RB', inside]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700090000515,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['ADVP', ['RB', definitely]],
                ['VBD', had],
                ['NP', ['DT', a], ['JJ', real], ['NN', person]],
                ['ADVP', ['RB', inside]],
                ['.', '.']
              ]).
pllm:training(4700090000515,
              tree_to_toks,
              ['Darth-Vader', definitely, had, 'a-real-person', inside, '.']).
pllm:training(4700100000516,
              string,
              "Darth Vader, now that's my favorite villain of all time.").
pllm:training(4700100000516,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                  [',', ','],
                  ['ADVP', ['RB', now]],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', my], ['JJ', favorite], ['NN', villain]],
                      ['PP', ['IN', of], ['NP', ['DT', all], ['NN', time]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4700100000516,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                [',', ','],
                ['ADVP', ['RB', now]],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', villain]],
                ['IN', of],
                ['NP', ['DT', all], ['NN', time]],
                ['.', '.']
              ]).
pllm:training(4700100000516,
              tree_to_toks,
              ['Darth-Vader', ',', now, that, '\'s', 'my-favorite-villain', of, 'all-time', '.']).
pllm:training(4800010000518, string, "do you like luke or anakin").
pllm:training(4800010000518,
              text_to_tree,
              [ 'S',
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['FW', luke], ['CC', or], ['FW', anakin]]],
                ['.', '.']
              ]).
pllm:training(4800010000518,
              unphrasify,
              [ mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['FW', luke], ['CC', or], ['FW', anakin]],
                ['.', '.']
              ]).
pllm:training(4800010000518, tree_to_toks, [do, you, like, 'luke-or-anakin', '.']).
pllm:training(4800020000519, string, "anakin").
pllm:training(4800020000519, text_to_tree, ['CORENLP', ['NP', ['NN', anakin], ['.', '.']]]).
pllm:training(4800020000519, unphrasify, [mark('CORENLP'), ['NP', ['NN', anakin], ['.', '.']]]).
pllm:training(4800020000519, tree_to_toks, ['anakin-.']).
pllm:training(4800030000520, string, "why?").
pllm:training(4800030000520,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(4800030000520,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(4800030000520, tree_to_toks, [why, ?]).
pllm:training(4800040000521, string, "anakin was reckless and exciting").
pllm:training(4800040000521,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', anakin]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', reckless], ['CC', and], ['JJ', exciting]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4800040000521,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', anakin]],
                ['VBD', was],
                ['ADJP', ['JJ', reckless], ['CC', and], ['JJ', exciting]],
                ['.', '.']
              ]).
pllm:training(4800040000521, tree_to_toks, [anakin, was, reckless, and, exciting, '.']).
pllm:training(4800050000522, string, "yeah. luke was not as interesting.").
pllm:training(4800050000522,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', yeah], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NN', luke]],
                    ['VP', ['VBD', was], ['RB', not], ['ADJP', ['RB', as], ['JJ', interesting]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4800050000522,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', yeah], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', luke]],
                ['VBD', was],
                ['RB', not],
                ['ADJP', ['RB', as], ['JJ', interesting]],
                ['.', '.']
              ]).
pllm:training(4800050000522,
              tree_to_toks,
              [yeah, '.', luke, was, not, as, interesting, '.']).
pllm:training(4800060000523,
              string,
              "he was kinda less questioning and more obedient").
pllm:training(4800060000523,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', he]],
                [ 'VP',
                  ['AUX', was],
                  [ 'ADJP',
                    ['ADJP', ['RB', kinda], ['RBR', less], ['VBG', questioning]],
                    ['CC', and],
                    ['ADJP', ['RBR', more], ['JJ', obedient]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(4800060000523,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                [ 'ADJP',
                  ['ADJP', ['RB', kinda], ['RBR', less], ['VBG', questioning]],
                  ['CC', and],
                  ['ADJP', ['RBR', more], ['JJ', obedient]]
                ],
                ['.', '.']
              ]).
pllm:training(4800060000523,
              tree_to_toks,
              [he, was, kinda, less, questioning, and, more, obedient, '.']).
pllm:training(4800070000524, string, "anakin did a lot of rebellious stuff").
pllm:training(4800070000524,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NN', anakin]],
                  [ 'VP',
                    ['VBD', did],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', lot]],
                      ['PP', ['IN', of], ['NP', ['JJ', rebellious], ['NN', stuff]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800070000524,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['NN', anakin]],
                ['VBD', did],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['JJ', rebellious], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(4800070000524,
              tree_to_toks,
              [anakin, did, 'a-lot', of, 'rebellious-stuff', '.']).
pllm:training(4800080000525, string, "like when he jumped out the ship").
pllm:training(4800080000525,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', like]],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', when]],
                    [ 'S',
                      ['NP', ['PRP', he]],
                      ['VP', ['VBD', jumped], ['PRT', ['RP', out]], ['NP', ['DT', the], ['NN', ship]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800080000525,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', like]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', jumped],
                ['PRT', ['RP', out]],
                ['NP', ['DT', the], ['NN', ship]],
                ['.', '.']
              ]).
pllm:training(4800080000525, tree_to_toks, [like, when, he, jumped, out, 'the-ship', '.']).
pllm:training(4800090000526, string, "and still beat up enemies and stuff").
pllm:training(4800090000526,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', and],
                  ['ADVP', ['RB', still]],
                  [ 'VP',
                    ['VB', beat],
                    ['PRT', ['RP', up]],
                    ['NP', ['NNS', enemies], ['CC', and], ['NN', stuff]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4800090000526,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', and],
                ['ADVP', ['RB', still]],
                ['VB', beat],
                ['PRT', ['RP', up]],
                ['NP', ['NNS', enemies], ['CC', and], ['NN', stuff]],
                ['.', '.']
              ]).
pllm:training(4800090000526,
              tree_to_toks,
              [and, still, beat, up, 'enemies-and-stuff', '.']).
pllm:training(4800100000527, string, "yeah, he was cool").
pllm:training(4800100000527,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', yeah]],
                  [',', ','],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBD', was], ['ADJP', ['JJ', cool]]],
                  ['.', '.']
                ]
              ]).
pllm:training(4800100000527,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', yeah]],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(4800100000527, tree_to_toks, [yeah, ',', he, was, cool, '.']).
pllm:training(4900010000529,
              string,
              "So, you remember the climax of Return of the Jedi?").
pllm:training(4900010000529,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', remember],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', climax]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['NN', 'Return']],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4900010000529,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                [',', ','],
                ['NP', ['PRP', you]],
                ['VB', remember],
                ['NP', ['DT', the], ['NN', climax]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', ?]
              ]).
pllm:training(4900010000529,
              tree_to_toks,
              ['So', ',', you, remember, 'the-climax', of, 'Return', of, 'the-Jedi', ?]).
pllm:training(4900020000530,
              string,
              "Where Vader picks up the Emperor and throws him down that shaft?").
pllm:training(4900020000530,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Where']],
                  [ 'S',
                    ['NP', ['NNP', 'Vader']],
                    [ 'VP',
                      [ 'VP',
                        ['VBZ', picks],
                        ['PRT', ['RP', up]],
                        ['NP', ['DT', the], ['NNP', 'Emperor']]
                      ],
                      ['CC', and],
                      [ 'VP',
                        ['VBZ', throws],
                        ['NP', ['PRP', him]],
                        ['PRT', ['RP', down]],
                        ['PP', ['IN', that], ['NP', ['NN', shaft]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(4900020000530,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Where']],
                mark('S'),
                ['NP', ['NNP', 'Vader']],
                ['VBZ', picks],
                ['PRT', ['RP', up]],
                ['NP', ['DT', the], ['NNP', 'Emperor']],
                ['CC', and],
                ['VBZ', throws],
                ['NP', ['PRP', him]],
                ['PRT', ['RP', down]],
                ['IN', that],
                ['NP', ['NN', shaft]],
                ['.', ?]
              ]).
pllm:training(4900020000530,
              tree_to_toks,
              [ 'Where',
                'Vader',
                picks,
                up,
                'the-Emperor',
                and,
                throws,
                him,
                down,
                that,
                shaft,
                (?)
              ]).
pllm:training(4900030000531,
              string,
              "Yeah.  Here's something I find weird... I've heard different explanations for that big explosion of blue energy.").
pllm:training(4900030000531,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yeah'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['RB', 'Here']], ['VP', ['VBZ', '\'s'], ['NP', ['NN', something]]]],
                    [ 'PRN',
                      ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', find], ['NP', ['NN', 'weird.']]]],
                      [',', ',']
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', '\'ve'],
                      [ 'VP',
                        ['VBN', heard],
                        ['NP', ['JJ', different], ['NNS', explanations]],
                        [ 'PP',
                          ['IN', for],
                          [ 'NP',
                            ['NP', ['DT', that], ['JJ', big], ['NN', explosion]],
                            ['PP', ['IN', of], ['NP', ['JJ', blue], ['NN', energy]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4900030000531,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yeah'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['RB', 'Here']],
                ['VBZ', '\'s'],
                ['NP', ['NN', something]],
                'PRN',
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', find],
                ['NP', ['NN', 'weird.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'ve'],
                ['VBN', heard],
                ['NP', ['JJ', different], ['NNS', explanations]],
                ['IN', for],
                ['NP', ['DT', that], ['JJ', big], ['NN', explosion]],
                ['IN', of],
                ['NP', ['JJ', blue], ['NN', energy]],
                ['.', '.']
              ]).
pllm:training(4900030000531,
              tree_to_toks,
              [ 'Yeah',
                ('.'),
                'Here',
                '\'s',
                something,
                'PRN',
                'I',
                find,
                'weird.',
                (','),
                ('.'),
                (','),
                ('.'),
                'I',
                '\'ve',
                heard,
                'different-explanations',
                for,
                'that-big-explosion',
                of,
                'blue-energy',
                ('.')
              ]).
pllm:training(4900040000532, string, "Really?").
pllm:training(4900040000532, text_to_tree, ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(4900040000532, unphrasify, [mark('FRAG'), ['ADVP', ['RB', 'Really']], ['.', ?]]).
pllm:training(4900040000532, tree_to_toks, ['Really', ?]).
pllm:training(4900050000533,
              string,
              "Yeah, some of the books say it happened because the Emperor was full of Dark Side energy and all, so that when someone like that dies the energy explodes outward.").
pllm:training(4900050000533,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['NP', ['DT', some]], ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', books]]]],
                  [ 'VP',
                    ['VB', say],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBD', happened],
                          [ 'SBAR',
                            ['IN', because],
                            [ 'S',
                              ['NP', ['DT', the], ['NNP', 'Emperor']],
                              [ 'VP',
                                ['VBD', was],
                                ['ADJP', ['JJ', full]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Dark'], ['NNP', 'Side'], ['NN', energy]],
                                    ['CC', and],
                                    ['NP', ['DT', all]]
                                  ]
                                ],
                                [',', ','],
                                [ 'SBAR',
                                  ['IN', so],
                                  ['IN', that],
                                  [ 'S',
                                    [ 'SBAR',
                                      ['WHADVP', ['WRB', when]],
                                      [ 'S',
                                        [ 'NP',
                                          ['NP', ['NN', someone]],
                                          ['PP', ['IN', like], ['NP', ['DT', that]]]
                                        ],
                                        [ 'VP',
                                          ['VBZ', dies],
                                          ['NP', ['DT', the], ['NN', energy]]
                                        ]
                                      ]
                                    ],
                                    ['VP', ['VBZ', explodes], ['ADVP', ['RB', outward]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(4900050000533,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', some]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', books]],
                ['VB', say],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', happened],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Emperor']],
                ['VBD', was],
                ['ADJP', ['JJ', full]],
                ['IN', of],
                ['NP', ['NNP', 'Dark'], ['NNP', 'Side'], ['NN', energy]],
                ['CC', and],
                ['NP', ['DT', all]],
                [',', ','],
                mark('SBAR'),
                ['IN', so],
                ['IN', that],
                mark('S'),
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NN', someone]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['VBZ', dies],
                ['NP', ['DT', the], ['NN', energy]],
                ['VBZ', explodes],
                ['ADVP', ['RB', outward]],
                ['.', '.']
              ]).
pllm:training(4900050000533,
              tree_to_toks,
              [ 'Yeah',
                (','),
                some,
                of,
                'the-books',
                say,
                it,
                happened,
                because,
                'the-Emperor',
                was,
                full,
                of,
                'Dark-Side-energy',
                and,
                all,
                (','),
                so,
                that,
                when,
                someone,
                like,
                that,
                dies,
                'the-energy',
                explodes,
                outward,
                ('.')
              ]).
pllm:training(4900060000534,
              string,
              "Weird, don't remember that happening when Darth Maul was killed.  Or Count Dooku for that matter...").
pllm:training(4900060000534,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['ADJP', ['JJ', 'Weird']],
                  [',', ','],
                  [ 'VP',
                    ['AUX', do],
                    ['RB', not],
                    [ 'VP',
                      ['VB', remember],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          [ 'NP',
                            ['NP', ['VBG', happening]],
                            [ 'SBAR',
                              ['WHADVP', ['WRB', when]],
                              ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]
                            ]
                          ],
                          ['VP', ['AUX', was], ['VP', ['VBN', killed]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'Or'],
                    [ 'VP',
                      ['VB', 'Count'],
                      ['NP', ['NNP', 'Dooku']],
                      ['PP', ['IN', for], ['NP', ['DT', that], ['NN', 'matter.']], [',', ',']]
                    ],
                    ['.', '.']
                  ],
                  ['S', ['VP', [',', ',']], ['.', '.']],
                  ['FRAG', ['.', '.']]
                ]
              ]).
pllm:training(4900060000534,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['ADJP', ['JJ', 'Weird']],
                [',', ','],
                ['AUX', do],
                ['RB', not],
                ['VB', remember],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['VBG', happening]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['AUX', was],
                ['VBN', killed],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'Or'],
                ['VB', 'Count'],
                ['NP', ['NNP', 'Dooku']],
                ['IN', for],
                ['NP', ['DT', that], ['NN', 'matter.']],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                'FRAG',
                ['.', '.']
              ]).
pllm:training(4900060000534,
              tree_to_toks,
              [ 'Weird',
                (','),
                do,
                not,
                remember,
                that,
                happening,
                when,
                'Darth',
                'Maul',
                was,
                killed,
                ('.'),
                'Or',
                'Count',
                'Dooku',
                for,
                'that-matter.',
                (','),
                ('.'),
                (','),
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(4900070000535,
              string,
              "Yeah, true, that's one confusing aspect.  But you know what i always thought?").
pllm:training(4900070000535,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['ADJP', ['JJ', true]],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['NP', ['NP', ['CD', one]], ['VP', ['VBG', confusing], ['NP', ['NN', aspect]]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['CC', 'But'],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', know],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        ['S', ['NP', ['PRP', i]], ['ADVP', ['RB', always]], ['VP', ['VBD', thought]]]
                      ]
                    ],
                    ['.', ?]
                  ]
                ]
              ]).
pllm:training(4900070000535,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['ADJP', ['JJ', true]],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['NP', ['CD', one]],
                ['VBG', confusing],
                ['NP', ['NN', aspect]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', always]],
                ['VBD', thought],
                ['.', ?]
              ]).
pllm:training(4900070000535,
              tree_to_toks,
              [ 'Yeah',
                (','),
                true,
                (','),
                that,
                '\'s',
                one,
                confusing,
                aspect,
                ('.'),
                'But',
                you,
                know,
                what,
                i,
                always,
                thought,
                (?)
              ]).
pllm:training(4900080000536, string, "What's that?").
pllm:training(4900080000536,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['NP', ['WP', 'What']], ['S', ['VBZ', '\'s'], ['NP', ['DT', that]]], ['.', ?]]
              ]).
pllm:training(4900080000536,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(4900080000536, tree_to_toks, ['What', '\'s', that, ?]).
pllm:training(4900090000537,
              string,
              "I figured the explosion because his body hit some kind of  energy reactor.   After all, the explosion is the same blue color as reactor thing down at the very bottom of the shaft.").
pllm:training(4900090000537,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', figured],
                      ['NP', ['DT', the], ['NN', explosion]],
                      [ 'SBAR',
                        ['IN', because],
                        [ 'S',
                          ['NP', ['PRP$', his], ['NN', body]],
                          [ 'VP',
                            ['VBD', hit],
                            [ 'NP',
                              ['NP', ['DT', some], ['NN', kind]],
                              ['PP', ['IN', of], ['NP', ['NN', energy], ['NN', reactor]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['PP', ['IN', 'After'], ['NP', ['DT', all]]],
                    [',', ','],
                    ['NP', ['DT', the], ['NN', explosion]],
                    [ 'VP',
                      ['VBZ', is],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same], ['JJ', blue], ['NN', color]],
                        ['PP', ['IN', as], ['NP', ['NN', reactor], ['NN', thing]]]
                      ],
                      [ 'ADVP',
                        ['RB', down],
                        [ 'PP',
                          ['IN', at],
                          [ 'NP',
                            ['NP', ['DT', the], ['ADJP', ['RB', very], ['JJ', bottom]]],
                            ['PP', ['IN', of], ['NP', ['DT', the], ['NN', shaft]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(4900090000537,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', figured],
                ['NP', ['DT', the], ['NN', explosion]],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP$', his], ['NN', body]],
                ['VBD', hit],
                ['NP', ['DT', some], ['NN', kind]],
                ['IN', of],
                ['NP', ['NN', energy], ['NN', reactor]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['IN', 'After'],
                ['NP', ['DT', all]],
                [',', ','],
                ['NP', ['DT', the], ['NN', explosion]],
                ['VBZ', is],
                ['NP', ['DT', the], ['JJ', same], ['JJ', blue], ['NN', color]],
                ['IN', as],
                ['NP', ['NN', reactor], ['NN', thing]],
                'ADVP',
                ['RB', down],
                ['IN', at],
                ['NP', ['DT', the], ['ADJP', ['RB', very], ['JJ', bottom]]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', shaft]],
                ['.', '.']
              ]).
pllm:training(4900090000537,
              tree_to_toks,
              [ 'I',
                figured,
                'the-explosion',
                because,
                'his-body',
                hit,
                'some-kind',
                of,
                'energy-reactor',
                ('.'),
                'After',
                all,
                (','),
                'the-explosion',
                (is),
                'the-same-blue-color',
                (as),
                'reactor-thing',
                'ADVP',
                down,
                at,
                'the-very-bottom',
                of,
                'the-shaft',
                ('.')
              ]).
pllm:training(4900100000538,
              string,
              "Huh, that theory makes me sense to me than the whole Dark Side thing. But, then again, the color is also the same as the Force Lightning the Emperor was torturing Luke with..").
pllm:training(4900100000538,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['NNP', 'Huh']],
                  [',', ','],
                  ['NP', ['DT', that], ['NN', theory]],
                  [ 'VP',
                    ['VBZ', makes],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      [ 'VP',
                        ['VB', sense],
                        ['PP', ['TO', to], ['NP', ['PRP', me]]],
                        [ 'PP',
                          ['IN', than],
                          [ 'NP',
                            ['DT', the],
                            ['JJ', whole],
                            ['JJ', 'Dark'],
                            ['JJ', 'Side'],
                            ['NN', thing]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'SEQBAR',
                  [ 'S',
                    ['CC', 'But'],
                    [',', ','],
                    ['ADVP', ['RB', then], ['RB', again]],
                    [',', ','],
                    ['NP', ['DT', the], ['NN', color]],
                    [ 'VP',
                      ['AUX', is],
                      ['ADVP', ['RB', also]],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', same]],
                        [ 'PP',
                          ['IN', as],
                          [ 'NP',
                            ['NP', ['DT', the], ['NNP', 'Force'], ['NN', 'Lightning']],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['DT', the], ['NN', 'Emperor']],
                                [ 'VP',
                                  ['AUX', was],
                                  [ 'VP',
                                    ['VBG', torturing],
                                    ['NP', ['NNP', 'Luke']],
                                    ['PP', ['IN', with]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ],
                  ['CORENLP', ['FRAG', ['.', '.']]]
                ]
              ]).
pllm:training(4900100000538,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['NNP', 'Huh']],
                [',', ','],
                ['NP', ['DT', that], ['NN', theory]],
                ['VBZ', makes],
                mark('S'),
                ['NP', ['PRP', me]],
                ['VB', sense],
                ['TO', to],
                ['NP', ['PRP', me]],
                ['IN', than],
                ['NP', ['DT', the], ['JJ', whole], ['JJ', 'Dark'], ['JJ', 'Side'], ['NN', thing]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['CC', 'But'],
                [',', ','],
                ['ADVP', ['RB', then], ['RB', again]],
                [',', ','],
                ['NP', ['DT', the], ['NN', color]],
                ['AUX', is],
                ['ADVP', ['RB', also]],
                ['NP', ['DT', the], ['JJ', same]],
                ['IN', as],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NN', 'Lightning']],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', 'Emperor']],
                ['AUX', was],
                ['VBG', torturing],
                ['NP', ['NNP', 'Luke']],
                ['IN', with],
                ['.', '.'],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(4900100000538,
              tree_to_toks,
              [ 'Huh',
                (','),
                'that-theory',
                makes,
                me,
                sense,
                to,
                me,
                than,
                'the-whole-Dark-Side-thing',
                ('.'),
                'But',
                (','),
                then,
                again,
                (','),
                'the-color',
                (is),
                also,
                'the-same',
                (as),
                'the-Force-Lightning',
                'the-Emperor',
                was,
                torturing,
                'Luke',
                with,
                ('.'),
                'FRAG',
                ('.')
              ]).
pllm:training(5000010000540,
              string,
              "Are you excited for the new Star Wars movie?").
pllm:training(5000010000540,
              text_to_tree,
              [ 'S',
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VBN', excited],
                  [ 'PP',
                    ['IN', for],
                    ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5000010000540,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['VBN', excited],
                ['IN', for],
                ['NP', ['DT', the], ['JJ', new], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(5000010000540,
              tree_to_toks,
              ['Are', you, excited, for, 'the-new-Star-Wars-movie', ?]).
pllm:training(5000020000541, string, "Which one do you mean?").
pllm:training(5000020000541,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WDT', 'Which'], ['NN', one]],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', mean]]],
                  ['.', ?]
                ]
              ]).
pllm:training(5000020000541,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which'], ['NN', one]],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['.', ?]
              ]).
pllm:training(5000020000541, tree_to_toks, ['Which-one', do, you, mean, ?]).
pllm:training(5000030000542, string, "I mean The Last Jedi.").
pllm:training(5000030000542,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VB', mean], ['NP', ['DT', 'The'], ['JJ', 'Last'], ['NNP', 'Jedi']]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000030000542,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                ['NP', ['DT', 'The'], ['JJ', 'Last'], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(5000030000542, tree_to_toks, ['I', mean, 'The-Last-Jedi', '.']).
pllm:training(5000040000543, string, "Oh yes, I can't wait!").
pllm:training(5000040000543,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Oh'], ['UH', yes]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['MD', can], ['RB', not], ['VP', ['VB', wait]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000040000543,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Oh'], ['UH', yes]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['RB', not],
                ['VB', wait],
                ['.', '.']
              ]).
pllm:training(5000040000543, tree_to_toks, ['Oh', yes, ',', 'I', can, not, wait, '.']).
pllm:training(5000050000544,
              string,
              "Are you also excited for the Han Solo movie?").
pllm:training(5000050000544,
              text_to_tree,
              [ 'S',
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', also]],
                [ 'VP',
                  ['VBN', excited],
                  ['PP', ['IN', for], ['NP', ['DT', the], ['NNP', 'Han'], ['NNP', 'Solo'], ['NN', movie]]]
                ],
                ['.', ?]
              ]).
pllm:training(5000050000544,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Are'],
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', also]],
                ['VBN', excited],
                ['IN', for],
                ['NP', ['DT', the], ['NNP', 'Han'], ['NNP', 'Solo'], ['NN', movie]],
                ['.', ?]
              ]).
pllm:training(5000050000544,
              tree_to_toks,
              ['Are', you, also, excited, for, 'the-Han-Solo-movie', ?]).
pllm:training(5000060000545,
              string,
              "Yes, I am. I am a little worried that it will be as good as Rogue One or not.").
pllm:training(5000060000545,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  ['S', ['INTJ', ['UH', 'Yes']], [',', ','], ['NP', ['PRP', 'I']], ['VP', ['VB', am]], ['.', '.']]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['AUX', am],
                    [ 'ADJP',
                      ['NP', ['DT', a], ['JJ', little]],
                      ['JJ', worried],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['MD', will],
                            [ 'VP',
                              ['AUX', be],
                              [ 'ADJP',
                                [ 'ADJP',
                                  ['ADJP', ['RB', as], ['JJ', good]],
                                  ['PP', ['IN', as], ['NP', ['NNP', 'Rogue'], ['NNP', 'One']]]
                                ],
                                ['CC', or],
                                ['RB', not]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000060000545,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', am],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', am],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJ', worried],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', will],
                ['AUX', be],
                'ADJP',
                'ADJP',
                ['ADJP', ['RB', as], ['JJ', good]],
                ['IN', as],
                ['NP', ['NNP', 'Rogue'], ['NNP', 'One']],
                ['CC', or],
                ['RB', not],
                ['.', '.']
              ]).
pllm:training(5000060000545,
              tree_to_toks,
              [ 'Yes',
                (','),
                'I',
                am,
                ('.'),
                'I',
                am,
                'ADJP',
                'a-little',
                worried,
                that,
                it,
                will,
                be,
                'ADJP',
                'ADJP',
                (as),
                good,
                (as),
                'Rogue-One',
                or,
                not,
                ('.')
              ]).
pllm:training(5000070000546,
              string,
              "Yeah, me too. I did hear yesterday that Disney fired the two people who were directing it because their creative vision didn't align.").
pllm:training(5000070000546,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', me]],
                    ['ADVP', ['RB', too]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', did],
                      [ 'VP',
                        ['VB', hear],
                        ['NP-TMP', ['NN', yesterday]],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', 'Disney']],
                            [ 'VP',
                              ['VBD', fired],
                              [ 'NP',
                                ['NP', ['DT', the], ['CD', two], ['NNS', people]],
                                [ 'SBAR',
                                  ['NP', ['WP', who]],
                                  [ 'S',
                                    [ 'VP',
                                      ['VBD', were],
                                      [ 'VP',
                                        ['VBG', directing],
                                        ['NP', ['PRP', it]],
                                        [ 'SBAR',
                                          ['IN', because],
                                          [ 'S',
                                            [ 'NP',
                                              ['PRP$', their],
                                              ['JJ', creative],
                                              ['NN', vision]
                                            ],
                                            [ 'VP',
                                              ['VBD', did],
                                              ['RB', 'n\'t'],
                                              ['VP', ['VB', align]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5000070000546,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['VB', hear],
                ['NP-TMP', ['NN', yesterday]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBD', fired],
                ['NP', ['DT', the], ['CD', two], ['NNS', people]],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBD', were],
                ['VBG', directing],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP$', their], ['JJ', creative], ['NN', vision]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', align],
                ['.', '.']
              ]).
pllm:training(5000070000546,
              tree_to_toks,
              [ 'Yeah',
                (','),
                me,
                too,
                ('.'),
                'I',
                did,
                hear,
                yesterday,
                that,
                'Disney',
                fired,
                'the-two-people',
                who,
                were,
                directing,
                it,
                because,
                'their-creative-vision',
                did,
                'n\'t',
                align,
                ('.')
              ]).
pllm:training(5000080000547,
              string,
              "I heard that too, I think that is a good sign.").
pllm:training(5000080000547,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', heard],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['ADVP', ['RB', too]],
                        [',', ','],
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VB', think],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['DT', that]],
                              ['VP', ['VBZ', is], ['NP', ['DT', a], ['JJ', good], ['NN', sign]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000080000547,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['ADVP', ['RB', too]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', is],
                ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                ['.', '.']
              ]).
pllm:training(5000080000547,
              tree_to_toks,
              ['I', heard, that, too, ',', 'I', think, that, is, 'a-good-sign', '.']).
pllm:training(5000090000548,
              string,
              "I bet they were trying to make it all artsy and have the characters be all sexual and emo and that's not what Disney is about.").
pllm:training(5000090000548,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', bet],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            [ 'VP',
                              ['VBD', were],
                              [ 'VP',
                                ['VBG', trying],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', make],
                                      [ 'S',
                                        ['NP', ['PRP', it]],
                                        ['ADJP', ['DT', all], ['JJ', artsy]]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ],
                            ['CC', and],
                            ['VP', ['VB', have], ['NP', ['DT', the], ['NNS', characters]]],
                            [ 'VP',
                              ['VB', be],
                              [ 'NP',
                                ['NP', ['DT', all], ['JJ', sexual]],
                                ['CC', and],
                                ['NP', ['NN', emo]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['RB', not],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        ['S', ['NP', ['NNP', 'Disney']], ['VP', ['VBZ', is], ['ADVP', ['RB', about]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5000090000548,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', bet],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['VBG', trying],
                mark('S'),
                ['TO', to],
                ['VB', make],
                mark('S'),
                ['NP', ['PRP', it]],
                ['ADJP', ['DT', all], ['JJ', artsy]],
                ['CC', and],
                ['VB', have],
                ['NP', ['DT', the], ['NNS', characters]],
                ['VB', be],
                ['NP', ['DT', all], ['JJ', sexual]],
                ['CC', and],
                ['NP', ['NN', emo]],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                ['RB', not],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBZ', is],
                ['ADVP', ['RB', about]],
                ['.', '.']
              ]).
pllm:training(5000090000548,
              tree_to_toks,
              [ 'I',
                bet,
                they,
                were,
                trying,
                to,
                make,
                it,
                all,
                artsy,
                and,
                have,
                'the-characters',
                be,
                'all-sexual',
                and,
                emo,
                and,
                that,
                '\'s',
                not,
                what,
                'Disney',
                (is),
                about,
                ('.')
              ]).
pllm:training(5000100000549,
              string,
              "Yeah I take it as a good sign that Disney is willing to fire directors if they feel they aren't taking Star Wars in the direction they want.").
pllm:training(5000100000549,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [ 'PRN',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VB', take],
                        ['NP', ['PRP', it]],
                        [ 'PP',
                          ['IN', as],
                          [ 'NP',
                            ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                            [ 'SBAR',
                              ['NP', ['WDT', that]],
                              [ 'S',
                                ['NP', ['NNP', 'Disney']],
                                [ 'VP',
                                  ['VBZ', is],
                                  [ 'ADJP',
                                    ['JJ', willing],
                                    [ 'S',
                                      [ 'VP',
                                        ['TO', to],
                                        [ 'VP',
                                          ['VB', fire],
                                          ['NP', ['NNS', directors]],
                                          [ 'SBAR',
                                            ['IN', if],
                                            [ 'S',
                                              ['NP', ['PRP', they]],
                                              [ 'VP',
                                                ['VB', feel],
                                                [ 'SBAR',
                                                  [ 'S',
                                                    ['NP', ['PRP', they]],
                                                    [ 'VP',
                                                      ['VB', are],
                                                      ['RB', not],
                                                      [ 'VP',
                                                        ['VBG', taking],
                                                        [ 'NP',
                                                          [ 'NP',
                                                            ['NNP', 'Star'],
                                                            ['NNPS', 'Wars']
                                                          ],
                                                          [ 'PP',
                                                            ['IN', in],
                                                            [ 'NP',
                                                              ['DT', the],
                                                              ['NN', direction]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['NP', ['PRP', they]],
                  ['VP', ['VB', want]],
                  ['.', '.']
                ]
              ]).
pllm:training(5000100000549,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                'PRN',
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', take],
                ['NP', ['PRP', it]],
                ['IN', as],
                ['NP', ['DT', a], ['JJ', good], ['NN', sign]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['NNP', 'Disney']],
                ['VBZ', is],
                'ADJP',
                ['JJ', willing],
                mark('S'),
                ['TO', to],
                ['VB', fire],
                ['NP', ['NNS', directors]],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', feel],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', are],
                ['RB', not],
                ['VBG', taking],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['IN', in],
                ['NP', ['DT', the], ['NN', direction]],
                ['NP', ['PRP', they]],
                ['VB', want],
                ['.', '.']
              ]).
pllm:training(5000100000549,
              tree_to_toks,
              [ 'Yeah',
                'PRN',
                'I',
                take,
                it,
                (as),
                'a-good-sign',
                that,
                'Disney',
                (is),
                'ADJP',
                willing,
                to,
                fire,
                directors,
                if,
                they,
                feel,
                they,
                are,
                not,
                taking,
                'Star-Wars',
                in,
                'the-direction',
                they,
                want,
                ('.')
              ]).
pllm:training(5100010000551,
              string,
              "So what is your favorite weapon in star wars").
pllm:training(5100010000551,
              text_to_tree,
              [ 'SBAR',
                ['RB', 'So'],
                ['NP', ['WP', what]],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', weapon]],
                      ['PP', ['IN', in], ['NP', ['NN', star], ['NNS', wars]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5100010000551,
              unphrasify,
              [ mark('SBAR'),
                ['RB', 'So'],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', weapon]],
                ['IN', in],
                ['NP', ['NN', star], ['NNS', wars]],
                ['.', '.']
              ]).
pllm:training(5100010000551,
              tree_to_toks,
              ['So', what, is, 'your-favorite-weapon', in, 'star-wars', '.']).
pllm:training(5100020000552, string, "What do you think").
pllm:training(5100020000552,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', think]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100020000552,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['.', '.']
              ]).
pllm:training(5100020000552, tree_to_toks, ['What', do, you, think, '.']).
pllm:training(5100030000553, string, "I think it is obvious").
pllm:training(5100030000553,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    ['SBAR', ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', is], ['ADJP', ['JJ', obvious]]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5100030000553,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', obvious]],
                ['.', '.']
              ]).
pllm:training(5100030000553, tree_to_toks, ['I', think, it, is, obvious, '.']).
pllm:training(5100040000554, string, "Well?").
pllm:training(5100040000554, text_to_tree, ['CORENLP', ['INTJ', ['UH', 'Well'], ['.', ?]]]).
pllm:training(5100040000554, unphrasify, [mark('CORENLP'), ['INTJ', ['UH', 'Well'], ['.', ?]]]).
pllm:training(5100040000554, tree_to_toks, ['Well', ?]).
pllm:training(5100050000555, string, "A light saber").
pllm:training(5100050000555,
              text_to_tree,
              ['CORENLP', ['NP', ['DT', 'A'], ['JJ', light], ['NN', saber], ['.', '.']]]).
pllm:training(5100050000555,
              unphrasify,
              [mark('CORENLP'), ['NP', ['DT', 'A'], ['JJ', light], ['NN', saber], ['.', '.']]]).
pllm:training(5100050000555, tree_to_toks, ['A-light-saber-.']).
pllm:training(5100060000556, string, "Wrong").
pllm:training(5100060000556, text_to_tree, ['CORENLP', ['ADJP', ['JJ', 'Wrong'], ['.', '.']]]).
pllm:training(5100060000556,
              unphrasify,
              [mark('CORENLP'), ['ADJP', ['JJ', 'Wrong'], ['.', '.']]]).
pllm:training(5100060000556, tree_to_toks, ['Wrong', '.']).
pllm:training(5100070000557, string, "What?!!").
pllm:training(5100070000557,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['SBAR', ['NP', ['WP', 'What']], ['.', ?]]],
                ['SEQBAR', ['CORENLP', ['FRAG', ['.', '.']]], ['CORENLP', ['FRAG', ['.', '.']]]]
              ]).
pllm:training(5100070000557,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                'FRAG',
                ['.', '.'],
                mark('CORENLP'),
                'FRAG',
                ['.', '.']
              ]).
pllm:training(5100070000557, tree_to_toks, ['What', ?, '.', 'FRAG', '.']).
pllm:training(5100080000558, string, "It is not").
pllm:training(5100080000558,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBZ', is], ['RB', not]], ['.', '.']]]).
pllm:training(5100080000558,
              unphrasify,
              [mark('CORENLP'), mark('S'), ['NP', ['PRP', 'It']], ['VBZ', is], ['RB', not], ['.', '.']]).
pllm:training(5100080000558, tree_to_toks, ['It', is, not, '.']).
pllm:training(5100090000559, string, "Fine what is it").
pllm:training(5100090000559,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['INTJ', ['UH', 'Fine']],
                  ['NP', ['WP', what]],
                  ['S', ['VBZ', is], ['NP', ['PRP', it]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100090000559,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['INTJ', ['UH', 'Fine']],
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', is],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(5100090000559, tree_to_toks, ['Fine', what, is, it, '.']).
pllm:training(5100100000560, string, "The blaster the noise is fun").
pllm:training(5100100000560,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['NP', ['DT', 'The'], ['NN', blaster]], ['NP', ['DT', the], ['NN', noise]]],
                  ['VP', ['VBZ', is], ['ADJP', ['JJ', fun]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5100100000560,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', blaster]],
                ['NP', ['DT', the], ['NN', noise]],
                ['VBZ', is],
                ['ADJP', ['JJ', fun]],
                ['.', '.']
              ]).
pllm:training(5100100000560, tree_to_toks, ['The-blaster', 'the-noise', is, fun, '.']).
pllm:training(5200010000562,
              string,
              "what do you think about the theory that rey is obi wan's daughter?").
pllm:training(5200010000562,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', what]],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'PP',
                      ['IN', about],
                      [ 'NP',
                        ['DT', the],
                        ['NN', theory],
                        [ 'SBAR',
                          ['IN', that],
                          [ 'S',
                            ['NP', ['NNP', rey]],
                            [ 'VP',
                              ['AUX', is],
                              [ 'VP',
                                ['VBG', obi],
                                ['NP', ['NP', ['NNP', wan], ['POS', '\'s']], ['NN', daughter]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5200010000562,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', about],
                ['DT', the],
                ['NN', theory],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', rey]],
                ['AUX', is],
                ['VBG', obi],
                ['NP', ['NNP', wan], ['POS', '\'s']],
                ['NN', daughter],
                ['.', ?]
              ]).
pllm:training(5200010000562,
              tree_to_toks,
              [ what,
                do,
                you,
                think,
                about,
                the,
                theory,
                that,
                rey,
                (is),
                obi,
                'wan-\'s',
                daughter,
                (?)
              ]).
pllm:training(5200020000563, string, "i honestly hate it. it makes no sense").
pllm:training(5200020000563,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    ['ADVP', ['RB', honestly]],
                    ['VP', ['VB', hate], ['NP', ['PRP', it]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', it]],
                    ['VP', ['VBZ', makes], ['NP', ['DT', no], ['NN', sense]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200020000563,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', honestly]],
                ['VB', hate],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', makes],
                ['NP', ['DT', no], ['NN', sense]],
                ['.', '.']
              ]).
pllm:training(5200020000563,
              tree_to_toks,
              [i, honestly, hate, it, '.', it, makes, 'no-sense', '.']).
pllm:training(5200030000564,
              string,
              "really? he was in hiding for a long time, yo udon't think obi could have found a boo?").
pllm:training(5200030000564,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['FRAG', ['ADVP', ['RB', really]], ['.', ?]]],
                [ 'S',
                  ['NP', ['PRP', he]],
                  [ 'VP',
                    ['AUX', was],
                    ['PP', ['IN', in], ['NP', ['NN', hiding]]],
                    ['PP', ['IN', for], ['NP', ['DT', a], ['JJ', long], ['NN', time]]],
                    [',', ','],
                    [ 'S',
                      [ 'VP',
                        ['VBG', yo],
                        [ 'S',
                          [ 'VP',
                            ['VB', udo],
                            ['RB', 'n\'t'],
                            [ 'VP',
                              ['VB', think],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', obi]],
                                  [ 'VP',
                                    ['MD', could],
                                    [ 'VP',
                                      ['AUX', have],
                                      ['VP', ['VBN', found], ['NP', ['DT', a], ['NN', boo]]]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5200030000564,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', really]],
                ['.', ?],
                mark('S'),
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['IN', in],
                ['NP', ['NN', hiding]],
                ['IN', for],
                ['NP', ['DT', a], ['JJ', long], ['NN', time]],
                [',', ','],
                mark('S'),
                ['VBG', yo],
                mark('S'),
                ['VB', udo],
                ['RB', 'n\'t'],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', obi]],
                ['MD', could],
                ['AUX', have],
                ['VBN', found],
                ['NP', ['DT', a], ['NN', boo]],
                ['.', ?]
              ]).
pllm:training(5200030000564,
              tree_to_toks,
              [ really,
                (?),
                he,
                was,
                in,
                hiding,
                for,
                'a-long-time',
                (','),
                yo,
                udo,
                'n\'t',
                think,
                obi,
                could,
                have,
                found,
                'a-boo',
                (?)
              ]).
pllm:training(5200040000565,
              string,
              "no, i don't. i think she's related to the skywalkers").
pllm:training(5200040000565,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', no]],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    ['VP', ['VB', do], ['RB', not]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', i]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', she]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            [ 'VP',
                              ['VBN', related],
                              ['PP', ['IN', to], ['NP', ['DT', the], ['NNS', skywalkers]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200040000565,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', no]],
                [',', ','],
                ['NP', ['PRP', i]],
                ['VB', do],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['VBN', related],
                ['IN', to],
                ['NP', ['DT', the], ['NNS', skywalkers]],
                ['.', '.']
              ]).
pllm:training(5200040000565,
              tree_to_toks,
              [no, ',', i, do, not, '.', i, think, she, '\'s', related, to, 'the-skywalkers', '.']).
pllm:training(5200050000566, string, "why?").
pllm:training(5200050000566,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(5200050000566,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(5200050000566, tree_to_toks, [why, ?]).
pllm:training(5200060000567, string, "because she's so force sensative!").
pllm:training(5200060000567,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'SBAR',
                    ['IN', because],
                    ['S', ['NP', ['PRP', she]], ['VP', ['VBZ', '\'s'], ['ADVP', ['RB', so]]]]
                  ],
                  ['VP', ['VB', force], ['ADJP', ['JJ', sensative]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5200060000567,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', so]],
                ['VB', force],
                ['ADJP', ['JJ', sensative]],
                ['.', '.']
              ]).
pllm:training(5200060000567,
              tree_to_toks,
              [because, she, '\'s', so, force, sensative, '.']).
pllm:training(5200070000568,
              string,
              "i guess only a skywalker could move the force that well").
pllm:training(5200070000568,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', i]],
                  [ 'VP',
                    ['VB', guess],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['RB', only], ['DT', a], ['NN', skywalker]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', move],
                            ['NP', ['DT', the], ['NN', force], ['SBAR', ['NP', ['WDT', that]]]],
                            ['ADVP', ['RB', well]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5200070000568,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', i]],
                ['VB', guess],
                mark('SBAR'),
                mark('S'),
                ['NP', ['RB', only], ['DT', a], ['NN', skywalker]],
                ['MD', could],
                ['VB', move],
                ['DT', the],
                ['NN', force],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(5200070000568,
              tree_to_toks,
              [i, guess, 'only-a-skywalker', could, move, the, force, that, well, '.']).
pllm:training(5200080000569,
              string,
              "exactly! plus, i really want her to be related to kylo ren").
pllm:training(5200080000569,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', exactly]], ['.', '.']],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['CC', plus]],
                    [',', ','],
                    ['NP', ['PRP', i]],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', want],
                      [ 'S',
                        ['NP', ['PRP', her]],
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'VP',
                              ['VBN', related],
                              ['PP', ['IN', to], ['NP', ['NN', kylo], ['NN', ren]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200080000569,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', exactly]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['CC', plus]],
                [',', ','],
                ['NP', ['PRP', i]],
                ['ADVP', ['RB', really]],
                ['VB', want],
                mark('S'),
                ['NP', ['PRP', her]],
                ['TO', to],
                ['VB', be],
                ['VBN', related],
                ['IN', to],
                ['NP', ['NN', kylo], ['NN', ren]],
                ['.', '.']
              ]).
pllm:training(5200080000569,
              tree_to_toks,
              [exactly, '.', plus, ',', i, really, want, her, to, be, related, to, 'kylo-ren', '.']).
pllm:training(5200090000570, string, "why?").
pllm:training(5200090000570,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', why]], ['.', ?]]]).
pllm:training(5200090000570,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', why]], ['.', ?]]).
pllm:training(5200090000570, tree_to_toks, [why, ?]).
pllm:training(5200100000571,
              string,
              "because people keep saying they should be together, and that's nasty! let's shut that down").
pllm:training(5200100000571,
              text_to_tree,
              [ 'SEQBAR',
                [ 'SBAR',
                  ['IN', because],
                  [ 'S',
                    [ 'S',
                      ['NP', ['NNS', people]],
                      [ 'VP',
                        ['VB', keep],
                        [ 'S',
                          [ 'VP',
                            ['VBG', saying],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', they]],
                                [ 'VP',
                                  ['MD', should],
                                  ['VP', ['AUX', be], ['ADVP', ['RB', together]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    ['S', ['NP', ['DT', that]], ['VP', ['AUX', '\'s'], ['ADJP', ['JJ', nasty]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'VP',
                      ['VB', let],
                      [ 'S',
                        ['NP', ['PRP', '\'s']],
                        ['VP', ['VB', shut], ['NP', ['DT', that]], ['PRT', ['RP', down]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5200100000571,
              unphrasify,
              [ mark('SEQBAR'),
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                mark('S'),
                ['NP', ['NNS', people]],
                ['VB', keep],
                mark('S'),
                ['VBG', saying],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['MD', should],
                ['AUX', be],
                ['ADVP', ['RB', together]],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['DT', that]],
                ['AUX', '\'s'],
                ['ADJP', ['JJ', nasty]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['VB', let],
                mark('S'),
                ['NP', ['PRP', '\'s']],
                ['VB', shut],
                ['NP', ['DT', that]],
                ['PRT', ['RP', down]],
                ['.', '.']
              ]).
pllm:training(5200100000571,
              tree_to_toks,
              [ because,
                people,
                keep,
                saying,
                they,
                should,
                be,
                together,
                (','),
                and,
                that,
                '\'s',
                nasty,
                ('.'),
                let,
                '\'s',
                shut,
                that,
                down,
                ('.')
              ]).
pllm:training(5300010000573, string, "Did you like the Force Awakens?").
pllm:training(5300010000573,
              text_to_tree,
              [ 'S',
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['DT', the], ['NNP', 'Force'], ['NNPS', 'Awakens']]],
                ['.', ?]
              ]).
pllm:training(5300010000573,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NNP', 'Force'], ['NNPS', 'Awakens']],
                ['.', ?]
              ]).
pllm:training(5300010000573, tree_to_toks, ['Did', you, like, 'the-Force-Awakens', ?]).
pllm:training(5300020000574,
              string,
              "I didnt like it that much, I'm a Star Wars fan but think the last movie wasnt as good.").
pllm:training(5300020000574,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    [ 'VP',
                      ['VBD', did],
                      ['ADVP', ['RB', nt]],
                      ['PP', ['IN', like], ['NP', ['PRP', it]]],
                      [ 'SBAR',
                        ['NP', ['WDT', that]],
                        [ 'S',
                          ['ADVP', ['RB', much]],
                          [',', ','],
                          ['NP', ['PRP', 'I']],
                          [ 'VP',
                            ['VB', '\'m'],
                            ['NP', ['DT', a], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', fan]]
                          ]
                        ]
                      ]
                    ],
                    ['CC', but],
                    [ 'VP',
                      ['VB', think],
                      ['NP', ['DT', the], ['JJ', last], ['NN', movie], ['NN', wasnt]],
                      ['PP', ['IN', as], ['ADJP', ['JJ', good]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300020000574,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['ADVP', ['RB', nt]],
                ['IN', like],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['ADVP', ['RB', much]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['NP', ['DT', a], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', fan]],
                ['CC', but],
                ['VB', think],
                ['NP', ['DT', the], ['JJ', last], ['NN', movie], ['NN', wasnt]],
                ['IN', as],
                ['ADJP', ['JJ', good]],
                ['.', '.']
              ]).
pllm:training(5300020000574,
              tree_to_toks,
              [ 'I',
                did,
                nt,
                like,
                it,
                that,
                much,
                (','),
                'I',
                '\'m',
                'a-Star-Wars-fan',
                but,
                think,
                'the-last-movie-wasnt',
                (as),
                good,
                ('.')
              ]).
pllm:training(5300030000575,
              string,
              "I agree, I think theres many flaws, hopefuly this will get fixed.").
pllm:training(5300030000575,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', agree]]],
                  [',', ','],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      ['ADVP', ['RB', theres]],
                      ['NP', ['JJ', many], ['NNS', flaws]]
                    ]
                  ],
                  [',', ','],
                  [ 'S',
                    ['ADVP', ['RB', hopefuly]],
                    ['NP', ['DT', this]],
                    ['VP', ['MD', will], ['VP', ['VB', get], ['VP', ['VBN', fixed]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300030000575,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                ['ADVP', ['RB', theres]],
                ['NP', ['JJ', many], ['NNS', flaws]],
                [',', ','],
                mark('S'),
                ['ADVP', ['RB', hopefuly]],
                ['NP', ['DT', this]],
                ['MD', will],
                ['VB', get],
                ['VBN', fixed],
                ['.', '.']
              ]).
pllm:training(5300030000575,
              tree_to_toks,
              [ 'I',
                agree,
                (','),
                'I',
                think,
                theres,
                'many-flaws',
                (','),
                hopefuly,
                this,
                will,
                get,
                fixed,
                ('.')
              ]).
pllm:training(5300040000576, string, "What character did you like the most?").
pllm:training(5300040000576,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What'], ['NN', character]],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  ['VP', ['VB', like], ['NP', ['DT', the], ['JJS', most]]]
                ],
                ['.', ?]
              ]).
pllm:training(5300040000576,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What'], ['NN', character]],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['JJS', most]],
                ['.', ?]
              ]).
pllm:training(5300040000576,
              tree_to_toks,
              ['What-character', did, you, like, 'the-most', ?]).
pllm:training(5300050000577,
              string,
              "I liked the villain, I thought hes light saver was pretty cool.").
pllm:training(5300050000577,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', liked], ['NP', ['DT', the], ['NN', villain]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'NP',
                      ['NP', ['NNS', hes]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['JJ', light], ['NN', saver]],
                          ['VP', ['VBD', was], ['ADJP', ['RB', pretty], ['JJ', cool]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300050000577,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['DT', the], ['NN', villain]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                ['NP', ['NNS', hes]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['JJ', light], ['NN', saver]],
                ['VBD', was],
                ['ADJP', ['RB', pretty], ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(5300050000577,
              tree_to_toks,
              [ 'I',
                liked,
                'the-villain',
                (','),
                'I',
                thought,
                hes,
                'light-saver',
                was,
                pretty,
                cool,
                ('.')
              ]).
pllm:training(5300060000578,
              string,
              "Yeah it was, it would be interesting to see how he got trained.").
pllm:training(5300060000578,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah'], ['S', ['NP', ['PRP', it]], ['VP', ['AUX', was]]]],
                [',', ','],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['MD', would],
                  [ 'VP',
                    ['AUX', be],
                    ['ADJP', ['JJ', interesting]],
                    [ 'S',
                      [ 'VP',
                        ['TO', to],
                        [ 'VP',
                          ['VB', see],
                          [ 'SBAR',
                            ['WHADVP', ['WRB', how]],
                            [ 'S',
                              ['NP', ['PRP', he]],
                              ['VP', ['VBD', got], ['VP', ['VBN', trained]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5300060000578,
              unphrasify,
              [ mark('S'),
                'INTJ',
                ['UH', 'Yeah'],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                [',', ','],
                ['NP', ['PRP', it]],
                ['MD', would],
                ['AUX', be],
                ['ADJP', ['JJ', interesting]],
                mark('S'),
                ['TO', to],
                ['VB', see],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', got],
                ['VBN', trained],
                ['.', '.']
              ]).
pllm:training(5300060000578,
              tree_to_toks,
              [ 'INTJ',
                'Yeah',
                it,
                was,
                (','),
                it,
                would,
                be,
                interesting,
                to,
                see,
                how,
                he,
                got,
                trained,
                ('.')
              ]).
pllm:training(5300070000579,
              string,
              "I wonder how the next Star Wars movie will be like.").
pllm:training(5300070000579,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        [ 'NP',
                          ['DT', the],
                          ['JJ', next],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', movie]
                        ],
                        ['VP', ['MD', will], ['VP', ['VB', be], ['INTJ', ['UH', like]]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300070000579,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                [ 'NP',
                  ['DT', the],
                  ['JJ', next],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NN', movie]
                ],
                ['MD', will],
                ['VB', be],
                ['INTJ', ['UH', like]],
                ['.', '.']
              ]).
pllm:training(5300070000579,
              tree_to_toks,
              ['I', wonder, how, 'the-next-Star-Wars-movie', will, be, like, '.']).
pllm:training(5300080000580,
              string,
              "It will be interesting to watch Kilo Ren fight Luke.").
pllm:training(5300080000580,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['MD', will],
                    [ 'VP',
                      ['VB', be],
                      [ 'ADJP',
                        ['JJ', interesting],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', watch],
                              [ 'S',
                                ['NP', ['NNP', 'Kilo'], ['NNP', 'Ren']],
                                ['VP', ['VB', fight], ['NP', ['NNP', 'Luke']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300080000580,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', will],
                ['VB', be],
                'ADJP',
                ['JJ', interesting],
                mark('S'),
                ['TO', to],
                ['VB', watch],
                mark('S'),
                ['NP', ['NNP', 'Kilo'], ['NNP', 'Ren']],
                ['VB', fight],
                ['NP', ['NNP', 'Luke']],
                ['.', '.']
              ]).
pllm:training(5300080000580,
              tree_to_toks,
              ['It', will, be, 'ADJP', interesting, to, watch, 'Kilo-Ren', fight, 'Luke', '.']).
pllm:training(5300090000581, string, "That would be a pretty cool fight.").
pllm:training(5300090000581,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', cool]], ['NN', fight]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300090000581,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['MD', would],
                ['VB', be],
                ['NP', ['DT', a], ['ADJP', ['RB', pretty], ['JJ', cool]], ['NN', fight]],
                ['.', '.']
              ]).
pllm:training(5300090000581,
              tree_to_toks,
              ['That', would, be, 'a-pretty-cool-fight', '.']).
pllm:training(5300100000582,
              string,
              "I wonder if Luke can put up a fight after all this time.").
pllm:training(5300100000582,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['IN', if],
                      [ 'S',
                        ['NP', ['NNP', 'Luke']],
                        [ 'VP',
                          ['MD', can],
                          [ 'VP',
                            ['VB', put],
                            ['PRT', ['RP', up]],
                            ['NP', ['DT', a], ['NN', fight]],
                            ['PP', ['IN', after], ['NP', ['PDT', all], ['DT', this], ['NN', time]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5300100000582,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['MD', can],
                ['VB', put],
                ['PRT', ['RP', up]],
                ['NP', ['DT', a], ['NN', fight]],
                ['IN', after],
                ['NP', ['PDT', all], ['DT', this], ['NN', time]],
                ['.', '.']
              ]).
pllm:training(5300100000582,
              tree_to_toks,
              ['I', wonder, if, 'Luke', can, put, up, 'a-fight', after, 'all-this-time', '.']).
pllm:training(5400010000584,
              string,
              "Who is the most annoying person in Star Wars?").
pllm:training(5400010000584,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      [ 'NP',
                        ['DT', the],
                        ['ADJP', ['RBS', most], ['JJ', annoying]],
                        ['NN', person]
                      ],
                      ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5400010000584,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['DT', the], ['ADJP', ['RBS', most], ['JJ', annoying]], ['NN', person]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(5400010000584,
              tree_to_toks,
              ['Who', is, 'the-most-annoying-person', in, 'Star-Wars', ?]).
pllm:training(5400020000585, string, "I think it would be Young Anakin").
pllm:training(5400020000585,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['MD', would],
                          ['VP', ['VB', be], ['NP', ['JJ', 'Young'], ['NNP', 'Anakin']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400020000585,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['VB', be],
                ['NP', ['JJ', 'Young'], ['NNP', 'Anakin']],
                ['.', '.']
              ]).
pllm:training(5400020000585, tree_to_toks, ['I', think, it, would, be, 'Young-Anakin', '.']).
pllm:training(5400030000586, string, "Why do you say that?").
pllm:training(5400030000586,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(5400030000586,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(5400030000586, tree_to_toks, ['Why', do, you, say, that, ?]).
pllm:training(5400040000587,
              string,
              "Maybe it's just his acting but he is so over the top with everything").
pllm:training(5400040000587,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBZ', '\'s'],
                      ['ADVP', ['RB', just]],
                      ['NP', ['PRP$', his], ['VBG', acting]]
                    ]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBZ', is],
                      ['ADVP', ['RB', so], ['PP', ['IN', over], ['NP', ['DT', the], ['JJ', top]]]],
                      ['PP', ['IN', with], ['NP', ['NN', everything]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400040000587,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADVP', ['RB', just]],
                ['NP', ['PRP$', his], ['VBG', acting]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                'ADVP',
                ['RB', so],
                ['IN', over],
                ['NP', ['DT', the], ['JJ', top]],
                ['IN', with],
                ['NP', ['NN', everything]],
                ['.', '.']
              ]).
pllm:training(5400040000587,
              tree_to_toks,
              [ 'Maybe',
                it,
                '\'s',
                just,
                'his-acting',
                but,
                he,
                (is),
                'ADVP',
                so,
                over,
                'the-top',
                with,
                everything,
                ('.')
              ]).
pllm:training(5400050000588, string, "Oh, like during his pod race?").
pllm:training(5400050000588,
              text_to_tree,
              [ 'FRAG',
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                [ 'ADVP',
                  ['IN', like],
                  ['PP', ['IN', during], ['NP', ['PRP$', his], ['NN', pod], ['NN', race]]]
                ],
                ['.', ?]
              ]).
pllm:training(5400050000588,
              unphrasify,
              [ mark('FRAG'),
                ['INTJ', ['UH', 'Oh']],
                [',', ','],
                'ADVP',
                ['IN', like],
                ['IN', during],
                ['NP', ['PRP$', his], ['NN', pod], ['NN', race]],
                ['.', ?]
              ]).
pllm:training(5400050000588,
              tree_to_toks,
              ['Oh', ',', 'ADVP', like, during, 'his-pod-race', ?]).
pllm:training(5400060000589, string, "Yeah he seems so fake.").
pllm:training(5400060000589,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['NP', ['PRP', he]],
                  ['VP', ['VBZ', seems], ['ADJP', ['RB', so], ['JJ', fake]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5400060000589,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', he]],
                ['VBZ', seems],
                ['ADJP', ['RB', so], ['JJ', fake]],
                ['.', '.']
              ]).
pllm:training(5400060000589, tree_to_toks, ['Yeah', he, seems, so, fake, '.']).
pllm:training(5400070000590,
              string,
              "He got a little better though, he wasn't always so inexperienced with his acting").
pllm:training(5400070000590,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBD', got],
                    ['ADJP', ['NP', ['DT', a], ['JJ', little]], ['JJR', better]],
                    [ 'SBAR',
                      ['IN', though],
                      [',', ','],
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['RB', 'n\'t'],
                          ['ADVP', ['RB', always]],
                          [ 'ADJP',
                            ['RB', so],
                            ['JJ', inexperienced],
                            ['PP', ['IN', with], ['NP', ['PRP$', his], ['NN', acting]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400070000590,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', got],
                'ADJP',
                ['NP', ['DT', a], ['JJ', little]],
                ['JJR', better],
                mark('SBAR'),
                ['IN', though],
                [',', ','],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', always]],
                'ADJP',
                ['RB', so],
                ['JJ', inexperienced],
                ['IN', with],
                ['NP', ['PRP$', his], ['NN', acting]],
                ['.', '.']
              ]).
pllm:training(5400070000590,
              tree_to_toks,
              [ 'He',
                got,
                'ADJP',
                'a-little',
                better,
                though,
                (','),
                he,
                was,
                'n\'t',
                always,
                'ADJP',
                so,
                inexperienced,
                with,
                'his-acting',
                ('.')
              ]).
pllm:training(5400080000591, string, "I wonder what that actor is up to now!").
pllm:training(5400080000591,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', wonder],
                  [ 'SBAR',
                    ['NP', ['WP', what]],
                    [ 'S',
                      ['NP', ['DT', that], ['NN', actor]],
                      ['VP', ['AUX', is], ['PP', ['IN', up], ['PP', ['TO', to], ['NP', ['RB', now]]]]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5400080000591,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['DT', that], ['NN', actor]],
                ['AUX', is],
                ['IN', up],
                ['TO', to],
                ['NP', ['RB', now]],
                ['.', '.']
              ]).
pllm:training(5400080000591,
              tree_to_toks,
              ['I', wonder, what, 'that-actor', is, up, to, now, '.']).
pllm:training(5400090000592,
              string,
              "He hasn't been in any movies that I know of!").
pllm:training(5400090000592,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'He']],
                  [ 'VP',
                    ['VBZ', has],
                    ['RB', 'n\'t'],
                    [ 'VP',
                      ['VBN', been],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['NP', ['DT', any], ['NNS', movies]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know], ['PP', ['IN', of]]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5400090000592,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', has],
                ['RB', 'n\'t'],
                ['VBN', been],
                ['IN', in],
                ['NP', ['DT', any], ['NNS', movies]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                ['IN', of],
                ['.', '.']
              ]).
pllm:training(5400090000592,
              tree_to_toks,
              ['He', has, 'n\'t', been, in, 'any-movies', that, 'I', know, of, '.']).
pllm:training(5400100000593,
              string,
              "I liked him in Star Wars, he was just a little kid. I should cut him some slack").
pllm:training(5400100000593,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', liked],
                        ['NP', ['PRP', him]],
                        ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', just]],
                      ['NP', ['DT', a], ['JJ', little], ['NN', kid]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['MD', should],
                      ['VP', ['VB', cut], ['NP', ['PRP', him]], ['NP', ['DT', some], ['NN', slack]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5400100000593,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADVP', ['RB', just]],
                ['NP', ['DT', a], ['JJ', little], ['NN', kid]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', should],
                ['VB', cut],
                ['NP', ['PRP', him]],
                ['NP', ['DT', some], ['NN', slack]],
                ['.', '.']
              ]).
pllm:training(5400100000593,
              tree_to_toks,
              [ 'I',
                liked,
                him,
                in,
                'Star-Wars',
                (','),
                he,
                was,
                just,
                'a-little-kid',
                ('.'),
                'I',
                should,
                cut,
                him,
                'some-slack',
                ('.')
              ]).
pllm:training(5500010000595,
              string,
              "Do you like the concept of the Death Star in Star Wars?").
pllm:training(5500010000595,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', like],
                  [ 'NP',
                    ['NP', ['DT', the], ['NN', concept]],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNP', 'Death'], ['NNP', 'Star']],
                        ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(5500010000595,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['DT', the], ['NN', concept]],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Death'], ['NNP', 'Star']],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(5500010000595,
              tree_to_toks,
              ['Do', you, like, 'the-concept', of, 'the-Death-Star', in, 'Star-Wars', ?]).
pllm:training(5500020000596, string, "I do actually.").
pllm:training(5500020000596,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', do], ['ADVP', ['RB', actually]]], ['.', '.']]
              ]).
pllm:training(5500020000596,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['ADVP', ['RB', actually]],
                ['.', '.']
              ]).
pllm:training(5500020000596, tree_to_toks, ['I', do, actually, '.']).
pllm:training(5500030000597,
              string,
              "I was wondering if you thought it was practical like it could be actually done?").
pllm:training(5500030000597,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'VP',
                      ['VBG', wondering],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', you]],
                          [ 'VP',
                            ['VBD', thought],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', it]],
                                [ 'VP',
                                  ['VBD', was],
                                  ['ADJP', ['JJ', practical]],
                                  [ 'SBAR',
                                    ['IN', like],
                                    [ 'S',
                                      ['NP', ['PRP', it]],
                                      [ 'VP',
                                        ['MD', could],
                                        [ 'VP',
                                          ['VB', be],
                                          ['ADVP', ['RB', actually]],
                                          ['VP', ['VBN', done]]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5500030000597,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', was],
                ['VBG', wondering],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', practical]],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', could],
                ['VB', be],
                ['ADVP', ['RB', actually]],
                ['VBN', done],
                ['.', ?]
              ]).
pllm:training(5500030000597,
              tree_to_toks,
              [ 'I',
                was,
                wondering,
                if,
                you,
                thought,
                it,
                was,
                practical,
                like,
                it,
                could,
                be,
                actually,
                done,
                (?)
              ]).
pllm:training(5500040000598,
              string,
              "I think a weapon could be created like that but not in the same way.").
pllm:training(5500040000598,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', a], ['NN', weapon]],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', be],
                            [ 'VP',
                              ['VBN', created],
                              [ 'PP',
                                ['PP', ['IN', like], ['NP', ['DT', that]]],
                                ['CONJP', ['CC', but], ['RB', not]],
                                ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', same], ['NN', way]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5500040000598,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', a], ['NN', weapon]],
                ['MD', could],
                ['VB', be],
                ['VBN', created],
                ['IN', like],
                ['NP', ['DT', that]],
                ['CONJP', ['CC', but], ['RB', not]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', same], ['NN', way]],
                ['.', '.']
              ]).
pllm:training(5500040000598,
              tree_to_toks,
              [ 'I',
                think,
                'a-weapon',
                could,
                be,
                created,
                like,
                that,
                but,
                not,
                in,
                'the-same-way',
                ('.')
              ]).
pllm:training(5500050000599, string, "How so?").
pllm:training(5500050000599,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'How']], ['FRAG', ['ADVP', ['RB', so]]], ['.', ?]]]).
pllm:training(5500050000599,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('FRAG'),
                ['ADVP', ['RB', so]],
                ['.', ?]
              ]).
pllm:training(5500050000599, tree_to_toks, ['How', so, ?]).
pllm:training(5500060000600,
              string,
              "I don't think we could ever create a weapon that is essentially a planet/moon just would require hundreds of years, that's a lot of space to use and build something that large inside of it.").
pllm:training(5500060000600,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['AUX', do],
                  ['RB', not],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', we]],
                        [ 'VP',
                          ['MD', could],
                          ['ADVP', ['RB', ever]],
                          [ 'VP',
                            ['VB', create],
                            [ 'NP',
                              ['NP', ['DT', a], ['NN', weapon]],
                              [ 'SBAR',
                                ['NP', ['WDT', that]],
                                [ 'S',
                                  [ 'VP',
                                    ['AUX', is],
                                    ['ADVP', ['RB', essentially]],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', planet]],
                                      [ 'SBAR',
                                        [ 'S',
                                          ['NP', ['JJ', /], ['NN', moon]],
                                          ['ADVP', ['RB', just]],
                                          [ 'VP',
                                            ['MD', would],
                                            [ 'VP',
                                              ['VB', require],
                                              [ 'NP',
                                                ['NP', ['NNS', hundreds]],
                                                ['PP', ['IN', of], ['NP', ['NNS', years]]],
                                                [',', ','],
                                                [ 'SBAR',
                                                  ['NP', ['WDT', that]],
                                                  [ 'S',
                                                    [ 'VP',
                                                      ['AUX', '\'s'],
                                                      [ 'NP',
                                                        ['NP', ['DT', a], ['NN', lot]],
                                                        [ 'PP',
                                                          ['IN', of],
                                                          ['NP', ['NN', space]]
                                                        ]
                                                      ],
                                                      [ 'S',
                                                        [ 'VP',
                                                          ['TO', to],
                                                          [ 'VP',
                                                            ['VB', use],
                                                            ['CC', and],
                                                            ['VB', build],
                                                            [ 'NP',
                                                              ['NP', ['NN', something]],
                                                              [ 'SBAR',
                                                                ['NP', ['IN', that]],
                                                                [ 'S',
                                                                  [ 'VP',
                                                                    ['JJ', large],
                                                                    [ 'PP',
                                                                      ['IN', inside],
                                                                      ['IN', of],
                                                                      ['NP', ['PRP', it]]
                                                                    ]
                                                                  ]
                                                                ]
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5500060000600,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['MD', could],
                ['ADVP', ['RB', ever]],
                ['VB', create],
                ['NP', ['DT', a], ['NN', weapon]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['AUX', is],
                ['ADVP', ['RB', essentially]],
                ['NP', ['DT', a], ['NN', planet]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['JJ', /], ['NN', moon]],
                ['ADVP', ['RB', just]],
                ['MD', would],
                ['VB', require],
                ['NP', ['NNS', hundreds]],
                ['IN', of],
                ['NP', ['NNS', years]],
                [',', ','],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['NN', space]],
                mark('S'),
                ['TO', to],
                ['VB', use],
                ['CC', and],
                ['VB', build],
                ['NP', ['NN', something]],
                mark('SBAR'),
                ['NP', ['IN', that]],
                mark('S'),
                ['JJ', large],
                ['IN', inside],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(5500060000600,
              tree_to_toks,
              [ 'I',
                do,
                not,
                think,
                we,
                could,
                ever,
                create,
                'a-weapon',
                that,
                (is),
                essentially,
                'a-planet',
                '/-moon',
                just,
                would,
                require,
                hundreds,
                of,
                years,
                (','),
                that,
                '\'s',
                'a-lot',
                of,
                space,
                to,
                use,
                and,
                build,
                something,
                that,
                large,
                inside,
                of,
                it,
                ('.')
              ]).
pllm:training(5500070000601, string, "That's a good point.").
pllm:training(5500070000601,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5500070000601,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(5500070000601, tree_to_toks, ['That', '\'s', 'a-good-point', '.']).
pllm:training(5500080000602, string, "Do you think it was a cool concept?").
pllm:training(5500080000602,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', it]],
                        ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', cool], ['NN', concept]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5500080000602,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', cool], ['NN', concept]],
                ['.', ?]
              ]).
pllm:training(5500080000602,
              tree_to_toks,
              ['Do', you, think, it, was, 'a-cool-concept', ?]).
pllm:training(5500090000603,
              string,
              "I absolutely loved the idea and it was rather shocking.").
pllm:training(5500090000603,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', absolutely]],
                    ['VP', ['VBD', loved], ['NP', ['DT', the], ['NN', idea]]]
                  ],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', it]],
                    ['VP', ['VBD', was], ['ADJP', ['RB', rather], ['JJ', shocking]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5500090000603,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', absolutely]],
                ['VBD', loved],
                ['NP', ['DT', the], ['NN', idea]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['RB', rather], ['JJ', shocking]],
                ['.', '.']
              ]).
pllm:training(5500090000603,
              tree_to_toks,
              ['I', absolutely, loved, 'the-idea', and, it, was, rather, shocking, '.']).
pllm:training(5500100000604, string, "Yeah it was a big twist.").
pllm:training(5500100000604,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['NP', ['PRP', it]],
                  ['VP', ['VBD', was], ['NP', ['DT', a], ['JJ', big], ['NN', twist]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5500100000604,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['DT', a], ['JJ', big], ['NN', twist]],
                ['.', '.']
              ]).
pllm:training(5500100000604, tree_to_toks, ['Yeah', it, was, 'a-big-twist', '.']).
pllm:training(5600010000606,
              string,
              "What do you think of the robots R2-D2 in the old trilogy?").
pllm:training(5600010000606,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'NP',
                        [ 'NP',
                          ['NML', ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', robots]]]],
                          ['NN', 'R2'],
                          ['HYPH', -],
                          ['NN', 'D2']
                        ],
                        ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', old], ['NN', trilogy]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600010000606,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('NML'),
                ['IN', of],
                ['NP', ['DT', the], ['NNS', robots]],
                ['NN', 'R2'],
                ['HYPH', -],
                ['NN', 'D2'],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', old], ['NN', trilogy]],
                ['.', ?]
              ]).
pllm:training(5600010000606,
              tree_to_toks,
              ['What', do, you, think, of, 'the-robots', 'R2', -, 'D2', in, 'the-old-trilogy', ?]).
pllm:training(5600020000607, string, "He was alright.").
pllm:training(5600020000607,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['NP', ['PRP', 'He']], ['VP', ['VBD', was], ['ADJP', ['JJ', alright]]], ['.', '.']]
              ]).
pllm:training(5600020000607,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBD', was],
                ['ADJP', ['JJ', alright]],
                ['.', '.']
              ]).
pllm:training(5600020000607, tree_to_toks, ['He', was, alright, '.']).
pllm:training(5600030000608, string, "Just alright he was a genius robot.").
pllm:training(5600030000608,
              text_to_tree,
              [ 'S',
                ['NP', ['RB', 'Just'], ['NN', alright]],
                ['NP', ['PRP', he]],
                ['VP', ['AUX', was], ['NP', ['DT', a], ['NN', genius], ['NN', robot]]],
                ['.', '.']
              ]).
pllm:training(5600030000608,
              unphrasify,
              [ mark('S'),
                ['NP', ['RB', 'Just'], ['NN', alright]],
                ['NP', ['PRP', he]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', genius], ['NN', robot]],
                ['.', '.']
              ]).
pllm:training(5600030000608,
              tree_to_toks,
              ['Just-alright', he, was, 'a-genius-robot', '.']).
pllm:training(5600040000609,
              string,
              "Yeah but the other one the gold human looking one was more of the brains of the operation.").
pllm:training(5600040000609,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  ['CC', but],
                  [ 'NP',
                    ['NP', ['DT', the], ['JJ', other], ['NN', one]],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['NN', gold]],
                        ['ADJP', ['JJ', human]],
                        ['S', ['VP', ['VBG', looking], ['NP', ['NN', one]]]]
                      ]
                    ]
                  ],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['JJR', more]],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['NP', ['DT', the], ['NNS', brains]],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NN', operation]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600040000609,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                ['CC', but],
                ['NP', ['DT', the], ['JJ', other], ['NN', one]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', gold]],
                ['ADJP', ['JJ', human]],
                mark('S'),
                ['VBG', looking],
                ['NP', ['NN', one]],
                ['VBD', was],
                ['NP', ['JJR', more]],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', brains]],
                ['IN', of],
                ['NP', ['DT', the], ['NN', operation]],
                ['.', '.']
              ]).
pllm:training(5600040000609,
              tree_to_toks,
              [ 'Yeah',
                but,
                'the-other-one',
                'the-gold',
                human,
                looking,
                one,
                was,
                more,
                of,
                'the-brains',
                of,
                'the-operation',
                ('.')
              ]).
pllm:training(5600050000610,
              string,
              "R2-D2 didn't have voice capatability but he was smart.").
pllm:training(5600050000610,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['NN', 'R2'], ['HYPH', -], ['NN', 'D2']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      ['VP', ['VB', have], ['NP', ['NN', voice], ['NN', capatability]]]
                    ]
                  ],
                  ['CC', but],
                  ['S', ['NP', ['PRP', he]], ['VP', ['VBD', was], ['ADJP', ['JJ', smart]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5600050000610,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NN', 'R2'], ['HYPH', -], ['NN', 'D2']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', have],
                ['NP', ['NN', voice], ['NN', capatability]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['JJ', smart]],
                ['.', '.']
              ]).
pllm:training(5600050000610,
              tree_to_toks,
              ['R2---D2', did, 'n\'t', have, 'voice-capatability', but, he, was, smart, '.']).
pllm:training(5600060000611,
              string,
              "Yes I suppose he was as smart as you could expect.").
pllm:training(5600060000611,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', suppose],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', he]],
                        [ 'VP',
                          ['VBD', was],
                          ['ADJP', ['IN', as], ['JJ', smart]],
                          [ 'SBAR',
                            ['IN', as],
                            [ 'S',
                              ['NP', ['PRP', you]],
                              ['VP', ['MD', could], ['VP', ['VB', expect]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600060000611,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VB', suppose],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', was],
                ['ADJP', ['IN', as], ['JJ', smart]],
                mark('SBAR'),
                ['IN', as],
                mark('S'),
                ['NP', ['PRP', you]],
                ['MD', could],
                ['VB', expect],
                ['.', '.']
              ]).
pllm:training(5600060000611,
              tree_to_toks,
              ['Yes', 'I', suppose, he, was, as, smart, as, you, could, expect, '.']).
pllm:training(5600070000612,
              string,
              "Do you think they were created in the same place or factory?").
pllm:training(5600070000612,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', were],
                          [ 'VP',
                            ['VBN', created],
                            [ 'PP',
                              ['IN', in],
                              [ 'NP',
                                ['NP', ['DT', the], ['JJ', same], ['NN', place]],
                                ['CC', or],
                                ['NP', ['NN', factory]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600070000612,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                ['VBN', created],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', same], ['NN', place]],
                ['CC', or],
                ['NP', ['NN', factory]],
                ['.', ?]
              ]).
pllm:training(5600070000612,
              tree_to_toks,
              ['Do', you, think, they, were, created, in, 'the-same-place', or, factory, ?]).
pllm:training(5600080000613,
              string,
              "I doubt it they're too totally different models of robot.").
pllm:training(5600080000613,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', doubt],
                    ['NP', ['PRP', it]],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VB', '\'re'],
                          [ 'NP',
                            [ 'NP',
                              ['ADJP', ['RB', too], ['RB', totally], ['JJ', different]],
                              ['NNS', models]
                            ],
                            ['PP', ['IN', of], ['NP', ['NN', robot]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5600080000613,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', doubt],
                ['NP', ['PRP', it]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['NP', ['ADJP', ['RB', too], ['RB', totally], ['JJ', different]], ['NNS', models]],
                ['IN', of],
                ['NP', ['NN', robot]],
                ['.', '.']
              ]).
pllm:training(5600080000613,
              tree_to_toks,
              ['I', doubt, it, they, '\'re', 'too-totally-different-models', of, robot, '.']).
pllm:training(5600090000614,
              string,
              "That's a good point but still think it's possible?").
pllm:training(5600090000614,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]],
                    ['CC', but],
                    ['ADVP', ['RB', still]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', possible]]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5600090000614,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['CC', but],
                ['ADVP', ['RB', still]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', possible]],
                ['.', ?]
              ]).
pllm:training(5600090000614,
              tree_to_toks,
              ['That', '\'s', 'a-good-point', but, still, think, it, '\'s', possible, ?]).
pllm:training(5600100000615, string, "Yeah anythings possible just unlikely.").
pllm:training(5600100000615,
              text_to_tree,
              [ 'S',
                ['NP', ['UH', 'Yeah']],
                [ 'VP',
                  ['VBZ', anythings],
                  ['ADJP', ['JJ', possible]],
                  ['ADVP', ['RB', just], ['RB', unlikely]]
                ],
                ['.', '.']
              ]).
pllm:training(5600100000615,
              unphrasify,
              [ mark('S'),
                ['NP', ['UH', 'Yeah']],
                ['VBZ', anythings],
                ['ADJP', ['JJ', possible]],
                ['ADVP', ['RB', just], ['RB', unlikely]],
                ['.', '.']
              ]).
pllm:training(5600100000615,
              tree_to_toks,
              ['Yeah', anythings, possible, just, unlikely, '.']).
pllm:training(5700010000617,
              string,
              "What do you think of the Star Wars prequels.").
pllm:training(5700010000617,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'NP',
                          ['DT', the],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NNS', prequels]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700010000617,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NNS', prequels]],
                ['.', '.']
              ]).
pllm:training(5700010000617,
              tree_to_toks,
              ['What', do, you, think, of, 'the-Star-Wars-prequels', '.']).
pllm:training(5700020000618,
              string,
              "Episodes one through Three, or the chronological sequels?").
pllm:training(5700020000618,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NNS', 'Episodes']],
                  [ 'NP',
                    ['NP', ['NP', ['CD', one]], ['PP', ['IN', through], ['NP', ['CD', 'Three']]]],
                    [',', ','],
                    ['CC', or],
                    ['NP', ['DT', the], ['JJ', chronological], ['NNS', sequels]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5700020000618,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['NNS', 'Episodes']],
                ['NP', ['CD', one]],
                ['IN', through],
                ['NP', ['CD', 'Three']],
                [',', ','],
                ['CC', or],
                ['NP', ['DT', the], ['JJ', chronological], ['NNS', sequels]],
                ['.', ?]
              ]).
pllm:training(5700020000618,
              tree_to_toks,
              ['Episodes', one, through, 'Three', ',', or, 'the-chronological-sequels', ?]).
pllm:training(5700030000619,
              string,
              "A bit confusing, I know, but Episode one through Three.").
pllm:training(5700030000619,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['ADJP', ['NP', ['DT', 'A'], ['NN', bit]], ['JJ', confusing]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VP', ['VB', know]],
                    [',', ','],
                    ['CC', but],
                    [ 'VP',
                      ['NP', ['NNP', 'Episode'], ['CD', one]],
                      ['PP', ['IN', through], ['NP', ['CD', 'Three']]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700030000619,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                'ADJP',
                ['NP', ['DT', 'A'], ['NN', bit]],
                ['JJ', confusing],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                ['CC', but],
                ['NP', ['NNP', 'Episode'], ['CD', one]],
                ['IN', through],
                ['NP', ['CD', 'Three']],
                ['.', '.']
              ]).
pllm:training(5700030000619,
              tree_to_toks,
              [ 'ADJP',
                'A-bit',
                confusing,
                (','),
                'I',
                know,
                (','),
                but,
                'Episode-one',
                through,
                'Three',
                ('.')
              ]).
pllm:training(5700040000620,
              string,
              "I think they do not get the credit they deserve, I liked them.").
pllm:training(5700040000620,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VB', do],
                            ['RB', not],
                            [ 'VP',
                              ['VB', get],
                              [ 'NP',
                                ['NP', ['DT', the], ['NN', credit]],
                                ['SBAR', ['S', ['NP', ['PRP', they]], ['VP', ['VB', deserve]]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['PRP', them]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5700040000620,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', do],
                ['RB', not],
                ['VB', get],
                ['NP', ['DT', the], ['NN', credit]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', deserve],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(5700040000620,
              tree_to_toks,
              [ 'I',
                think,
                they,
                do,
                not,
                get,
                'the-credit',
                they,
                deserve,
                (','),
                'I',
                liked,
                them,
                ('.')
              ]).
pllm:training(5700050000621, string, "I did too, I thought the plot played well.").
pllm:training(5700050000621,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', did], ['ADVP', ['RB', too]]]],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', the], ['NN', plot]],
                        ['VP', ['VBD', played], ['ADVP', ['RB', well]]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700050000621,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['ADVP', ['RB', too]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', the], ['NN', plot]],
                ['VBD', played],
                ['ADVP', ['RB', well]],
                ['.', '.']
              ]).
pllm:training(5700050000621,
              tree_to_toks,
              ['I', did, too, ',', 'I', thought, 'the-plot', played, well, '.']).
pllm:training(5700060000622,
              string,
              "It did. It showed a back story into the rise of Darth Vader.").
pllm:training(5700060000622,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'It']], ['VP', ['VBD', did]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', showed],
                      ['NP', ['DT', a], ['ADVP', ['RB', back]], ['NN', story]],
                      [ 'PP',
                        ['IN', into],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', rise]],
                          ['PP', ['IN', of], ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5700060000622,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', did],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', showed],
                ['NP', ['DT', a], ['ADVP', ['RB', back]], ['NN', story]],
                ['IN', into],
                ['NP', ['DT', the], ['NN', rise]],
                ['IN', of],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['.', '.']
              ]).
pllm:training(5700060000622,
              tree_to_toks,
              ['It', did, '.', 'It', showed, 'a-back-story', into, 'the-rise', of, 'Darth-Vader', '.']).
pllm:training(5700070000623,
              string,
              "From a lowly Anakin, on the sand planet to all and powerful.").
pllm:training(5700070000623,
              text_to_tree,
              [ 'CORENLP',
                [ 'PP',
                  [ 'PP',
                    ['IN', 'From'],
                    [ 'NP',
                      ['NP', ['DT', a], ['JJ', lowly], ['NNP', 'Anakin']],
                      [',', ','],
                      ['PP', ['IN', on], ['NP', ['DT', the], ['NN', sand], ['NN', planet]]]
                    ]
                  ],
                  ['PP', ['IN', to], ['NP', ['NP', ['DT', all]], ['CC', and], ['NP', ['JJ', powerful]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(5700070000623,
              unphrasify,
              [ mark('CORENLP'),
                ['IN', 'From'],
                ['NP', ['DT', a], ['JJ', lowly], ['NNP', 'Anakin']],
                [',', ','],
                ['IN', on],
                ['NP', ['DT', the], ['NN', sand], ['NN', planet]],
                ['IN', to],
                ['NP', ['DT', all]],
                ['CC', and],
                ['NP', ['JJ', powerful]],
                ['.', '.']
              ]).
pllm:training(5700070000623,
              tree_to_toks,
              ['From', 'a-lowly-Anakin', ',', on, 'the-sand-planet', to, all, and, powerful, '.']).
pllm:training(5700080000624,
              string,
              "Yes. It showed both his rise and the start of his fall, very complex.").
pllm:training(5700080000624,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBD', showed],
                    [ 'NP',
                      ['PDT', both],
                      ['NP', ['PRP$', his], ['NN', rise]],
                      ['CC', and],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', start]],
                        ['PP', ['IN', of], ['NP', ['PRP$', his], ['NN', fall]]]
                      ]
                    ],
                    [',', ','],
                    ['ADJP', ['RB', very], ['JJ', complex]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5700080000624,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', showed],
                ['PDT', both],
                ['NP', ['PRP$', his], ['NN', rise]],
                ['CC', and],
                ['NP', ['DT', the], ['NN', start]],
                ['IN', of],
                ['NP', ['PRP$', his], ['NN', fall]],
                [',', ','],
                ['ADJP', ['RB', very], ['JJ', complex]],
                ['.', '.']
              ]).
pllm:training(5700080000624,
              tree_to_toks,
              [ 'Yes',
                ('.'),
                'It',
                showed,
                both,
                'his-rise',
                and,
                'the-start',
                of,
                'his-fall',
                (','),
                very,
                complex,
                ('.')
              ]).
pllm:training(5700090000625, string, "You did not think it was contrived at all?").
pllm:training(5700090000625,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', not],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'NP',
                              ['NP', ['JJ', contrived]],
                              ['PP', ['IN', at], ['NP', ['DT', all]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5700090000625,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VBD', did],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['NP', ['JJ', contrived]],
                ['IN', at],
                ['NP', ['DT', all]],
                ['.', ?]
              ]).
pllm:training(5700090000625,
              tree_to_toks,
              ['You', did, not, think, it, was, contrived, at, all, ?]).
pllm:training(5700100000626,
              string,
              "No, it was mean to be what it was. A story into the past, of the movies at least.").
pllm:training(5700100000626,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'No']],
                    [',', ','],
                    ['NP', ['PRP', it]],
                    [ 'VP',
                      ['VBD', was],
                      [ 'ADJP',
                        ['JJ', mean],
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', be],
                              [ 'SBAR',
                                ['NP', ['WP', what]],
                                ['S', ['NP', ['PRP', it]], ['VP', ['VBD', was]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'NP',
                    ['NP', ['DT', 'A'], ['NN', story]],
                    ['PP', ['IN', into], ['NP', ['DT', the], ['NN', past]]],
                    [',', ','],
                    [ 'PP',
                      ['IN', of],
                      [ 'NP',
                        ['NP', ['DT', the], ['NNS', movies]],
                        ['ADVP', ['IN', at], ['RBS', least]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5700100000626,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'No']],
                [',', ','],
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', mean],
                mark('S'),
                ['TO', to],
                ['VB', be],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['.', '.'],
                mark('CORENLP'),
                ['NP', ['DT', 'A'], ['NN', story]],
                ['IN', into],
                ['NP', ['DT', the], ['NN', past]],
                [',', ','],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', movies]],
                ['ADVP', ['IN', at], ['RBS', least]],
                ['.', '.']
              ]).
pllm:training(5700100000626,
              tree_to_toks,
              [ 'No',
                (','),
                it,
                was,
                'ADJP',
                mean,
                to,
                be,
                what,
                it,
                was,
                ('.'),
                'A-story',
                into,
                'the-past',
                (','),
                of,
                'the-movies',
                at,
                least,
                ('.')
              ]).
pllm:training(5800010000628, string, "Have you seen the new Star Wars movies?").
pllm:training(5800010000628,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Have'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VBN', seen],
                    [ 'NP',
                      ['DT', the],
                      ['JJ', new],
                      ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                      ['NNS', movies]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800010000628,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Have'],
                ['NP', ['PRP', you]],
                ['VBN', seen],
                [ 'NP',
                  ['DT', the],
                  ['JJ', new],
                  ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                  ['NNS', movies]
                ],
                ['.', ?]
              ]).
pllm:training(5800010000628,
              tree_to_toks,
              ['Have', you, seen, 'the-new-Star-Wars-movies', ?]).
pllm:training(5800020000629, string, "You mean The Force Awakens and Rogue One?").
pllm:training(5800020000629,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'You']],
                  [ 'VP',
                    ['VB', mean],
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                      ['CC', and],
                      ['NP', ['NNP', 'Rogue'], ['CD', 'One']]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800020000629,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', mean],
                ['NP', ['DT', 'The'], ['NNP', 'Force'], ['NNP', 'Awakens']],
                ['CC', and],
                ['NP', ['NNP', 'Rogue'], ['CD', 'One']],
                ['.', ?]
              ]).
pllm:training(5800020000629,
              tree_to_toks,
              ['You', mean, 'The-Force-Awakens', and, 'Rogue-One', ?]).
pllm:training(5800030000630, string, "Yes I thought they were great, did you?").
pllm:training(5800030000630,
              text_to_tree,
              [ 'S',
                [ 'S',
                  ['INTJ', ['UH', 'Yes']],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', thought],
                    [ 'SBAR',
                      ['S', ['NP', ['PRP', they]], ['VP', ['AUX', were], ['ADJP', ['JJ', great]]]]
                    ]
                  ]
                ],
                [',', ','],
                ['VP', ['AUX', did], ['NP', ['PRP', you]]],
                ['.', ?]
              ]).
pllm:training(5800030000630,
              unphrasify,
              [ mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yes']],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['AUX', were],
                ['ADJP', ['JJ', great]],
                [',', ','],
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['.', ?]
              ]).
pllm:training(5800030000630,
              tree_to_toks,
              ['Yes', 'I', thought, they, were, great, ',', did, you, ?]).
pllm:training(5800040000631,
              string,
              "I did but truthfully I saw those before I watched the first six episodes. I had to go back and watch them.").
pllm:training(5800040000631,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VBD', did]]],
                    ['CC', but],
                    [ 'S',
                      ['ADVP', ['RB', truthfully]],
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', saw],
                        ['NP', ['DT', those]],
                        [ 'SBAR',
                          ['IN', before],
                          [ 'S',
                            ['NP', ['PRP', 'I']],
                            [ 'VP',
                              ['VBD', watched],
                              ['NP', ['DT', the], ['JJ', first], ['CD', six], ['NNS', episodes]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VP', ['VB', go], ['ADVP', ['RB', back]]],
                            ['CC', and],
                            ['VP', ['VB', watch], ['NP', ['PRP', them]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5800040000631,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['CC', but],
                mark('S'),
                ['ADVP', ['RB', truthfully]],
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['DT', those]],
                mark('SBAR'),
                ['IN', before],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', watched],
                ['NP', ['DT', the], ['JJ', first], ['CD', six], ['NNS', episodes]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', go],
                ['ADVP', ['RB', back]],
                ['CC', and],
                ['VB', watch],
                ['NP', ['PRP', them]],
                ['.', '.']
              ]).
pllm:training(5800040000631,
              tree_to_toks,
              [ 'I',
                did,
                but,
                truthfully,
                'I',
                saw,
                those,
                before,
                'I',
                watched,
                'the-first-six-episodes',
                ('.'),
                'I',
                had,
                to,
                go,
                back,
                and,
                watch,
                them,
                ('.')
              ]).
pllm:training(5800050000632,
              string,
              "What's your favorite of the original episodes?").
pllm:training(5800050000632,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['NN', favorite]],
                      ['PP', ['IN', of], ['NP', ['DT', the], ['JJ', original], ['NNS', episodes]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5800050000632,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['NN', favorite]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', original], ['NNS', episodes]],
                ['.', ?]
              ]).
pllm:training(5800050000632,
              tree_to_toks,
              ['What', '\'s', 'your-favorite', of, 'the-original-episodes', ?]).
pllm:training(5800060000633, string, "I'd have to say A New Hope.").
pllm:training(5800060000633,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', '\'d'],
                    [ 'VP',
                      ['VB', have],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          ['VP', ['VB', say], ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5800060000633,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', '\'d'],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', say],
                ['NP', ['DT', 'A'], ['NNP', 'New'], ['NNP', 'Hope']],
                ['.', '.']
              ]).
pllm:training(5800060000633, tree_to_toks, ['I', '\'d', have, to, say, 'A-New-Hope', '.']).
pllm:training(5800070000634,
              string,
              "That's mine too. You know, I didn't even know Darth Vader was a cyborg.").
pllm:training(5800070000634,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['PRP', mine]], ['ADVP', ['RB', too]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'You']], ['VP', ['VB', know]]],
                    [',', ','],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      ['ADVP', ['RB', even]],
                      [ 'VP',
                        ['VB', know],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                            ['VP', ['VBD', was], ['NP', ['DT', a], ['NN', cyborg]]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(5800070000634,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['PRP', mine]],
                ['ADVP', ['RB', too]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', know],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', even]],
                ['VB', know],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', cyborg]],
                ['.', '.']
              ]).
pllm:training(5800070000634,
              tree_to_toks,
              [ 'That',
                '\'s',
                mine,
                too,
                ('.'),
                'You',
                know,
                (','),
                'I',
                did,
                'n\'t',
                even,
                know,
                'Darth-Vader',
                was,
                'a-cyborg',
                ('.')
              ]).
pllm:training(5800080000635,
              string,
              "Me neither! I just learned that. He's my favorite character though.").
pllm:training(5800080000635,
              text_to_tree,
              [ 'SEQBAR',
                ['NP', ['NP', ['PRP', 'Me']], ['NP', ['DT', neither]], ['.', '.']],
                [ 'SEQBAR',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBD', learned], ['NP', ['DT', that]]],
                    ['.', '.']
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'He']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                        ['ADVP', ['RB', though]]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(5800080000635,
              unphrasify,
              [ mark('SEQBAR'),
                ['NP', ['PRP', 'Me']],
                ['NP', ['DT', neither]],
                ['.', '.'],
                mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VBD', learned],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'He']],
                ['VBZ', '\'s'],
                ['NP', ['PRP$', my], ['JJ', favorite], ['NN', character]],
                ['ADVP', ['RB', though]],
                ['.', '.']
              ]).
pllm:training(5800080000635,
              tree_to_toks,
              [ 'Me',
                neither,
                ('.'),
                'I',
                just,
                learned,
                that,
                ('.'),
                'He',
                '\'s',
                'my-favorite-character',
                though,
                ('.')
              ]).
pllm:training(5800090000636, string, "My favorite is Princess Leia.").
pllm:training(5800090000636,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP$', 'My'], ['NN', favorite]],
                  ['VP', ['VBZ', is], ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']]],
                  ['.', '.']
                ]
              ]).
pllm:training(5800090000636,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'My'], ['NN', favorite]],
                ['VBZ', is],
                ['NP', ['NNP', 'Princess'], ['NNP', 'Leia']],
                ['.', '.']
              ]).
pllm:training(5800090000636, tree_to_toks, ['My-favorite', is, 'Princess-Leia', '.']).
pllm:training(5800100000637,
              string,
              "Yes it was a shock to find out she was Darth Vader's daughter.").
pllm:training(5800100000637,
              text_to_tree,
              [ 'S',
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['PRP', it]],
                [ 'VP',
                  ['AUX', was],
                  [ 'NP',
                    ['NP', ['DT', a], ['NN', shock]],
                    [ 'SBAR',
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', find],
                            ['PRT', ['RP', out]],
                            [ 'SBAR',
                              [ 'S',
                                ['NP', ['PRP', she]],
                                [ 'VP',
                                  ['AUX', was],
                                  [ 'NP',
                                    ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['POS', '\'s']],
                                    ['NN', daughter]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(5800100000637,
              unphrasify,
              [ mark('S'),
                ['ADVP', ['RB', 'Yes']],
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', shock]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', find],
                ['PRT', ['RP', out]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', she]],
                ['AUX', was],
                ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['POS', '\'s']],
                ['NN', daughter],
                ['.', '.']
              ]).
pllm:training(5800100000637,
              tree_to_toks,
              [ 'Yes',
                it,
                was,
                'a-shock',
                to,
                find,
                out,
                she,
                was,
                'Darth-Vader-\'s',
                daughter,
                ('.')
              ]).
pllm:training(5900010000639,
              string,
              "Ok, so I can probably guess, but what is your least favorite Star Wars movie?").
pllm:training(5900010000639,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Ok']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', can],
                  ['ADVP', ['RB', probably]],
                  [ 'VP',
                    ['VB', guess],
                    [',', ','],
                    [ 'SBAR',
                      ['CC', but],
                      ['NP', ['WP', what]],
                      [ 'S',
                        [ 'VP',
                          ['AUX', is],
                          [ 'NP',
                            ['PRP$', your],
                            ['ADJP', ['RBS', least], ['JJ', favorite]],
                            ['NNP', 'Star'],
                            ['NNP', 'Wars'],
                            ['NN', movie]
                          ]
                        ]
                      ],
                      ['.', ?]
                    ]
                  ]
                ]
              ]).
pllm:training(5900010000639,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Ok']],
                [',', ','],
                ['ADVP', ['RB', so]],
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['ADVP', ['RB', probably]],
                ['VB', guess],
                [',', ','],
                mark('SBAR'),
                ['CC', but],
                ['NP', ['WP', what]],
                mark('S'),
                ['AUX', is],
                [ 'NP',
                  ['PRP$', your],
                  ['ADJP', ['RBS', least], ['JJ', favorite]],
                  ['NNP', 'Star'],
                  ['NNP', 'Wars'],
                  ['NN', movie]
                ],
                ['.', ?]
              ]).
pllm:training(5900010000639,
              tree_to_toks,
              [ 'Ok',
                (','),
                so,
                'I',
                can,
                probably,
                guess,
                (','),
                but,
                what,
                (is),
                'your-least-favorite-Star-Wars-movie',
                (?)
              ]).
pllm:training(5900020000640, string, "Definitely the Phantom Menace.").
pllm:training(5900020000640,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['ADVP', ['RB', 'Definitely']],
                  ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                  ['.', '.']
                ]
              ]).
pllm:training(5900020000640,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Definitely']],
                ['NP', ['DT', the], ['NNP', 'Phantom'], ['NNP', 'Menace']],
                ['.', '.']
              ]).
pllm:training(5900020000640, tree_to_toks, ['Definitely', 'the-Phantom-Menace', '.']).
pllm:training(5900030000641, string, "Because of Jar Jar?").
pllm:training(5900030000641,
              text_to_tree,
              [ 'FRAG',
                ['ADVP', ['IN', 'Because'], ['PP', ['IN', of], ['NP', ['NN', 'Jar'], ['NN', 'Jar']]]],
                ['.', ?]
              ]).
pllm:training(5900030000641,
              unphrasify,
              [ mark('FRAG'),
                'ADVP',
                ['IN', 'Because'],
                ['IN', of],
                ['NP', ['NN', 'Jar'], ['NN', 'Jar']],
                ['.', ?]
              ]).
pllm:training(5900030000641, tree_to_toks, ['ADVP', 'Because', of, '', ?]).
pllm:training(5900040000642,
              string,
              "Yeah, he's awful, but I thought the whole movie was a let-down after waiting so long?").
pllm:training(5900040000642,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['INTJ', ['UH', 'Yeah']],
                    [',', ','],
                    ['NP', ['PRP', he]],
                    ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', awful]]]
                  ],
                  [',', ','],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'NP',
                        ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                        [ 'SBAR',
                          [ 'S',
                            [ 'VP',
                              ['VBD', was],
                              [ 'NP',
                                ['DT', a],
                                ['S', ['VP', ['VB', let], ['HYPH', -], ['PRT', ['RP', down]]]]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'PP',
                        ['IN', after],
                        ['S', ['VP', ['VBG', waiting], ['ADVP', ['RB', so], ['RB', long]]]]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(5900040000642,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', awful]],
                [',', ','],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                ['NP', ['DT', the], ['JJ', whole], ['NN', movie]],
                mark('SBAR'),
                mark('S'),
                ['VBD', was],
                ['NP', ['DT', a], ['S', ['VP', ['VB', let], ['HYPH', -], ['PRT', ['RP', down]]]]],
                ['IN', after],
                mark('S'),
                ['VBG', waiting],
                ['ADVP', ['RB', so], ['RB', long]],
                ['.', ?]
              ]).
pllm:training(5900040000642,
              tree_to_toks,
              [ 'Yeah',
                (','),
                he,
                '\'s',
                awful,
                (','),
                but,
                'I',
                thought,
                'the-whole-movie',
                was,
                'a-let---down',
                after,
                waiting,
                so,
                long,
                (?)
              ]).
pllm:training(5900050000643, string, "Why?").
pllm:training(5900050000643,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['.', ?]]]).
pllm:training(5900050000643,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), ['WHADVP', ['WRB', 'Why']], ['.', ?]]).
pllm:training(5900050000643, tree_to_toks, ['Why', ?]).
pllm:training(5900060000644,
              string,
              "It's kinda dull, with the race and little Anakin is annoying. The only good thing is the Darth Maul fight.").
pllm:training(5900060000644,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'It']],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['RB', kinda], ['JJ', dull]],
                        [',', ','],
                        ['PP', ['IN', with], ['NP', ['DT', the], ['NN', race]]]
                      ]
                    ],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['JJ', little], ['NNP', 'Anakin']],
                      ['VP', ['VBZ', is], ['ADJP', ['JJ', annoying]]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', only], ['JJ', good], ['NN', thing]],
                  [ 'VP',
                    ['AUX', is],
                    [ 'S',
                      ['NP', ['DT', the], ['NNP', 'Darth']],
                      ['VP', ['VB', 'Maul'], ['NP', ['NN', fight]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900060000644,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', kinda], ['JJ', dull]],
                [',', ','],
                ['IN', with],
                ['NP', ['DT', the], ['NN', race]],
                ['CC', and],
                mark('S'),
                ['NP', ['JJ', little], ['NNP', 'Anakin']],
                ['VBZ', is],
                ['ADJP', ['JJ', annoying]],
                ['.', '.'],
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', only], ['JJ', good], ['NN', thing]],
                ['AUX', is],
                mark('S'),
                ['NP', ['DT', the], ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['NP', ['NN', fight]],
                ['.', '.']
              ]).
pllm:training(5900060000644,
              tree_to_toks,
              [ 'It',
                '\'s',
                kinda,
                dull,
                (','),
                with,
                'the-race',
                and,
                'little-Anakin',
                (is),
                annoying,
                ('.'),
                'The-only-good-thing',
                (is),
                'the-Darth',
                'Maul',
                fight,
                ('.')
              ]).
pllm:training(5900070000645,
              string,
              "I have to agree-- I thought it was creepy there was a budding romance between Amidala and Anakin.").
pllm:training(5900070000645,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VB', have], ['S', ['VP', ['TO', to], ['VP', ['VB', agree]]]]]
                  ],
                  [:, -],
                  [ 'S',
                    ['LST', [:, -]],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VBD', thought],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['JJ', creepy],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['EX', there]],
                                  [ 'VP',
                                    ['VBD', was],
                                    [ 'NP',
                                      ['NP', ['DT', a], ['NN', budding], ['NN', romance]],
                                      [ 'PP',
                                        ['IN', between],
                                        [ 'NP',
                                          ['NNP', 'Amidala'],
                                          ['CC', and],
                                          ['NNP', 'Anakin']
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900070000645,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', agree],
                [:, -],
                mark('S'),
                ['LST', [:, -]],
                ['NP', ['PRP', 'I']],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', creepy],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', budding], ['NN', romance]],
                ['IN', between],
                ['NP', ['NNP', 'Amidala'], ['CC', and], ['NNP', 'Anakin']],
                ['.', '.']
              ]).
pllm:training(5900070000645,
              tree_to_toks,
              [ 'I',
                have,
                to,
                agree,
                (-),
                (-),
                'I',
                thought,
                it,
                was,
                'ADJP',
                creepy,
                there,
                was,
                'a-budding-romance',
                between,
                'Amidala-and-Anakin',
                ('.')
              ]).
pllm:training(5900080000646,
              string,
              "Yeah, that kid was like 8, and she had to be at least 16 or so.").
pllm:training(5900080000646,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  [ 'S',
                    ['NP', ['DT', that], ['NN', kid]],
                    ['VP', ['VBD', was], ['PP', ['IN', like], ['NP', ['CD', '8']]]]
                  ],
                  [',', ','],
                  ['CC', and],
                  [ 'S',
                    ['NP', ['PRP', she]],
                    [ 'VP',
                      ['VBD', had],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', be],
                            [ 'NP',
                              ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '16']]],
                              ['NP', ['QP', ['CC', or], ['RB', so]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900080000646,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                mark('S'),
                ['NP', ['DT', that], ['NN', kid]],
                ['VBD', was],
                ['IN', like],
                ['NP', ['CD', '8']],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', she]],
                ['VBD', had],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['QP', ['ADVP', ['IN', at], ['RBS', least]], ['CD', '16']]],
                ['NP', ['QP', ['CC', or], ['RB', so]]],
                ['.', '.']
              ]).
pllm:training(5900080000646,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'that-kid',
                was,
                like,
                '8',
                (','),
                and,
                she,
                had,
                to,
                be,
                'at-least-16',
                'or-so',
                ('.')
              ]).
pllm:training(5900090000647,
              string,
              "All of the prequels under-delivered in my opinion.").
pllm:training(5900090000647,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['NP', ['DT', 'All']], ['PP', ['IN', of], ['NP', ['DT', the], ['NNS', prequels]]]],
                  [ 'VP',
                    ['ADVP', ['IN', under]],
                    ['HYPH', -],
                    ['VBN', delivered],
                    ['PP', ['IN', in], ['NP', ['PRP$', my], ['NN', opinion]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900090000647,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['DT', 'All']],
                ['IN', of],
                ['NP', ['DT', the], ['NNS', prequels]],
                ['ADVP', ['IN', under]],
                ['HYPH', -],
                ['VBN', delivered],
                ['IN', in],
                ['NP', ['PRP$', my], ['NN', opinion]],
                ['.', '.']
              ]).
pllm:training(5900090000647,
              tree_to_toks,
              ['All', of, 'the-prequels', under, -, delivered, in, 'my-opinion', '.']).
pllm:training(5900100000648,
              string,
              "Yeah, the series didn't really get good again until they took control from George Lucas.").
pllm:training(5900100000648,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Yeah']],
                  [',', ','],
                  ['NP', ['DT', the], ['NN', series]],
                  [ 'VP',
                    ['VBD', did],
                    ['RB', 'n\'t'],
                    ['ADVP', ['RB', really]],
                    [ 'VP',
                      ['VB', get],
                      ['ADJP', ['JJ', good]],
                      ['ADVP', ['RB', again]],
                      [ 'SBAR',
                        ['IN', until],
                        [ 'S',
                          ['NP', ['PRP', they]],
                          [ 'VP',
                            ['VBD', took],
                            ['NP', ['NN', control]],
                            ['PP', ['IN', from], ['NP', ['NNP', 'George'], ['NNP', 'Lucas']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(5900100000648,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['DT', the], ['NN', series]],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', really]],
                ['VB', get],
                ['ADJP', ['JJ', good]],
                ['ADVP', ['RB', again]],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', took],
                ['NP', ['NN', control]],
                ['IN', from],
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['.', '.']
              ]).
pllm:training(5900100000648,
              tree_to_toks,
              [ 'Yeah',
                (','),
                'the-series',
                did,
                'n\'t',
                really,
                get,
                good,
                again,
                until,
                they,
                took,
                control,
                from,
                'George-Lucas',
                ('.')
              ]).
pllm:training(6000010000650,
              string,
              "Who is your favorite villain from Star Wars?").
pllm:training(6000010000650,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'Who']],
                [ 'S',
                  [ 'VP',
                    ['AUX', is],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', villain]],
                      ['PP', ['IN', from], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000010000650,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'Who']],
                mark('S'),
                ['AUX', is],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', villain]],
                ['IN', from],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(6000010000650,
              tree_to_toks,
              ['Who', is, 'your-favorite-villain', from, 'Star-Wars', ?]).
pllm:training(6000020000651, string, "Darth Vader").
pllm:training(6000020000651,
              text_to_tree,
              ['CORENLP', ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['.', '.']]]).
pllm:training(6000020000651,
              unphrasify,
              [mark('CORENLP'), ['NP', ['NNP', 'Darth'], ['NNP', 'Vader'], ['.', '.']]]).
pllm:training(6000020000651, tree_to_toks, ['Darth-Vader-.']).
pllm:training(6000030000652, string, "What do you think of Darth Maul?").
pllm:training(6000030000652,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    ['PP', ['IN', of], ['NP', ['NNP', 'Darth']]],
                    ['S', ['VP', ['VB', 'Maul']]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000030000652,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                ['NP', ['NNP', 'Darth']],
                mark('S'),
                ['VB', 'Maul'],
                ['.', ?]
              ]).
pllm:training(6000030000652, tree_to_toks, ['What', do, you, think, of, 'Darth', 'Maul', ?]).
pllm:training(6000040000653, string, "I liked him a lot.").
pllm:training(6000040000653,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', liked], ['NP', ['PRP', him]], ['NP-TMP', ['DT', a], ['NN', lot]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6000040000653,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', him]],
                ['NP-TMP', ['DT', a], ['NN', lot]],
                ['.', '.']
              ]).
pllm:training(6000040000653, tree_to_toks, ['I', liked, him, a, lot, '.']).
pllm:training(6000050000654, string, "I wish they put him in more movies").
pllm:training(6000050000654,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wish],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', put],
                          ['NP', ['PRP', him]],
                          ['PP', ['IN', in], ['NP', ['JJR', more], ['NNS', movies]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6000050000654,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wish],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', put],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['JJR', more], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6000050000654,
              tree_to_toks,
              ['I', wish, they, put, him, in, 'more-movies', '.']).
pllm:training(6000060000655,
              string,
              "Yes. It was a mistake to kill him in the first one.").
pllm:training(6000060000655,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['AUX', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', mistake]],
                      [ 'SBAR',
                        [ 'S',
                          [ 'VP',
                            ['TO', to],
                            [ 'VP',
                              ['VB', kill],
                              ['NP', ['PRP', him]],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', first], ['CD', one]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6000060000655,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', mistake]],
                mark('SBAR'),
                mark('S'),
                ['TO', to],
                ['VB', kill],
                ['NP', ['PRP', him]],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', first], ['CD', one]],
                ['.', '.']
              ]).
pllm:training(6000060000655,
              tree_to_toks,
              ['Yes', '.', 'It', was, 'a-mistake', to, kill, him, in, 'the-first-one', '.']).
pllm:training(6000070000656,
              string,
              "I agree. I do not think Christopher Lee worked in the second one.").
pllm:training(6000070000656,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', agree]], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', do],
                      ['RB', not],
                      [ 'VP',
                        ['VB', think],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Christopher'], ['NNP', 'Lee']],
                            [ 'VP',
                              ['VBD', worked],
                              ['PP', ['IN', in], ['NP', ['DT', the], ['JJ', second], ['NN', one]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6000070000656,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', do],
                ['RB', not],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Christopher'], ['NNP', 'Lee']],
                ['VBD', worked],
                ['IN', in],
                ['NP', ['DT', the], ['JJ', second], ['NN', one]],
                ['.', '.']
              ]).
pllm:training(6000070000656,
              tree_to_toks,
              [ 'I',
                agree,
                ('.'),
                'I',
                do,
                not,
                think,
                'Christopher-Lee',
                worked,
                in,
                'the-second-one',
                ('.')
              ]).
pllm:training(6000080000657, string, "What did you like about Darth Maul?").
pllm:training(6000080000657,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', did],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', like],
                    ['SBAR', ['IN', about], ['S', ['NP', ['NNP', 'Darth']], ['VP', ['VB', 'Maul']]]]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6000080000657,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', did],
                ['NP', ['PRP', you]],
                ['VB', like],
                mark('SBAR'),
                ['IN', about],
                mark('S'),
                ['NP', ['NNP', 'Darth']],
                ['VB', 'Maul'],
                ['.', ?]
              ]).
pllm:training(6000080000657,
              tree_to_toks,
              ['What', did, you, like, about, 'Darth', 'Maul', ?]).
pllm:training(6000090000658, string, "The Lightsaber and the paint.").
pllm:training(6000090000658,
              text_to_tree,
              [ 'FRAG',
                [ 'NP',
                  ['NP', ['DT', 'The'], ['NNP', 'Lightsaber']],
                  ['CC', and],
                  ['NP', ['DT', the], ['NN', paint]]
                ],
                ['.', '.']
              ]).
pllm:training(6000090000658,
              unphrasify,
              [ mark('FRAG'),
                ['NP', ['DT', 'The'], ['NNP', 'Lightsaber']],
                ['CC', and],
                ['NP', ['DT', the], ['NN', paint]],
                ['.', '.']
              ]).
pllm:training(6000090000658, tree_to_toks, ['The-Lightsaber', and, 'the-paint', '.']).
pllm:training(6000100000659, string, "Yes. That was very cool.").
pllm:training(6000100000659,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Yes'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBD', was], ['ADJP', ['RB', very], ['JJ', cool]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6000100000659,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Yes'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBD', was],
                ['ADJP', ['RB', very], ['JJ', cool]],
                ['.', '.']
              ]).
pllm:training(6000100000659, tree_to_toks, ['Yes', '.', 'That', was, very, cool, '.']).
pllm:training(6100010000661, string, "Do you like Star Wars?").
pllm:training(6100010000661,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VP', ['VB', like], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]],
                ['.', ?]
              ]).
pllm:training(6100010000661,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', like],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', ?]
              ]).
pllm:training(6100010000661, tree_to_toks, ['Do', you, like, 'Star-Wars', ?]).
pllm:training(6100020000662, string, "I love it!").
pllm:training(6100020000662,
              text_to_tree,
              ['CORENLP', ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', love], ['NP', ['PRP', it]]], ['.', '.']]]).
pllm:training(6100020000662,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', love],
                ['NP', ['PRP', it]],
                ['.', '.']
              ]).
pllm:training(6100020000662, tree_to_toks, ['I', love, it, '.']).
pllm:training(6100030000663, string, "Do you think it's realistic?").
pllm:training(6100030000663,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VB', 'Do'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', realistic]]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6100030000663,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VB', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', realistic]],
                ['.', ?]
              ]).
pllm:training(6100030000663, tree_to_toks, ['Do', you, think, it, '\'s', realistic, ?]).
pllm:training(6100040000664,
              string,
              "It would be realistic if it was easier to travel faster in space").
pllm:training(6100040000664,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', be],
                      ['ADJP', ['JJ', realistic]],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['ADJP', ['JJR', easier]],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  [ 'VP',
                                    ['VB', travel],
                                    ['ADVP', ['RBR', faster]],
                                    ['PP', ['IN', in], ['NP', ['NN', space]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6100040000664,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['MD', would],
                ['VB', be],
                ['ADJP', ['JJ', realistic]],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['ADJP', ['JJR', easier]],
                mark('S'),
                ['TO', to],
                ['VB', travel],
                ['ADVP', ['RBR', faster]],
                ['IN', in],
                ['NP', ['NN', space]],
                ['.', '.']
              ]).
pllm:training(6100040000664,
              tree_to_toks,
              [ 'It',
                would,
                be,
                realistic,
                if,
                it,
                was,
                'ADJP',
                easier,
                to,
                travel,
                faster,
                in,
                space,
                ('.')
              ]).
pllm:training(6100050000665,
              string,
              "Yeah, I could see something like that happening").
pllm:training(6100050000665,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['MD', could],
                  [ 'VP',
                    ['VB', see],
                    [ 'S',
                      ['NP', ['NP', ['NN', something]], ['PP', ['IN', like], ['NP', ['DT', that]]]],
                      ['VP', ['VBG', happening]]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6100050000665,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['MD', could],
                ['VB', see],
                mark('S'),
                ['NP', ['NN', something]],
                ['IN', like],
                ['NP', ['DT', that]],
                ['VBG', happening],
                ['.', '.']
              ]).
pllm:training(6100050000665,
              tree_to_toks,
              ['Yeah', ',', 'I', could, see, something, like, that, happening, '.']).
pllm:training(6100060000666,
              string,
              "I think it would not be likely for there to be so many aliens").
pllm:training(6100060000666,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'I']],
                [ 'VP',
                  ['VB', think],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['MD', would],
                        ['RB', not],
                        [ 'VP',
                          ['AUX', be],
                          ['ADJP', ['JJ', likely]],
                          [ 'SBAR',
                            ['IN', for],
                            [ 'S',
                              ['NP', ['EX', there]],
                              [ 'VP',
                                ['TO', to],
                                [ 'VP',
                                  ['AUX', be],
                                  ['NP', ['ADJP', ['RB', so], ['JJ', many]], ['NNS', aliens]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6100060000666,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', would],
                ['RB', not],
                ['AUX', be],
                ['ADJP', ['JJ', likely]],
                mark('SBAR'),
                ['IN', for],
                mark('S'),
                ['NP', ['EX', there]],
                ['TO', to],
                ['AUX', be],
                ['NP', ['ADJP', ['RB', so], ['JJ', many]], ['NNS', aliens]],
                ['.', '.']
              ]).
pllm:training(6100060000666,
              tree_to_toks,
              [ 'I',
                think,
                it,
                would,
                not,
                be,
                likely,
                for,
                there,
                to,
                be,
                'so-many-aliens',
                ('.')
              ]).
pllm:training(6100070000667, string, "There is no force.").
pllm:training(6100070000667,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  ['VP', ['VBZ', is], ['NP', ['DT', no], ['NN', force]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100070000667,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VBZ', is],
                ['NP', ['DT', no], ['NN', force]],
                ['.', '.']
              ]).
pllm:training(6100070000667, tree_to_toks, ['There', is, 'no-force', '.']).
pllm:training(6100080000668, string, "Some buildings are a bit tall").
pllm:training(6100080000668,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'Some'], ['NNS', buildings]],
                  ['VP', ['VB', are], ['ADJP', ['NP', ['DT', a], ['NN', bit]], ['JJ', tall]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100080000668,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'Some'], ['NNS', buildings]],
                ['VB', are],
                'ADJP',
                ['NP', ['DT', a], ['NN', bit]],
                ['JJ', tall],
                ['.', '.']
              ]).
pllm:training(6100080000668,
              tree_to_toks,
              ['Some-buildings', are, 'ADJP', 'a-bit', tall, '.']).
pllm:training(6100090000669, string, "It inspires me to work hard").
pllm:training(6100090000669,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  [ 'VP',
                    ['VBZ', inspires],
                    [ 'S',
                      ['NP', ['PRP', me]],
                      ['VP', ['TO', to], ['VP', ['VB', work], ['ADVP', ['RB', hard]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6100090000669,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', inspires],
                mark('S'),
                ['NP', ['PRP', me]],
                ['TO', to],
                ['VB', work],
                ['ADVP', ['RB', hard]],
                ['.', '.']
              ]).
pllm:training(6100090000669, tree_to_toks, ['It', inspires, me, to, work, hard, '.']).
pllm:training(6100100000670, string, "It inspires me too").
pllm:training(6100100000670,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBZ', inspires], ['NP', ['PRP', me]], ['ADVP', ['RB', too]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6100100000670,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', inspires],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(6100100000670, tree_to_toks, ['It', inspires, me, too, '.']).
pllm:training(6200010000672,
              string,
              "Did you know that George Lucas didn't originally write Luke and Leia to be twin siblings?").
pllm:training(6200010000672,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['VBD', 'Did'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['IN', that],
                      [ 'S',
                        ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                        [ 'VP',
                          ['VBD', did],
                          ['RB', 'n\'t'],
                          ['ADVP', ['RB', originally]],
                          [ 'VP',
                            ['VB', write],
                            ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                ['VP', ['VB', be], ['NP', ['JJ', twin], ['NNS', siblings]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6200010000672,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['VBD', 'Did'],
                ['NP', ['PRP', you]],
                ['VB', know],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'George'], ['NNP', 'Lucas']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['ADVP', ['RB', originally]],
                ['VB', write],
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                mark('S'),
                ['TO', to],
                ['VB', be],
                ['NP', ['JJ', twin], ['NNS', siblings]],
                ['.', ?]
              ]).
pllm:training(6200010000672,
              tree_to_toks,
              [ 'Did',
                you,
                know,
                that,
                'George-Lucas',
                did,
                'n\'t',
                originally,
                write,
                'Luke-and-Leia',
                to,
                be,
                'twin-siblings',
                (?)
              ]).
pllm:training(6200020000673, string, "How do you know that?").
pllm:training(6200020000673,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6200020000673,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(6200020000673, tree_to_toks, ['How', do, you, know, that, ?]).
pllm:training(6200030000674,
              string,
              "I read the script for the first Star Wars. Luke was introduced as being 20 years old, and Leia was introduced as being 16.").
pllm:training(6200030000674,
              text_to_tree,
              [ 'SEQBAR',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', read],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', script]],
                      [ 'PP',
                        ['IN', for],
                        ['NP', ['DT', the], ['JJ', first], ['NNP', 'Star'], ['NNPS', 'Wars']]
                      ]
                    ]
                  ],
                  ['.', '.']
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['NNP', 'Luke']],
                      [ 'VP',
                        ['VBD', was],
                        [ 'VP',
                          ['VBN', introduced],
                          [ 'PP',
                            ['IN', as],
                            [ 'S',
                              [ 'VP',
                                ['VBG', being],
                                ['ADJP', ['NP', ['CD', '20'], ['NNS', years]], ['JJ', old]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['NNP', 'Leia']],
                      [ 'VP',
                        ['VBD', was],
                        [ 'VP',
                          ['VBN', introduced],
                          ['PP', ['IN', as], ['S', ['VP', ['VBG', being], ['NP', ['CD', '16']]]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200030000674,
              unphrasify,
              [ mark('SEQBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', read],
                ['NP', ['DT', the], ['NN', script]],
                ['IN', for],
                ['NP', ['DT', the], ['JJ', first], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['NNP', 'Luke']],
                ['VBD', was],
                ['VBN', introduced],
                ['IN', as],
                mark('S'),
                ['VBG', being],
                'ADJP',
                ['NP', ['CD', '20'], ['NNS', years]],
                ['JJ', old],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VBD', was],
                ['VBN', introduced],
                ['IN', as],
                mark('S'),
                ['VBG', being],
                ['NP', ['CD', '16']],
                ['.', '.']
              ]).
pllm:training(6200030000674,
              tree_to_toks,
              [ 'I',
                read,
                'the-script',
                for,
                'the-first-Star-Wars',
                ('.'),
                'Luke',
                was,
                introduced,
                (as),
                being,
                'ADJP',
                '20-years',
                old,
                (','),
                and,
                'Leia',
                was,
                introduced,
                (as),
                being,
                '16',
                ('.')
              ]).
pllm:training(6200040000675,
              string,
              "So the love interest angle that they hinted at in Star Wars, that was the point originally.").
pllm:training(6200040000675,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['ADVP', ['RB', 'So']],
                  [ 'NP-TMP',
                    ['NP', ['DT', the], ['NN', love], ['NN', interest], ['NN', angle]],
                    [ 'SBAR',
                      ['NP', ['WDT', that]],
                      [ 'S',
                        ['NP', ['PRP', they]],
                        [ 'VP',
                          ['VBD', hinted],
                          [ 'PP',
                            ['IN', at],
                            ['PP', ['IN', in], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [',', ','],
                  ['NP', ['DT', that]],
                  [ 'VP',
                    ['VBD', was],
                    ['NP', ['DT', the], ['NN', point]],
                    ['ADVP', ['RB', originally]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6200040000675,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'So']],
                'NP-TMP',
                ['NP', ['DT', the], ['NN', love], ['NN', interest], ['NN', angle]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', hinted],
                ['IN', at],
                ['IN', in],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['NP', ['DT', the], ['NN', point]],
                ['ADVP', ['RB', originally]],
                ['.', '.']
              ]).
pllm:training(6200040000675,
              tree_to_toks,
              [ 'So',
                'NP-TMP',
                'the-love-interest-angle',
                that,
                they,
                hinted,
                at,
                in,
                'Star-Wars',
                (','),
                that,
                was,
                'the-point',
                originally,
                ('.')
              ]).
pllm:training(6200050000676,
              string,
              "Right. It was only after the huge success of Star Wars, and the plans for a sequel, that Lucas retconned Luke and Leia into being twins.").
pllm:training(6200050000676,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['INTJ', ['UH', 'Right'], ['.', '.']]],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    [ 'VP',
                      ['VBD', was],
                      ['ADVP', ['RB', only]],
                      [ 'PP',
                        ['IN', after],
                        [ 'NP',
                          [ 'NP',
                            ['NP', ['DT', the], ['JJ', huge], ['NN', success]],
                            ['PP', ['IN', of], ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']]]
                          ],
                          [',', ','],
                          ['CC', and],
                          [ 'NP',
                            ['NP', ['DT', the], ['NNS', plans]],
                            ['PP', ['IN', for], ['NP', ['DT', a], ['NN', sequel]]]
                          ]
                        ]
                      ],
                      [',', ','],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['NNP', 'Lucas']],
                          [ 'VP',
                            ['VBD', retconned],
                            ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                            [ 'PP',
                              ['IN', into],
                              ['S', ['VP', ['VBG', being], ['NP', ['NNS', twins]]]]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200050000676,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                ['INTJ', ['UH', 'Right'], ['.', '.']],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', was],
                ['ADVP', ['RB', only]],
                ['IN', after],
                ['NP', ['DT', the], ['JJ', huge], ['NN', success]],
                ['IN', of],
                ['NP', ['NNP', 'Star'], ['NNPS', 'Wars']],
                [',', ','],
                ['CC', and],
                ['NP', ['DT', the], ['NNS', plans]],
                ['IN', for],
                ['NP', ['DT', a], ['NN', sequel]],
                [',', ','],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBD', retconned],
                ['NP', ['NNP', 'Luke'], ['CC', and], ['NNP', 'Leia']],
                ['IN', into],
                mark('S'),
                ['VBG', being],
                ['NP', ['NNS', twins]],
                ['.', '.']
              ]).
pllm:training(6200050000676,
              tree_to_toks,
              [ 'Right',
                ('.'),
                'It',
                was,
                only,
                after,
                'the-huge-success',
                of,
                'Star-Wars',
                (','),
                and,
                'the-plans',
                for,
                'a-sequel',
                (','),
                that,
                'Lucas',
                retconned,
                'Luke-and-Leia',
                into,
                being,
                twins,
                ('.')
              ]).
pllm:training(6200060000677,
              string,
              "Actually, that was a really good storyline. I loved it in Empire and Return of the Jedi when Leia could sense Luke through the Force.").
pllm:training(6200060000677,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Actually']],
                    [',', ','],
                    ['NP', ['DT', that]],
                    [ 'VP',
                      ['VBD', was],
                      ['NP', ['DT', a], ['ADJP', ['RB', really], ['JJ', good]], ['NN', storyline]]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', loved],
                    ['NP', ['PRP', it]],
                    [ 'PP',
                      ['IN', in],
                      [ 'NP',
                        ['NP', ['NNP', 'Empire']],
                        ['CC', and],
                        [ 'NP',
                          ['NP', ['NN', 'Return']],
                          ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                        ]
                      ]
                    ],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', when]],
                      [ 'S',
                        ['NP', ['NNP', 'Leia']],
                        [ 'VP',
                          ['MD', could],
                          [ 'VP',
                            ['VB', sense],
                            ['NP', ['NNP', 'Luke']],
                            ['PP', ['IN', through], ['NP', ['DT', the], ['NNP', 'Force']]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6200060000677,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Actually']],
                [',', ','],
                ['NP', ['DT', that]],
                ['VBD', was],
                ['NP', ['DT', a], ['ADJP', ['RB', really], ['JJ', good]], ['NN', storyline]],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', loved],
                ['NP', ['PRP', it]],
                ['IN', in],
                ['NP', ['NNP', 'Empire']],
                ['CC', and],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['MD', could],
                ['VB', sense],
                ['NP', ['NNP', 'Luke']],
                ['IN', through],
                ['NP', ['DT', the], ['NNP', 'Force']],
                ['.', '.']
              ]).
pllm:training(6200060000677,
              tree_to_toks,
              [ 'Actually',
                (','),
                that,
                was,
                'a-really-good-storyline',
                ('.'),
                'I',
                loved,
                it,
                in,
                'Empire',
                and,
                'Return',
                of,
                'the-Jedi',
                when,
                'Leia',
                could,
                sense,
                'Luke',
                through,
                'the-Force',
                ('.')
              ]).
pllm:training(6200070000678,
              string,
              "And in Empire, we all just thought it was the Force - not that the two of them were bonded as siblings.").
pllm:training(6200070000678,
              text_to_tree,
              [ 'S',
                ['CC', 'And'],
                ['PP', ['IN', in], ['NP', ['NNP', 'Empire']]],
                [',', ','],
                ['NP', ['NP', ['PRP', we]], ['NP', ['DT', all]]],
                ['ADVP', ['RB', just]],
                [ 'VP',
                  ['VBD', thought],
                  [ 'SBAR',
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['AUX', was],
                        [ 'NP',
                          ['DT', the],
                          ['NN', 'Force-not'],
                          [ 'SBAR',
                            ['IN', that],
                            [ 'S',
                              [ 'NP',
                                ['NP', ['DT', the], ['CD', two]],
                                ['PP', ['IN', of], ['NP', ['PRP', them]]]
                              ],
                              [ 'VP',
                                ['AUX', were],
                                [ 'VP',
                                  ['VBN', bonded],
                                  ['PP', ['IN', as], ['NP', ['NNS', siblings]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6200070000678,
              unphrasify,
              [ mark('S'),
                ['CC', 'And'],
                ['IN', in],
                ['NP', ['NNP', 'Empire']],
                [',', ','],
                ['NP', ['PRP', we]],
                ['NP', ['DT', all]],
                ['ADVP', ['RB', just]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['DT', the],
                ['NN', 'Force-not'],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['CD', two]],
                ['IN', of],
                ['NP', ['PRP', them]],
                ['AUX', were],
                ['VBN', bonded],
                ['IN', as],
                ['NP', ['NNS', siblings]],
                ['.', '.']
              ]).
pllm:training(6200070000678,
              tree_to_toks,
              [ 'And',
                in,
                'Empire',
                (','),
                we,
                all,
                just,
                thought,
                it,
                was,
                the,
                'Force-not',
                that,
                'the-two',
                of,
                them,
                were,
                bonded,
                (as),
                siblings,
                ('.')
              ]).
pllm:training(6200080000679,
              string,
              "It made for an interesting love triangle, until it was revealed that the two were siblings.").
pllm:training(6200080000679,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'It']],
                [ 'VP',
                  ['VBD', made],
                  ['PP', ['IN', for], ['NP', ['DT', an], ['JJ', interesting], ['NN', love]]],
                  ['NP', ['NNP', triangle]],
                  [',', ','],
                  [ 'SBAR',
                    ['IN', until],
                    [ 'S',
                      ['NP', ['PRP', it]],
                      [ 'VP',
                        ['AUX', was],
                        [ 'VP',
                          ['VBN', revealed],
                          [ 'SBAR',
                            ['IN', that],
                            [ 'S',
                              ['NP', ['DT', the], ['CD', two]],
                              ['VP', ['AUX', were], ['NP', ['NNS', siblings]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6200080000679,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBD', made],
                ['IN', for],
                ['NP', ['DT', an], ['JJ', interesting], ['NN', love]],
                ['NP', ['NNP', triangle]],
                [',', ','],
                mark('SBAR'),
                ['IN', until],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', was],
                ['VBN', revealed],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['DT', the], ['CD', two]],
                ['AUX', were],
                ['NP', ['NNS', siblings]],
                ['.', '.']
              ]).
pllm:training(6200080000679,
              tree_to_toks,
              [ 'It',
                made,
                for,
                'an-interesting-love',
                triangle,
                (','),
                until,
                it,
                was,
                revealed,
                that,
                'the-two',
                were,
                siblings,
                ('.')
              ]).
pllm:training(6200090000680,
              string,
              "Too bad Lucas didn't stop the retconning there. The way he reworked the whole mother's death part in order to do it his new stupid way in the prequel trilogy, that was really lame.").
pllm:training(6200090000680,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['ADJP', ['RB', 'Too'], ['JJ', bad]], ['NNP', 'Lucas']],
                    [ 'VP',
                      ['VBD', did],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', stop],
                        ['NP', ['DT', the], ['VBG', retconning]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'NP',
                      ['NP', ['DT', 'The'], ['NN', way]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', reworked],
                            [ 'NP',
                              ['NP', ['DT', the], ['JJ', whole], ['NN', mother], ['POS', '\'s']],
                              ['NN', death],
                              ['NN', part]
                            ],
                            [ 'PP',
                              ['IN', in],
                              [ 'NP',
                                ['NN', order],
                                [ 'S',
                                  [ 'VP',
                                    ['TO', to],
                                    [ 'VP',
                                      ['VB', do],
                                      ['NP', ['PRP', it]],
                                      [ 'NP',
                                        [ 'NP',
                                          ['PRP$', his],
                                          ['JJ', new],
                                          ['JJ', stupid],
                                          ['NN', way]
                                        ],
                                        [ 'PP',
                                          ['IN', in],
                                          [ 'NP',
                                            ['DT', the],
                                            ['NN', prequel],
                                            ['NN', trilogy]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    [',', ','],
                    [ 'S',
                      ['NP', ['DT', that]],
                      ['VP', ['VBD', was], ['ADJP', ['RB', really], ['JJ', lame]]]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200090000680,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['ADJP', ['RB', 'Too'], ['JJ', bad]], ['NNP', 'Lucas']],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['VB', stop],
                ['NP', ['DT', the], ['VBG', retconning]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NN', way]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', reworked],
                ['NP', ['DT', the], ['JJ', whole], ['NN', mother], ['POS', '\'s']],
                ['NN', death],
                ['NN', part],
                ['IN', in],
                ['NN', order],
                mark('S'),
                ['TO', to],
                ['VB', do],
                ['NP', ['PRP', it]],
                ['NP', ['PRP$', his], ['JJ', new], ['JJ', stupid], ['NN', way]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', prequel], ['NN', trilogy]],
                [',', ','],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBD', was],
                ['ADJP', ['RB', really], ['JJ', lame]],
                ['.', '.']
              ]).
pllm:training(6200090000680,
              tree_to_toks,
              [ 'Too-bad-Lucas',
                did,
                'n\'t',
                stop,
                'the-retconning',
                there,
                ('.'),
                'The-way',
                he,
                reworked,
                'the-whole-mother-\'s',
                death,
                part,
                in,
                order,
                to,
                do,
                it,
                'his-new-stupid-way',
                in,
                'the-prequel-trilogy',
                (','),
                that,
                was,
                really,
                lame,
                ('.')
              ]).
pllm:training(6200100000681,
              string,
              "You won't get any argument from me there. I much prefer the backstory Leia revealed in Return of the Jedi - better than anything in the  prequel movies, yuck.").
pllm:training(6200100000681,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['MD', wo],
                      ['RB', 'n\'t'],
                      [ 'VP',
                        ['VB', get],
                        ['NP', ['DT', any], ['NN', argument]],
                        ['PP', ['IN', from], ['NP', ['PRP', me]]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', much]],
                    [ 'VP',
                      ['VB', prefer],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', backstory]],
                        [ 'SBAR',
                          [ 'S',
                            ['NP', ['NNP', 'Leia']],
                            [ 'VP',
                              ['VBD', revealed],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  [ 'NP',
                                    [ 'UCP',
                                      [ 'NML',
                                        ['NML', ['NNP', 'Return']],
                                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                                      ],
                                      ['HYPH', -],
                                      [ 'ADJP',
                                        ['JJR', better],
                                        [ 'PP',
                                          ['IN', than],
                                          [ 'NP',
                                            ['NP', ['NN', anything]],
                                            [ 'PP',
                                              ['IN', in],
                                              ['NP', ['DT', the], ['NN', prequel]]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ],
                                    ['NNS', movies]
                                  ],
                                  [',', ','],
                                  ['NP', ['NN', yuck]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6200100000681,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['MD', wo],
                ['RB', 'n\'t'],
                ['VB', get],
                ['NP', ['DT', any], ['NN', argument]],
                ['IN', from],
                ['NP', ['PRP', me]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', much]],
                ['VB', prefer],
                ['NP', ['DT', the], ['NN', backstory]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Leia']],
                ['VBD', revealed],
                ['IN', in],
                'UCP',
                mark('NML'),
                'NML',
                ['NNP', 'Return'],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['HYPH', -],
                'ADJP',
                ['JJR', better],
                ['IN', than],
                ['NP', ['NN', anything]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', prequel]],
                ['NNS', movies],
                [',', ','],
                ['NP', ['NN', yuck]],
                ['.', '.']
              ]).
pllm:training(6200100000681,
              tree_to_toks,
              [ 'You',
                wo,
                'n\'t',
                get,
                'any-argument',
                from,
                me,
                there,
                ('.'),
                'I',
                much,
                prefer,
                'the-backstory',
                'Leia',
                revealed,
                in,
                'UCP',
                'Return',
                of,
                'the-Jedi',
                (-),
                'ADJP',
                better,
                than,
                anything,
                in,
                'the-prequel',
                movies,
                (','),
                yuck,
                ('.')
              ]).
pllm:training(6300010000683,
              string,
              "How do you think Kylo Ren and Rey are related?").
pllm:training(6300010000683,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', do],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren'], ['CC', and], ['NNP', 'Rey']],
                          ['VP', ['VB', are], ['ADJP', ['VBN', related]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300010000683,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['NNP', 'Kylo'], ['NNP', 'Ren'], ['CC', and], ['NNP', 'Rey']],
                ['VB', are],
                ['ADJP', ['VBN', related]],
                ['.', ?]
              ]).
pllm:training(6300010000683,
              tree_to_toks,
              ['How', do, you, think, 'Kylo-Ren-and-Rey', are, related, ?]).
pllm:training(6300020000684,
              string,
              "Well I think it's obvious that they have some sort of connection. Maybe they're brother and sister.").
pllm:training(6300020000684,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['INTJ', ['UH', 'Well']],
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['JJ', obvious]],
                            [ 'SBAR',
                              ['IN', that],
                              [ 'S',
                                ['NP', ['PRP', they]],
                                [ 'VP',
                                  ['VB', have],
                                  [ 'NP',
                                    ['NP', ['DT', some], ['NN', sort]],
                                    ['PP', ['IN', of], ['NP', ['NN', connection]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['ADVP', ['RB', 'Maybe']],
                    ['NP', ['PRP', they]],
                    ['VP', ['VB', '\'re'], ['NP', ['NN', brother], ['CC', and], ['NN', sister]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6300020000684,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', obvious]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VB', have],
                ['NP', ['DT', some], ['NN', sort]],
                ['IN', of],
                ['NP', ['NN', connection]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['ADVP', ['RB', 'Maybe']],
                ['NP', ['PRP', they]],
                ['VB', '\'re'],
                ['NP', ['NN', brother], ['CC', and], ['NN', sister]],
                ['.', '.']
              ]).
pllm:training(6300020000684,
              tree_to_toks,
              [ 'Well',
                'I',
                think,
                it,
                '\'s',
                obvious,
                that,
                they,
                have,
                'some-sort',
                of,
                connection,
                ('.'),
                'Maybe',
                they,
                '\'re',
                'brother-and-sister',
                ('.')
              ]).
pllm:training(6300030000685,
              string,
              "If they were, do you think that might soften Kylo's outlook a bit?").
pllm:training(6300030000685,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['SBAR', ['IN', 'If'], ['S', ['NP', ['PRP', they]], ['VP', ['VBD', were]]]],
                  [',', ','],
                  ['VB', do],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['DT', that]],
                        [ 'VP',
                          ['MD', might],
                          [ 'VP',
                            ['VB', soften],
                            [ 'NP',
                              ['NP', ['NP', ['NNP', 'Kylo'], ['POS', '\'s']], ['NN', outlook]],
                              ['NP', ['DT', a], ['NN', bit]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300030000685,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('SBAR'),
                ['IN', 'If'],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                [',', ','],
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['DT', that]],
                ['MD', might],
                ['VB', soften],
                ['NP', ['NNP', 'Kylo'], ['POS', '\'s']],
                ['NN', outlook],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', ?]
              ]).
pllm:training(6300030000685,
              tree_to_toks,
              [ 'If',
                they,
                were,
                (','),
                do,
                you,
                think,
                that,
                might,
                soften,
                'Kylo-\'s',
                outlook,
                'a-bit',
                (?)
              ]).
pllm:training(6300040000686,
              string,
              "Not really... I mean look what he did to his own father!").
pllm:training(6300040000686,
              text_to_tree,
              [ 'CORENLP',
                ['S', ['VP', ['RB', 'Not'], ['VP', ['VB', 'really.']]], [',', ','], ['.', '.']],
                ['S', ['VP', [',', ',']], ['.', '.']],
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', mean],
                    [ 'VP',
                      ['VB', look],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', he]],
                          [ 'VP',
                            ['VBD', did],
                            ['PP', ['IN', to], ['NP', ['PRP$', his], ['JJ', own], ['NN', father]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300040000686,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['RB', 'Not'],
                ['VB', 'really.'],
                [',', ','],
                ['.', '.'],
                mark('S'),
                [',', ','],
                ['.', '.'],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                ['VB', look],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBD', did],
                ['IN', to],
                ['NP', ['PRP$', his], ['JJ', own], ['NN', father]],
                ['.', '.']
              ]).
pllm:training(6300040000686,
              tree_to_toks,
              [ 'Not',
                'really.',
                (','),
                ('.'),
                (','),
                ('.'),
                'I',
                mean,
                look,
                what,
                he,
                did,
                to,
                'his-own-father',
                ('.')
              ]).
pllm:training(6300050000687,
              string,
              "You've got a good point there. I kind of feel like that symbolized the last of the good that was him leaving and him turning totally to the dark side.").
pllm:training(6300050000687,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'You']],
                    [ 'VP',
                      ['VB', '\'ve'],
                      [ 'VP',
                        ['VBN', got],
                        ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                        ['ADVP', ['RB', there]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', kind], ['RB', of]],
                      [ 'VP',
                        ['VB', feel],
                        [ 'SBAR',
                          ['IN', like],
                          [ 'S',
                            ['NP', ['DT', that]],
                            [ 'VP',
                              ['VBD', symbolized],
                              [ 'NP',
                                ['NP', ['DT', the], ['JJ', last]],
                                [ 'PP',
                                  ['IN', of],
                                  [ 'NP',
                                    ['NP', ['DT', the], ['JJ', good]],
                                    [ 'SBAR',
                                      ['NP', ['WDT', that]],
                                      [ 'S',
                                        [ 'VP',
                                          ['VBD', was],
                                          [ 'NP',
                                            ['NP', ['PRP', him]],
                                            ['VP', ['VBG', leaving]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['CC', and],
                    [ 'S',
                      ['NP', ['PRP', him]],
                      [ 'VP',
                        ['VBG', turning],
                        ['ADVP', ['RB', totally]],
                        ['PP', ['IN', to], ['NP', ['DT', the], ['JJ', dark], ['NN', side]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6300050000687,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'You']],
                ['VB', '\'ve'],
                ['VBN', got],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['ADVP', ['RB', there]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VB', feel],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['DT', that]],
                ['VBD', symbolized],
                ['NP', ['DT', the], ['JJ', last]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', good]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', was],
                ['NP', ['PRP', him]],
                ['VBG', leaving],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', him]],
                ['VBG', turning],
                ['ADVP', ['RB', totally]],
                ['IN', to],
                ['NP', ['DT', the], ['JJ', dark], ['NN', side]],
                ['.', '.']
              ]).
pllm:training(6300050000687,
              tree_to_toks,
              [ 'You',
                '\'ve',
                got,
                'a-good-point',
                there,
                ('.'),
                'I',
                kind,
                of,
                feel,
                like,
                that,
                symbolized,
                'the-last',
                of,
                'the-good',
                that,
                was,
                him,
                leaving,
                and,
                him,
                turning,
                totally,
                to,
                'the-dark-side',
                ('.')
              ]).
pllm:training(6300060000688,
              string,
              "I'm still wondering who this Snoke character actually is.").
pllm:training(6300060000688,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', '\'m'],
                    ['ADVP', ['RB', still]],
                    [ 'VP',
                      ['VBG', wondering],
                      [ 'SBAR',
                        ['NP', ['WP', who]],
                        [ 'S',
                          ['NP', ['DT', this], ['NNP', 'Snoke'], ['NN', character]],
                          ['ADVP', ['RB', actually]],
                          ['VP', ['VBZ', is]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300060000688,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', '\'m'],
                ['ADVP', ['RB', still]],
                ['VBG', wondering],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['NP', ['DT', this], ['NNP', 'Snoke'], ['NN', character]],
                ['ADVP', ['RB', actually]],
                ['VBZ', is],
                ['.', '.']
              ]).
pllm:training(6300060000688,
              tree_to_toks,
              ['I', '\'m', still, wondering, who, 'this-Snoke-character', actually, is, '.']).
pllm:training(6300070000689,
              string,
              "I heard a quote from the director that said he isn't any sort of sith or character we've seen before.").
pllm:training(6300070000689,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', heard],
                    ['NP', ['DT', a], ['NN', quote]],
                    [ 'PP',
                      ['IN', from],
                      [ 'NP',
                        ['NP', ['DT', the], ['NN', director]],
                        [ 'SBAR',
                          ['NP', ['WDT', that]],
                          [ 'S',
                            [ 'VP',
                              ['VBD', said],
                              [ 'SBAR',
                                [ 'S',
                                  ['NP', ['PRP', he]],
                                  [ 'VP',
                                    ['VBZ', is],
                                    ['RB', not],
                                    [ 'NP',
                                      [ 'NP',
                                        ['NP', ['DT', any], ['NN', sort]],
                                        [ 'PP',
                                          ['IN', of],
                                          [ 'NP',
                                            ['NN', sith],
                                            ['CC', or],
                                            ['NN', character]
                                          ]
                                        ]
                                      ],
                                      [ 'SBAR',
                                        [ 'S',
                                          ['NP', ['PRP', we]],
                                          [ 'VP',
                                            ['VB', '\'ve'],
                                            ['VP', ['VBN', seen], ['ADVP', ['RB', before]]]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6300070000689,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', heard],
                ['NP', ['DT', a], ['NN', quote]],
                ['IN', from],
                ['NP', ['DT', the], ['NN', director]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', is],
                ['RB', not],
                ['NP', ['DT', any], ['NN', sort]],
                ['IN', of],
                ['NP', ['NN', sith], ['CC', or], ['NN', character]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['ADVP', ['RB', before]],
                ['.', '.']
              ]).
pllm:training(6300070000689,
              tree_to_toks,
              [ 'I',
                heard,
                'a-quote',
                from,
                'the-director',
                that,
                said,
                he,
                (is),
                not,
                'any-sort',
                of,
                'sith-or-character',
                we,
                '\'ve',
                seen,
                before,
                ('.')
              ]).
pllm:training(6300080000690,
              string,
              "Is that so? Well that's a bit disappointing. I kind of liked the fan theory that said he might be Grand Moff Tarkin.").
pllm:training(6300080000690,
              text_to_tree,
              [ 'SEQBAR',
                ['CORENLP', ['S', ['VBZ', 'Is'], ['NP', ['DT', that]], ['ADVP', ['RB', so]], ['.', ?]]],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['INTJ', ['UH', 'Well']],
                      ['NP', ['DT', that]],
                      [ 'VP',
                        ['VBZ', '\'s'],
                        ['ADJP', ['NP', ['DT', a], ['NN', bit]], ['JJ', disappointing]]
                      ],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      ['ADVP', ['RB', kind], ['RB', of]],
                      [ 'VP',
                        ['VBD', liked],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', fan], ['NN', theory]],
                          [ 'SBAR',
                            ['NP', ['WDT', that]],
                            [ 'S',
                              [ 'VP',
                                ['VBD', said],
                                [ 'SBAR',
                                  [ 'S',
                                    ['NP', ['PRP', he]],
                                    [ 'VP',
                                      ['MD', might],
                                      [ 'VP',
                                        ['VB', be],
                                        [ 'NP',
                                          ['NNP', 'Grand'],
                                          ['NNP', 'Moff'],
                                          ['NNP', 'Tarkin']
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      ['.', '.']
                    ]
                  ]
                ]
              ]).
pllm:training(6300080000690,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['VBZ', 'Is'],
                ['NP', ['DT', that]],
                ['ADVP', ['RB', so]],
                ['.', ?],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Well']],
                ['NP', ['DT', that]],
                ['VBZ', '\'s'],
                'ADJP',
                ['NP', ['DT', a], ['NN', bit]],
                ['JJ', disappointing],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', kind], ['RB', of]],
                ['VBD', liked],
                ['NP', ['DT', the], ['NN', fan], ['NN', theory]],
                mark('SBAR'),
                ['NP', ['WDT', that]],
                mark('S'),
                ['VBD', said],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', he]],
                ['MD', might],
                ['VB', be],
                ['NP', ['NNP', 'Grand'], ['NNP', 'Moff'], ['NNP', 'Tarkin']],
                ['.', '.']
              ]).
pllm:training(6300080000690,
              tree_to_toks,
              [ 'Is',
                that,
                so,
                (?),
                'Well',
                that,
                '\'s',
                'ADJP',
                'a-bit',
                disappointing,
                ('.'),
                'I',
                kind,
                of,
                liked,
                'the-fan-theory',
                that,
                said,
                he,
                might,
                be,
                'Grand-Moff-Tarkin',
                ('.')
              ]).
pllm:training(6300090000691,
              string,
              "But didn't Moff get blown up with the death star?").
pllm:training(6300090000691,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['CC', 'But'],
                  ['VBD', did],
                  ['RB', 'n\'t'],
                  ['NP', ['NNP', 'Moff']],
                  [ 'VP',
                    ['VB', get],
                    [ 'VP',
                      ['VBN', blown],
                      ['PRT', ['RP', up]],
                      ['PP', ['IN', with], ['NP', ['DT', the], ['NN', death], ['NN', star]]]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6300090000691,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['CC', 'But'],
                ['VBD', did],
                ['RB', 'n\'t'],
                ['NP', ['NNP', 'Moff']],
                ['VB', get],
                ['VBN', blown],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['DT', the], ['NN', death], ['NN', star]],
                ['.', ?]
              ]).
pllm:training(6300090000691,
              tree_to_toks,
              ['But', did, 'n\'t', 'Moff', get, blown, up, with, 'the-death-star', ?]).
pllm:training(6300100000692,
              string,
              "I mean you never know man. In this universe, characters always some back.").
pllm:training(6300100000692,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', mean],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['PRP', you]],
                          ['ADVP', ['RB', never]],
                          ['VP', ['VB', know], ['NP', ['NN', man]]]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'S',
                  ['PP', ['IN', 'In'], ['NP', ['DT', this], ['NN', universe]]],
                  [',', ','],
                  ['NP', ['NNS', characters]],
                  ['ADVP', ['RB', always]],
                  ['NP', ['DT', some]],
                  ['VP', ['VB', back]],
                  ['.', '.']
                ]
              ]).
pllm:training(6300100000692,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', mean],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', you]],
                ['ADVP', ['RB', never]],
                ['VB', know],
                ['NP', ['NN', man]],
                ['.', '.'],
                mark('S'),
                ['IN', 'In'],
                ['NP', ['DT', this], ['NN', universe]],
                [',', ','],
                ['NP', ['NNS', characters]],
                ['ADVP', ['RB', always]],
                ['NP', ['DT', some]],
                ['VB', back],
                ['.', '.']
              ]).
pllm:training(6300100000692,
              tree_to_toks,
              [ 'I',
                mean,
                you,
                never,
                know,
                man,
                ('.'),
                'In',
                'this-universe',
                (','),
                characters,
                always,
                some,
                back,
                ('.')
              ]).
pllm:training(6400010000694,
              string,
              "What's your favorite planet in the Star Wars universe?").
pllm:training(6400010000694,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBZ', '\'s'],
                    [ 'NP',
                      ['NP', ['PRP$', your], ['JJ', favorite], ['NN', planet]],
                      [ 'PP',
                        ['IN', in],
                        [ 'NP',
                          ['DT', the],
                          ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']],
                          ['NN', universe]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6400010000694,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBZ', '\'s'],
                ['NP', ['PRP$', your], ['JJ', favorite], ['NN', planet]],
                ['IN', in],
                ['NP', ['DT', the], ['NML', ['NNP', 'Star'], ['NNPS', 'Wars']], ['NN', universe]],
                ['.', ?]
              ]).
pllm:training(6400010000694,
              tree_to_toks,
              ['What', '\'s', 'your-favorite-planet', in, 'the-Star-Wars-universe', ?]).
pllm:training(6400020000695, string, "I would have to say Coruscant.").
pllm:training(6400020000695,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', have],
                      ['S', ['VP', ['TO', to], ['VP', ['VB', say], ['NP', ['NNP', 'Coruscant']]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400020000695,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', have],
                mark('S'),
                ['TO', to],
                ['VB', say],
                ['NP', ['NNP', 'Coruscant']],
                ['.', '.']
              ]).
pllm:training(6400020000695, tree_to_toks, ['I', would, have, to, say, 'Coruscant', '.']).
pllm:training(6400030000696, string, "Why that one?").
pllm:training(6400030000696,
              text_to_tree,
              [ 'CORENLP',
                ['SBAR', ['WHADVP', ['WRB', 'Why']], ['S', ['NP', ['DT', that], ['NN', one]]], ['.', ?]]
              ]).
pllm:training(6400030000696,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['NP', ['DT', that], ['NN', one]],
                ['.', ?]
              ]).
pllm:training(6400030000696, tree_to_toks, ['Why', 'that-one', ?]).
pllm:training(6400040000697,
              string,
              "It just feels right, I love how it's this big bustling planet.").
pllm:training(6400040000697,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'It']],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VBZ', feels], ['ADJP', ['JJ', right]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', love],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', how]],
                      [ 'S',
                        ['NP', ['PRP', it]],
                        [ 'VP',
                          ['VBZ', '\'s'],
                          ['NP', ['DT', this], ['JJ', big], ['JJ', bustling], ['NN', planet]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400040000697,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['ADVP', ['RB', just]],
                ['VBZ', feels],
                ['ADJP', ['JJ', right]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VB', love],
                mark('SBAR'),
                ['WHADVP', ['WRB', how]],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['NP', ['DT', this], ['JJ', big], ['JJ', bustling], ['NN', planet]],
                ['.', '.']
              ]).
pllm:training(6400040000697,
              tree_to_toks,
              [ 'It',
                just,
                feels,
                right,
                (','),
                'I',
                love,
                how,
                it,
                '\'s',
                'this-big-bustling-planet',
                ('.')
              ]).
pllm:training(6400050000698, string, "What do you mean?").
pllm:training(6400050000698,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  ['S', ['VB', do], ['NP', ['PRP', you]], ['VP', ['VB', mean]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6400050000698,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VB', do],
                ['NP', ['PRP', you]],
                ['VB', mean],
                ['.', ?]
              ]).
pllm:training(6400050000698, tree_to_toks, ['What', do, you, mean, ?]).
pllm:training(6400060000699,
              string,
              "Well from what we've seen in the movies it's this huge sci-fi city and I believe thats pretty much all we've seen of it.  I just love the fact that it's all busy and advanced.").
pllm:training(6400060000699,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['INTJ', ['UH', 'Well']],
                    [ 'PP',
                      ['IN', from],
                      [ 'SBAR',
                        ['NP', ['WP', what]],
                        [ 'S',
                          ['NP', ['PRP', we]],
                          [ 'VP',
                            ['VB', '\'ve'],
                            [ 'VP',
                              ['VBN', seen],
                              [ 'PP',
                                ['IN', in],
                                [ 'NP',
                                  ['NP', ['DT', the], ['NNS', movies]],
                                  [ 'SBAR',
                                    [ 'S',
                                      [ 'S',
                                        ['NP', ['PRP', it]],
                                        [ 'VP',
                                          ['VBZ', '\'s'],
                                          [ 'NP',
                                            ['DT', this],
                                            ['JJ', huge],
                                            ['NML', ['NN', sci], ['HYPH', -], ['NN', fi]],
                                            ['NN', city]
                                          ]
                                        ]
                                      ],
                                      ['CC', and],
                                      [ 'S',
                                        ['NP', ['PRP', 'I']],
                                        [ 'VP',
                                          ['VB', believe],
                                          ['NP', ['NNS', thats]],
                                          ['ADVP', ['RB', pretty], ['RB', much]],
                                          [ 'NP-TMP',
                                            ['NP', ['DT', all]],
                                            [ 'SBAR',
                                              [ 'S',
                                                ['NP', ['PRP', we]],
                                                [ 'VP',
                                                  ['VB', '\'ve'],
                                                  [ 'VP',
                                                    ['VBN', seen],
                                                    ['PP', ['IN', of], ['NP', ['PRP', it]]]
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', just]],
                    [ 'VP',
                      ['VB', love],
                      ['NP', ['DT', the], ['NN', fact]],
                      [ 'SBAR',
                        ['IN', that],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['DT', all], ['JJ', busy], ['CC', and], ['JJ', advanced]]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6400060000699,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Well']],
                ['IN', from],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['IN', in],
                ['NP', ['DT', the], ['NNS', movies]],
                mark('SBAR'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                [ 'NP',
                  ['DT', this],
                  ['JJ', huge],
                  ['NML', ['NN', sci], ['HYPH', -], ['NN', fi]],
                  ['NN', city]
                ],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', believe],
                ['NP', ['NNS', thats]],
                ['ADVP', ['RB', pretty], ['RB', much]],
                'NP-TMP',
                ['NP', ['DT', all]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', '\'ve'],
                ['VBN', seen],
                ['IN', of],
                ['NP', ['PRP', it]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', just]],
                ['VB', love],
                ['NP', ['DT', the], ['NN', fact]],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['DT', all], ['JJ', busy], ['CC', and], ['JJ', advanced]],
                ['.', '.']
              ]).
pllm:training(6400060000699,
              tree_to_toks,
              [ 'Well',
                from,
                what,
                we,
                '\'ve',
                seen,
                in,
                'the-movies',
                it,
                '\'s',
                'this-huge-sci---fi-city',
                and,
                'I',
                believe,
                thats,
                pretty,
                much,
                'NP-TMP',
                all,
                we,
                '\'ve',
                seen,
                of,
                it,
                ('.'),
                'I',
                just,
                love,
                'the-fact',
                that,
                it,
                '\'s',
                all,
                busy,
                and,
                advanced,
                ('.')
              ]).
pllm:training(6400070000700,
              string,
              "That's a good point, you'd think with how advanced all these species are that most planets would be like that.").
pllm:training(6400070000700,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['DT', 'That']],
                    ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['JJ', good], ['NN', point]]]
                  ],
                  [',', ','],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['MD', '\'d'],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', with],
                        [ 'SBAR',
                          ['WHADJP', ['WRB', how], ['JJ', advanced]],
                          [ 'S',
                            ['NP', ['PDT', all], ['DT', these], ['NNS', species]],
                            [ 'VP',
                              ['VB', are],
                              [ 'SBAR',
                                ['IN', that],
                                [ 'S',
                                  ['NP', ['JJS', most], ['NNS', planets]],
                                  [ 'VP',
                                    ['MD', would],
                                    ['VP', ['VB', be], ['PP', ['IN', like], ['NP', ['DT', that]]]]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400070000700,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                [',', ','],
                ['NP', ['PRP', you]],
                ['MD', '\'d'],
                ['VB', think],
                ['IN', with],
                mark('SBAR'),
                ['WHADJP', ['WRB', how], ['JJ', advanced]],
                mark('S'),
                ['NP', ['PDT', all], ['DT', these], ['NNS', species]],
                ['VB', are],
                mark('SBAR'),
                ['IN', that],
                mark('S'),
                ['NP', ['JJS', most], ['NNS', planets]],
                ['MD', would],
                ['VB', be],
                ['IN', like],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6400070000700,
              tree_to_toks,
              [ 'That',
                '\'s',
                'a-good-point',
                (','),
                you,
                '\'d',
                think,
                with,
                how,
                advanced,
                'all-these-species',
                are,
                that,
                'most-planets',
                would,
                be,
                like,
                that,
                ('.')
              ]).
pllm:training(6400080000701,
              string,
              "I agree I always thought it was odd when a planet felt like they were less advanced than we are.").
pllm:training(6400080000701,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', agree],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        ['ADVP', ['RB', always]],
                        [ 'VP',
                          ['VBD', thought],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              [ 'VP',
                                ['VBD', was],
                                ['ADJP', ['JJ', odd]],
                                [ 'SBAR',
                                  ['WHADVP', ['WRB', when]],
                                  [ 'S',
                                    ['NP', ['DT', a], ['NN', planet]],
                                    [ 'VP',
                                      ['VBD', felt],
                                      [ 'SBAR',
                                        ['IN', like],
                                        [ 'S',
                                          ['NP', ['PRP', they]],
                                          [ 'VP',
                                            ['VBD', were],
                                            [ 'ADJP',
                                              ['ADJP', ['RBR', less], ['JJ', advanced]],
                                              [ 'SBAR',
                                                ['IN', than],
                                                [ 'S',
                                                  ['NP', ['PRP', we]],
                                                  ['VP', ['VB', are]]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400080000701,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', agree],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', always]],
                ['VBD', thought],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                ['ADJP', ['JJ', odd]],
                mark('SBAR'),
                ['WHADVP', ['WRB', when]],
                mark('S'),
                ['NP', ['DT', a], ['NN', planet]],
                ['VBD', felt],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', they]],
                ['VBD', were],
                'ADJP',
                ['ADJP', ['RBR', less], ['JJ', advanced]],
                mark('SBAR'),
                ['IN', than],
                mark('S'),
                ['NP', ['PRP', we]],
                ['VB', are],
                ['.', '.']
              ]).
pllm:training(6400080000701,
              tree_to_toks,
              [ 'I',
                agree,
                'I',
                always,
                thought,
                it,
                was,
                odd,
                when,
                'a-planet',
                felt,
                like,
                they,
                were,
                'ADJP',
                less,
                advanced,
                than,
                we,
                are,
                ('.')
              ]).
pllm:training(6400090000702,
              string,
              "I never thought about it but you make a good point.").
pllm:training(6400090000702,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', never]],
                    ['VP', ['VBD', thought], ['PP', ['IN', about], ['NP', ['PRP', it]]]]
                  ],
                  ['CC', but],
                  [ 'S',
                    ['NP', ['PRP', you]],
                    ['VP', ['VB', make], ['NP', ['DT', a], ['JJ', good], ['NN', point]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6400090000702,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', never]],
                ['VBD', thought],
                ['IN', about],
                ['NP', ['PRP', it]],
                ['CC', but],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', make],
                ['NP', ['DT', a], ['JJ', good], ['NN', point]],
                ['.', '.']
              ]).
pllm:training(6400090000702,
              tree_to_toks,
              ['I', never, thought, about, it, but, you, make, 'a-good-point', '.']).
pllm:training(6400100000703,
              string,
              "That's why I liked it the most though some of the other planets were good too.").
pllm:training(6400100000703,
              text_to_tree,
              [ 'S',
                ['NP', ['DT', 'That']],
                [ 'VP',
                  ['AUX', '\'s'],
                  [ 'SBAR',
                    ['WHADVP', ['WRB', why]],
                    [ 'S',
                      ['NP', ['PRP', 'I']],
                      [ 'VP',
                        ['VBD', liked],
                        ['NP', ['PRP', it]],
                        ['NP', ['DT', the], ['JJS', most]],
                        [ 'SBAR',
                          ['IN', though],
                          [ 'S',
                            [ 'NP',
                              ['NP', ['DT', some]],
                              [ 'PP',
                                ['IN', of],
                                ['NP', ['DT', the], ['JJ', other], ['NNS', planets]]
                              ]
                            ],
                            ['VP', ['AUX', were], ['ADJP', ['JJ', good]], ['ADVP', ['RB', too]]]
                          ]
                        ]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6400100000703,
              unphrasify,
              [ mark('S'),
                ['NP', ['DT', 'That']],
                ['AUX', '\'s'],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', liked],
                ['NP', ['PRP', it]],
                ['NP', ['DT', the], ['JJS', most]],
                mark('SBAR'),
                ['IN', though],
                mark('S'),
                ['NP', ['DT', some]],
                ['IN', of],
                ['NP', ['DT', the], ['JJ', other], ['NNS', planets]],
                ['AUX', were],
                ['ADJP', ['JJ', good]],
                ['ADVP', ['RB', too]],
                ['.', '.']
              ]).
pllm:training(6400100000703,
              tree_to_toks,
              [ 'That',
                '\'s',
                why,
                'I',
                liked,
                it,
                'the-most',
                though,
                some,
                of,
                'the-other-planets',
                were,
                good,
                too,
                ('.')
              ]).
pllm:training(6500010000705,
              string,
              "I think I saw three versions of Return of the Jedi.").
pllm:training(6500010000705,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', think],
                    [ 'SBAR',
                      [ 'S',
                        ['NP', ['PRP', 'I']],
                        [ 'VP',
                          ['VBD', saw],
                          [ 'NP',
                            ['NP', ['CD', three], ['NNS', versions]],
                            [ 'PP',
                              ['IN', of],
                              [ 'NP',
                                ['NP', ['NN', 'Return']],
                                ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Jedi']]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500010000705,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['CD', three], ['NNS', versions]],
                ['IN', of],
                ['NP', ['NN', 'Return']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Jedi']],
                ['.', '.']
              ]).
pllm:training(6500010000705,
              tree_to_toks,
              ['I', think, 'I', saw, 'three-versions', of, 'Return', of, 'the-Jedi', '.']).
pllm:training(6500020000706, string, "Really? What were they?").
pllm:training(6500020000706,
              text_to_tree,
              [ 'SEQBAR',
                ['FRAG', ['ADVP', ['RB', 'Really']], ['.', ?]],
                [ 'CORENLP',
                  ['SBAR', ['NP', ['WP', 'What']], ['S', ['VBD', were], ['NP', ['PRP', they]]], ['.', ?]]
                ]
              ]).
pllm:training(6500020000706,
              unphrasify,
              [ mark('SEQBAR'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Really']],
                ['.', ?],
                mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', were],
                ['NP', ['PRP', they]],
                ['.', ?]
              ]).
pllm:training(6500020000706, tree_to_toks, ['Really', ?, 'What', were, they, ?]).
pllm:training(6500030000707,
              string,
              "The first one was the original, released in 1983.").
pllm:training(6500030000707,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'The'], ['JJ', first], ['NN', one]],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', the], ['JJ', original]],
                      [',', ','],
                      ['VP', ['VBN', released], ['PP', ['IN', in], ['NP', ['CD', '1983']]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500030000707,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['JJ', first], ['NN', one]],
                ['VBD', was],
                ['NP', ['DT', the], ['JJ', original]],
                [',', ','],
                ['VBN', released],
                ['IN', in],
                ['NP', ['CD', '1983']],
                ['.', '.']
              ]).
pllm:training(6500030000707,
              tree_to_toks,
              ['The-first-one', was, 'the-original', ',', released, in, '1983', '.']).
pllm:training(6500040000708, string, "And the second?").
pllm:training(6500040000708,
              text_to_tree,
              ['CORENLP', ['FRAG', ['CC', 'And'], ['NP', ['DT', the], ['JJ', second]], ['.', ?]]]).
pllm:training(6500040000708,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['CC', 'And'],
                ['NP', ['DT', the], ['JJ', second]],
                ['.', ?]
              ]).
pllm:training(6500040000708, tree_to_toks, ['And', 'the-second', ?]).
pllm:training(6500050000709,
              string,
              "There was a re-release in 1997, with a change of songs in the end.").
pllm:training(6500050000709,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['EX', 'There']],
                  [ 'VP',
                    ['VBD', was],
                    [ 'NP',
                      ['NP', ['DT', a], ['NN', 're-release']],
                      ['PP', ['IN', in], ['NP', ['CD', '1997']]]
                    ],
                    [',', ','],
                    [ 'PP',
                      ['IN', with],
                      [ 'NP',
                        ['NP', ['DT', a], ['NN', change]],
                        [ 'PP',
                          ['IN', of],
                          [ 'NP',
                            ['NP', ['NNS', songs]],
                            ['PP', ['IN', in], ['NP', ['DT', the], ['NN', end]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500050000709,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['EX', 'There']],
                ['VBD', was],
                ['NP', ['DT', a], ['NN', 're-release']],
                ['IN', in],
                ['NP', ['CD', '1997']],
                [',', ','],
                ['IN', with],
                ['NP', ['DT', a], ['NN', change]],
                ['IN', of],
                ['NP', ['NNS', songs]],
                ['IN', in],
                ['NP', ['DT', the], ['NN', end]],
                ['.', '.']
              ]).
pllm:training(6500050000709,
              tree_to_toks,
              [ 'There',
                was,
                'a-re-release',
                in,
                '1997',
                (','),
                with,
                'a-change',
                of,
                songs,
                in,
                'the-end',
                ('.')
              ]).
pllm:training(6500060000710, string, "Wow, I did not know that.").
pllm:training(6500060000710,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Wow']],
                  [',', ','],
                  ['NP', ['PRP', 'I']],
                  ['VP', ['VBD', did], ['RB', not], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6500060000710,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Wow']],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6500060000710, tree_to_toks, ['Wow', ',', 'I', did, not, know, that, '.']).
pllm:training(6500070000711,
              string,
              "The last time I saw this there was one ther change.").
pllm:training(6500070000711,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP-TMP', ['DT', 'The'], ['JJ', last], ['NN', time]],
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VBD', saw],
                    [ 'NP',
                      ['NP', ['DT', this]],
                      [ 'SBAR',
                        [ 'S',
                          ['NP', ['EX', there]],
                          [ 'VP',
                            ['VBD', was],
                            ['NP', ['NP', ['CD', one]], ['NP', ['DT', ther], ['NN', change]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500070000711,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP-TMP', ['DT', 'The'], ['JJ', last], ['NN', time]],
                ['NP', ['PRP', 'I']],
                ['VBD', saw],
                ['NP', ['DT', this]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['EX', there]],
                ['VBD', was],
                ['NP', ['CD', one]],
                ['NP', ['DT', ther], ['NN', change]],
                ['.', '.']
              ]).
pllm:training(6500070000711,
              tree_to_toks,
              ['The', last, time, 'I', saw, this, there, was, one, 'ther-change', '.']).
pllm:training(6500080000712, string, "Which was?").
pllm:training(6500080000712,
              text_to_tree,
              ['CORENLP', ['SBAR', ['NP', ['WDT', 'Which']], ['S', ['VP', ['VBD', was]]], ['.', ?]]]).
pllm:training(6500080000712,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WDT', 'Which']],
                mark('S'),
                ['VBD', was],
                ['.', ?]
              ]).
pllm:training(6500080000712, tree_to_toks, ['Which', was, ?]).
pllm:training(6500090000713,
              string,
              "They replaced Ray Milland standing with Yoda and Obi-wan.").
pllm:training(6500090000713,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'They']],
                  [ 'VP',
                    ['VBD', replaced],
                    [ 'NP',
                      ['NP', ['NNP', 'Ray'], ['NNP', 'Milland']],
                      [ 'VP',
                        ['VBG', standing],
                        [ 'PP',
                          ['IN', with],
                          [ 'NP',
                            ['NNP', 'Yoda'],
                            ['CC', and],
                            ['NNP', 'Obi'],
                            ['HYPH', -],
                            ['NNP', wan]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500090000713,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'They']],
                ['VBD', replaced],
                ['NP', ['NNP', 'Ray'], ['NNP', 'Milland']],
                ['VBG', standing],
                ['IN', with],
                ['NP', ['NNP', 'Yoda'], ['CC', and], ['NNP', 'Obi'], ['HYPH', -], ['NNP', wan]],
                ['.', '.']
              ]).
pllm:training(6500090000713,
              tree_to_toks,
              ['They', replaced, 'Ray-Milland', standing, with, 'Yoda-and-Obi---wan', '.']).
pllm:training(6500100000714,
              string,
              "Right, they used the Anakin from Revenge of the Sith.").
pllm:training(6500100000714,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['INTJ', ['UH', 'Right']],
                  [',', ','],
                  ['NP', ['PRP', they]],
                  [ 'VP',
                    ['VBD', used],
                    ['NP', ['DT', the], ['NNP', 'Anakin']],
                    [ 'PP',
                      ['IN', from],
                      [ 'NP',
                        ['NP', ['NN', 'Revenge']],
                        ['PP', ['IN', of], ['NP', ['DT', the], ['NNP', 'Sith']]]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6500100000714,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['INTJ', ['UH', 'Right']],
                [',', ','],
                ['NP', ['PRP', they]],
                ['VBD', used],
                ['NP', ['DT', the], ['NNP', 'Anakin']],
                ['IN', from],
                ['NP', ['NN', 'Revenge']],
                ['IN', of],
                ['NP', ['DT', the], ['NNP', 'Sith']],
                ['.', '.']
              ]).
pllm:training(6500100000714,
              tree_to_toks,
              ['Right', ',', they, used, 'the-Anakin', from, 'Revenge', of, 'the-Sith', '.']).
pllm:training(6600010000716,
              string,
              "Do you know much about the story throughout the Star Wars universe?").
pllm:training(6600010000716,
              text_to_tree,
              [ 'S',
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                [ 'VP',
                  ['VB', know],
                  ['NP', ['JJ', much]],
                  [ 'PP',
                    ['IN', about],
                    [ 'NP',
                      ['NP', ['DT', the], ['NN', story]],
                      [ 'PP',
                        ['IN', throughout],
                        ['NP', ['DT', the], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', universe]]
                      ]
                    ]
                  ]
                ],
                ['.', ?]
              ]).
pllm:training(6600010000716,
              unphrasify,
              [ mark('S'),
                ['AUX', 'Do'],
                ['NP', ['PRP', you]],
                ['VB', know],
                ['NP', ['JJ', much]],
                ['IN', about],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', throughout],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', universe]],
                ['.', ?]
              ]).
pllm:training(6600010000716,
              tree_to_toks,
              [ 'Do',
                you,
                know,
                much,
                about,
                'the-story',
                throughout,
                'the-Star-Wars-universe',
                (?)
              ]).
pllm:training(6600020000717,
              string,
              "I really don't. I feel like it's too much to keep up with.").
pllm:training(6600020000717,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['ADVP', ['RB', really]],
                    ['VP', ['VB', do], ['RB', not]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', feel],
                      [ 'SBAR',
                        ['IN', like],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBZ', '\'s'],
                            ['ADJP', ['RB', too], ['JJ', much]],
                            [ 'S',
                              [ 'VP',
                                ['TO', to],
                                ['VP', ['VB', keep], ['PRT', ['RP', up]], ['PP', ['IN', with]]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6600020000717,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', really]],
                ['VB', do],
                ['RB', not],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', feel],
                mark('SBAR'),
                ['IN', like],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', '\'s'],
                ['ADJP', ['RB', too], ['JJ', much]],
                mark('S'),
                ['TO', to],
                ['VB', keep],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['.', '.']
              ]).
pllm:training(6600020000717,
              tree_to_toks,
              ['I', really, do, not, '.', 'I', feel, like, it, '\'s', too, much, to, keep, up, with, '.']).
pllm:training(6600030000718,
              string,
              "As a die-hard Star Wars fan, I completely understand that.").
pllm:training(6600030000718,
              text_to_tree,
              [ 'S',
                [ 'PP',
                  ['IN', 'As'],
                  ['NP', ['DT', a], ['JJ', 'die-hard'], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', fan]]
                ],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', completely]],
                ['VP', ['VB', understand], ['NP', ['DT', that]]],
                ['.', '.']
              ]).
pllm:training(6600030000718,
              unphrasify,
              [ mark('S'),
                ['IN', 'As'],
                ['NP', ['DT', a], ['JJ', 'die-hard'], ['NNP', 'Star'], ['NNP', 'Wars'], ['NN', fan]],
                [',', ','],
                ['NP', ['PRP', 'I']],
                ['ADVP', ['RB', completely]],
                ['VB', understand],
                ['NP', ['DT', that]],
                ['.', '.']
              ]).
pllm:training(6600030000718,
              tree_to_toks,
              ['As', 'a-die-hard-Star-Wars-fan', ',', 'I', completely, understand, that, '.']).
pllm:training(6600040000719,
              string,
              "How are you able to keep up with everything?").
pllm:training(6600040000719,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'How']],
                  [ 'S',
                    ['VB', are],
                    ['NP', ['PRP', you]],
                    [ 'ADJP',
                      ['JJ', able],
                      [ 'S',
                        [ 'VP',
                          ['TO', to],
                          [ 'VP',
                            ['VB', keep],
                            ['PRT', ['RP', up]],
                            ['PP', ['IN', with], ['NP', ['NN', everything]]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6600040000719,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('S'),
                ['VB', are],
                ['NP', ['PRP', you]],
                'ADJP',
                ['JJ', able],
                mark('S'),
                ['TO', to],
                ['VB', keep],
                ['PRT', ['RP', up]],
                ['IN', with],
                ['NP', ['NN', everything]],
                ['.', ?]
              ]).
pllm:training(6600040000719,
              tree_to_toks,
              ['How', are, you, 'ADJP', able, to, keep, up, with, everything, ?]).
pllm:training(6600050000720,
              string,
              "The films just appeal to me. Nothing too specific.").
pllm:training(6600050000720,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['DT', 'The'], ['NNS', films]],
                    ['ADVP', ['RB', just]],
                    ['VP', ['VB', appeal], ['PP', ['IN', to], ['NP', ['PRP', me]]]],
                    ['.', '.']
                  ]
                ],
                ['NP', ['NP', ['NN', nothing]], ['ADJP', ['RB', too], ['JJ', specific]], ['.', '.']]
              ]).
pllm:training(6600050000720,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'The'], ['NNS', films]],
                ['ADVP', ['RB', just]],
                ['VB', appeal],
                ['IN', to],
                ['NP', ['PRP', me]],
                ['.', '.'],
                ['NP', ['NN', nothing]],
                ['ADJP', ['RB', too], ['JJ', specific]],
                ['.', '.']
              ]).
pllm:training(6600050000720,
              tree_to_toks,
              ['The-films', just, appeal, to, me, '.', nothing, too, specific, '.']).
pllm:training(6600060000721, string, "You just like the movies overall?").
pllm:training(6600060000721,
              text_to_tree,
              [ 'S',
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', just]],
                ['VP', ['VB', like], ['NP', ['DT', the], ['NNS', movies]], ['ADVP', ['RB', overall]]],
                ['.', ?]
              ]).
pllm:training(6600060000721,
              unphrasify,
              [ mark('S'),
                ['NP', ['PRP', 'You']],
                ['ADVP', ['RB', just]],
                ['VB', like],
                ['NP', ['DT', the], ['NNS', movies]],
                ['ADVP', ['RB', overall]],
                ['.', ?]
              ]).
pllm:training(6600060000721, tree_to_toks, ['You', just, like, 'the-movies', overall, ?]).
pllm:training(6600070000722,
              string,
              "Yeah, and it's been that way since I was a child.").
pllm:training(6600070000722,
              text_to_tree,
              [ 'S',
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['CC', and],
                [ 'S',
                  ['NP', ['PRP', it]],
                  [ 'VP',
                    ['AUX', '\'s'],
                    [ 'VP',
                      ['AUX', been],
                      ['NP', ['DT', that], ['NN', way]],
                      [ 'SBAR',
                        ['IN', since],
                        ['S', ['NP', ['PRP', 'I']], ['VP', ['AUX', was], ['NP', ['DT', a], ['NN', child]]]]
                      ]
                    ]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6600070000722,
              unphrasify,
              [ mark('S'),
                ['INTJ', ['UH', 'Yeah']],
                [',', ','],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', it]],
                ['AUX', '\'s'],
                ['AUX', been],
                ['NP', ['DT', that], ['NN', way]],
                mark('SBAR'),
                ['IN', since],
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['AUX', was],
                ['NP', ['DT', a], ['NN', child]],
                ['.', '.']
              ]).
pllm:training(6600070000722,
              tree_to_toks,
              ['Yeah', ',', and, it, '\'s', been, 'that-way', since, 'I', was, 'a-child', '.']).
pllm:training(6600080000723, string, "Could you explain the story to me a bit?").
pllm:training(6600080000723,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['MD', 'Could'],
                  ['NP', ['PRP', you]],
                  [ 'VP',
                    ['VB', explain],
                    ['NP', ['DT', the], ['NN', story]],
                    ['PP', ['IN', to], ['NP', ['NP', ['PRP', me]], ['NP', ['DT', a], ['NN', bit]]]]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6600080000723,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['MD', 'Could'],
                ['NP', ['PRP', you]],
                ['VB', explain],
                ['NP', ['DT', the], ['NN', story]],
                ['IN', to],
                ['NP', ['PRP', me]],
                ['NP', ['DT', a], ['NN', bit]],
                ['.', ?]
              ]).
pllm:training(6600080000723,
              tree_to_toks,
              ['Could', you, explain, 'the-story', to, me, 'a-bit', ?]).
pllm:training(6600090000724,
              string,
              "I could, if it was simple enough to summarize 8 movies.").
pllm:training(6600090000724,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', could],
                    [ 'VP',
                      [',', ','],
                      [ 'SBAR',
                        ['IN', if],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          [ 'VP',
                            ['VBD', was],
                            [ 'ADJP',
                              ['JJ', simple],
                              ['JJ', enough],
                              [ 'S',
                                [ 'VP',
                                  ['TO', to],
                                  ['VP', ['VB', summarize], ['NP', ['CD', '8'], ['NNS', movies]]]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6600090000724,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', could],
                [',', ','],
                mark('SBAR'),
                ['IN', if],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBD', was],
                'ADJP',
                ['JJ', simple],
                ['JJ', enough],
                mark('S'),
                ['TO', to],
                ['VB', summarize],
                ['NP', ['CD', '8'], ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6600090000724,
              tree_to_toks,
              ['I', could, ',', if, it, was, 'ADJP', simple, enough, to, summarize, '8-movies', '.']).
pllm:training(6600100000725, string, "That's a lot of movies.").
pllm:training(6600100000725,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['DT', 'That']],
                  [ 'VP',
                    ['VBZ', '\'s'],
                    ['NP', ['NP', ['DT', a], ['NN', lot]], ['PP', ['IN', of], ['NP', ['NNS', movies]]]]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6600100000725,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', lot]],
                ['IN', of],
                ['NP', ['NNS', movies]],
                ['.', '.']
              ]).
pllm:training(6600100000725, tree_to_toks, ['That', '\'s', 'a-lot', of, movies, '.']).
pllm:training(6700010000727,
              string,
              "What did you think of Ron Howard being the new director.").
pllm:training(6700010000727,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['NP', ['WP', 'What']],
                  [ 'S',
                    ['VBD', did],
                    ['NP', ['PRP', you]],
                    [ 'VP',
                      ['VB', think],
                      [ 'PP',
                        ['IN', of],
                        [ 'S',
                          ['NP', ['NNP', 'Ron'], ['NNP', 'Howard']],
                          [ 'VP',
                            ['VBG', being],
                            ['NP', ['DT', the], ['JJ', new], ['NN', director]]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700010000727,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['VBD', did],
                ['NP', ['PRP', you]],
                ['VB', think],
                ['IN', of],
                mark('S'),
                ['NP', ['NNP', 'Ron'], ['NNP', 'Howard']],
                ['VBG', being],
                ['NP', ['DT', the], ['JJ', new], ['NN', director]],
                ['.', '.']
              ]).
pllm:training(6700010000727,
              tree_to_toks,
              ['What', did, you, think, of, 'Ron-Howard', being, 'the-new-director', '.']).
pllm:training(6700020000728, string, "For what?").
pllm:training(6700020000728,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHPP', ['IN', 'For'], ['NP', ['WP', what]]], ['.', ?]]]).
pllm:training(6700020000728,
              unphrasify,
              [mark('CORENLP'), mark('SBAR'), 'WHPP', ['IN', 'For'], ['NP', ['WP', what]], ['.', ?]]).
pllm:training(6700020000728, tree_to_toks, ['WHPP', 'For', what, ?]).
pllm:training(6700030000729, string, "The Han Solo, solo film.").
pllm:training(6700030000729,
              text_to_tree,
              [ 'CORENLP',
                [ 'NP',
                  ['NP', ['DT', 'The'], ['NNP', 'Han'], ['NNP', 'Solo']],
                  [',', ','],
                  ['NP', ['JJ', solo], ['NN', film]],
                  ['.', '.']
                ]
              ]).
pllm:training(6700030000729,
              unphrasify,
              [ mark('CORENLP'),
                ['NP', ['DT', 'The'], ['NNP', 'Han'], ['NNP', 'Solo']],
                [',', ','],
                ['NP', ['JJ', solo], ['NN', film]],
                ['.', '.']
              ]).
pllm:training(6700030000729, tree_to_toks, ['The-Han-Solo', ',', 'solo-film', '.']).
pllm:training(6700040000730,
              string,
              "I did not know that. I think it is alright.").
pllm:training(6700040000730,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    ['VP', ['VBD', did], ['RB', not], ['VP', ['VB', know], ['NP', ['DT', that]]]],
                    ['.', '.']
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP', 'I']],
                    [ 'VP',
                      ['VB', think],
                      [ 'SBAR',
                        ['S', ['NP', ['PRP', it]], ['VP', ['VBZ', is], ['ADJP', ['JJ', alright]]]]
                      ]
                    ],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6700040000730,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VBD', did],
                ['RB', not],
                ['VB', know],
                ['NP', ['DT', that]],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', think],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', is],
                ['ADJP', ['JJ', alright]],
                ['.', '.']
              ]).
pllm:training(6700040000730,
              tree_to_toks,
              ['I', did, not, know, that, '.', 'I', think, it, is, alright, '.']).
pllm:training(6700050000731,
              string,
              "I wonder why JJ Abrams would not direct it?").
pllm:training(6700050000731,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['VB', wonder],
                    [ 'SBAR',
                      ['WHADVP', ['WRB', why]],
                      [ 'S',
                        ['NP', ['NNP', 'JJ'], ['NNP', 'Abrams']],
                        [ 'VP',
                          ['MD', would],
                          ['RB', not],
                          ['VP', ['VB', direct], ['NP', ['PRP', it]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6700050000731,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', wonder],
                mark('SBAR'),
                ['WHADVP', ['WRB', why]],
                mark('S'),
                ['NP', ['NNP', 'JJ'], ['NNP', 'Abrams']],
                ['MD', would],
                ['RB', not],
                ['VB', direct],
                ['NP', ['PRP', it]],
                ['.', ?]
              ]).
pllm:training(6700050000731,
              tree_to_toks,
              ['I', wonder, why, 'JJ-Abrams', would, not, direct, it, ?]).
pllm:training(6700060000732,
              string,
              "I would say due to the fact it will be awful.").
pllm:training(6700060000732,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', would],
                    [ 'VP',
                      ['VB', say],
                      [ 'PP',
                        ['IN', due],
                        ['IN', to],
                        [ 'NP',
                          ['NP', ['DT', the], ['NN', fact]],
                          [ 'SBAR',
                            [ 'S',
                              ['NP', ['PRP', it]],
                              ['VP', ['MD', will], ['VP', ['VB', be], ['ADJP', ['JJ', awful]]]]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700060000732,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', would],
                ['VB', say],
                ['IN', due],
                ['IN', to],
                ['NP', ['DT', the], ['NN', fact]],
                mark('SBAR'),
                mark('S'),
                ['NP', ['PRP', it]],
                ['MD', will],
                ['VB', be],
                ['ADJP', ['JJ', awful]],
                ['.', '.']
              ]).
pllm:training(6700060000732,
              tree_to_toks,
              ['I', would, say, due, to, 'the-fact', it, will, be, awful, '.']).
pllm:training(6700070000733, string, "Why you say that?").
pllm:training(6700070000733,
              text_to_tree,
              [ 'CORENLP',
                [ 'SBAR',
                  ['WHADVP', ['WRB', 'Why']],
                  ['S', ['NP', ['PRP', you]], ['VP', ['VB', say], ['NP', ['DT', that]]]],
                  ['.', ?]
                ]
              ]).
pllm:training(6700070000733,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                mark('S'),
                ['NP', ['PRP', you]],
                ['VB', say],
                ['NP', ['DT', that]],
                ['.', ?]
              ]).
pllm:training(6700070000733, tree_to_toks, ['Why', you, say, that, ?]).
pllm:training(6700080000734, string, "It does not make sense.").
pllm:training(6700080000734,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'It']],
                  ['VP', ['VBZ', does], ['RB', not], ['VP', ['VB', make], ['NP', ['NN', sense]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6700080000734,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'It']],
                ['VBZ', does],
                ['RB', not],
                ['VB', make],
                ['NP', ['NN', sense]],
                ['.', '.']
              ]).
pllm:training(6700080000734, tree_to_toks, ['It', does, not, make, sense, '.']).
pllm:training(6700090000735, string, "Why not?").
pllm:training(6700090000735,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'Why']], ['FRAG', ['RB', not]], ['.', ?]]]).
pllm:training(6700090000735,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'Why']],
                'FRAG',
                ['RB', not],
                ['.', ?]
              ]).
pllm:training(6700090000735, tree_to_toks, ['Why', 'FRAG', not, ?]).
pllm:training(6700100000736, string, "We already know what happens to him.").
pllm:training(6700100000736,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'We']],
                  ['ADVP', ['RB', already]],
                  [ 'VP',
                    ['VB', know],
                    [ 'SBAR',
                      ['NP', ['WP', what]],
                      ['S', ['VP', ['VBZ', happens], ['PP', ['IN', to], ['NP', ['PRP', him]]]]]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6700100000736,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'We']],
                ['ADVP', ['RB', already]],
                ['VB', know],
                mark('SBAR'),
                ['NP', ['WP', what]],
                mark('S'),
                ['VBZ', happens],
                ['IN', to],
                ['NP', ['PRP', him]],
                ['.', '.']
              ]).
pllm:training(6700100000736,
              tree_to_toks,
              ['We', already, know, what, happens, to, him, '.']).
pllm:training(6800010000738,
              string,
              "What's your least favorite quote in the Star Wars movieverse?").
pllm:training(6800010000738,
              text_to_tree,
              [ 'SBAR',
                ['NP', ['WP', 'What']],
                [ 'S',
                  ['AUX', '\'s'],
                  [ 'NP',
                    ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', quote]],
                    ['PP', ['IN', in], ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']]]
                  ],
                  ['VP', ['VB', movieverse]]
                ],
                ['.', ?]
              ]).
pllm:training(6800010000738,
              unphrasify,
              [ mark('SBAR'),
                ['NP', ['WP', 'What']],
                mark('S'),
                ['AUX', '\'s'],
                ['NP', ['PRP$', your], ['JJS', least], ['JJ', favorite], ['NN', quote]],
                ['IN', in],
                ['NP', ['DT', the], ['NNP', 'Star'], ['NNPS', 'Wars']],
                ['VB', movieverse],
                ['.', ?]
              ]).
pllm:training(6800010000738,
              tree_to_toks,
              [ 'What',
                '\'s',
                'your-least-favorite-quote',
                in,
                'the-Star-Wars',
                movieverse,
                (?)
              ]).
pllm:training(6800020000739, string, "Ha, so much to choose from.").
pllm:training(6800020000739,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  ['INTJ', ['UH', 'Ha']],
                  [',', ','],
                  ['ADVP', ['RB', so], ['RB', much]],
                  ['S', ['VP', ['TO', to], ['VP', ['VB', choose], ['PP', ['IN', from]]]]],
                  ['.', '.']
                ]
              ]).
pllm:training(6800020000739,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['INTJ', ['UH', 'Ha']],
                [',', ','],
                ['ADVP', ['RB', so], ['RB', much]],
                mark('S'),
                ['TO', to],
                ['VB', choose],
                ['IN', from],
                ['.', '.']
              ]).
pllm:training(6800020000739, tree_to_toks, ['Ha', ',', so, much, to, choose, from, '.']).
pllm:training(6800030000740, string, "I know, right? Lucas is NOT a writer.").
pllm:training(6800030000740,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['S', ['NP', ['PRP', 'I']], ['VP', ['VB', know]]],
                    [',', ','],
                    ['S', ['ADJP', ['JJ', right]]],
                    ['.', ?]
                  ]
                ],
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['NNP', 'Lucas']],
                    ['VP', ['VBZ', is], ['RB', 'NOT'], ['NP', ['DT', a], ['NN', writer]]],
                    ['.', '.']
                  ]
                ]
              ]).
pllm:training(6800030000740,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['VB', know],
                [',', ','],
                mark('S'),
                ['ADJP', ['JJ', right]],
                ['.', ?],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['NNP', 'Lucas']],
                ['VBZ', is],
                ['RB', 'NOT'],
                ['NP', ['DT', a], ['NN', writer]],
                ['.', '.']
              ]).
pllm:training(6800030000740,
              tree_to_toks,
              ['I', know, ',', right, ?, 'Lucas', is, 'NOT', 'a-writer', '.']).
pllm:training(6800040000741,
              string,
              "Probably Anakin and PadmÃ© arguing about who loves the other one more. Obnoxious.").
pllm:training(6800040000741,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'FRAG',
                    ['ADVP', ['RB', 'Probably']],
                    ['NP', ['NNP', 'Anakin'], ['CC', and], ['NNP', 'PadmÃ©']],
                    [ 'VP',
                      ['VBG', arguing],
                      [ 'PP',
                        ['IN', about],
                        [ 'SBAR',
                          ['NP', ['WP', who]],
                          [ 'S',
                            [ 'VP',
                              ['VBZ', loves],
                              [ 'NP',
                                ['DT', the],
                                ['JJ', other],
                                ['QP', ['CD', one], ['JJR', more]]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                ['CORENLP', ['ADJP', ['JJ', 'Obnoxious'], ['.', '.']]]
              ]).
pllm:training(6800040000741,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('FRAG'),
                ['ADVP', ['RB', 'Probably']],
                ['NP', ['NNP', 'Anakin'], ['CC', and], ['NNP', 'PadmÃ©']],
                ['VBG', arguing],
                ['IN', about],
                mark('SBAR'),
                ['NP', ['WP', who]],
                mark('S'),
                ['VBZ', loves],
                ['NP', ['DT', the], ['JJ', other], ['QP', ['CD', one], ['JJR', more]]],
                ['.', '.'],
                mark('CORENLP'),
                ['ADJP', ['JJ', 'Obnoxious'], ['.', '.']]
              ]).
pllm:training(6800040000741,
              tree_to_toks,
              [ 'Probably',
                'Anakin-and-PadmÃ©',
                arguing,
                about,
                who,
                loves,
                'the-other-one-more',
                ('.'),
                'Obnoxious',
                ('.')
              ]).
pllm:training(6800050000742,
              string,
              "More than the \"sand being irritating\" because it gets everywhere?").
pllm:training(6800050000742,
              text_to_tree,
              [ 'CORENLP',
                [ 'FRAG',
                  [ 'NP',
                    ['JJR', 'More'],
                    ['PP', ['IN', than], ['NP', ['DT', the], ['``', '"'], ['NN', sand]]]
                  ],
                  [ 'VP',
                    ['VBG', being],
                    [ 'NP',
                      ['NP', ['JJ', irritating]],
                      ['``', '"'],
                      [ 'SBAR',
                        ['IN', because],
                        [ 'S',
                          ['NP', ['PRP', it]],
                          ['VP', ['VBZ', gets], ['ADVP', ['RB', everywhere]]]
                        ]
                      ]
                    ]
                  ],
                  ['.', ?]
                ]
              ]).
pllm:training(6800050000742,
              unphrasify,
              [ mark('CORENLP'),
                mark('FRAG'),
                ['JJR', 'More'],
                ['IN', than],
                ['NP', ['DT', the], ['``', '"'], ['NN', sand]],
                ['VBG', being],
                ['NP', ['JJ', irritating]],
                ['``', '"'],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['PRP', it]],
                ['VBZ', gets],
                ['ADVP', ['RB', everywhere]],
                ['.', ?]
              ]).
pllm:training(6800050000742,
              tree_to_toks,
              [ 'More',
                than,
                'the-"-sand',
                being,
                irritating,
                '"',
                because,
                it,
                gets,
                everywhere,
                (?)
              ]).
pllm:training(6800060000743, string, "Of course, because this is far darker.").
pllm:training(6800060000743,
              text_to_tree,
              [ 'FRAG',
                ['PP', ['IN', 'Of'], ['NP', ['NN', course]]],
                [',', ','],
                [ 'SBAR',
                  ['IN', because],
                  [ 'S',
                    ['NP', ['DT', this]],
                    ['VP', ['AUX', is], ['ADJP', ['RB', far], ['JJR', darker]]]
                  ]
                ],
                ['.', '.']
              ]).
pllm:training(6800060000743,
              unphrasify,
              [ mark('FRAG'),
                ['IN', 'Of'],
                ['NP', ['NN', course]],
                [',', ','],
                mark('SBAR'),
                ['IN', because],
                mark('S'),
                ['NP', ['DT', this]],
                ['AUX', is],
                ['ADJP', ['RB', far], ['JJR', darker]],
                ['.', '.']
              ]).
pllm:training(6800060000743,
              tree_to_toks,
              ['Of', course, ',', because, this, is, far, darker, '.']).
pllm:training(6800070000744, string, "How so?").
pllm:training(6800070000744,
              text_to_tree,
              ['CORENLP', ['SBAR', ['WHADVP', ['WRB', 'How']], ['FRAG', ['ADVP', ['RB', so]]], ['.', ?]]]).
pllm:training(6800070000744,
              unphrasify,
              [ mark('CORENLP'),
                mark('SBAR'),
                ['WHADVP', ['WRB', 'How']],
                mark('FRAG'),
                ['ADVP', ['RB', so]],
                ['.', ?]
              ]).
pllm:training(6800070000744, tree_to_toks, ['How', so, ?]).
pllm:training(6800080000745, string, "Age difference?").
pllm:training(6800080000745,
              text_to_tree,
              ['FRAG', ['NP', ['NN', 'Age'], ['NN', difference]], ['.', ?]]).
pllm:training(6800080000745,
              unphrasify,
              [mark('FRAG'), ['NP', ['NN', 'Age'], ['NN', difference]], ['.', ?]]).
pllm:training(6800080000745, tree_to_toks, ['Age-difference', ?]).
pllm:training(6800090000746, string, "Huh?").
pllm:training(6800090000746, text_to_tree, ['NP', ['NNP', 'Huh'], ['.', ?]]).
pllm:training(6800090000746, unphrasify, ['NP', ['NNP', 'Huh'], ['.', ?]]).
pllm:training(6800090000746, tree_to_toks, ['Huh-?']).
pllm:training(6800100000747,
              string,
              "Their relationship would be a crime in modern-day Earth. She's a queen and he's 15. That's creepy.").
pllm:training(6800100000747,
              text_to_tree,
              [ 'SEQBAR',
                [ 'CORENLP',
                  [ 'S',
                    ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                    [ 'VP',
                      ['MD', would],
                      [ 'VP',
                        ['VB', be],
                        [ 'NP',
                          ['NP', ['DT', a], ['NN', crime]],
                          [ 'PP',
                            ['IN', in],
                            [ 'NP',
                              ['NML', ['JJ', modern], ['HYPH', -], ['NN', day]],
                              ['NNP', 'Earth']
                            ]
                          ]
                        ]
                      ]
                    ],
                    ['.', '.']
                  ]
                ],
                [ 'SEQBAR',
                  [ 'CORENLP',
                    [ 'S',
                      ['S', ['NP', ['PRP', 'She']], ['VP', ['VBZ', '\'s'], ['NP', ['DT', a], ['NN', queen]]]],
                      ['CC', and],
                      ['S', ['NP', ['PRP', he]], ['VP', ['VBZ', '\'s'], ['NP', ['CD', '15']]]],
                      ['.', '.']
                    ]
                  ],
                  [ 'CORENLP',
                    ['S', ['NP', ['DT', 'That']], ['VP', ['VBZ', '\'s'], ['ADJP', ['JJ', creepy]]], ['.', '.']]
                  ]
                ]
              ]).
pllm:training(6800100000747,
              unphrasify,
              [ mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP$', 'Their'], ['NN', relationship]],
                ['MD', would],
                ['VB', be],
                ['NP', ['DT', a], ['NN', crime]],
                ['IN', in],
                ['NP', ['NML', ['JJ', modern], ['HYPH', -], ['NN', day]], ['NNP', 'Earth']],
                ['.', '.'],
                mark('SEQBAR'),
                mark('CORENLP'),
                mark('S'),
                mark('S'),
                ['NP', ['PRP', 'She']],
                ['VBZ', '\'s'],
                ['NP', ['DT', a], ['NN', queen]],
                ['CC', and],
                mark('S'),
                ['NP', ['PRP', he]],
                ['VBZ', '\'s'],
                ['NP', ['CD', '15']],
                ['.', '.'],
                mark('CORENLP'),
                mark('S'),
                ['NP', ['DT', 'That']],
                ['VBZ', '\'s'],
                ['ADJP', ['JJ', creepy]],
                ['.', '.']
              ]).
pllm:training(6800100000747,
              tree_to_toks,
              [ 'Their-relationship',
                would,
                be,
                'a-crime',
                in,
                'modern---day-Earth',
                ('.'),
                'She',
                '\'s',
                'a-queen',
                and,
                he,
                '\'s',
                '15',
                ('.'),
                'That',
                '\'s',
                creepy,
                ('.')
              ]).
pllm:training(6900010000749,
              string,
              "I can remember watching the original three Star Wars in the 80's").
pllm:training(6900010000749,
              text_to_tree,
              [ 'CORENLP',
                [ 'S',
                  ['NP', ['PRP', 'I']],
                  [ 'VP',
                    ['MD', can],
                    [ 'VP',
                      ['VB', remember],
                      [ 'S',
                        [ 'VP',
                          ['VBG', watching],
                          [ 'NP',
                            ['DT', the],
                            ['JJ', original],
                            ['NML', ['NML', ['CD', three]], ['NNP', 'Star'], ['NNPS', 'Wars']]
                          ],
                          ['PP', ['IN', in], ['NP', ['DT', the], ['CD', '80'], ['POS', '\'s']]]
                        ]
                      ]
                    ]
                  ],
                  ['.', '.']
                ]
              ]).
pllm:training(6900010000749,
              unphrasify,
              [ mark('CORENLP'),
                mark('S'),
                ['NP', ['PRP', 'I']],
                ['MD', can],
                ['VB', remember],
                mark('S'),
                ['VBG', watching],
                [ 'NP',
                  ['DT', the],
                  ['JJ', original],
                  ['NML', ['NML', ['CD', three]], ['NNP', 'Star'], ['NNPS', 'Wars']]
                ],
                ['IN', in],
                ['NP', ['DT', the], ['CD', '80'], ['POS', '\'s']],
                ['.', '.']
              ]).
pllm:training(6900010000749,
              tree_to_toks,
              [ 'I',
                can,
                remember,
                watching,
                'the-original-three-Star-Wars',
                in,
                'the-80-\'s',
                ('.')
              ]).
pllm:training(6900020000750, string, "I do too It was like an event.").

