((-> $t#57 $t#57 Atom))
(%Undefined%)
((-> Atom Atom Atom))
(src= GroundingSpace-top:stdlib)
(src= GroundingSpace-top:corelib)
(src= (: HumansAreMortal (-> (Human $t#3190) (Mortal $t#3190))))
(src= (= (Mortal Socrates) T))
(src= (: ift (-> Type $t#3189 $t#3189)))
(src= (: = (-> Atom Atom Atom)))
(src= (= (Mortal $x#3188) (Human $x#3188)))
(src= (: Socrates Entity))
(src= (: Mortal (-> Entity Type)))
(src= (: Human (-> Entity Type)))
(src= (: SocratesIsHuman (Human Socrates)))
(src= (: do-hide (-> Expression %Undefined%)))
(src= (= (do-hide $1#3187) (case $1#3187 ())))
(src= (= (= $x#3186 $x#3186) T))
(src= (= (ift T $then#3185) $then#3185))
(src= (: SocratesIsMortal (Mortal Socrates)))
(src= (= (= $type#3183 T) (match GroundingSpace-top (: $x#3184 $type#3183) T)))
(src= (= (Human Plato) T))
(src= (: src= (-> Atom Atom)))
(src= (= (= $type#3180 T) (match GroundingSpace-top (: $impl#3181 (-> $cause#3182 $type#3180)) (if (== $cause#3182 $type#3180) (empty) (= $cause#3182 T)))))
(src= (= (HumansAreMortal SocratesIsHuman) SocratesIsMortal))
(src= (: PlatoIsHuman (Human Plato)))
(src= (: Sam Entity))
(src= (: Entity Type))
(src= (: Plato Entity))
(src= (: T Type))
[()]
[(m ())]
[()]
[()]
[(m ())]
[(m ())]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[()]
[]
